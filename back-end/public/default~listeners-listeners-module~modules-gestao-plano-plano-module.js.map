{"version":3,"sources":["./src/app/models/plano.model.ts","./src/app/dao/tipo-modalidade-dao.service.ts","./src/app/modules/gestao/plano/plano-list/plano-list.component.ts","./src/app/modules/gestao/plano/plano-list/plano-list.component.html","./src/app/dao/documento-dao-service.ts","./src/app/models/documento.model.ts"],"names":[],"mappings":"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","file":"default~listeners-listeners-module~modules-gestao-plano-plano-module.js","sourcesContent":["import { Base } from './base.model';\r\nimport { TipoModalidade } from './tipo-modalidade.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\nimport { Programa } from './programa.model';\r\nimport { Documento } from './documento.model';\r\nimport { PlanoAtividade } from './plano-atividade.model';\r\nimport { Demanda } from './demanda.model';\r\nimport { TipoCargaHoraria } from './entidade.model';\r\n\r\nexport type PlanoMetadados = {\r\n  concluido: boolean\r\n}\r\n\r\nexport class Plano extends Base {\r\n    public tipo_modalidade?: TipoModalidade;\r\n    public unidade?: Unidade;\r\n    public usuario?: Usuario;\r\n    public programa?: Programa;\r\n    public documento?: Documento;\r\n\r\n    public carga_horaria: number = 0; //Carga horária diária do usuário\r\n    public tempo_total: number = 0; //Horas úteis de trabalho no período de data_inicio_vigencia à data_fim_vigencia considerando carga_horaria, feriados, fins de semana\r\n    public tempo_proporcional: number = 0; //tempo_total menos os afastamentos\r\n    public data_inicio_vigencia: Date = new Date(); //Inicio do plano\r\n    public data_fim_vigencia: Date = new Date(); //Fim do plano\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n    public ganho_produtividade: number = 0; /* Ganho de produtividade */\r\n    public programa_id: string = \"\";\r\n    public usuario_id: string = \"\";\r\n    public unidade_id: string = \"\";\r\n    public metadados: PlanoMetadados | undefined = undefined; /* Campo virtual contendo informações calculadas pelo servidor */\r\n    public tipo_modalidade_id: string = \"\";\r\n    public forma_contagem_carga_horaria: TipoCargaHoraria = \"DIA\"; // Forma de contagem padrão da carga horária\r\n    public documento_id: string | null = null;\r\n    public atividades: PlanoAtividade[] = []; /* Entregas da demanda */\r\n    public documentos: Documento[] = []; /* Termos de adesão */\r\n    public demandas: Demanda[] = []; /* Demandas vinculadas ao Plano */\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { TipoModalidade } from '../models/tipo-modalidade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoModalidadeDaoService extends DaoBaseService<TipoModalidade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"TipoModalidade\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n}\r\n\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoDaoService } from 'src/app/dao/plano-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { Plano } from 'src/app/models/plano.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-list',\r\n  templateUrl: './plano-list.component.html',\r\n  styleUrls: ['./plano-list.component.scss']\r\n})\r\nexport class PlanoListComponent extends PageListBase<Plano, PlanoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public static selectRoute?: FullRoute = {route: [\"gestao\", \"plano\"]};\r\n  public unidadeDao: UnidadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Plano, PlanoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun(\"Plano de trabalho\",true);\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      usuario: {default: \"\"},\r\n      unidade_id: {default: null}\r\n    });\r\n    this.join = [\"unidade.entidade\", \"usuario\", \"programa\", \"documento\", \"tipo_modalidade\"];\r\n    // Testa se o usuário possui permissão para exibir dados do plano de trabalho\r\n    if (this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o plano de trabalho\r\n    if (this.auth.hasPermissionTo(\"MOD_PTR_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n    this.options.push({\r\n      label: \"Termos de adesão\",\r\n      icon: \"bi bi-file-earmark-check\",\r\n      onClick: ((row: Plano) => this.go.navigate({route: ['gestao', 'plano', row.id, 'termos']}, {modalClose: (modalResult) => console.log(modalResult?.conteudo)})).bind(this)\r\n    });\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.usuario?.length) {\r\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario + \"%\"]);\r\n    }\r\n    if(form.unidade_id?.length) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.documento.id_processo, row.documento.id_documento);\r\n  }\r\n\r\n  public needSign(plano: Plano): boolean {\r\n    let ids: string[] = [];\r\n    if(plano.documento_id?.length) {\r\n      const tipoModalidade = plano.tipo_modalidade!; //(this.tipoModalidade?.searchObj as TipoModalidade);\r\n      const usuario = plano.usuario!; // (this.usuario?.searchObj as Usuario);\r\n      const unidade = plano.unidade!; // (this.unidade?.searchObj as Unidade);\r\n      const entidade = unidade.entidade!;\r\n      //const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n      if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n      if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n      if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    }\r\n    return !!plano.documento_id?.length && ids.includes(this.auth.usuario!.id);\r\n  }\r\n\r\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\r\n    let assinar = !!Object.keys(multiselected).length;\r\n    let menu = [];\r\n    Object.entries(multiselected).forEach(([key, value]) => {\r\n      if(!this.needSign(value)) assinar = false; \r\n    });\r\n    if(assinar) menu.push({label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\r\n    return menu;\r\n  }\r\n\r\n  public assinar() {\r\n    if(!this.grid!.multiselectedCount) {\r\n      this.dialog.alert(\"Selecione\", \"Nenhum plano seleciono\");\r\n    } else {\r\n      this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar \" + this.grid!.multiselectedCount + \" documento\" + (this.grid!.multiselectedCount > 1 ? \"s\" : \"\") + \"?\").then(response => {\r\n        if(response) {\r\n          this.loading = true;\r\n          this.documentoDao.assinar(Object.keys(this.grid!.multiselected)).then(response => {\r\n            if(response?.length) {\r\n              this.dialog.alert(\"Assinados\", response.length > 1 ? \"Foram assinados \" + response.length + \" documentos!\" : \"Documento assinado com sucesso!\");\r\n              this.refresh();\r\n            }\r\n          }).finally(() => this.loading = false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PTR_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_PTR_EDT')\"\r\n    [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\"\r\n    [multiselectAllFields]=\"multiselectAllFields\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" label=\"Usuário\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\"></input-text>\r\n            <input-search [size]=\"6\" label=\"Unidade\" controlName=\"unidade_id\" [control]=\"filter!.controls.unidade_id\" [dao]=\"unidadeDao\" [selectRoute]=\"{route: ['configuracoes', 'unidade']}\"></input-search>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"#ID\" field=\"numero\" orderBy=\"numero\" [minWidth]=\"50\"></column>\r\n        <column title=\"Usuário\" [template]=\"columnUsuario\">\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Vigência\" [template]=\"columnInicioVigencia\" orderBy=\"data_inicio_vigencia\">\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio_vigencia)+\" até \"+dao!.getDateFormatted(row.data_fim_vigencia)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Termo de adesão\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\r\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column *ngIf=\"!selectable\" type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Documento } from '../models/documento.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentoDaoService extends DaoBaseService<Documento> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Documento\", injector);\r\n  }\r\n\r\n  public documentoPendenteSei(id_documento: number): Promise<Documento | undefined>  {\r\n    return new Promise<Documento | undefined>((resolve, reject) => {\r\n      this.server.post('api/' + this.collection + '/pendente-sei', {id_documento}).subscribe(response => {\r\n        if(response.error) throw new Error(response.error);\r\n        resolve(response?.data ? this.getRow(response?.data) : undefined);\r\n      }, error => reject(error));\r\n    });\r\n  }\r\n\r\n  public assinar(documentosIds: string[]) {\r\n    return new Promise<Documento[] | undefined>((resolve, reject) => {\r\n      this.server.post('api/' + this.collection + '/assinar', {documentos_ids: documentosIds}).subscribe(response => {\r\n        if(response.error) throw new Error(response.error);\r\n        resolve(response?.rows ? this.getRows(response) : undefined);\r\n      }, error => reject(error));\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\nimport { DocumentoAssinatura } from './documento-assinatura.model';\r\nimport { Entidade } from './entidade.model';\r\nimport { Plano } from './plano.model';\r\nimport { TipoDocumento } from './tipo-documento.model';\r\nimport { TipoProcesso } from './tipo-processo.model';\r\n\r\nexport type DocumentoEspecie = \"TERMO_ADESAO\" | \"SEI\";\r\nexport type DocumentoStatus = \"GERADO\" | \"AGUARDANDO_SEI\";\r\n\r\nexport class Documento extends Base {\r\n\r\n    public static STATUS_GERADO = \"GERADO\"; \r\n    public static STATUS_AGUARDANDO_SEI = \"GERADO\"; \r\n\r\n    public entidade?: Entidade;\r\n    public plano?: Plano;\r\n    public tipo_documento?: TipoDocumento;\r\n    public tipo_processo?: TipoProcesso;\r\n\r\n    public numero: number = 0; /* Numero do documento (gerado pelo sistema) */\r\n    public especie: DocumentoEspecie = \"TERMO_ADESAO\"; /* Especificação da espécie do documento (interno do sistema) */\r\n    public conteudo: string | null = null; /* \"Conteúdo do arquivo */\r\n    public assinatura: any = null; /* Dados da assinatura, se nulo não está assinado */\r\n    public metadados: any = null; /* Metadados */\r\n    public id_processo: number | null = null; /* ID do processo de entrega, caso seja Sei será o ID do procedimento */\r\n    public numero_processo: string | null = null; /* Número do processo de entrega, com a formatação de origem */\r\n    public id_documento: number | null = null; /* ID da entrega, caso seja o Sei será o ID_Documento */\r\n    public numero_documento: string | null = null; /* Numero do documento de entrega, caso seja o Sei é o numero Sei */\r\n    public titulo_documento: string | null = null; /* Numeração do tipo de documento no sistema integrado */\r\n    public entidade_id: string | null = null; /* Entidade */\r\n    public plano_id: string | null = null; /* Plano */\r\n    public tipo_documento_id: string | null = null; /* Tipo documento */\r\n    public tipo_processo_id: string | null = null; /* Tipo processo */\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n    public status: DocumentoStatus = \"GERADO\";\r\n    public assinaturas: DocumentoAssinatura[] = [];\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n}"],"sourceRoot":"webpack:///"}