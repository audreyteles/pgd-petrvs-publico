{"version":3,"sources":["./src/app/models/plano-trabalho-entrega.model.ts","./src/app/modules/gestao/plano/plano.module.ts","./src/app/modules/gestao/plano/plano-form-termo/plano-form-termo.component.ts","./src/app/modules/gestao/plano/plano-form-termo/plano-form-termo.component.html","./src/app/modules/gestao/plano/plano-routing.module.ts","./src/app/models/plano-atividade.model.ts","./src/app/modules/gestao/plano/plano-termo-adesao/plano-termo-adesao.component.ts","./src/app/modules/gestao/plano/plano-termo-adesao/plano-termo-adesao.component.html","./src/app/modules/gestao/plano/plano-list-entrega/plano-list-entrega.component.ts","./src/app/modules/gestao/plano/plano-list-entrega/plano-list-entrega.component.html","./src/app/dao/plano-trabalho-entrega-dao.service.ts","./src/app/modules/gestao/plano/plano-form/plano-form.component.ts","./src/app/modules/gestao/plano/plano-form/plano-form.component.html"],"names":[],"mappings":"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","file":"modules-gestao-plano-plano-module.js","sourcesContent":["import { Base } from './base.model';\r\nimport { Entrega } from './entrega.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Plano } from './plano.model';\r\n\r\nexport class PlanoTrabalhoEntrega extends Base {\r\n    public plano?: Plano;\r\n    public entrega?: Entrega;\r\n    public entrega_plano_entrega?: PlanoEntregaEntrega;\r\n\r\n    public descricao: string = \"\";\r\n    public forca_trabalho: string = \"1\";\r\n    public plano_id: string = \"\";\r\n    public entrega_id: string | null = null;\r\n    public plano_entrega_entrega_id: string | null = null;\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlanoRoutingModule } from './plano-routing.module';\r\nimport { PlanoFormComponent } from './plano-form/plano-form.component';\r\nimport { PlanoListComponent } from './plano-list/plano-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoTermoAdesaoComponent } from './plano-termo-adesao/plano-termo-adesao.component';\r\nimport { PlanoFormTermoComponent } from './plano-form-termo/plano-form-termo.component';\r\nimport { PlanoListEntregaComponent } from './plano-list-entrega/plano-list-entrega.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoFormComponent,\r\n    PlanoListComponent,\r\n    PlanoListEntregaComponent,\r\n    PlanoTermoAdesaoComponent,\r\n    PlanoFormTermoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PlanoRoutingModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoDaoService } from 'src/app/dao/plano-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { Plano } from 'src/app/models/plano.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n// import { AuthService } from 'src/app/services/auth.service';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { PlanoTermoAdesaoComponent } from '../plano-termo-adesao/plano-termo-adesao.component';\r\n\r\n@Component({\r\n  selector: 'app-plano-form-termo',\r\n  templateUrl: './plano-form-termo.component.html',\r\n  styleUrls: ['./plano-form-termo.component.scss']\r\n})\r\n\r\nexport class PlanoFormTermoComponent extends PageFormBase<Plano, PlanoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\r\n  @ViewChild('tipo_modalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('termo', { static: false }) public termo?: PlanoTermoAdesaoComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public processo?: SeiKeys;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Plano, PlanoDaoService);\r\n    this.join = [\"unidade\", \"usuario\", \"programa\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio_vigencia: {default: new Date()},\r\n      data_fim_vigencia: {default: new Date()},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      ganho_produtividade: {default: 0},\r\n      programa_id: {default: \"\"},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      documento_id: {default: \"\"},\r\n      documentos: {default: []},\r\n      tipo_documento_id: {default: \"\"},\r\n      numero_processo: {default: \"\"},\r\n      vinculadas: {default: true},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(!this.tipoDocumento?.searchObj && form?.controls.tipo_documento_id.value?.length) {\r\n      return \"Aguarde o carregamento do tipo de documento\";\r\n    }\r\n    return undefined;\r\n  } \r\n\r\n  public onVinculadasChange(event: Event) {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: Plano, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    await Promise.all ([\r\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    if(this.processo) {\r\n      formValue.id_processo = this.processo.id_processo;\r\n      formValue.numero_processo = this.processo.numero_processo;\r\n    }\r\n    formValue.data_inicio = this.auth.hora;\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = (await this.dao!.getById(this.metadata.plano.id, this.join))!;\r\n    this.processo = this.metadata?.processo;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\r\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\r\n      //if(this.processo) {\r\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\r\n        termo: this.termo!.conteudo,\r\n        atividades_termo_adesao: this.termo!.atividades.map(x => this.util.removeAcentos(x.nome.toLowerCase())),\r\n        codigo_tipo_documento: (this.tipoDocumento?.searchObj as TipoDocumento)?.codigo\r\n      })));\r\n      /*} else {\r\n        const documento = Object.assign(new Documento(), {\r\n          especie: \"TERMO_ADESAO\",\r\n          conteudo: this.termo!.conteudo,\r\n          plano_id: this.entity!.id,\r\n          status: \"GERADO\"\r\n        });\r\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public titleEdit = (entity: Plano): string => {\r\n    return \"Editando \" ;//+ (entity?.nome || \"\");\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <separator [title]=\"lex.noun('Plano de trabalho')\" collapse [collapsed]=\"false\">\r\n        <div class=\"row\">\r\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\r\n            <input-search #tipo_modalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.noun('tempo pactuado')+')'\"></input-text>\r\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\r\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\r\n            <!--input-text numbers disabled [size]=\"2\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária DIÁRIA do usuário\"></input-text/-->\r\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\r\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\r\n        </div>\r\n    </separator>\r\n    <div class=\"row\">\r\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\r\n        <input-text [label]=\"'Número ' + lex.noun('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\r\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\"></input-search>\r\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\r\n    </div>\r\n    <separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\r\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\r\n    </separator>\r\n</editable-form>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoFormTermoComponent } from './plano-form-termo/plano-form-termo.component';\r\nimport { PlanoFormComponent } from './plano-form/plano-form.component';\r\nimport { PlanoListComponent } from './plano-list/plano-list.component';\r\nimport { PlanoListEntregaComponent } from './plano-list-entrega/plano-list-entrega.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano\" } },\r\n  { path: 'new', component: PlanoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: 'termo', component: PlanoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\r\n  { path: ':id/edit', component: PlanoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: PlanoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } },\r\n  { path: 'entregaList', component: PlanoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoRoutingModule { }\r\n","import { Base } from './base.model';\r\nimport { Atividade } from './atividade.model';\r\nimport { Plano } from './plano.model';\r\n\r\nexport class PlanoAtividade extends Base {\r\n    public plano?: Plano;\r\n    public atividade?: Atividade;\r\n\r\n    public plano_id: string = \"\";\r\n    public atividade_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Component, ContentChild, ElementRef, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { Plano } from 'src/app/models/plano.model';\r\nimport { PageBase } from 'src/app/modules/base/page-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-termo-adesao',\r\n  templateUrl: './plano-termo-adesao.component.html',\r\n  styleUrls: ['./plano-termo-adesao.component.scss']\r\n})\r\nexport class PlanoTermoAdesaoComponent extends PageBase implements OnInit {\r\n  @ViewChild(\"termo\", {static: false}) termo?: ElementRef;\r\n  //@ContentChild(\"content\") content?: HTMLElement;\r\n  @Input() set vinculadas(value: boolean) {\r\n    if(this._vinculadas != value) {\r\n      this._vinculadas = value;\r\n      if(!this.plano?.atividades?.length) {\r\n        this.loadAtividades();\r\n      }\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n  get vinculadas(): boolean {\r\n    return this._vinculadas;\r\n  }\r\n  @Input() set plano(value: Plano | undefined) {\r\n    if(this._plano != value) {\r\n      this._plano = value;\r\n      if(this._plano?.atividades?.length) {\r\n        this.atividades = this._plano?.atividades.map(x => x.atividade!) || [];\r\n      } else {\r\n        this.loadAtividades();\r\n      }\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n  get plano(): Plano | undefined {\r\n    return this._plano;\r\n  }\r\n\r\n  public atividades: Atividade[] = [];\r\n  public mensagemCarregando = \"Carregando atividades...\";\r\n\r\n  /*private _loading: boolean = false;\r\n  public set loading(value: boolean) {\r\n    if(!value) {\r\n      this.dialog.closeSppinerOverlay();\r\n    } else if(!this._loading) {\r\n      this.dialog.showSppinerOverlay(\"Carregando atividades\");\r\n    }\r\n    this._loading = value;\r\n  }\r\n  public get loading(): boolean {\r\n    return this._loading;\r\n  }*/\r\n  \r\n  public atividadeDao: AtividadeDaoService;\r\n\r\n  private _vinculadas: boolean = true;\r\n  private _plano?: Plano;\r\n\r\n  constructor(public injector: Injector) { \r\n    super(injector);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n  }\r\n\r\n  public loadAtividades() {\r\n    const query = this.atividadeDao.query({where: [['unidade_id', '=', this.plano?.unidade_id], ['vinculadas', '=', this.vinculadas]]})\r\n    this.loading = true;\r\n    query.asPromise().then(atividades => {\r\n      this.atividades = atividades;\r\n      this.cdRef.detectChanges();\r\n    }).catch((error) => {\r\n      this.dialog.alert(\"Error ao carregar atividades\", error?.message ? error.message : error);\r\n    }).finally(() => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  public getEntregas(entregas: LookupItem[]) {\r\n    return entregas.map(x => x.value).join(\"\\n\");\r\n  }\r\n\r\n  public getParametros(parametros: LookupItem[]) {\r\n    return parametros.map(x => x.value).join(\"\\n\");\r\n  }\r\n\r\n  public getFaixaComplexidade(atividade: Atividade) {\r\n    return atividade.complexidade.find(x => x.padrao)?.grau || \"Normal\";\r\n  }\r\n\r\n  public get conteudo(): string {\r\n    return this.termo?.nativeElement.innerHTML || \"\";\r\n  }\r\n\r\n  public getTempoTeletrabalho(atividade: Atividade): string {\r\n    const fator_ganho_produtivade = 1 - ((this.plano?.ganho_produtividade || 0) / 100);\r\n    return this.util.decimalToTimerFormated(atividade.tempo_pactuado * fator_ganho_produtivade, true)\r\n  }\r\n\r\n  public get ganhoProdutividade(): string {\r\n    return this.util.formatDecimal(this.plano?.ganho_produtividade || 0) + \"%\";\r\n  }\r\n\r\n  public get cargaHorariaTitulo(): string {\r\n    return this.plano?.forma_contagem_carga_horaria == \"MES\" ? \"Carga horária mensal:\" : this.plano?.forma_contagem_carga_horaria == \"SEMANA\" ? \"Carga horária semanal:\" : \"Carga horária diária:\";\r\n  }\r\n\r\n  public get cargaHoraria(): number {\r\n    const factor = this.plano?.forma_contagem_carga_horaria == \"MES\" ? 20 : this.plano?.forma_contagem_carga_horaria == \"SEMANA\" ? 5 : 1;\r\n    return (this.plano?.carga_horaria || 0) * factor;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div #termo>\r\n    <table>\r\n        <tbody>\r\n            <tr>\r\n                <td style=\"padding:15px;\" colspan=\"2\">\r\n                    <h3 style=\"text-align:center;\">{{ lex.noun('PLANO DE TRABALHO') }}</h3>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>Nome do participante:</b></p>\r\n                    <p>{{plano?.usuario?.nome}}</p>\r\n                </td>\r\n                <td>\r\n                    <p><b>Nome da unidade responsável:</b></p>\r\n                    <p>{{plano?.unidade?.nome}}</p>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>Matrícula Siape:</b></p>\r\n                    <p>{{plano?.usuario?.matricula}}</p>\r\n                </td>\r\n                <td rowspan=\"2\">\r\n                    <p><b>Vinculação do participante:</b></p>\r\n                    <p>{{lookup.getValue(lookup.USUARIO_VINCULACAO, plano?.usuario?.vinculacao)}}</p>\r\n                    <!--ul class=\"todo-list\">\r\n                        <li><label class=\"todo-list__label\"><input type=\"checkbox\" disabled=\"disabled\"><span class=\"todo-list__label__description\">Servidor público ocupante de cargo efetivo</span></label></li>\r\n                        <li><label class=\"todo-list__label\"><input type=\"checkbox\" disabled=\"disabled\"><span class=\"todo-list__label__description\">Servidor público ocupante de cargo em comissão</span></label></li>\r\n                        <li><label class=\"todo-list__label\"><input type=\"checkbox\" disabled=\"disabled\"><span class=\"todo-list__label__description\">Empregado público</span></label></li>\r\n                        <li><label class=\"todo-list__label\"><input type=\"checkbox\" disabled=\"disabled\"><span class=\"todo-list__label__description\">Contratado temporário, regido pela Lei nº 8.745, de 9 de dezembro de 1993.</span></label></li>\r\n                    </ul//-->\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>Período de adesão:</b></p>\r\n                    <p>{{util.getDateFormatted(plano?.data_inicio_vigencia)}} à {{util.getDateFormatted(plano?.data_fim_vigencia)}}</p>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>Regime de execução:</b></p>\r\n                    <p>{{plano?.tipo_modalidade?.nome}}</p>\r\n                </td>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>{{ 'Ganho percentual de ' + lex.noun('produtividade') + ':' }}</b></p>\r\n                    <p>{{ganhoProdutividade}} </p>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>{{cargaHorariaTitulo}}</b></p>\r\n                    <p>{{cargaHoraria}} horas</p>\r\n                </td>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>{{ lex.noun('Tempo pactuado') + ' ' + lex.noun('plano',false,true) + ':' }}</b></p>\r\n                    <p>{{plano?.tempo_total}} horas</p>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:15px;\" colspan=\"2\">\r\n                    <h3 style=\"text-align:center;\">\r\n                        <strong>\r\n                            <br/><br/>TERMO DE CIÊNCIA E RESPONSABILIDADE\r\n                        </strong>\r\n                    </h3>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\" colspan=\"2\">\r\n                    <p style=\"text-align:justify;\">&nbsp;</p>\r\n                    <p style=\"text-align:justify;\">Pelo presente termo de ciência e responsabilidade, em razão da solicitação de adesão ao Programa de Gestão por Resultados da {{auth.entidade?.nome}},</p>\r\n                    <ul>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO estar ciente que a aferição ' + lex.noun('entrega',true,true) + ' será realizada mediante análise fundamentada da chefia responsável pelo ' + lex.noun('plano de trabalho') + ', em até quarenta dias, quanto ao atingimento ou não das metas estipuladas.' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO estar ciente que a chefia responsável pelo ' + lex.noun('plano de trabalho') + ' poderá redefinir as metas do participante por necessidade do serviço, na hipótese de surgimento de ' + lex.noun('demanda') + ' prioritária cujas atividades não tenham sido previamente acordadas.' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que atendo às condições para participação no ' + lex.noun('PROGRAMA DE GESTÃO') + ';' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente do dever, como participante, de manter, às minhas expensas, a infraestrutura necessária para o exercício de minhas atribuições, inclusive aquelas relacionadas à segurança da informação, quando executar o ' + lex.noun('programa de gestão') + ' na modalidade teletrabalho;' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente que minha participação no ' + lex.noun('programa de gestão') + ' não constitui direito adquirido, podendo ser desligado nas condições estabelecidas nesta Instrução Normativa;' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente quanto à vedação de pagamento das vantagens descritas nesta normativa;' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente quanto à vedação de utilização de terceiros para a execução dos trabalhos acordados como parte das metas;' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente quanto ao dever de observar as disposições constantes da Lei nº 13.709, de 14 de agosto de 2018;' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente quanto ao dever de observar as disposições constantes da Lei Geral de Proteção de Dados Pessoais (LGPD), no que couber;' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente quanto ao dever de observar as disposições constantes da Portaria nº 15.543/SEDGG/ME, de 2 de julho de 2020 (Manual de Conduta do Agente Público Civil do Poder Executivo Federal); e' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO que estou ciente quanto ao dever de manter os dados pessoais, inclusive de contato para acionamento, atualizados em sistema indicado pela Diretoria de Gestão de Pessoas.' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO estar ciente quanto ao dever de manter meus dados pessoais, inclusive de contato para acionamento, atualizados na base de dados indicada pela DGP.' }}</li>\r\n                        <li style=\"text-align:justify;\">{{ 'DECLARO estar ciente que o prazo de antecedência mínima para o comparecimento presencial à ' + lex.noun('unidade') + ', sempre que a presença física do participante for necessária e houver interesse da Administração Pública, deverá seguir o disposto na INSTRUÇÃO NORMATIVA PRF Nº 88, DE 15 DE JUNHO DE 2022 (SEI nº 41976568).' }}</li>\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n            <!--tr>\r\n                <td style=\"padding:8px;\" colspan=\"3\">\r\n                <p>&nbsp;</p>\r\n                <p>{only_semipresencial}</p>\r\n                <p>No caso de participação no regime de execução parcial, indique no campo abaixo os dias ou turnos em que o participante deverá comparecer presencialmente à unidade:</p>\r\n                <p>&nbsp;</p>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                <p>{only_semipresencial}</p>\r\n                <p>Segunda-feira</p>\r\n                </td>\r\n                <td style=\"width:25%;\">\r\n                <p>Início</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_0_inicio\"></div>\r\n                </td>\r\n                <td style=\"width:25%;\">\r\n                <p>Término</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_0_fim\"></div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                <p>{only_semipresencial}</p>\r\n                <p>Terça-feira</p>\r\n                </td>\r\n                <td>\r\n                <p>Início</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_1_inicio\"></div>\r\n                </td>\r\n                <td>\r\n                <p>Término</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_1_fim\"></div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                <p>{only_semipresencial}</p>\r\n                <p>Quarta-feira</p>\r\n                </td>\r\n                <td>\r\n                <p>Início</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_2_inicio\"></div>\r\n                </td>\r\n                <td>\r\n                <p>Término</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_2_fim\"></div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                <p>{only_semipresencial}</p>\r\n                <p>Quinta-feira</p>\r\n                </td>\r\n                <td>\r\n                <p>Início</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_3_inicio\"></div>\r\n                </td>\r\n                <td>\r\n                <p>Término</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_3_fim\"></div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                <p>{only_semipresencial}</p>\r\n                <p>Sexta-feira</p>\r\n                </td>\r\n                <td>\r\n                <p>Início</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_4_inicio\"></div>\r\n                </td>\r\n                <td>\r\n                <p>Término</p>\r\n                <div class=\"raw-html-embed\"><input type=\"time\" class=\"form-field\" data-key=\"parcial_4_fim\"></div>\r\n                </td>\r\n            </tr//-->\r\n            <tr>\r\n                <td style=\"padding:8px;\" colspan=\"2\">\r\n                    <h3 style=\"text-align:center;\">{{ lex.noun('ATIVIDADE',true) }}</h3>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{{ 'Descrição ' + lex.noun('atividade',false,true) }}</th>\r\n                                <!--th>Faixa de Complexidade da Atividade</th>\r\n                                <th>Parâmetros adotados para definição da faixa de complexidade</th//-->\r\n                                <th>{{ 'Tempo de execução ' + lex.noun('atividade',false,true) + ' em regime presencial' }}</th>\r\n                                <th>{{ 'Tempo de execução ' + lex.noun('atividade',false,true) + ' em teletrabalho' }}</th>\r\n                                <th>{{ 'Ganho percentual de ' + lex.noun('produtividade') + ' estabelecido, quando aplicável' }}</th>\r\n                                <!--th>Entregas esperadas</th//-->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let atividade of atividades\">\r\n                                <td>{{atividade.nome}}</td>\r\n                                <!--td>{{getFaixaComplexidade(atividade)}}</td>\r\n                                <td>{{getParametros(atividade.parametros_adotados)}}</td//-->\r\n                                <td>{{util.decimalToTimerFormated(atividade.tempo_pactuado, true)}}</td>\r\n                                <td>{{getTempoTeletrabalho(atividade)}}</td>\r\n                                <td>{{ganhoProdutividade}}</td>\r\n                                <!--td>{{getEntregas(atividade.entregas_esperadas)}}</td//-->\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <!--tr>\r\n                <td style=\"padding:8px;\" colspan=\"3\">\r\n                    <p>&nbsp;</p>\r\n                    <p>Com a assinatura deste termo, o participante:</p>\r\n                    <p>&nbsp;</p>\r\n                    <ol>\r\n                        <li>autoriza o fornecimento do número de telefone pessoal a pessoas que façam chamadas telefônicas para a sua unidade de exercício na {{auth.unidade?.entidade?.sigla}}, sem necessidade de avaliação, pelo atendente, a respeito da pertinência do fornecimento; e</li>\r\n                        <li>autoriza o fornecimento do número de telefone pessoal a servidores em exercício na {{auth.unidade?.entidade?.sigla}} que indiquem necessidade de contato telefônico relacionado às suas atividades profissionais.</li>\r\n                    </ol>\r\n                    <p>&nbsp;</p>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>Telefone Celular:</b></p>\r\n                    <div class=\"raw-html-embed\">{{plano?.usuario?.telefone}}</div>\r\n                </td>\r\n                <td style=\"padding:8px;\">\r\n                    <p><b>Telefone Residencial (opcional):</b></p>\r\n                    <div class=\"raw-html-embed\">{{plano?.usuario?.telefone}}</div>\r\n                </td>\r\n                <td>&nbsp;</td>\r\n            </tr>\r\n            <tr>\r\n                <td style=\"padding:8px;\" colspan=\"3\">\r\n                    <p>&nbsp;</p>\r\n                    <p>DECLARO que os números de telefone listados neste formulário estão ativos e atualizados.</p>\r\n                    <p>&nbsp;</p>\r\n                </td>\r\n            </tr-->\r\n        </tbody>\r\n    </table>\r\n</div>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { Plano } from 'src/app/models/plano.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoDaoService } from 'src/app/dao/plano-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-list-entrega',\r\n  templateUrl: './plano-list-entrega.component.html',\r\n  styleUrls: ['./plano-list-entrega.component.scss']\r\n})\r\nexport class PlanoListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\r\n  @ViewChild('entrega_mesma_unidade', { static: false }) public entrega_mesma_unidade?: InputSelectComponent;\r\n  @ViewChild('entrega_outra_unidade', { static: false }) public entrega_outra_unidade?: InputSelectComponent;\r\n  @ViewChild('entrega_catalogo', { static: false }) public entrega_catalogo?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: Plano | undefined) { super.entity = value; } get entity(): Plano | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n\r\n  public get items(): PlanoTrabalhoEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue(new Plano());\r\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\r\n    return this.gridControl.value.entregas;\r\n  }\r\n  public minHeight: number = 350;\r\n  public options: ToolbarButton[] = [];\r\n  public entregaDao?: EntregaDaoService;\r\n  public planoTrabalhoDao?: PlanoDaoService;\r\n  public planoEntregaDao?: PlanoEntregaDaoService;\r\n  public peeDao?: PlanoEntregaEntregaDaoService;\r\n  private _disabled: boolean = false;\r\n  public totalForcaTrabalho: number = 0;\r\n  public entregasMesmaUnidade: LookupItem[] = [];\r\n  public entregasOutraUnidade: LookupItem[] = [];\r\n  public entregasCatalogo: LookupItem[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planoTrabalhoDao = injector.get<PlanoDaoService>(PlanoDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega\", \"entrega_plano_entrega.entrega\"];\r\n    this.form = this.fh.FormBuilder({\r\n      origem: {default: null},\r\n      entrega_mesma_unidade_id: {default: null},\r\n      entrega_outra_unidade_id: {default: null},\r\n      entrega_catalogo_id: {default: null},\r\n      descricao: {default: \"\"},\r\n      forca_trabalho: {default: 1},\r\n      plano_id: {default: null},\r\n      entrega_id: {default: null},\r\n      plano_entrega_entrega_id: {default: null}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(['descricao'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\r\n    if(['forca_trabalho'].indexOf(controlName) >= 0 && control.value < 1) result = \"Não pode ser inferior a 1\";\r\n    if(['entrega_id'].indexOf(controlName) >= 0) {\r\n      if(this.form?.controls.origem.value == 'CATALOGO' && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id).map(e => e.entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\n      if(cont > (this.grid?.adding ? 0 : 1)) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    if(['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\r\n      //separar os casos de mesma unidade dos casos de outra unidade\r\n      if(['MESMA_UNIDADE','OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Este campo não pode ser nulo!\";\r\n/*       let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\n      if(cont > 0) result = \"Esta entrega está em duplicidade!\"; */\r\n    }\r\n    if(this.form?.errors) console.log('Erro no campo descrição: ', this.form?.controls.descricao.errors);\r\n    if(this.form?.errors) console.log('Erro no campo entrega_id: ', this.form?.controls.entrega_id.errors);\r\n    console.log('Final do Validate - FORM: ', this.form?.valid); \r\n    if(this.form?.errors) console.log('Erros: ', this.form?.errors);\r\n    return result;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    super.ngOnInit();\r\n    this.entity = this.metadata?.entity || this.entity;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100)/100;\r\n    this.entregasCatalogo = await this.carregarEntregasCatalogo();\r\n    this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente\r\n   * @param entity \r\n   * @param form \r\n   */\r\n  public loadData(entity: IIndexable, form?: FormGroup) {\r\n    super.loadData(entity, form);\r\n  }\r\n\r\n  /**\r\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid persistente\r\n   * @param form \r\n   * @param row \r\n   */\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    form.controls.descricao.setValue(row.descricao);\r\n    form.controls.forca_trabalho.setValue(row.forca_trabalho)\r\n    if(!row.plano_entrega_entrega_id?.length && row.entrega_id?.length){\r\n      // POR QUE OS 3 INPUTS ESTÃO UNDEFINED ? THIS.ENTREGA_CATALOGO, THIS.ENTREGA_MESMA_UNIDADE, THIS.ENTREGA_OUTRA_UNIDADE\r\n      this.entrega_catalogo?.setValue(row.entrega_id);\r\n      form.controls.entrega_id.setValue(row.entrega_id);\r\n      this.entrega_mesma_unidade?.setValue(null);\r\n      this.entrega_outra_unidade?.setValue(null);\r\n      form.controls.origem.setValue('CATALOGO');\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if(!row.entrega_id?.length && row.plano_entrega_entrega_id?.length && row.entrega_plano_entrega?.plano_entrega_id == this.entity?.plano_entrega_id) {\r\n      // POR QUE OS 3 INPUTS ESTÃO UNDEFINED ? THIS.ENTREGA_CATALOGO, THIS.ENTREGA_MESMA_UNIDADE, THIS.ENTREGA_OUTRA_UNIDADE\r\n      this.entrega_mesma_unidade?.setValue(row.plano_entrega_entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n      this.entrega_catalogo?.setValue(null);\r\n      this.entrega_outra_unidade?.setValue(null);\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);      \r\n    } else if(!row.entrega_id?.length && row.plano_entrega_entrega_id?.length && row.entrega_plano_entrega?.plano_entrega_id != this.entity?.plano_entrega_id) {\r\n      // POR QUE OS 3 INPUTS ESTÃO UNDEFINED ? THIS.ENTREGA_CATALOGO, THIS.ENTREGA_MESMA_UNIDADE, THIS.ENTREGA_OUTRA_UNIDADE\r\n      this.entregasOutraUnidade = await this.carregarEntregasOutraUnidade(row.entrega_plano_entrega?.plano_entrega_id);\r\n      this.entrega_outra_unidade?.setValue(row.plano_entrega_entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n      this.entrega_catalogo?.setValue(null);\r\n      this.entrega_mesma_unidade?.setValue(null);\r\n      form.controls.origem.setValue('OUTRA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n    } else {  // inclusão de uma nova entrega\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n      this.entrega_catalogo?.setValue(null);\r\n      this.entrega_mesma_unidade?.setValue(null);\r\n      this.entrega_outra_unidade?.setValue(null);\r\n      form.controls.origem.setValue(null);\r\n    }\r\n    this.cdRef.detectChanges();\r\n    if(this.form?.errors) console.log('Erro no campo descrição: ', this.form?.controls.descricao.errors);\r\n    if(this.form?.errors) console.log('Erro no campo entrega_id: ', this.form?.controls.entrega_id.errors);\r\n    console.log('Final do LoadEntrega - FORM: ', this.form?.valid);\r\n    if(this.form?.errors) console.log('Erros: ', this.form?.errors);\r\n  }\r\n  \r\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    return entregas.map(x => parseFloat(x.forca_trabalho)).reduce((a,b) => a + b, 0);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para inserir uma entrega de plano de trabalho no grid.\r\n   * @returns \r\n   */\r\n  public async addEntrega() {\r\n    return Object.assign(new PlanoTrabalhoEntrega(), { \r\n      _status: \"ADD\", \r\n      plano_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n/*   public editEntrega(entrega: PlanoTrabalhoEntrega) {\r\n    entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n    let index = this.items.indexOf(entrega);\r\n  } */\r\n\r\n  /**\r\n   * Método chamado para a exclusão de uma entrega de plano de trabalho.\r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async removeEntrega(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if(confirm) {\r\n      this.loading = true;\r\n      try {\r\n        await this.dao?.delete(row.id);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - parseFloat((row as PlanoTrabalhoEntrega).forca_trabalho)) * 100) / 100;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid.\r\n   * @param form \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n    delete row['entrega'];\r\n    delete row['entrega_plano_entrega'];\r\n    let novaEntrega: PlanoTrabalhoEntrega = row as PlanoTrabalhoEntrega;\r\n    novaEntrega.entrega_id = this.form?.controls.entrega_id.value ?? null;\r\n    //novaEntrega.plano_entrega_entrega_id = this.form?.controls.origem.value == 'MESMA_UNIDADE' ? this.entrega_mesma_unidade?.value : this.form?.controls.origem.value == 'OUTRA_UNIDADE' ? this.entrega_outra_unidade?.value : null;\r\n    novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\r\n    novaEntrega.descricao = this.form?.controls.descricao.value;\r\n    novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.loading = true;\r\n    try {\r\n      if(!this.isNoPersist) novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(novaEntrega, this.join); \r\n      this.grid!.items[this.grid!.items.length-1].id = '';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n    return novaEntrega;\r\n  }\r\n\r\n  public afterSaveEntrega(novaEntrega: PlanoTrabalhoEntrega){\r\n    novaEntrega!.entrega = this.entrega_catalogo?.selectedItem?.data;\r\n    novaEntrega!.entrega_plano_entrega = this.origem?.value == 'MESMA_UNIDADE' ? this.entrega_mesma_unidade?.selectedItem?.data : this.entrega_outra_unidade?.selectedItem;\r\n    this.grid?.reloadFilter();\r\n  }\r\n\r\n  public carregarEntregasMesmaUnidade(): LookupItem[] {\r\n    let entregasPlanoEntrega = this.entity?.plano_entrega?.entregas || [];\r\n    return entregasPlanoEntrega.map(epe => Object.assign({}, {key: epe.id, value: epe.entrega?.nome || '', data: epe}));\r\n  }\r\n\r\n  public async carregarEntregasOutraUnidade(plano_entrega_id: string): Promise<LookupItem[]>{\r\n    let result: LookupItem[] = [];\r\n    try {\r\n      this.peeDao?.query({where: ['plano_entrega_id','==',plano_entrega_id],orderBy: [['entrega.nome','asc']],join: ['entrega:id,nome']}).getAll().then(response => {\r\n        result = response.map(epe => Object.assign({}, {key: epe.id, value: epe.entrega?.nome || '', data: epe}));\r\n      });\r\n    } catch (error) {}\r\n    return result;\r\n  }\r\n\r\n  public async carregarEntregasCatalogo(): Promise<LookupItem[]>{\r\n    let result: LookupItem[] = [];\r\n    result = (await this.entregaDao?.query().getAll())?.map(ee => Object.assign({}, {key: ee.id, value: ee.nome, data: ee})) || [];\r\n    return result;\r\n  }\r\n\r\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\r\n\r\n  public onOrigemChange(row: any){\r\n    if(['MESMA_UNIDADE','OUTRA_UNIDADE'].includes(this.form?.controls.origem.value)){\r\n      this.form?.controls.entrega_id.setValue(null);\r\n      //if(row[\"origem\"] == \"OUTRA_UNIDADE\") Disparar o evento CLICK do input-select/button  \r\n    } else if(this.form?.controls.origem.value == 'CATALOGO'){\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    }\r\n    if(this.form?.errors) console.log('Erro no campo descrição: ', this.form?.controls.descricao.errors);\r\n    if(this.form?.errors) console.log('Erro no campo entrega_id: ', this.form?.controls.entrega_id.errors);\r\n    console.log('Final do onOrigemChange - FORM: ', this.form?.valid);\r\n    if(this.form?.errors) console.log('Erros: ', this.form?.errors);\r\n  }\r\n\r\n  public onEntregaMesmaUnidadeChange(event: Event){\r\n    this.form?.controls.descricao.setValue(this.entrega_mesma_unidade?.selectedItem?.value || '');\r\n    this.form?.controls.plano_entrega_entrega_id.setValue(this.entrega_mesma_unidade?.selectedItem?.key);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onEntregaOutraUnidadeChange(event: Event){\r\n    this.form?.controls.descricao.setValue('');\r\n    //if(this.entrega_outra_unidade?.selectedItem?.key.length) this.form?.controls.descricao.setValue(this.entrega_outra_unidade?.selectedItem?.value);\r\n  }\r\n  \r\n  public onEntregaCatalogoChange(event: Event){\r\n    this.form?.controls.descricao.setValue(this.entrega_catalogo?.selectedItem?.value || '');\r\n    this.form?.controls.entrega_id.setValue(this.entrega_catalogo?.selectedItem?.key);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onForcaTrabalhoChange(row: any){\r\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\r\n    this.items[index].forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) * 100) / 100;\r\n  }\r\n\r\n}\r\n\r\n\r\n  /*\r\n  TESTES\r\n\r\n                                                    GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\r\n                                                Fluxo Feliz    Validações                Fluxo Feliz    Validações\r\n  Inclusão Entrega Catálogo                         OK            OK\r\n  \r\n  Inclusão Entrega Mesma Unidade                    OK            OK\r\n  \r\n  Inclusão Entrega Outra Unidade                    \r\n  \r\n  Alteração Entrega Catálogo                        OK            aceitando repetições\r\n  \r\n  Alteração Entrega Mesma Unidade                   OK            aceitando repetições\r\n  \r\n  Alteração Entrega Outra Unidade                   \r\n  \r\n  Cancelamento Entrega Catálogo                     OK\r\n  \r\n  Cancelamento Entrega Mesma Unidade                OK\r\n  \r\n  Cancelamento Entrega Outra Unidade                \r\n  \r\n  Exclusão Entrega Catálogo                         OK              \r\n  \r\n  Exclusão Entrega Mesma Unidade                    OK                      \r\n  \r\n  Exclusão Entrega Outra Unidade                                     \r\n\r\n  */\r\n\r\n  /*\r\n  PROBLEMAS:\r\n\r\n  1. O evento de selecionar o conteúdo do input-text está desviando o fluxo para a homepage;\r\n  2. Durante a edição de uma entrega, os campos não são validados à medida que são preenchidos;\r\n\r\n  */","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" #gridEntregas editable [selectable]=\"false\" [minHeight]=\"minHeight\" [join]=\"join\" [groupBy]=\"groupBy\"\r\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [saveEnd]=\"afterSaveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\r\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\r\n            <columns>\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnOrigem>\r\n                        <span><small>\r\n                            <badge *ngIf=\"row.entrega_plano_entrega?.plano_entrega_id == entity?.plano_entrega_id\" color=\"success\" label=\"Mesma Unidade\"></badge>\r\n                            <!-- <badge *ngIf=\"row.entrega_plano_entrega?.plano_entrega_id != entity?.plano_entrega_id && row.plano_entrega_entrega_id?.length\" color=\"primary\" label=\"Outra Unidade\"></badge> -->\r\n                            <badge *ngIf=\"row.entrega_id?.length\" color=\"secondary\" label=\"Catálogo\"></badge>\r\n                        </small></span>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editOrigem>\r\n                        <input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\" [maxWidth]=\"300\">\r\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\r\n                    <ng-template let-row=\"row\" #columnEntrega>\r\n                        <div [style.max-width]=\"290\"><span><small>{{ row.entrega_plano_entrega?.entrega?.nome || row.entrega?.nome || \"Desconhecido\" }}</small></span></div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editEntrega>\r\n                        <input-select *ngIf=\"origem?.value == 'MESMA_UNIDADE'\" #entrega_mesma_unidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasMesmaUnidade\" (change)=\"onEntregaMesmaUnidadeChange($event)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'OUTRA_UNIDADE'\" #entrega_outra_unidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasOutraUnidade\" (change)=\"onEntregaOutraUnidadeChange($event)\" searchable [searchRoute]=\"{route: ['gestao', 'plano-entrega']}\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'CATALOGO'\" #entrega_catalogo nullable itemNull=\"- Selecione -\" controlName=\"entrega_id\" [control]=\"form!.controls.entrega_id\" [items]=\"entregasCatalogo\" (change)=\"onEntregaCatalogoChange($event)\"></input-select>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"130\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                        <div class=\"text-center\">\r\n                            <span><small><strong>% Força Trab.</strong></small></span><br>\r\n                            <span><small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small></span>    \r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #columnForcaTrabalho>\r\n                        <span><small>{{  row.forca_trabalho + '%' }}</small></span>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editForcaTrabalho>\r\n                        <input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\" [maxWidth]=\"300\">\r\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnDescricao>\r\n                        <div [style.max-width]=\"290\"><span><small>{{ row.descricao }}</small></span></div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editDescricao>\r\n                        <input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text>\r\n                    </ng-template>\r\n                </column>\r\n                <column type=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>","import { Injectable, Injector } from '@angular/core';\r\nimport { PlanoTrabalhoEntrega } from '../models/plano-trabalho-entrega.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoEntregaDaoService extends DaoBaseService<PlanoTrabalhoEntrega> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoEntrega\", injector);\r\n  }\r\n}\r\n\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { TemplateDataset } from 'src/app/components/input/input-editor/input-editor.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoDaoService } from 'src/app/dao/plano-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoAtividade } from 'src/app/models/plano-atividade.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { Plano } from 'src/app/models/plano.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoService } from '../plano.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-form',\r\n  templateUrl: './plano-form.component.html',\r\n  styleUrls: ['./plano-form.component.scss']\r\n})\r\n\r\nexport class PlanoFormComponent extends PageFormBase<Plano, PlanoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\r\n\r\n  public formAtividades: FormGroup;\r\n  public formEntregas: FormGroup;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public calendar: CalendarService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoService: PlanoService;\r\n  public horasTotais?: Efemerides;\r\n  public horasParciais?: Efemerides;\r\n  public planoDataset: TemplateDataset[];\r\n  public documentoId?: string;\r\n  public entregas: LookupItem[] = [];\r\n  public programa?: Programa;\r\n  public unidade?: Unidade;\r\n\r\n  private _datasource: any;\r\n  private _entityDocumentos: Plano = new Plano();\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Plano, PlanoDaoService);\r\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.entrega_plano_entrega:id,plano_entrega_id\", \"plano_entrega.entregas.entrega\", \"plano_entrega.unidade.entidade\", \"plano_entrega.programa\", \r\n                \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"atividades.atividade\"];\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.planoService = injector.get<PlanoService>(PlanoService);\r\n    this.planoDataset = this.dao!.dataset();\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio_vigencia: {default: new Date()},\r\n      data_fim_vigencia: {default: new Date()},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      ganho_produtividade: {default: 0},\r\n      usuario_id: {default: \"\"},\r\n      plano_entrega_id: {default: \"\"},\r\n      documento_id: {default: null},\r\n      documentos: {default: []},\r\n      atividades: {default: []},\r\n      entregas: {default: []},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"},\r\n      editar_texto_complementar_unidade: {default: false},\r\n      editar_texto_complementar_usuario: {default: false},\r\n      unidade_texto_complementar: {default: \"\"},\r\n      usuario_texto_complementar: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    this.formAtividades = this.fh.FormBuilder({\r\n      atividade_id: {default: \"\"}\r\n    }, this.cdRef, this.validateAtividades);\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      entrega_id: {default: \"\"}\r\n    }, this.cdRef, this.validateEntregas);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\r\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\r\n  }\r\n\r\n  public get datasource(): any {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    let data = this.dao!.datasource(this._entityDocumentos);\r\n    /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\r\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\r\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\r\n      this._datasource = data;\r\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente */\r\n      this.documentoId = undefined;\r\n      if(this.programa?.termo_obrigatorio) {\r\n        this.documentoId = this.form!.controls.documento_id.value;\r\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\r\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\r\n        if(!this.documentoId?.length || !documento || documento.assinaturas.length || documento.id_documento) {\r\n          this.documentoId = this.dao?.generateUuid(),\r\n          documentos.push(new Documento({\r\n            id: this.documentoId, \r\n            especie: \"TCR\",\r\n            titulo_documento: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: \"\",\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: this.programa.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: this.datasource,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_id: this.entity?.id,\r\n            template_id: this.programa.template_tcr_id\r\n          }));\r\n          this.form!.controls.documento_id.setValue(this.documentoId);\r\n          this.form!.controls.documentos.setValue(documentos);\r\n        }\r\n      }\r\n    }\r\n    return this._datasource;\r\n  }\r\n\r\n  public get template(): Template | undefined {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    return this.planoService.template(this._entityDocumentos);\r\n  }\r\n\r\n  public get isTermos(): boolean {\r\n    return this.action == \"termos\";\r\n  }\r\n\r\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'atividade_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'entrega_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['usuario_id', 'plano_entrega_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\r\n      result = \"Valor não pode ser zero.\";\r\n    } \r\n    if(['data_inicio_vigencia', 'data_fim_vigencia'].includes(controlName)) {\r\n      if(!this.util.isDataValid(control.value)) {\r\n        result = \"Inválido\";\r\n      }\r\n    } else if(this.programa && controlName == 'data_inicio_vigencia' && (control.value as Date).getTime() < this.programa!.data_inicio_vigencia.getTime()) {\r\n        result = \"Menor que programa\";\r\n    } else if(this.programa && controlName == 'data_fim_vigencia' && (control.value as Date).getTime() > this.programa!.data_fim_vigencia.getTime()) {\r\n        result = \"Maior que programa\";\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.gridAtividades?.editing) {\r\n      this.tabs!.active = \"ATIVIDADES\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    // Validar se o unidade & programa & plano de entrega são interlidados\r\n    // Validar se as entregas pertencem ao plano de entregas da unidade\r\n    // Validar o período está dentro do plano de entregas\r\n    // Validar se o usuários está habilitado no programa\r\n    return undefined;\r\n  };\r\n\r\n  public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\r\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\r\n  }\r\n\r\n  public onPlanoEntregaSelect(selected: SelectItem) {\r\n    let planoEntrega = selected.entity as PlanoEntrega;\r\n    this.updateEntregas(planoEntrega);\r\n    //ATUALIZAR O GRID DE ENTREGAS this.planoListEntrega\r\n    this.form?.controls.data_inicio_vigencia.updateValueAndValidity();\r\n    this.form?.controls.data_fim_vigencia.updateValueAndValidity();\r\n    this.programa = planoEntrega?.programa as Programa;\r\n    this.unidade = planoEntrega?.unidade as Unidade;\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(this.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\r\n    this.form!.controls.unidade_texto_complementar.setValue(this.unidade?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onTipoModalidadeSelect(selected: SelectItem) {\r\n    const tipoModalidade = this.tipoModalidade?.searchObj as TipoModalidade;\r\n    if(tipoModalidade) this.form?.controls.ganho_produtividade.setValue(tipoModalidade.ganho_produtividade);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onUsuarioSelect(selected: SelectItem) {\r\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onDataInicioChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onDataFimChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onCargaHorariaChenge(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public calculaTempos() {\r\n    const inicio = this.form?.controls.data_inicio_vigencia.value;\r\n    const fim = this.form?.controls.data_fim_vigencia.value;\r\n    const carga = this.form?.controls.carga_horaria.value || 8;\r\n    const usuario = this.usuario?.searchObj as Usuario;\r\n    if(usuario && this.unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\r\n      this.calendar.loadFeriadosCadastrados(this.unidade.id).then((feriados) => {\r\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], []);\r\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], usuario.afastamentos);\r\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\r\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async loadData(entity: Plano, form: FormGroup) {\r\n    this.updateEntregas(entity.plano_entrega);\r\n    await Promise.all([\r\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\r\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id),\r\n      this.planoEntrega?.loadSearch(entity.plano_entrega || entity.plano_entrega_id)\r\n    ]);\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    let documento = entity.documentos.find(x => x.id == entity.documento_id);\r\n    if(documento) this._datasource = documento.datasource;\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    if(this.isTermos) {\r\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\r\n    } else {\r\n      this.entity = new Plano();\r\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\r\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    }\r\n    await this.loadData(this.entity, this.form!);\r\n  }\r\n\r\n  /* Atividades */  \r\n  public async addAtividades() {\r\n    return new PlanoAtividade({ plano_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadAtividades(form: FormGroup, row: any) {\r\n    form.controls.atividade_id.setValue(row.atividade_id);\r\n  }\r\n\r\n  public async removeAtividades(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveAtividades(form: FormGroup, row: any) {\r\n    row.atividade_id = form.controls.atividade_id.value;\r\n    row.atividade = this.atividade?.searchObj as Atividade;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\r\n    try {\r\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\r\n    } finally {\r\n      this.dialog.closeSppinerOverlay();\r\n    }*/\r\n    return row;\r\n  }\r\n\r\n  /* Entregas */\r\n  public async addEntregas() {\r\n    return new PlanoTrabalhoEntrega({ plano_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadEntregas(form: FormGroup, row: any) {\r\n    form.controls.entrega_id.setValue(row.entrega_id);\r\n    form.controls.nome.setValue(row.nome);\r\n  }\r\n\r\n  public async removeEntregas(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveEntregas(form: FormGroup, row: any) {\r\n    row.entrega_id = form.controls.entrega_id.value;\r\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\r\n    row.nome = form.controls.nome.value;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    return row;\r\n  }\r\n\r\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos */\r\n  public get entityDocumentos(): Plano {\r\n    let plano = this.loadEntity();\r\n    /* Remove campo de documentos para comparar */\r\n    plano.documentos = [];\r\n    this._entityDocumentos.documentos = [];\r\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\r\n      this._entityDocumentos = plano;  \r\n    }\r\n    /* Atribui novamente o campo de documentos */\r\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\r\n    return this._entityDocumentos;\r\n  }\r\n\r\n  /* Cria um objeto Plano baseado nos dados do formulário */\r\n  public loadEntity(): Plano {\r\n    let plano: Plano = this.util.fill(new Plano(), this.entity!);\r\n    plano = this.util.fillForm(plano, this.form!.value);\r\n    plano.usuario = this.usuario!.searchObj as Usuario;\r\n    plano.unidade = (this.entity?.unidade || this.unidade) as Unidade;\r\n    plano.programa = (this.entity?.programa || this.programa) as Programa;\r\n    plano.tipo_modalidade = this.tipoModalidade!.searchObj as TipoModalidade;\r\n    return plano;\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<Plano | boolean> {\r\n    let plano = this.loadEntity();\r\n    /* Confirma dados do documento */\r\n    this.documentos?.saveData();\r\n    /* Remove os ids gerados para os novos unidades_origem_atividades, será gerado pelo servidor como UUID */\r\n    plano.atividades = plano.atividades.filter((atividade: PlanoAtividade) => {\r\n      atividade.id = atividade.id.includes(\"-\") ? atividade.id : \"\";\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(atividade._status || \"\")\r\n    });\r\n    plano.documentos = plano.documentos.filter((documento: Documento) => {\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\")\r\n    });\r\n    /* Salva separadamente as informações do plano */\r\n    this.entity = await this.dao!.save(plano);\r\n    if(this.form!.controls.editar_texto_complementar_unidade.value) {\r\n      await this.unidadeDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value});\r\n    }\r\n    if(this.form!.controls.editar_texto_complementar_usuario.value) {\r\n      await this.usuarioDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value});\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: Plano): string => {\r\n    return \"Editando \" ;//+ (entity?.nome || \"\");\r\n  }\r\n\r\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let documento: Documento = row as Documento;\r\n\r\n    if(this.isTermos && this.planoService.needSign(this.entity, documento)) {\r\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\r\n    }\r\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\r\n\r\n    return result;\r\n  }\r\n\r\n  /*public needSign(documento: Documento): boolean {\r\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.searchObj as TipoModalidade);\r\n    const usuario = this.entity!.usuario!; // (this.usuario?.searchObj as Usuario);\r\n    const unidade = this.entity!.unidade!; // (this.unidade?.searchObj as Unidade);\r\n    const entidade = unidade?.entidade;\r\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n    let ids: string[] = [];\r\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n  }*/\r\n\r\n  public async signDocumento(documento: Documento) {\r\n    await this.documentoService.sign([documento]);\r\n    this.cdRef.detectChanges();\r\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\r\n      if(response) {\r\n        this.loading = true;\r\n        this.documentoDao.assinar([documento.id]).then(response => {\r\n          if(response?.length) {\r\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n            let found = documentos.find(x => x.id == documento?.id);\r\n            if(found) found.assinaturas = response[0].assinaturas;\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.gridDocumentos?.reset();\r\n          }\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    //const forma = (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    //console.log(\"FORMA: \", (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\r\n  }\r\n\r\n  public async addDocumento() {\r\n    const documento = new Documento();\r\n    documento.id = this.dao!.generateUuid();\r\n    documento.plano_id = this.entity!.id;\r\n    documento._status = \"ADD\";\r\n    this.go.navigate({route: ['gestao', 'plano', 'termo']}, {metadata: {documento: documento, plano: this.entity}, modalClose: (modalResult) => {\r\n      if(modalResult) {\r\n        (async () => {\r\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n          if(this.isTermos) {\r\n            this.clearErros();\r\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n            try {\r\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\r\n                especie: \"TERMO_ADESAO\",\r\n                conteudo: modalResult?.termo,\r\n                metadados: {atividades_termo_adesao: modalResult.atividades_termo_adesao},\r\n                plano_id: this.entity!.id,\r\n                status: \"GERADO\"\r\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\r\n            } catch (error: any) {\r\n              this.error(error.message ? error.message : error);\r\n              modalResult = undefined;\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          }\r\n          if(modalResult) {\r\n            documentos.push(modalResult);\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\r\n            await this.initializeData(this.form!);\r\n            this.dialog.closeSppinerOverlay();\r\n          }\r\n          this.cdRef.detectChanges();\r\n        })();\r\n      }\r\n    }});\r\n    return undefined;\r\n  }\r\n\r\n  public isVigente(documento: Documento): boolean {\r\n    return this.form!.controls.documento_id.value == documento.id;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"DADOS\" label=\"Dados\">\r\n            <div class=\"row\">\r\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de plano de entregas deve ficar desabilitado nas edições e habilitado apenas nas inclusões; -->\r\n                <input-search #planoEntrega [size]=\"6\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" [join]=\"['entregas.entrega','unidade.entidade','programa']\" (select)=\"onPlanoEntregaSelect($event)\"></input-search>\r\n                <input-search #usuario [size]=\"6\" controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.noun('Plano de trabalho')\"></input-datetime>\r\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.noun('Plano de trabalho')\"></input-datetime>\r\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\" (select)=\"onTipoModalidadeSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-workload [size]=\"3\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"></input-workload>\r\n                <input-timer onlyHours disabled [size]=\"3\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\r\n                <input-timer onlyHours disabled [size]=\"3\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\r\n                <input-text numbers [size]=\"3\" label=\"% Ganho produtividade\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do '+ lex.noun('tempo pactuado')+')'\"></input-text>\r\n            </div>\r\n            <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\r\n                <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\r\n            </separator>\r\n            <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\r\n                <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\r\n            </separator>\r\n        </tab>\r\n        <tab key=\"ATIVIDADES\" label=\"Atividades\">\r\n            <top-alert type=\"warning\" message=\"Caso a lista fique vazia, será considerado as atividades da unidade (e subordinadas)\"></top-alert>\r\n            <div clss=\"row\">\r\n                <grid #gridAtividades [control]=\"form!.controls.atividades\" [form]=\"formAtividades\" [add]=\"addAtividades.bind(this)\" [load]=\"loadAtividades.bind(this)\" [hasDelete]=\"true\" [remove]=\"removeAtividades.bind(this)\" [save]=\"saveAtividades.bind(this)\" editable>\r\n                    <columns>\r\n                        <column [title]=\"lex.noun('Atividade')\" [titleHint]=\"lex.noun('Atividade') + ' autorizada para o ' + lex.noun('Plano de trabalho')\" [template]=\"columnAtividade\" [editTemplate]=\"editAtividade\">\r\n                            <ng-template let-row=\"row\" #columnAtividade>\r\n                                <span> {{row.atividade?.nome || \"\"}}</span>\r\n                            </ng-template>\r\n                            <ng-template let-row=\"row\" #editAtividade>\r\n                                <input-search #atividade [size]=\"12\" label icon controlName=\"atividade_id\" [control]=\"formAtividades!.controls.atividade_id\" [dao]=\"atividadeDao\"></input-search>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column type=\"options\"></column>\r\n                    </columns>\r\n                </grid>\r\n            </div>\r\n        </tab>\r\n        <tab key=\"ENTREGAS\" [label]=\"lex.noun('Entrega', true)\">\r\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.noun('entrega',true) + ' neste ' + lex.noun('Plano de Trabalho') + ', é necessário selecionar um ' + lex.noun('Plano de Entregas') + '!'\"></top-alert>\r\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                    <plano-list-entrega noPersist [entity]=\"entity\"></plano-list-entrega>\r\n                </editable-form>\r\n            </div>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\r\n            <separator [title]=\"'Texto complementar da '+ lex.noun('unidade')\">\r\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.noun('unidade')\"></input-switch>\r\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n            <separator title=\"Texto complementar do usuario\">\r\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.noun('usuário')\"></input-switch>\r\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\r\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\r\n            <div clss=\"row\">\r\n                <documentos #documentos [entity]=\"entityDocumentos\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoService.needSign\" [extraTags]=\"planoService.extraTags\" especie=\"TCR\" \r\n                [editingId]=\"documentoId\" [datasource]=\"datasource\" [template]=\"template\"></documentos>\r\n                <!--grid [control]=\"form!.controls.documentos\" #gridDocumentos [disabled]=\"undefined\" #documentos [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"isTermos\" [add]=\"isTermos ? addDocumento.bind(this) : undefined\" editable>\r\n                    <columns>\r\n                        <column title=\"Data\" [template]=\"dataInicio\">\r\n                            <ng-template let-row=\"row\" #dataInicio>\r\n                                <span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data da inclusão\">\r\n                                    <i class=\"bi bi-calendar-plus\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_inicio)}}\r\n                                </span>\r\n                                <span *ngIf=\"row.data_fim\" class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data substituição\">\r\n                                    <i class=\"bi bi-calendar-x\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_fim)}}\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Documento Sei\" [template]=\"documento\">\r\n                            <ng-template let-row=\"row\" #documento>\r\n                                <span *ngIf=\"row.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.numero_processo, row.numero_documento)\">\r\n                                    <i [class]=\"'bi ' + (row.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                                    {{row.numero_processo?.length ? row.numero_processo : \"Não atribuído\"}}\r\n                                    <small *ngIf=\"row.numero_documento?.length\"><br>Sei nº {{row.numero_documento}}</small>\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Status\" [template]=\"vigente\">\r\n                            <ng-template let-row=\"row\" #vigente>\r\n                                <badge [color]=\"lookup.getColor(lookup.DOCUMENTO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.DOCUMENTO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.DOCUMENTO_STATUS, row.status)\"></badge>\r\n                                <span *ngIf=\"isVigente(row)\" class=\"badge rounded-pill bg-info text-dark\">\r\n                                    <i class=\"bi bi-clipboard-check\"></i>\r\n                                    Vigente\r\n                                </span>\r\n                                <div class=\"d-block\">\r\n                                    <span *ngFor=\"let assinatura of row.assinaturas\" class=\"badge rounded-pill bg-primary\">\r\n                                        <i class=\"bi bi-pen\"></i>\r\n                                        {{util.apelidoOuNome(assinatura.usuario)}}\r\n                                    </span>\r\n                                </div>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column type=\"options\" [dynamicButtons]=\"documentoDynamicButtons.bind(this)\"></column>\r\n                    </columns>\r\n                </grid//-->\r\n            </div>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n"],"sourceRoot":"webpack:///"}