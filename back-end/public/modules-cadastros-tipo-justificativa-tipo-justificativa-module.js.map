{"version":3,"sources":["./src/app/modules/cadastros/tipo-justificativa/tipo-justificativa-routing.module.ts","./src/app/modules/cadastros/tipo-justificativa/tipo-justificativa.module.ts","./src/app/modules/cadastros/tipo-justificativa/tipo-justificativa-form/tipo-justificativa-form.component.ts","./src/app/modules/cadastros/tipo-justificativa/tipo-justificativa-form/tipo-justificativa-form.component.html","./src/app/modules/cadastros/tipo-justificativa/tipo-justificativa-list/tipo-justificativa-list.component.ts","./src/app/modules/cadastros/tipo-justificativa/tipo-justificativa-list/tipo-justificativa-list.component.html"],"names":[],"mappings":"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","file":"modules-cadastros-tipo-justificativa-tipo-justificativa-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { TipoJustificativaFormComponent } from './tipo-justificativa-form/tipo-justificativa-form.component';\nimport { TipoJustificativaListComponent } from './tipo-justificativa-list/tipo-justificativa-list.component';\n\nconst routes: Routes = [\n  { path: '', component: TipoJustificativaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Justificativa\" } },\n  { path: 'new', component: TipoJustificativaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\n  { path: ':id/edit', component: TipoJustificativaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\n  { path: ':id/consult', component: TipoJustificativaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TipoJustificativaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TipoJustificativaRoutingModule } from './tipo-justificativa-routing.module';\nimport { TipoJustificativaFormComponent } from './tipo-justificativa-form/tipo-justificativa-form.component';\nimport { TipoJustificativaListComponent } from './tipo-justificativa-list/tipo-justificativa-list.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    TipoJustificativaFormComponent,\n    TipoJustificativaListComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    TipoJustificativaRoutingModule\n  ]\n})\nexport class TipoJustificativaModule { }\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { TipoJustificativaDaoService } from 'src/app/dao/tipo-justificativa-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { TipoJustificativa } from 'src/app/models/tipo-justificativa.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'app-entidade-form',\n  templateUrl: './tipo-justificativa-form.component.html',\n  styleUrls: ['./tipo-justificativa-form.component.scss']\n})\nexport class TipoJustificativaFormComponent extends PageFormBase<TipoJustificativa, TipoJustificativaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n\n  constructor(public injector: Injector) {\n    super(injector, TipoJustificativa, TipoJustificativaDaoService);\n    this.form = this.fh.FormBuilder({\n      nome: {default: \"\"},\n      data_inicio: {default: \"\"},\n      data_fim: {default: \"\"}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n\n    return result;\n  }\n\n  public loadData(entity: TipoJustificativa, form: FormGroup): void {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n  }\n\n  public initializeData(form: FormGroup): void {\n    form.patchValue(new TipoJustificativa());\n  }\n\n  public saveData(form: IIndexable): Promise<TipoJustificativa> {\n    return new Promise<TipoJustificativa>((resolve, reject) => {\n      const tipoJustificativa = this.util.fill(new TipoJustificativa(), this.entity!);\n      resolve(this.util.fillForm(tipoJustificativa, this.form!.value));\n    });\n  }\n\n  public titleEdit = (entity: TipoJustificativa): string => {\n    return \"Editando \" + (entity?.nome || \"\");\n  }\n}\n\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\n<editable-form [form]=\"form!\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\" ><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <div class=\"row\">\n        <input-text [size]=\"12\" label=\"Título\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\n    </div>   \n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { TipoJustificativaDaoService } from 'src/app/dao/tipo-justificativa-dao.service';\nimport { TipoJustificativa } from 'src/app/models/tipo-justificativa.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\n\n@Component({\n  selector: 'app-tipo-justificativa-list',\n  templateUrl: './tipo-justificativa-list.component.html',\n  styleUrls: ['./tipo-justificativa-list.component.scss']\n})\nexport class TipoJustificativaListComponent extends PageListBase<TipoJustificativa, TipoJustificativaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  constructor(public injector: Injector) {\n    super(injector, TipoJustificativa, TipoJustificativaDaoService);\n    /* Inicializações */\n    this.title = \"Tipos de \" + this.lex.noun(\"Justificativa\",true);\n    this.code=\"MOD_TIPO_JUST\";\n    this.filter = this.fh.FormBuilder({\n      nome: {default: \"\"}\n    });\n    // Testa se o usuário possui permissão para exibir dados do tipo de justificativa\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_JUST_CONS\")) {\n      this.options.push({\n        icon: \"bi bi-info-circle\",\n        label: \"Informações\",\n        onClick: this.consult.bind(this)\n      });\n    }\n    // Testa se o usuário possui permissão para excluir o tipo de justificativa\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_JUST_EXCL\")) {\n      this.options.push({\n        icon: \"bi bi-trash\",\n        label: \"Excluir\",\n        onClick: this.delete.bind(this)\n      });\n    }\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    if(form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\n    }\n\n    return result;\n  }\n}\n\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_JUST_INCL')\"\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_JUST_EDT')\">\n    <toolbar></toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Nome do tipo da justificativa\" controlName=\"nome\"\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome do tipo da Justificativa\"></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Descrição\" field=\"nome\"></column>\n        <column type=\"options\" [onEdit]=\"edit\" [onDelete]=\"delete\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n"],"sourceRoot":"webpack:///"}