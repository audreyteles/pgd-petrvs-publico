{"version":3,"sources":["./src/app/modules/cadastros/plano/plano-list/plano-list.component.ts","./src/app/modules/cadastros/plano/plano-list/plano-list.component.html","./src/app/models/plano.model.ts","./src/app/dao/tipo-modalidade-dao.service.ts","./src/app/dao/programa-dao.service.ts","./src/app/dao/documento-dao-service.ts","./src/app/models/documento.model.ts"],"names":[],"mappings":"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","file":"default~listeners-listeners-module~modules-cadastros-plano-plano-module.d9e71ae09f5cf0177a74.js","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { PlanoDaoService } from 'src/app/dao/plano-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { Plano } from 'src/app/models/plano.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-list',\r\n  templateUrl: './plano-list.component.html',\r\n  styleUrls: ['./plano-list.component.scss']\r\n})\r\nexport class PlanoListComponent extends PageListBase<Plano, PlanoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public static selectRoute?: FullRoute = {route: [\"cadastros\", \"plano\"]};\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Plano, PlanoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun(\"Plano de trabalho\",true);\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      usuario: {default: \"\"},\r\n    });\r\n    this.join = [\"unidade\", \"usuario\", \"programa\", \"documento\", \"tipo_modalidade\"];\r\n    // Testa se o usuário possui permissão para exibir dados do plano de trabalho\r\n    if (this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o plano de trabalho\r\n    if (this.auth.hasPermissionTo(\"MOD_PTR_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n    /*this.options.push({\r\n      label: \"Termo adesão\",\r\n      icon: \"bi bi-info-circle\",\r\n      onClick: ((row: Plano) => this.go.navigate({route: ['cadastros', 'plano', 'termo']}, {metadata: {plano: row, processo: {id_processo: 1, numero_processo: \"1\", id_documento: 1, numero_documento: \"1\"}}, modalClose: (modalResult) => console.log(modalResult?.conteudo)})).bind(this)\r\n    });*/\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.usuario?.length) {\r\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.documento.id_processo, row.documento.id_documento);\r\n  }\r\n\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PTR_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_PTR_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Usuário\" controlName=\"usuario\"\r\n                [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Usuário\" [template]=\"columnUsuario\">\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Vigência\" [template]=\"columnInicioVigencia\">\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio_vigencia)+\" até \"+dao!.getDateFormatted(row.data_fim_vigencia)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Termo de adesão\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\r\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column *ngIf=\"!selectable\" type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Base } from './base.model';\r\nimport { TipoModalidade } from './tipo-modalidade.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\nimport { Programa } from './programa.model';\r\nimport { Documento } from './documento.model';\r\nimport { PlanoAtividade } from './plano-atividade.model';\r\nimport { Demanda } from './demanda.model';\r\n\r\nexport type PlanoMetadados = {\r\n  concluido: boolean\r\n}\r\n\r\nexport class Plano extends Base {\r\n    public tipo_modalidade?: TipoModalidade;\r\n    public unidade?: Unidade;\r\n    public usuario?: Usuario;\r\n    public programa?: Programa;\r\n    public documento?: Documento;\r\n\r\n    public carga_horaria: number = 0; //Carga horária diária do usuário\r\n    public tempo_total: number = 0; //Horas úteis de trabalho no período de data_inicio_vigencia à data_fim_vigencia considerando carga_horaria, feriados, fins de semana\r\n    public tempo_proporcional: number = 0; //tempo_total menos os afastamentos\r\n    public data_inicio_vigencia: Date = new Date(); //Inicio do plano\r\n    public data_fim_vigencia: Date = new Date(); //Fim do plano\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n    public ganho_produtividade: number = 0; /* Ganho de produtividade */\r\n    public programa_id: string = \"\";\r\n    public usuario_id: string = \"\";\r\n    public unidade_id: string = \"\";\r\n    public metadados: PlanoMetadados | undefined = undefined; /* Campo virtual contendo informações calculadas pelo servidor */\r\n    public tipo_modalidade_id: string = \"\";\r\n    public documento_id: string | null = null;\r\n    public atividades: PlanoAtividade[] = []; /* Entregas da demanda */\r\n    public documentos: Documento[] = []; /* Termos de adesão */\r\n    public demandas: Demanda[] = []; /* Demandas vinculadas ao Plano */\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { TipoModalidade } from '../models/tipo-modalidade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoModalidadeDaoService extends DaoBaseService<TipoModalidade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"TipoModalidade\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n}\r\n\r\n","import { Base, IIndexable } from '../models/base.model';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Programa } from '../models/programa.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgramaDaoService extends DaoBaseService<Programa> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Programa\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n\r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Documento } from '../models/documento.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentoDaoService extends DaoBaseService<Documento> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Documento\", injector);\r\n  }\r\n\r\n  public documentoPendenteSei(id_documento: number): Promise<Documento | undefined>  {\r\n    return new Promise<Documento | undefined>((resolve, reject) => {\r\n      this.server.post('api/' + this.collection + '/pendente-sei', {id_documento}).subscribe(response => {\r\n        resolve(response?.data ? this.getRow(response?.data) : undefined);\r\n      }, error => reject(error));\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\nimport { Entidade } from './entidade.model';\r\nimport { Plano } from './plano.model';\r\nimport { TipoDocumento } from './tipo-documento.model';\r\nimport { TipoProcesso } from './tipo-processo.model';\r\n\r\nexport type DocumentoEspecie = \"TERMO_ADESAO\" | \"SEI\";\r\nexport type DocumentoStatus = \"GERADO\" | \"AGUARDANDO_SEI\";\r\n\r\nexport class Documento extends Base {\r\n\r\n    public static STATUS_GERADO = \"GERADO\"; \r\n    public static STATUS_AGUARDANDO_SEI = \"GERADO\"; \r\n\r\n    public entidade?: Entidade;\r\n    public plano?: Plano;\r\n    public tipo_documento?: TipoDocumento;\r\n    public tipo_processo?: TipoProcesso;\r\n\r\n    public especie: DocumentoEspecie = \"TERMO_ADESAO\"; /* Especificação da espécie do documento (interno do sistema) */\r\n    public conteudo: string | null = null; /* \"Conteúdo do arquivo */\r\n    public assinatura: any = null; /* Dados da assinatura, se nulo não está assinado */\r\n    public metadados: any = null; /* Metadados */\r\n    public id_processo: number | null = null; /* ID do processo de entrega, caso seja Sei será o ID do procedimento */\r\n    public numero_processo: string | null = null; /* Número do processo de entrega, com a formatação de origem */\r\n    public id_documento: number | null = null; /* ID da entrega, caso seja o Sei será o ID_Documento */\r\n    public numero_documento: string | null = null; /* Numero do documento de entrega, caso seja o Sei é o numero Sei */\r\n    public titulo_documento: string | null = null; /* Numeração do tipo de documento no sistema integrado */\r\n    public entidade_id: string | null = null; /* Entidade */\r\n    public plano_id: string | null = null; /* Plano */\r\n    public tipo_documento_id: string | null = null; /* Tipo documento */\r\n    public tipo_processo_id: string | null = null; /* Tipo processo */\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n    public status: DocumentoStatus = \"GERADO\";\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n}"],"sourceRoot":"webpack:///"}