{"version":3,"sources":["./src/app/modules/configuracoes/perfil/perfil-routing.module.ts","./src/app/models/capacidade.model.ts","./src/app/dao/query-options.ts","./src/app/modules/configuracoes/perfil/perfil-form/perfil-form.component.ts","./src/app/modules/configuracoes/perfil/perfil-form/perfil-form.component.html","./src/app/modules/configuracoes/perfil/perfil-list/perfil-list.component.ts","./src/app/modules/configuracoes/perfil/perfil-list/perfil-list.component.html","./src/app/modules/configuracoes/perfil/perfil.module.ts","./src/app/models/perfil.model.ts"],"names":[],"mappings":"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","file":"modules-configuracoes-perfil-perfil-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PerfilFormComponent } from './perfil-form/perfil-form.component';\r\nimport { PerfilListComponent } from './perfil-list/perfil-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PerfilListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Perfils\" } },\r\n  { path: 'new', component: PerfilFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Perfil\", modal: true } },\r\n  { path: ':id/edit', component: PerfilFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Perfil\", modal: true } },\r\n  { path: ':perfil_id/capacidade', loadChildren: () => import('./capacidade/capacidade.module').then(m => m.CapacidadeModule), canActivate: [AuthGuard] },\r\n  { path: ':id/consult', component: PerfilFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Perfil\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PerfilRoutingModule { }\r\n","import { Base } from './base.model';\r\nimport { Perfil } from './perfil.model';\r\nimport { TipoCapacidade } from './tipo-capacidade.model';\r\n\r\nexport class Capacidade extends Base {\r\n    public perfil?: Perfil;\r\n    public tipo_capacidade?: TipoCapacidade;\r\n\r\n    public perfil_id: string | null = null; /* ID do Perfil */\r\n    public tipo_capacidade_id: string = \"\"; /* ID do Tipo_capacidade  */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { QueryOrderBy } from \"./dao-base.service\";\r\n\r\nexport class QueryOptions {\r\n    public where?: any;\r\n    public orderBy?: QueryOrderBy[];\r\n    public limit?: number;\r\n    public join?: string[];\r\n    \r\n    constructor(data?: any) {\r\n        if(data) Object.assign(this, data);\r\n    }\r\n}","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { PerfilDaoService } from 'src/app/dao/perfil-dao.service';\r\nimport { QueryOptions } from 'src/app/dao/query-options';\r\nimport { TipoCapacidadeDaoService } from 'src/app/dao/tipo-capacidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Capacidade } from 'src/app/models/capacidade.model';\r\nimport { Perfil } from 'src/app/models/perfil.model';\r\nimport { TipoCapacidade } from 'src/app/models/tipo-capacidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'app-perfil-form',\r\n  templateUrl: './perfil-form.component.html',\r\n  styleUrls: ['./perfil-form.component.scss']\r\n})\r\nexport class PerfilFormComponent extends PageFormBase<Perfil, PerfilDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public gridPai?: GridComponent;  \r\n\r\n  public tiposCapacidades: TipoCapacidade[] = [];\r\n  public tipoCapacidadeDao: TipoCapacidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Perfil, PerfilDaoService);\r\n    this.tipoCapacidadeDao = injector.get<TipoCapacidadeDaoService>(TipoCapacidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      descricao: {default: \"\"},\r\n      nivel: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    this.join = [\"capacidades.tipo_capacidade\"];\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome', 'descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public async loadData(entity: Perfil, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.entity = entity;\r\n    var queryOptions: QueryOptions = new QueryOptions({\r\n      where: [[\"grupo_id\", \"==\", null]],\r\n      orderBy: [[\"codigo\", \"asc\"]],\r\n      join: [\"grupos\"]\r\n    });\r\n    this.tiposCapacidades = await this.tipoCapacidadeDao.query(queryOptions).asPromise();\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    for(let tipoCapacidade of this.tiposCapacidades) {\r\n      const capacidade = entity.capacidades?.find(x => (x.tipo_capacidade?.codigo == tipoCapacidade.codigo));\r\n      tipoCapacidade._metadata = Object.assign(tipoCapacidade._metadata || {}, {habilitado: !!capacidade});\r\n      if (capacidade) console.log(capacidade.tipo_capacidade?.codigo)\r\n      for (let tipoCapacidadeFilha of tipoCapacidade.grupos) {\r\n        const capacidadeFilha = entity.capacidades?.find(x => (x.tipo_capacidade?.codigo == tipoCapacidadeFilha.codigo));\r\n        tipoCapacidadeFilha._metadata = Object.assign(tipoCapacidadeFilha._metadata || {}, {habilitado: !!capacidadeFilha});\r\n      }\r\n    }\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public onHabilitadoChange(row: TipoCapacidade, habilitado: boolean) {\r\n    let capacidade = this.entity!.capacidades?.find(x => x.tipo_capacidade_id == row.id);\r\n    if(habilitado) {\r\n      if(capacidade && capacidade._status == \"DELETE\") capacidade._status = undefined;\r\n      if(!capacidade) this.entity!.capacidades!.push(new Capacidade({\r\n        tipo_capacidade_id: row.id,\r\n        perfil_id: this.entity!.id,\r\n        _status: \"ADD\"\r\n      }));\r\n    } else {\r\n      if(capacidade && !capacidade._status) capacidade._status = \"DELETE\";\r\n      if(capacidade && capacidade._status == \"ADD\") this.entity!.capacidades!.splice(this.entity!.capacidades!.findIndex(x => x.tipo_capacidade_id == row.id), 1);\r\n      for(let grupo of row.grupos) {\r\n        grupo._metadata = Object.assign(grupo._metadata || {}, {habilitado: false});\r\n        let subCapacidade = this.entity!.capacidades?.find(x => x.tipo_capacidade_id == grupo.id);\r\n        if(subCapacidade && !subCapacidade._status) subCapacidade._status = \"DELETE\";\r\n        if(subCapacidade && subCapacidade._status == \"ADD\") this.entity!.capacidades!.splice(this.entity!.capacidades!.findIndex(x => x.tipo_capacidade_id == grupo.id), 1);\r\n      }\r\n    }\r\n    this.refreshCapacidadesHabilitadas()\r\n  }\r\n  public async refreshCapacidadesHabilitadas() {\r\n    let formValue = Object.assign({}, this.form!.value);\r\n    formValue = this.util.fillForm(formValue, this.entity);\r\n    this.form!.patchValue(formValue);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onHabilitadoChangeFilha(row: TipoCapacidade, habilitado: boolean) {\r\n    let capacidade = this.entity!.capacidades?.find(x => x.tipo_capacidade_id == row.id);\r\n    let pai = this.tiposCapacidades.find(x => x.id == row.grupo_id);\r\n    if(habilitado) {\r\n      if(!pai!._metadata.habilitado) {\r\n        pai!._metadata = Object.assign(pai!._metadata || {}, {habilitado: true});\r\n        let capacidadePai = this.entity!.capacidades?.find(x => x.tipo_capacidade_id == pai!.id);\r\n        if(capacidadePai && capacidadePai._status == \"DELETE\") capacidadePai._status = undefined;\r\n        if(!capacidadePai) this.entity!.capacidades!.push(new Capacidade({\r\n          tipo_capacidade_id: pai!.id,\r\n          perfil_id: this.entity!.id,\r\n          _status: \"ADD\"\r\n        }));\r\n      }\r\n      if(capacidade && capacidade._status == \"DELETE\") capacidade._status = undefined;\r\n      if(!capacidade) this.entity!.capacidades!.push(new Capacidade({\r\n        tipo_capacidade_id: row.id,\r\n        perfil_id: this.entity!.id,\r\n        _status: \"ADD\"\r\n      }));\r\n    } else {\r\n      if(capacidade && !capacidade._status) capacidade._status = \"DELETE\";\r\n      if(capacidade && capacidade._status == \"ADD\") this.entity!.capacidades!.splice(this.entity!.capacidades!.findIndex(x => x.tipo_capacidade_id == row.id), 1);\r\n    }\r\n    this.refreshCapacidadesHabilitadas();\r\n  }\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new Perfil());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<Perfil> {\r\n    return new Promise<Perfil>((resolve, reject) => {\r\n      let perfil: Perfil = this.util.fill(new Perfil(), this.entity!);\r\n      perfil = this.util.fillForm(perfil, this.form!.value);\r\n      perfil.capacidades = perfil.capacidades!.filter(x => [\"ADD\", \"DELETE\"].includes(x._status || \"\"));\r\n      resolve(perfil);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: Perfil): string => {\r\n    return \"Editando \" + this.lex.translate(\"Perfil\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <tabs display right>\r\n        <tab key=\"PRINCIPAL\" label=\"Principal\">\r\n            <div class=\"row\">\r\n                <input-text [size]=\"10\" label=\"Nome\" controlName=\"nome\"></input-text>\r\n                <input-text numbers [size]=\"2\" label=\"Nível\" controlName=\"nivel\"></input-text>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-text [size]=\"12\" label=\"Descrição\" controlName=\"descricao\"></input-text>\r\n            </div>\r\n        </tab>\r\n        <tab key=\"CAPACIDADES\" *ngIf=\"auth.hasPermissionTo('MOD_TIPO_CAP_CONS')\" [label]=\"lex.noun('Capacidade',true)\">\r\n            <grid #gridPai [items]=\"tiposCapacidades\" [scrollable]=\"true\">\r\n                <columns>\r\n                    <column type=\"expand\" icon=\"bi bi-shield-lock\" [align]=\"'center'\" [hint]=\"'Lista das capacidades com status módulo'\" [template]=\"columnCapacidades\" [expandTemplate]=\"columnExpandedCapacidades\" [minWidth]=\"50\">\r\n                        <ng-template let-row=\"row\" #columnCapacidades>\r\n                            <span *ngIf=\"row.grupos?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-grid\"></i> {{row.grupos?.length}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #columnExpandedCapacidades style=\"justify-content: inherit;\">\r\n                            <table class=\"table table-hover\" >\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let row of row.grupos\">\r\n                                        <td>\r\n                                            <div style=\"width: 220px;\">\r\n                                            <span class=\"text-wrap text-center\">\r\n                                                <small class=\"micro-text fw-light\"><i class=\"bi bi-key\"></i>  {{ row.codigo }}</small>\r\n                                                <span class=\"badge bg-light text-dark\">\r\n                                                </span>\r\n                                            </span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div style=\"width: 450px;\">\r\n                                                <span class=\"badge bg-light text-dark text-wrap\">{{ row.descricao }}</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style=\"text-align: right;\">\r\n                                            <div style=\"width: 60px; margin-left: 40px;\">\r\n                                                <span class=\"text-align\">\r\n                                                    <input-switch scale=\"medium\" [size]=\"1\" class=\"text-align\" [size]=\"2\" #habilitado [disabled]=\"action == 'consult' ? 'true' : undefined\" [source]=\"row\" path=\"_metadata.habilitado\" (change)=\"onHabilitadoChangeFilha(row, habilitado.value)\" style=\"right: 10px;\"></input-switch>\r\n                                                </span>\r\n                                            </div> \r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </ng-template>\r\n                    </column> \r\n                    <column title=\"Código\" [template]=\"columnCodCapacidade\" orderBy = \"codigo\" [minWidth]=160 [maxWidth]=160>\r\n                        <ng-template let-row=\"row\" #columnCodCapacidade>                            \r\n                                <span class=\"text-wrap\"> \r\n                                    <strong class=\"grid-group-text\">{{row.codigo}}</strong>\r\n                                </span>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column [title]=\"lex.noun('Módulo/Capacidade')\" [template]=\"columnTipoCapacidade\" [minWidth]=\"600\">\r\n                        <ng-template let-row=\"row\" #columnTipoCapacidade>\r\n                            <span class=\"badge bg-light text-dark\"> {{row.descricao}}</span>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Habilitado\" [template]=\"columnSelecionado\">\r\n                        <ng-template let-row=\"row\" #columnSelecionado>\r\n                            <input-switch style=\"width: 45px; margin-right: 70px;\" #habilitado [disabled]=\"action == 'consult' ? 'true' : undefined\" [source]=\"row\" path=\"_metadata.habilitado\" (change)=\"onHabilitadoChange(row, habilitado.value)\"></input-switch>\r\n                        </ng-template>\r\n                    </column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PerfilDaoService } from 'src/app/dao/perfil-dao.service';\r\nimport { Perfil } from 'src/app/models/perfil.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-perfil-list',\r\n  templateUrl: './perfil-list.component.html',\r\n  styleUrls: ['./perfil-list.component.scss']\r\n})\r\nexport class PerfilListComponent extends PageListBase<Perfil, PerfilDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public options: ToolbarButton[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Perfil, PerfilDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Perfis\");\r\n    this.code = \"MOD_CFG_PERFS\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"}\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados do perfil\r\n    if (this.auth.hasPermissionTo(\"MOD_PERF_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o perfil\r\n    if (this.auth.hasPermissionTo(\"MOD_PERF_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [add]=\"add\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PERF_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_PERF_EDT')\">\r\n    <toolbar></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"'Nome ' + lex.translate('Perfil')\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome...\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Nome\" field=\"nome\"></column>\r\n        <column title=\"Descrição\" field=\"descricao\"></column>\r\n        <column title=\"Nível de acesso\" [template]=\"columnNivel\">\r\n            <ng-template let-row=\"row\" #columnNivel><span>{{row.nivel}}</span></ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PerfilRoutingModule } from './perfil-routing.module';\r\nimport { PerfilFormComponent } from './perfil-form/perfil-form.component';\r\nimport { PerfilListComponent } from './perfil-list/perfil-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerfilFormComponent,\r\n    PerfilListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PerfilRoutingModule\r\n  ]\r\n})\r\nexport class PerfilModule { }\r\n","import { Base } from './base.model';\r\nimport { Capacidade } from './capacidade.model';\r\n\r\nexport class Perfil extends Base {\r\n    public capacidades?: Capacidade[]; /* Objecto com lista de capacidades */\r\n\r\n    public nivel: number = 0; /* Nível de permissões */\r\n    public nome: string = \"\"; /* Nome do perfil */\r\n    public descricao: string = \"\"; /* Descrição sobre o perfil */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}"],"sourceRoot":"webpack:///"}