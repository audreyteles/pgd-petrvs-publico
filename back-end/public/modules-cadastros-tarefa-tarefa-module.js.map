{"version":3,"sources":["./src/app/modules/cadastros/tarefa/tarefa-list/tarefa-list.component.ts","./src/app/modules/cadastros/tarefa/tarefa-list/tarefa-list.component.html","./src/app/models/tarefa.model.ts","./src/app/modules/cadastros/tarefa/tarefa.module.ts","./src/app/modules/cadastros/tarefa/tarefa-form/tarefa-form.component.ts","./src/app/modules/cadastros/tarefa/tarefa-form/tarefa-form.component.html","./src/app/modules/cadastros/tarefa/tarefa-routing.module.ts"],"names":[],"mappings":"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","file":"modules-cadastros-tarefa-tarefa-module.js","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TarefaDaoService } from 'src/app/dao/tarefa-dao.service';\r\nimport { Tarefa } from 'src/app/models/tarefa.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\r\n\r\n@Component({\r\n  selector: 'app-tarefa-list',\r\n  templateUrl: './tarefa-list.component.html',\r\n  styleUrls: ['./tarefa-list.component.scss']\r\n})\r\nexport class TarefaListComponent extends PageListBase<Tarefa, TarefaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Tarefa, TarefaDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun(\"Tarefa\", true);\r\n    this.code=\"MOD_TRF\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"}\r\n     });\r\n     this.join = [\"unidade\", \"entidade\"];\r\n    // Testa se o usuário possui permissão para exibir dados da tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir a tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TRF_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TRF_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"lex.noun('Tarefa')\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome ...\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column title=\"Tempo estimado (h)\" field=\"tempo_estimado\"></column>\r\n        <column title=\"Documental?\" type=\"select\" field=\"documental\" [items]=\"lookup.SIMNAO\"></column>\r\n        <column title=\"Entidade/Unidade\" [template]=\"columnEntidadeUnidade\">\r\n            <ng-template let-row=\"row\" #columnEntidadeUnidade>\r\n                <span *ngIf=\"row.entidade\" class=\"badge bg-light text-dark\">\r\n                    <i class=\"fas fa-university\"></i>\r\n                    {{row.entidade.sigla}}\r\n                </span>\r\n                <span *ngIf=\"row.unidade\" class=\"badge bg-light text-dark\">\r\n                    <i class=\"bi bi-briefcase\"></i>\r\n                    {{row.unidade.sigla}}\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Base } from './base.model';\r\nimport { Entidade } from './entidade.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport class Tarefa extends Base {\r\n    public unidade?: Unidade;\r\n    public entidade?: Entidade;\r\n\r\n    public nome: string = \"\"; /* Nome da tarefa */\r\n    public tempo_estimado: number = 0; /* Tempo estimado para a execução da tarefa (Horas decimais) */\r\n    public documental: boolean = false; /* Se a entrega requer obrigatoriamente um documento */\r\n    public comentario_predefinido: string | null = null; /* Comentário predefinida para a tarefa */\r\n    public unidade_id: string | null = null; /* Unidade vinculada a tarefa */\r\n    public entidade_id: string | null = null; /* Entidade vinculada a tarefa */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TarefaRoutingModule } from './tarefa-routing.module';\r\nimport { TarefaFormComponent } from './tarefa-form/tarefa-form.component';\r\nimport { TarefaListComponent } from './tarefa-list/tarefa-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TarefaFormComponent,\r\n    TarefaListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TarefaRoutingModule\r\n  ]\r\n})\r\nexport class TarefaModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { EntidadeDaoService } from 'src/app/dao/entidade-dao.service';\r\nimport { TarefaDaoService } from 'src/app/dao/tarefa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Tarefa } from 'src/app/models/tarefa.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'app-tarefa-form',\r\n  templateUrl: './tarefa-form.component.html',\r\n  styleUrls: ['./tarefa-form.component.scss']\r\n})\r\nexport class TarefaFormComponent extends PageFormBase<Tarefa, TarefaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public entidadeDao: EntidadeDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Tarefa, TarefaDaoService);\r\n    this.entidadeDao = injector.get<EntidadeDaoService>(EntidadeDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.modalWidth = 1100;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      tempo_estimado: {default: 0},\r\n      documental: {default: false},\r\n      comentario_predefinido: {default: \"\"},\r\n      unidade_id: {default: null},\r\n      entidade_id: {default: null}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: Tarefa, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new Tarefa());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<Tarefa> {\r\n    return new Promise<Tarefa>((resolve, reject) => {\r\n      const tarefa = this.util.fill(new Tarefa(), this.entity!);\r\n      resolve(this.util.fillForm(tarefa, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: Tarefa): string => {\r\n    return \"Editando \"+ (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div class=\"row\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"9\" label=\"Nome\" icon=\"bi bi-upc\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\r\n            <input-timer onlyHours label=\"Tempo estimado\" [size]=\"2\" controlName=\"tempo_estimado\" [control]=\"form!.controls.tempo_estimado\" labelInfo=\"Tempo estimado para execução\"></input-timer>\r\n            <input-switch label=\"Documental?\" [size]=\"1\" controlName=\"documental\" [control]=\"form!.controls.documental\" labelInfo=\"\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search [size]=\"6\" controlName=\"entidade_id\" [dao]=\"entidadeDao\"></input-search>\r\n            <input-search [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-textarea [size]=\"12\" [rows]=\"3\" label=\"Comentário automático\" icon=\"bi bi-textarea-t\" controlName=\"comentario_predefinido\" [control]=\"form!.controls.comentario_predefinido\"></input-textarea>\r\n        </div>\r\n    </div>\r\n</editable-form>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TarefaFormComponent } from './tarefa-form/tarefa-form.component';\r\nimport { TarefaListComponent } from './tarefa-list/tarefa-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TarefaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tarefa\" } },\r\n  { path: 'new', component: TarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: TarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: TarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TarefaRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}