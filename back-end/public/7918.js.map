{"version":3,"file":"7918.js","mappings":"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","sources":["./src/app/services/integrante.service.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { LookupItem, LookupService } from './lookup.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IntegranteConsolidado } from '../models/unidade-integrante.model';\r\nimport { IntegranteAtribuicao } from '../models/base.model';\r\nimport { UtilService } from './util.service';\r\nimport { DialogService } from './dialog.service';\r\nimport { LexicalService } from './lexical.service';\r\nimport { Unidade } from '../models/unidade.model';\r\nimport { Usuario } from '../models/usuario.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IntegranteService {\r\n\r\n  public lookup: LookupService;\r\n  public lex: LexicalService;\r\n  public util: UtilService;\r\n  public dialog: DialogService;\r\n\r\n  constructor(public injector: Injector) {\r\n    /* Injections */\r\n    this.lookup = this.injector.get<LookupService>(LookupService);\r\n    this.lex = this.injector.get<LexicalService>(LexicalService);\r\n    this.dialog = this.injector.get<DialogService>(DialogService);\r\n    this.util = this.injector.get<UtilService>(UtilService);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param atribuicoes \r\n   * @returns \r\n   */\r\n  public converterAtribuicoes(atribuicoes: string[]): LookupItem[] {\r\n    return atribuicoes.map((x: string) => Object.assign({}, {\r\n      key: x,\r\n      value: this.lookup.getValue(this.lookup.UNIDADE_INTEGRANTE_TIPO, x),\r\n      icon: this.lookup.getIcon(this.lookup.UNIDADE_INTEGRANTE_TIPO, x),\r\n      color: this.lookup.getColor(this.lookup.UNIDADE_INTEGRANTE_TIPO, x)\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * Verifica se haverá alteração na atribuição de GESTOR para o usuário: nenhuma alteração, perda da gerência, ganho de uma gerência ou troca de gerência de uma unidade por outra. \r\n   * Retorna um array com as seguintes informações, nessa ordem: [tipo de alteração, índice do grid relativo à antiga gerência, mensagem para a caixa de diálogo, booleano indicando se necessitará alteração na lotação do usuário]\r\n   * @param novasAtribuicoes  Array com o novo conjunto de atribuições provenientes da edição do formulário\r\n   * @param row               Dados originais do item unidade/atribuições que está sendo editado\r\n   * @param itensGrid         Array com todos os itens originais de unidade/atribuições vinculados ao usuário\r\n   * @param nomeOuSigla       Nome do usuario, ou Sigla da unidade, a que estão vinculados os itens do grid\r\n   */\r\n  public haAlteracaoGestor(novasAtribuicoes: IntegranteAtribuicao[], row: IntegranteConsolidado, itensGrid: IntegranteConsolidado[], nomeOuSigla: string): [string, number, string, boolean] {\r\n    let msg = \"\";\r\n    let perda = this.util.array_diff(row.atribuicoes, novasAtribuicoes).includes('GESTOR');\r\n    let ganho = this.util.array_diff(novasAtribuicoes, row.atribuicoes).includes('GESTOR');\r\n    if (!perda && !ganho) return ['nenhuma', -1, \"\", false];\r\n    let meio = this.lookup.getValue(this.lookup.UNIDADE_INTEGRANTE_TIPO, \"GESTOR\") + \" \" + this.lex.translate(\"da Unidade\") + \" \";\r\n    if (perda) {\r\n      msg = nomeOuSigla.toUpperCase() + \" deixará de ser \" + meio + row.unidade_sigla?.toUpperCase() + \".\";\r\n      return ['perda', -1, msg, false];\r\n    }\r\n    let ehLotadoNaNovaGerencia = row.atribuicoes.includes(\"LOTADO\");\r\n    msg = nomeOuSigla.toUpperCase() + \" passará a ser \" + meio + row.unidade_sigla?.toUpperCase();\r\n    let itemAntigaGerencia = itensGrid.find(i => i.atribuicoes.includes('GESTOR'));\r\n    let indiceItemLotacao = itensGrid.findIndex((item, index, obj) => item.atribuicoes.includes('LOTADO'));\r\n    msg = itemAntigaGerencia?.id.length ? msg + \" e deixará de ser \" + meio + itemAntigaGerencia.unidade_sigla + \". \" : msg + \". \";\r\n    if (!ehLotadoNaNovaGerencia && indiceItemLotacao >= 0) msg += \"Por consequência, sua lotação será alterada de \" + itensGrid[indiceItemLotacao].unidade_sigla?.toUpperCase() + \" para \" + row.unidade_sigla?.toUpperCase() + \".\";\r\n    return itemAntigaGerencia?.id.length ? ['troca', itensGrid.findIndex(x => x.id == itemAntigaGerencia?.id), msg, true] : ['ganho', -1, msg, !ehLotadoNaNovaGerencia];\r\n  }\r\n\r\n  /**\r\n * Verifica se haverá alteração na GERÊNCIA da unidade: nenhuma alteração, perda do gestor, ganho de um gestor ou troca de gestor de um usuário para outro. \r\n * Retorna um array com as seguintes informações, nessa ordem: [tipo de alteração, índice do grid relativo ao antigo gestor, mensagem para a caixa de diálogo, booleano indicando se necessitará alteração na lotação do usuário]\r\n * @param novasAtribuicoes  Array com o novo conjunto de atribuições provenientes da edição do formulário\r\n * @param row               Dados originais do item usuário/atribuições que está sendo editado\r\n * @param itensGrid         Array com todos os itens originais de usuário/atribuições vinculados à unidade\r\n * @param nomeOuSigla       Nome do usuario, ou Sigla da unidade, a que estão vinculados os itens do grid\r\n */\r\n  public haAlteracaoGerencia(novasAtribuicoes: IntegranteAtribuicao[], row: IntegranteConsolidado, itensGrid: IntegranteConsolidado[], nomeOuSigla: string): [string, number, string, boolean] {\r\n    // TODO: alterar no back-und o método SAVEINTEGRANTE para se comportar corretamente independentemente da ordem de execução LOTADO/GESTOR ou GESTOR/LOTADO\r\n    // TODO: no front-end, ao editar um integrante, bloquear o input-search de USUÁRIO\r\n    let msg = \"\";\r\n    //let novasAtribuicoes: IntegranteAtribuicao[] = (form.controls.atribuicoes.value as LookupItem[]).map(x => x.key);\r\n    let perda = this.util.array_diff(row.atribuicoes, novasAtribuicoes).includes('GESTOR');\r\n    let ganho = this.util.array_diff(novasAtribuicoes, row.atribuicoes).includes('GESTOR');\r\n    if (!perda && !ganho) return ['nenhuma', -1, \"\", false];\r\n    let meio = this.lookup.getValue(this.lookup.UNIDADE_INTEGRANTE_TIPO, \"GESTOR\") + \" \" + this.lex.translate(\"da Unidade\") + \" \";\r\n    if (perda) {\r\n      msg = row.usuario_nome?.toUpperCase() + \" deixará de ser \" + meio + nomeOuSigla.toUpperCase() + \".\";\r\n      return ['perda', -1, msg, false];\r\n    }\r\n    let ehLotadoNestaUnidade = row.atribuicoes.includes(\"LOTADO\");\r\n    msg = row.usuario_nome?.toUpperCase() + \" passará a ser \" + meio + nomeOuSigla.toUpperCase();\r\n    let itemAntigoGestor = itensGrid.find(i => i.atribuicoes.includes('GESTOR'));\r\n    msg = (itemAntigoGestor?.id.length ? msg + \" em substituição a \" + itemAntigoGestor.usuario_nome?.toUpperCase() : msg) + \". \";\r\n    let indiceItemLotacao = itensGrid.findIndex((item, index, obj) => item.atribuicoes.includes('LOTADO'));\r\n    if (!ehLotadoNestaUnidade && indiceItemLotacao >= 0) msg += \"Como é lotado em outra unidade, a lotação de \" + row.usuario_nome?.toUpperCase() + \" será alterada para \" + this.lex.translate(\"a Unidade\") + \" - \" + nomeOuSigla.toUpperCase() + \".\";\r\n    return itemAntigoGestor?.id.length ? ['troca', itensGrid.findIndex(x => x.id == itemAntigoGestor?.id), msg, true] : ['ganho', -1, msg, !ehLotadoNestaUnidade];\r\n  }\r\n\r\n  /**\r\n   * Retorna um array com as seguintes informações, nessa ordem: \r\n   * [booleano indicando se haverá ou não alteração de lotação do servidor, índice do grid relativo à lotação anterior, mensagem para a caixa de diálogo, mensagem para a caixa de alerta].\r\n   * @param form              Formulário com novas informações, provenientes da edição/inclusão\r\n   * @param row               Dados originais do vínculo que está sendo editado/incluído\r\n   * @param itensGrid         Array com todos os vínculos originais\r\n   * @param nomeOuSigla       Identificação do objeto (Usuário ou Unidade) ao qual estão vinculados os itens do grid\r\n   */\r\n  public haAlteracaoLotacao(form: FormGroup, row: IntegranteConsolidado, itensGrid: IntegranteConsolidado[], nomeOuSigla: string): [boolean, number, string, string] {\r\n    let novasAtribuicoes: IntegranteAtribuicao[] = (form!.controls.atribuicoes.value as LookupItem[]).map(x => x.key)\r\n    let indiceItemLotacao = itensGrid.findIndex((item, index, obj) => item.atribuicoes.includes('LOTADO'));\r\n    if (!novasAtribuicoes.includes('LOTADO') || indiceItemLotacao == -1) return [false, -1, \"\", \"\"];\r\n    let msgFormUsuario = this.lex.translate(\"A lotação\") + \" de \" + nomeOuSigla.toUpperCase() + \" passará de \" + itensGrid[indiceItemLotacao].unidade_sigla?.toUpperCase() + \" para \" + row.unidade_sigla?.toUpperCase() + \".\";\r\n    let msgConfirmacao = \"Não é possível alterar a lotação de \" + nomeOuSigla.toUpperCase() + \" porque é Chefe da sua atual unidade de lotação - \" + itensGrid[indiceItemLotacao].unidade_sigla?.toUpperCase() + \".\";\r\n    return (form.controls.unidade_id.value != itensGrid[indiceItemLotacao].unidade_id) ? [true, indiceItemLotacao, msgFormUsuario, msgConfirmacao] : [false, -1, \"\", \"\"];\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param atribuicoes \r\n   * @param atribuicao \r\n   * @returns \r\n   */\r\n  public inserirAtribuicao(atribuicoes: LookupItem[], atribuicao: IntegranteAtribuicao): LookupItem[] {\r\n    let novoItem = this.lookup.getLookup(this.lookup.UNIDADE_INTEGRANTE_TIPO, atribuicao);\r\n    if (novoItem) atribuicoes.push(novoItem);\r\n    return this.lookup.uniqueLookupItem(atribuicoes);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param items \r\n   * @returns \r\n   */\r\n  public ordenarIntegrantes(items: IntegranteConsolidado[]): IntegranteConsolidado[] {\r\n    items.sort((a, b) => {\r\n      let x = (a.usuario_nome || a.unidade_nome)?.toLowerCase();\r\n      let y = (b.usuario_nome || b.unidade_nome)?.toLowerCase();\r\n      return x! < y! ? -1 : (x! > y! ? 1 : 0)\r\n    });\r\n    items.forEach(item => { item.atribuicoes.sort(); });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param base \r\n   * @param unidade_id \r\n   * @param usuario_id \r\n   * @param atribuicoes \r\n   * @returns \r\n   */\r\n  public completarIntegrante(base: any, unidadeId: string, usuarioId: string, atribuicoes: IntegranteAtribuicao[]): IntegranteConsolidado {\r\n    let obj = { 'unidade_id': unidadeId, 'usuario_id': usuarioId, 'atribuicoes': atribuicoes };\r\n    return Object.assign({}, base, obj);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param atribuicao \r\n   * @param noPersist \r\n   * @returns \r\n   */\r\n  public ehPermitidoApagar(atribuicao: string): boolean {\r\n    let proibicoes = [\"LOTADO\"];\r\n    let permitidoApagar = !proibicoes.includes(atribuicao);\r\n    let msg = atribuicao == \"LOTADO\" ? \"A lotação do servidor não pode ser apagada. Para alterá-la, lote-o em outra Unidade.\" : \"\";\r\n    (async () => {\r\n      if (!permitidoApagar) await this.dialog.alert(\"NÃO PERMITIDO!\", msg);\r\n    })();\r\n    return permitidoApagar;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param dados \r\n   * @param atribuicoes \r\n   * @param entity \r\n   * @returns \r\n   */\r\n  public substituirItem(dados: any, atribuicoes: IntegranteAtribuicao[], entity: Usuario | Unidade): any[] { \r\n    let index = dados.itens.findIndex((x: { [x: string]: any; }) => x[\"id\"] == dados.id);\r\n    let entityUsuario = entity instanceof Usuario;\r\n    //let entityUsuario = entity.hasOwnProperty('cpf');\r\n    let base = entityUsuario ? { id: dados.id, unidade_sigla: dados.apelidoOuSigla, unidade_nome: dados.nome, unidade_codigo: dados.codigo } : { id: dados.id, usuario_apelido: dados.apelidoOuSigla, usuario_nome: dados.nome };   \r\n    dados.itens[index!] = this.completarIntegrante(base, entityUsuario ? dados.id : entity.id, entityUsuario ? entity.id : dados.id, atribuicoes); \r\n    return dados.itens;\r\n  }\r\n}\r\n"],"names":["LookupService","UtilService","DialogService","LexicalService","Usuario","IntegranteService","constructor","injector","lookup","get","lex","dialog","util","converterAtribuicoes","atribuicoes","map","x","Object","assign","key","value","getValue","UNIDADE_INTEGRANTE_TIPO","icon","getIcon","color","getColor","haAlteracaoGestor","novasAtribuicoes","row","itensGrid","nomeOuSigla","msg","perda","array_diff","includes","ganho","meio","translate","toUpperCase","unidade_sigla","ehLotadoNaNovaGerencia","itemAntigaGerencia","find","i","indiceItemLotacao","findIndex","item","index","obj","id","length","haAlteracaoGerencia","usuario_nome","ehLotadoNestaUnidade","itemAntigoGestor","haAlteracaoLotacao","form","controls","msgFormUsuario","msgConfirmacao","unidade_id","inserirAtribuicao","atribuicao","novoItem","getLookup","push","uniqueLookupItem","ordenarIntegrantes","items","sort","a","b","unidade_nome","toLowerCase","y","forEach","completarIntegrante","base","unidadeId","usuarioId","ehPermitidoApagar","_this","proibicoes","permitidoApagar","_asyncToGenerator","alert","substituirItem","dados","entity","itens","entityUsuario","apelidoOuSigla","nome","unidade_codigo","codigo","usuario_apelido","i0","ɵɵinject","Injector","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}