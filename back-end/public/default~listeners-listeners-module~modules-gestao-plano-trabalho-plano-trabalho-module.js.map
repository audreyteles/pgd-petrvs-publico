{"version":3,"sources":["./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho.service.ts","./src/app/models/plano-trabalho.model.ts"],"names":[],"mappings":"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","file":"default~listeners-listeners-module~modules-gestao-plano-trabalho-plano-trabalho-module.js","sourcesContent":["import { LookupItem } from '../../../../services/lookup.service';\r\nimport { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list',\r\n  templateUrl: './plano-trabalho-list.component.html',\r\n  styleUrls: ['./plano-trabalho-list.component.scss'] \r\n})\r\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public static selectRoute?: FullRoute = {route: [\"gestao\", \"plano-trabalho\"]};\r\n  public unidadeDao: UnidadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public planoService: PlanoTrabalhoService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    {key: \"VIGENTE\", value: \"Vigente\"},\r\n    {key: \"NAOVIGENTE\", value: \"Não vigente\"},\r\n    {key: \"INICIAM\", value: \"Iniciam\"},\r\n    {key: \"FINALIZAM\", value: \"Finalizam\"}\r\n  ];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.planoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Planos de Trabalho\");\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: {default: true},\r\n      usuario: {default: \"\"},\r\n      unidade_id: {default: null},\r\n      tipo_modalidade_id: {default: null},\r\n      data_filtro: {default: null},\r\n      data_filtro_inicio: {default: new Date()},\r\n      data_filtro_fim: {default: new Date()}\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\"unidade.entidade\", \"usuario\", \"programa\", \"documento.assinaturas.usuario:id,nome,url_foto\", \"tipo_modalidade\", \r\n                \"entregas.plano_entrega_entrega.entrega\", \"entregas.entrega\", \"plano_entrega.entregas.entrega\"];\r\n    this.groupBy = [{field: \"unidade.sigla\", label: \"Unidade\"}];\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let plano: PlanoTrabalho = row as PlanoTrabalho;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    const BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    const BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\r\n    const BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id ] }, { modalClose: (modalResult) => console.log(modalResult?.conteudo), metadata: this.planoService.metadados(row) })).bind(this) };\r\n    if(this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    if(this.auth.hasPermissionTo('MOD_PTR_EDT')) result.push(BOTAO_ALTERAR);\r\n    if(this.auth.hasPermissionTo(\"MOD_PTR_EXCL\")) result.push(BOTAO_EXCLUIR);\r\n    if(this.planoService.needSign(plano)) result.push(BOTAO_ASSINAR);\r\n    result.push(BOTAO_TERMOS);\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let plano: PlanoTrabalho = row as PlanoTrabalho;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    const BOTAO_ASSINAR = { hint: \"Assinar\", icon: \"bi bi-pen\", color: \"btn-outline-dark\", onClick: this.assinar.bind(this) };\r\n    if(this.planoService.needSign(plano)) result.push(BOTAO_ASSINAR);\r\n    else if(this.auth.hasPermissionTo('MOD_PTR_EDT')) result.push(BOTAO_ALTERAR);\r\n    else if(this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    return result;\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if(controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.usuario.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.tipo_modalidade_id.setValue(null);\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    if(form.tipo_modalidade_id?.length) {\r\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\r\n    }\r\n    if(form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if(form.usuario?.length) {\r\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario + \"%\"]);\r\n    }\r\n    if(form.unidade_id?.length) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{field: \"unidade.sigla\", label: \"Unidade\"}] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\r\n    let assinar = !!Object.keys(multiselected).length;\r\n    let menu = [];\r\n    Object.entries(multiselected).forEach(([key, value]) => {\r\n      if(!this.planoService.needSign(value)) assinar = false;\r\n    });\r\n    if(assinar) menu.push({label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\r\n    return menu;\r\n  }\r\n\r\n  public assinar(row?: PlanoTrabalho) {\r\n    const planosIds = row ? [row.id] : Object.keys(this.grid!.multiselected || {});\r\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\r\n    if(!documentos.length) {\r\n      this.dialog.alert(\"Selecione\", \"Nenhum plano seleciono\");\r\n    } else {\r\n      this.documentoService.sign(documentos).then(() => this.grid!.reset());\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PTR_INCL')\"\r\n    [hasEdit]=\"false\"\r\n    [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\"\r\n    [multiselectAllFields]=\"multiselectAllFields\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\"></input-text>\r\n            <input-search [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n          <input-search [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n      </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\r\n            <ng-template let-header=\"header\" #titleNumero>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ '#' + row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\r\n            <ng-template let-header=\"header\" #titleUsuario>\r\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\r\n            <ng-template let-header=\"header\" #titleVigencia>\r\n              Vigência de<br><order by=\"data_inicio_vigencia\" [header]=\"header\">Início</order>a<order by=\"data_fim_vigencia\" [header]=\"header\">Fim</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio_vigencia)+\" até \"+dao!.getDateFormatted(row.data_fim_vigencia)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\r\n                <!--badge *ngIf=\"row.documento\" color=\"light\" icon=\"bi bi-file-earmark-check\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.preview.bind(documentoService)\">\r\n                    <span [style.max-width.px]=\"200\" class=\"text-wrap\"><small><strong>#{{row.documento.numero}}</strong> - {{row.documento.titulo_documento}}</small></span>\r\n                    <separator *ngIf=\"row.documento?.assinaturas?.length\" transparent>\r\n                        <profile-picture *ngFor=\"let assinatura of row.documento!.assinaturas\" [url]=\"assinatura.usuario.url_foto\" [hint]=\"assinatura.usuario.nome\"></profile-picture>\r\n                    </separator>\r\n                </badge>\r\n                <badge *ngIf=\"row.documento?.numero_processo?.length\" [class]=\"'d-block'\" color=\"warning\" icon=\"bi bi-folder-symlink\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.onDocumentoClick.bind(documentoService)\" [hint]=\"documentoService.documentoHint(row)\">\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </badge>\r\n                < !--span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-warning text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\r\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </span//-->\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <report>\r\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\r\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\r\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio_vigencia)}}</ng-template></column>\r\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim_vigencia)}}</ng-template></column>\r\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\r\n    </report>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { Documento, HasDocumentos } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoService {\r\n  \r\n  constructor(\r\n    public auth: AuthService,\r\n    public planoTrabalhoDao: PlanoTrabalhoDaoService\r\n  ) { }\r\n\r\n  public template(plano: PlanoTrabalho): Template | undefined {\r\n    return plano.programa?.template_tcr;\r\n  }  \r\n\r\n  public metadados(plano: PlanoTrabalho) {\r\n    return {\r\n      needSign: this.needSign.bind(this),\r\n      extraTags: this.extraTags.bind(this),\r\n      especie: \"TCR\",\r\n      titulo: \"Termo de Ciência e Responsabilidade\",\r\n      dataset: this.planoTrabalhoDao.dataset(),\r\n      datasource: this.planoTrabalhoDao.datasource(plano),\r\n      template: plano.programa?.template_tcr,\r\n      template_id: plano.programa?.template_tcr_id\r\n    };\r\n  }\r\n\r\n  public needSign(parent?: HasDocumentos, item?: Documento): boolean {\r\n    const plano = parent as PlanoTrabalho;\r\n    const documento = item || (plano?.documentos || []).find(x => plano?.documento_id?.length && x.id == plano?.documento_id) || plano?.documento;\r\n    if(parent && documento && !documento.assinaturas?.find(x => x.usuario_id == this.auth.usuario!.id)) {\r\n      const tipoModalidade = plano.tipo_modalidade; \r\n      const entidade = this.auth.entidade!;\r\n      let ids: string[] = [];\r\n      if (tipoModalidade?.plano_trabalho_assinatura_participante) ids.push(plano.usuario_id);\r\n      if (tipoModalidade?.plano_trabalho_assinatura_gestor_unidade) ids.push(plano.unidade?.gestor?.id || \"\", plano.unidade?.gestor_substituto?.id || \"\");\r\n      if (tipoModalidade?.plano_trabalho_assinatura_gestor_entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n      return !!tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public extraTags(parent: HasDocumentos, documento: Documento, metadado: any): LookupItem[] {\r\n    const plano = parent as PlanoTrabalho;\r\n    let tags: LookupItem[] = [];\r\n    if(plano?.documento_id == documento.id) tags.push({ key: documento.id, value: \"Vigente\", icon: \"bi bi-check-all\", color: \"primary\" }) \r\n    if(JSON.stringify(metadado.tags) != JSON.stringify(tags)) metadado.tags = tags;\r\n    return metadado.tags;\r\n  }\r\n}\r\n","import { Base } from './base.model';\r\nimport { TipoModalidade } from './tipo-modalidade.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\nimport { Programa } from './programa.model';\r\nimport { TipoCargaHoraria } from './entidade.model';\r\nimport { PlanoEntrega } from './plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from './plano-trabalho-entrega.model';\r\nimport { Documento, HasDocumentos } from './documento.model';\r\nimport { Atividade } from './atividade.model';\r\n\r\nexport type PlanoMetadados = {\r\n  concluido: boolean\r\n}\r\n\r\nexport class PlanoTrabalho extends Base implements HasDocumentos {\r\n    public tipo_modalidade?: TipoModalidade;\r\n    public plano_entrega?: PlanoEntrega;\r\n    public unidade?: Unidade;\r\n    public usuario?: Usuario;\r\n    public programa?: Programa;\r\n    public documento?: Documento;\r\n\r\n    public carga_horaria: number = 0; //Carga horária diária do usuário\r\n    public tempo_total: number = 0; //Horas úteis de trabalho no período de data_inicio_vigencia à data_fim_vigencia considerando carga_horaria, feriados, fins de semana\r\n    public tempo_proporcional: number = 0; //tempo_total menos os afastamentos\r\n    public data_inicio_vigencia: Date = new Date(); //Inicio do plano\r\n    public data_fim_vigencia: Date = new Date(); //Fim do plano\r\n    public forma_contagem_carga_horaria: TipoCargaHoraria = \"DIA\"; // Forma de contagem padrão da carga horária\r\n    public metadados: PlanoMetadados | undefined = undefined; /* Campo virtual contendo informações calculadas pelo servidor */\r\n    public entregas: PlanoTrabalhoEntrega[] = []; /* Entregas vinculadas ao Plano de Trabalho*/\r\n    public documentos: Documento[] = [];\r\n    public atividades: Atividade[] = [];\r\n    \r\n    public programa_id: string = \"\";\r\n    public usuario_id: string = \"\";\r\n    public unidade_id: string = \"\";\r\n    public tipo_modalidade_id: string = \"\";\r\n    public plano_entrega_id: string = \"\";\r\n    public documento_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}"],"sourceRoot":"webpack:///"}