{"version":3,"sources":["./src/app/modules/cadastros/cidade/cidade-list/cidade-list.component.ts","./src/app/modules/cadastros/cidade/cidade-list/cidade-list.component.html","./src/app/modules/cadastros/cidade/cidade.module.ts","./src/app/modules/cadastros/cidade/cidade-form/cidade-form.component.ts","./src/app/modules/cadastros/cidade/cidade-form/cidade-form.component.html","./src/app/modules/cadastros/cidade/cidade-routing.module.ts","./src/app/models/cidade.model.ts"],"names":[],"mappings":"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","file":"modules-cadastros-cidade-cidade-module.js","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { CidadeDaoService } from 'src/app/dao/cidade-dao.service';\nimport { Cidade } from 'src/app/models/cidade.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\n\n@Component({\n  selector: 'app-cidade-list',\n  templateUrl: './cidade-list.component.html',\n  styleUrls: ['./cidade-list.component.scss']\n})\nexport class CidadeListComponent extends PageListBase<Cidade, CidadeDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n\n  constructor(public injector: Injector) {\n    super(injector, Cidade, CidadeDaoService);\n    /* Inicializações */\n    //this.title = \"Cidades\";\n    this.title = this.lex.noun(\"Cidade\",true);\n    this.code = \"MOD_CID\";\n\n    this.filter = this.fh.FormBuilder({\n      nome: {default: \"\"}\n     });\n    // Testa se o usuário possui permissão para exibir dados de cidade\n    if (this.auth.hasPermissionTo(\"MOD_CID_CONS\")) {\n      this.options.push({\n        icon: \"bi bi-info-circle\",\n        label: \"Informações\",\n        onClick: this.consult.bind(this)\n      });\n    }\n    // Testa se o usuário possui permissão para excluir a cidade\n    if (this.auth.hasPermissionTo(\"MOD_CID_EXCL\")) {\n      this.options.push({\n        icon: \"bi bi-trash\",\n        label: \"Excluir\",\n        onClick: this.delete.bind(this)\n      });\n    }\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    if(form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\n    }\n\n    return result;\n  }\n}\n\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"auth.hasPermissionTo('MOD_CID_INCL')\"\n    [hasEdit]=\"auth.hasPermissionTo('MOD_CID_EDT')\">\n    <toolbar *ngIf=\"!selectable\"></toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Cidade\" controlName=\"nome\"\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome da cidade...\"></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Código IBGE\" field=\"codigo_ibge\"></column>\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\n        <column title=\"UF\" field=\"uf\"></column>\n        <column title=\"Tipo\" type=\"select\" field=\"tipo\" [items]=\"lookup.TIPO_CIDADE\"></column>\n        <column title=\"Timezone\" type=\"select\" field=\"timezone\" [items]=\"lookup.TIMEZONE\"></column>\n        <column *ngIf=\"!selectable\" type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CidadeRoutingModule } from './cidade-routing.module';\nimport { CidadeFormComponent } from './cidade-form/cidade-form.component';\nimport { CidadeListComponent } from './cidade-list/cidade-list.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    CidadeFormComponent,\n    CidadeListComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    CidadeRoutingModule\n  ]\n})\nexport class CidadeModule { }\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { CidadeDaoService } from 'src/app/dao/cidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Cidade } from 'src/app/models/cidade.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'app-cidade-form',\n  templateUrl: './cidade-form.component.html',\n  styleUrls: ['./cidade-form.component.scss']\n})\nexport class CidadeFormComponent extends PageFormBase<Cidade, CidadeDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  \n\n  constructor(public injector: Injector) {\n    super(injector, Cidade, CidadeDaoService);\n\n    this.form = this.fh.FormBuilder({\n      codigo_ibge: {default: \"\"},\n      nome: {default: \"\"},\n      tipo: {default: \"\"},\n      uf: {default: \"\"},\n      timezone: {default: \"\"}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n    if(['codigo_ibge', 'nome', 'uf'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }  else if(['timezone'].indexOf(controlName) >= 0 && !control.value) {\n      result = \"Valor não pode ser zero.\";\n    }\n    return result;\n  }\n\n  public loadData(entity: Cidade, form: FormGroup): void {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n  }\n\n  public initializeData(form: FormGroup): void {\n    form.patchValue(new Cidade());\n  }\n\n  public saveData(form: IIndexable): Promise<Cidade> {\n    return new Promise<Cidade>((resolve, reject) => {\n      const cidade = this.util.fill(new Cidade(), this.entity!);\n      resolve(this.util.fillForm(cidade, this.form!.value));\n    });\n  }\n\n  public titleEdit = (entity: Cidade): string => {\n    return \"Editando \"+ (entity?.nome || \"\");\n  }\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div class=\"row\">\n        <div class=\"row\">\n            <input-text [size]=\"3\" label=\"Código IBGE\" icon=\"bi bi-upc\" controlName=\"codigo_ibge\" [control]=\"form!.controls.codigo_ibge\"></input-text>\n            <input-text [size]=\"9\" label=\"Nome\" icon=\"bi bi-textarea-t\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\n        </div>\n        <div class=\"row\">\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"form!.controls.tipo\" [items]=\"lookup.TIPO_CIDADE\"></input-select>\n            <input-select [size]=\"4\" label=\"UF\" icon=\"bi bi-flag\" controlName=\"uf\" [control]=\"form!.controls.uf\" [items]=\"lookup.UF\"></input-select>\n            <input-select [size]=\"4\" label=\"Timezone\" icon=\"bi bi-alarm\" controlName=\"timezone\" [control]=\"form!.controls.timezone\" [items]=\"lookup.TIMEZONE\"></input-select>\n        </div>\n    </div>\n</editable-form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { CidadeFormComponent } from './cidade-form/cidade-form.component';\nimport { CidadeListComponent } from './cidade-list/cidade-list.component';\n\nconst routes: Routes = [\n  { path: '', component: CidadeListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Cidade\" } },\n  { path: 'new', component: CidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\n  { path: ':id/edit', component: CidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\n  { path: ':id/consult', component: CidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CidadeRoutingModule { }\n","import { Base } from './base.model';\n\nexport class Cidade extends Base {\n    public codigo_ibge: string = \"\"; //Código IBGE\n    public nome: string = \"\"; //Nome da cidade;\n    public tipo: string = \"MUNICIPIO\"; //Tipo: MUNICIPIO, DISTRITO, CAPITAL\");\n    public uf: string = \"AC\"; //Unidade da federação\n    public timezone: number = 0; //Timezone da cidade\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}"],"sourceRoot":"webpack:///"}