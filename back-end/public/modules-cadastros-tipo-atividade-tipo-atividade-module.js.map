{"version":3,"sources":["./src/app/modules/cadastros/tipo-atividade/tipo-atividade.module.ts","./src/app/modules/cadastros/tipo-atividade/tipo-atividade-list/tipo-atividade-list.component.ts","./src/app/modules/cadastros/tipo-atividade/tipo-atividade-list/tipo-atividade-list.component.html","./src/app/models/tipo-atividade.model.ts","./src/app/modules/cadastros/tipo-atividade/tipo-atividade-form/tipo-atividade-form.component.ts","./src/app/modules/cadastros/tipo-atividade/tipo-atividade-form/tipo-atividade-form.component.html","./src/app/modules/cadastros/tipo-atividade/tipo-atividade-routing.module.ts"],"names":[],"mappings":"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","file":"modules-cadastros-tipo-atividade-tipo-atividade-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TipoAtividadeRoutingModule } from './tipo-atividade-routing.module';\r\nimport { TipoAtividadeFormComponent } from './tipo-atividade-form/tipo-atividade-form.component';\r\nimport { TipoAtividadeListComponent } from './tipo-atividade-list/tipo-atividade-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoAtividadeFormComponent,\r\n    TipoAtividadeListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoAtividadeRoutingModule\r\n  ]\r\n})\r\nexport class TipoAtividadeModule { }\r\n\r\n\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { TipoAtividade } from 'src/app/models/tipo-atividade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tipo-atividade-list',\r\n  templateUrl: './tipo-atividade-list.component.html',\r\n  styleUrls: ['./tipo-atividade-list.component.scss']\r\n})\r\nexport class TipoAtividadeListComponent extends PageListBase<TipoAtividade, TipoAtividadeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoAtividade, TipoAtividadeDaoService);\r\n    /* Inicializações */\r\n    this.title = \"Tipos de \" + this.lex.noun(\"Atividade\",true);\r\n    this.code=\"MOD_TIPO_ATV\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      icone: {default: \"\"},\r\n      cor: {default: \"\"}\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados do tipo de atividade\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_ATV_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o tipo de atividade\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_ATV_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_ATV_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_ATV_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome do tipo da atividade\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome do tipo da atividade\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Descrição\" [template]=\"columnDescricao\">\r\n            <ng-template let-row=\"row\" #columnDescricao>\r\n                <i [class]=\"row.icone\" [style.color]=\"row.cor\"></i><span [style.color]=\"row.cor\"> {{row.nome}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Base } from './base.model';\r\n\r\nexport class TipoAtividade extends Base {\r\n    public nome: string =\"\";     //Descrição do tipo/categoria da atividade\r\n    public icone: string = \"\";      //Classe do icone\r\n    public cor: string =\"\";      //Código da cor em hex\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n\r\n\r\n ","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoAtividade } from 'src/app/models/tipo-atividade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'app-tipo-atividade-form',\r\n  templateUrl: './tipo-atividade-form.component.html',\r\n  styleUrls: ['./tipo-atividade-form.component.scss']\r\n})\r\n\r\nexport class TipoAtividadeFormComponent extends PageFormBase<TipoAtividade, TipoAtividadeDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoAtividade, TipoAtividadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      icone: {default: \"\"},\r\n      cor: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome', 'icone'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoAtividade, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoAtividade());\r\n  }\r\n\r\n\r\n  public saveData(form: IIndexable): Promise<TipoAtividade> {\r\n    return new Promise<TipoAtividade>((resolve, reject) => {\r\n      const tipoAtividade = this.util.fill(new TipoAtividade(), this.entity!);\r\n      resolve(this.util.fillForm(tipoAtividade, this.form!.value));\r\n    });\r\n  }\r\n\r\n\r\n  public titleEdit = (entity: TipoAtividade): string => {\r\n    return \"Editando \" + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <div class=\"row\">\r\n        <input-text [size]=\"12\" label=\"Título\" icon=\"bi bi-textarea-t\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\r\n    </div>\r\n    <div class=\"row\">\r\n        <input-select [size]=\"6\" label=\"Ícone\" icon=\"fas fa-sign-out-alt\" controlName=\"icone\" [control]=\"form!.controls.icone\" [items]=\"lookup.ICONES\"></input-select>\r\n        <input-color [size]=\"6\" label=\"Cor\" icon=\"bi bi-palette\" controlName=\"cor\" [control]=\"form!.controls.cor\"></input-color>\r\n    </div>\r\n</editable-form>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoAtividadeFormComponent } from './tipo-atividade-form/tipo-atividade-form.component';\r\nimport { TipoAtividadeListComponent } from './tipo-atividade-list/tipo-atividade-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoAtividadeListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Atividade\" } },\r\n  { path: 'new', component: TipoAtividadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: TipoAtividadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: TipoAtividadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoAtividadeRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}