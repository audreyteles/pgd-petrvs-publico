{"version":3,"sources":["./src/app/dao/tipo-modalidade-dao.service.ts","./src/app/models/tipo-modalidade.model.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade.module.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-form/tipo-modalidade-form.component.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-form/tipo-modalidade-form.component.html","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-list/tipo-modalidade-list.component.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-list/tipo-modalidade-list.component.html","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-routing.module.ts"],"names":[],"mappings":"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","file":"modules-cadastros-tipo-modalidade-tipo-modalidade-module.js","sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { TipoModalidade } from '../models/tipo-modalidade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoModalidadeDaoService extends DaoBaseService<TipoModalidade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"TipoModalidade\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n}\r\n\r\n","import { Base } from './base.model';\r\n\r\nexport class TipoModalidade extends Base {\r\n    public nome: string = \"\"; /* Nome da modalidade */\r\n    public atividades_homologadas: number = 1; /* Permitir apenas atividades homologadas */\r\n    public dispensa_avaliacao: number = 0; /* Dispensa a avaliação */\r\n    public exige_assinatura: number = 1; /* Exigir assinatura */\r\n    public calcula_tempo_despendido: number = 1; /* Calcula tempo despendido */\r\n    public comparecer_presencialmente: number = 1; /* Se será necessário comparecer presencialmente quando convocado */\r\n    public exige_assinatura_gestor_unidade: number = 0; /* Exigir assinatura do gestor da unidade */\r\n    public exige_assinatura_gestor_entidade: number = 0; /* Exigir assinatura do gestor da entidade */\r\n    public ganho_produtividade: number = 0; /* Ganho de produtividade */\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n        \r\n    constructor(){\r\n        super();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TipoModalidadeRoutingModule } from './tipo-modalidade-routing.module';\r\nimport { TipoModalidadeFormComponent } from './tipo-modalidade-form/tipo-modalidade-form.component';\r\nimport { TipoModalidadeListComponent } from './tipo-modalidade-list/tipo-modalidade-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoModalidadeFormComponent,\r\n    TipoModalidadeListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoModalidadeRoutingModule\r\n  ]\r\n})\r\nexport class TipoModalidadeModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'app-modalidade-form',\r\n  templateUrl: './tipo-modalidade-form.component.html',\r\n  styleUrls: ['./tipo-modalidade-form.component.scss']\r\n})\r\nexport class TipoModalidadeFormComponent extends PageFormBase<TipoModalidade, TipoModalidadeDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoModalidade, TipoModalidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      atividades_homologadas: { default: \"\" },\r\n      dispensa_avaliacao: { default: \"\" },\r\n      exige_assinatura: { default: true },\r\n      exige_assinatura_gestor_unidade: { default: false },\r\n      exige_assinatura_gestor_entidade: { default: false },\r\n      ganho_produtividade: { default: 0 },\r\n      calcula_tempo_despendido: { default: true },\r\n      data_inicio: { default: \"\" },\r\n      data_fim: { default: \"\" },\r\n      comparecer_presencialmente: { default: true }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoModalidade, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoModalidade());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoModalidade> {\r\n    return new Promise<TipoModalidade>((resolve, reject) => {\r\n      const tipoModalidade = this.util.fill(new TipoModalidade(), this.entity!);\r\n      resolve(this.util.fillForm(tipoModalidade, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoModalidade): string => {\r\n    return \"Editando \" + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form> (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <div class=\"row\">\r\n        <input-text [size]=\"9\" label=\"Título\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\r\n        <input-text numbers [size]=\"3\" label=\"% Ganho produtividade\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" labelInfo=\"Percentual de ganho de produtividade (Será descontado do tempo pactuado)\"></input-text>\r\n    </div>\r\n    <separator transparent title=\"Configurações do plano\">\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Calcula tempo despendido\" controlName=\"calcula_tempo_despendido\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Atividades Homologadas\" controlName=\"atividades_homologadas\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Avaliação Dispensável\" controlName=\"dispensa_avaliacao\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Exige assinatura do usuário\" controlName=\"exige_assinatura\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Exige assinatura do gestor da unidade\" controlName=\"exige_assinatura_gestor_unidade\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Exige assinatura do gestor da entidade\" controlName=\"exige_assinatura_gestor_entidade\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Exige comparecimento quando convocado (prazo configurado na Unidade)\" controlName=\"comparecer_presencialmente\"></input-switch>\r\n    </separator>    \r\n    <!--div class=\"row\">\r\n        <input-radio [size]=\"3\" label=\"\" controlName=\"\" [control]=\"form!.controls.atividades_homologadas\" [items]=\"lookup.SIMNAO\" labelInfo=\"Se só aceitará atividades homologadas. \"></input-radio>\r\n        <input-radio [size]=\"3\" label=\"\" controlName=\"\" [control]=\"form!.controls.dispensa_avaliacao\" [items]=\"lookup.SIMNAO\"></input-radio>\r\n        <input-radio [size]=\"3\" label=\"\" controlName=\"exige_assinatura\" [control]=\"form!.controls.exige_assinatura\" [items]=\"lookup.SIMNAO\" labelInfo=\"Ser irá exigir a assinatura. \"></input-radio>\r\n    </div-->\r\n    <!--INSERIR CAMPO DE DOCUMENTO-->\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tipo-modalidade-list',\r\n  templateUrl: './tipo-modalidade-list.component.html',\r\n  styleUrls: ['./tipo-modalidade-list.component.scss']\r\n})\r\nexport class TipoModalidadeListComponent extends PageListBase<TipoModalidade, TipoModalidadeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoModalidade, TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = \"Tipos de \" + this.lex.noun(\"Modalidade\",true);\r\n    this.code=\"MOD_TIPO_MDL\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      atividades_homologadas: {default: \"\"},\r\n      dispensa_avaliacao: {default: \"\"},\r\n      exige_assinatura: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"}\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados do tipo de modalidade\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_MDL_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o tipo de modalidade\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_MDL_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_MDL_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_MDL_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome do tipo da Modalidade\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome do tipo da Modalidade\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Descrição\" field=\"nome\"></column>\r\n        <column title=\"Somente atividades homologadas\" [template]=\"columnAtividades_homologadas\">\r\n            <ng-template let-row=\"row\" #columnAtividades_homologadas>\r\n                <span>{{ row.atividades_homologadas ? 'Sim' : 'Não'}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Dispensa Avaliações\" [template]=\"columnDispensa_avaliacao\">\r\n            <ng-template let-row=\"row\" #columnDispensa_avaliacao>\r\n                <span>{{ row.dispensa_avaliacao ? 'Sim' : 'Não'}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Exige Assinatura\" [template]=\"columnExige_assinatura\">\r\n            <ng-template let-row=\"row\" #columnExige_assinatura>\r\n                <span>{{ row.exige_assinatura ? 'Sim' : 'Não'}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"% Ganho produtividade\" field=\"ganho_produtividade\"></column>\r\n        <column *ngIf=\"!selectable\" type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoModalidadeFormComponent } from './tipo-modalidade-form/tipo-modalidade-form.component';\r\nimport { TipoModalidadeListComponent } from './tipo-modalidade-list/tipo-modalidade-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoModalidadeListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Modalidade\" } },\r\n  { path: 'new', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoModalidadeRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}