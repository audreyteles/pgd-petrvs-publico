{"version":3,"file":"419.js","mappings":"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","sources":["./src/app/models/entrega.model.ts","./src/app/modules/cadastros/entrega/entrega-form/entrega-form.component.ts","./src/app/modules/cadastros/entrega/entrega-form/entrega-form.component.html","./src/app/modules/cadastros/entrega/entrega-list/entrega-list.component.ts","./src/app/modules/cadastros/entrega/entrega-list/entrega-list.component.html","./src/app/modules/cadastros/entrega/entrega-routing.module.ts","./src/app/modules/cadastros/entrega/entrega.module.ts"],"sourcesContent":["import { LookupItem } from '../services/lookup.service';\r\nimport { Base } from './base.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport type EntregaTipoIndicador = \"QUANTIDADE\" | \"VALOR\" | \"PORCENTAGEM\" | \"QUALITATIVO\";\r\nexport type EntregaValor = {\r\n    porcentagem?: number,\r\n    quantitativo?: number,\r\n    valor?: number,\r\n    qualitativo?: string\r\n};\r\n\r\nexport class Entrega extends Base {\r\n    public unidade?: Unidade;\r\n\r\n    public nome: string = \"\"; //Nome da entrega;\r\n    public descricao: string = \"\"; //Descrição da entrega;\r\n    public tipo_indicador: EntregaTipoIndicador = \"PORCENTAGEM\"; //Tipo_indicador: \"QUANTIDADE\", \"VALOR\", \"PORCENTAGEM\", \"QUALITATIVO\");\r\n    public lista_qualitativos: LookupItem[] = [];\r\n\r\n    public unidade_id: string | null = null;\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport {LookupItem} from \"../../../../services/lookup.service\";\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\n\r\n@Component({\r\n  selector: 'app-entrega-form',\r\n  templateUrl: './entrega-form.component.html',\r\n  styleUrls: ['./entrega-form.component.scss']\r\n})\r\nexport class EntregaFormComponent extends PageFormBase<Entrega, EntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('itemQualitativo', { static: false }) public itemQualitativo?: InputTextComponent;\r\n\r\n  public listaQualitativos: string[] = [];\r\n  public unidadeDao: UnidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Entrega, EntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.modalWidth = 600;\r\n    this.join = [\"unidade\"];\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      descricao: {default: \"\"},\r\n      tipo_indicador: {default: \"\"},\r\n      qualitativo: {default: \"\"},\r\n      lista_qualitativos: {default: []},\r\n      item_qualitativo: {default: \"\"},\r\n      unidade_id: {default: null}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(['nome','tipo_indicador','descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) =>{\r\n    let result = null;\r\n    if(this.form?.controls.tipo_indicador.value == 'QUALITATIVO' && !this.form?.controls.lista_qualitativos.value.length){\r\n      result = \"Quando o tipo da entrega for Qualitativo, é necessária a inclusão de ao menos um item de qualitativo!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: Entrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.loadListaQualitativos();\r\n  }\r\n\r\n  public initializeData(form: FormGroup) {\r\n    form.patchValue(new Entrega());\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<Entrega> {\r\n    return new Promise<Entrega>((resolve, reject) => {\r\n      const entrega = this.util.fill(new Entrega(), this.entity!);\r\n      resolve(this.util.fillForm(entrega, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: Entrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Entrega\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public incluirQualitativo(qualitativo: string) {\r\n    let item = qualitativo.trim().replace(\" \", \"%\");\r\n    let listaQualitativos: string[] = this.form!.controls.lista_qualitativos.value;\r\n    if(!listaQualitativos.find(x => x == item) && item.length){\r\n      this.clearErros();\r\n      listaQualitativos.push(item);\r\n      this.form!.controls.lista_qualitativos.setValue(listaQualitativos);\r\n      this.form?.controls.qualitativo.setValue('');\r\n      this.loadListaQualitativos();\r\n    }\r\n  }\r\n\r\n  public excluirQualitativo(qualitativo: string) {\r\n    let listaQualitativos: string[] = this.form!.controls.lista_qualitativos.value;\r\n    if(listaQualitativos.find(x => x == qualitativo)){\r\n      this.form!.controls.lista_qualitativos.setValue(listaQualitativos.filter(x => x != qualitativo));\r\n      this.loadListaQualitativos();\r\n    }\r\n  }\r\n\r\n  public loadListaQualitativos() {\r\n    this.listaQualitativos = this.form!.controls.lista_qualitativos.value || [];\r\n  }\r\n\r\n  public addItemHandleItemQualitativo(): LookupItem | undefined {\r\n    let result = undefined;\r\n    const value = this.form!.controls.item_qualitativo.value;\r\n    const key = this.util.onlyAlphanumeric(value).toUpperCase();\r\n    if(value?.length && this.util.validateLookupItem(this.form!.controls.lista_qualitativos.value, key)) {\r\n      result = {\r\n        key: key,\r\n        value: this.form!.controls.item_qualitativo.value\r\n      };\r\n      this.form!.controls.item_qualitativo.setValue(\"\");\r\n    }\r\n    return result;\r\n  };\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"nome\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div class=\"row\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"'Nome ' + lex.translate('entrega')\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n            <input-text [size]=\"12\" [label]=\"'Descrição ' + lex.translate('entrega')\" controlName=\"descricao\" [attr.maxlength]=250 required></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-select [size]=\"6\" [label]=\"lex.translate('Tipo de indicador')\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo_indicador\" [items]=\"lookup.TIPO_INDICADOR\"></input-select>\r\n            <div *ngIf=\"form?.controls!.tipo_indicador.value == 'QUALITATIVO' || null\"  class=\"row col-6\">\r\n                <div class=\"col-12\">\r\n                    <label for=\"itemQualitativo\" class=\"radio control-label\">&nbsp;</label>\r\n                    <input-multiselect label=\"Itens Qualitativos\" controlName=\"lista_qualitativos\" [addItemHandle]=\"addItemHandleItemQualitativo.bind(this)\">\r\n                        <input-text icon=\"far fa-edit\" controlName=\"item_qualitativo\" [attr.maxlength]=250></input-text>\r\n                    </input-multiselect>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</editable-form>\r\n<!-- [disabled]=\"form?.controls?.tipo_indicador?.value ? 'true' : undefined\" -->\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-entrega-list',\r\n  templateUrl: './entrega-list.component.html',\r\n  styleUrls: ['./entrega-list.component.scss']\r\n})\r\nexport class EntregaListComponent extends PageListBase<Entrega, EntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public unidadeDao?: UnidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, Entrega, EntregaDaoService);\r\n    /* Inicializações */\r\n    this.join = [\"unidade:id,sigla,nome\"];\r\n    this.title = this.lex.translate('Entregas');\r\n    this.code = \"MOD_ENTRG\";\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      tipo_indicador: {default: null}\r\n     });\r\n     this.addOption(this.OPTION_INFORMACOES);\r\n     this.addOption(this.OPTION_EXCLUIR, \"MOD_ENTRG_EXCL\");\r\n     this.addOption(this.OPTION_LOGS, \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    if(form.nome?.length) result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    if(form.tipo_indicador?.length) result.push([\"tipo_indicador\", \"==\", form.tipo_indicador]);\r\n    return result;\r\n  }\r\n}\r\n\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_ENTRG_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_ENTRG_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"8\" [label]=\"lex.translate('Entrega')\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome ' + lex.translate('entrega') + '...'\" [attr.maxlength]=250></input-text>\r\n            <input-select [size]=\"4\" label=\"Tipo de indicador\" controlName=\"tipo_indicador\" [items]=\"lookup.TIPO_INDICADOR\"></input-select>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column title=\"Descrição\" field=\"descricao\" orderBy=\"descricao\"></column>\r\n        <!--<column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <badge *ngIf=\"row.unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\" color=\"light\" [hint]=\"row.unidade.nome\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"lex.translate('Tipo do indicador')\" type=\"select\" field=\"tipo_indicador\" [items]=\"lookup.TIPO_INDICADOR\"></column>\r\n        <column title=\"Qualitativos\" [template]=\"columnQualitativos\">\r\n            <ng-template let-row=\"row\" #columnQualitativos>\r\n                <div class=\"one-per-line\">\r\n                    <badge *ngFor=\"let qualitativo of row.lista_qualitativos\" color=\"light\" icon=\"bi bi-check2-square\" [label]=\"qualitativo.value\"></badge>\r\n                </div>                \r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { EntregaFormComponent } from './entrega-form/entrega-form.component';\r\nimport { EntregaListComponent } from './entrega-list/entrega-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: EntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\" } },\r\n  { path: 'new', component: EntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Entrega\", modal: true } },\r\n  { path: ':id/edit', component: EntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Entrega\", modal: true } },\r\n  { path: ':id/consult', component: EntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Entrega\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EntregaRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { EntregaRoutingModule } from './entrega-routing.module';\r\nimport { EntregaFormComponent } from './entrega-form/entrega-form.component';\r\nimport { EntregaListComponent } from './entrega-list/entrega-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EntregaFormComponent,\r\n    EntregaListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    EntregaRoutingModule\r\n  ]\r\n})\r\nexport class EntregaModule { }\r\n"],"names":["Base","Entrega","constructor","data","nome","descricao","tipo_indicador","lista_qualitativos","unidade_id","initialization","EditableFormComponent","EntregaDaoService","PageFormBase","UnidadeDaoService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","addItemHandleItemQualitativo","bind","ɵɵattribute","EntregaFormComponent","injector","listaQualitativos","validate","control","controlName","result","indexOf","value","length","formValidation","form","controls","titleEdit","entity","lex","translate","unidadeDao","get","modalWidth","join","fh","FormBuilder","default","qualitativo","item_qualitativo","cdRef","loadData","formValue","Object","assign","patchValue","util","fillForm","loadListaQualitativos","initializeData","saveData","_this","_asyncToGenerator","Promise","resolve","reject","entrega","fill","incluirQualitativo","item","trim","replace","find","x","clearErros","push","setValue","excluirQualitativo","filter","undefined","key","onlyAlphanumeric","toUpperCase","validateLookupItem","ɵɵdirectiveInject","Injector","selectors","viewQuery","EntregaFormComponent_Query","rf","ctx","ɵɵlistener","EntregaFormComponent_Template_editable_form_submit_0_listener","onSaveData","EntregaFormComponent_Template_editable_form_cancel_0_listener","onCancel","ɵɵtemplate","EntregaFormComponent_div_7_Template","formDisabled","isModal","title","lookup","TIPO_INDICADOR","GridComponent","PageListBase","qualitativo_r5","EntregaListComponent_ng_template_11_badge_1_Template","row_r3","EntregaListComponent","filterWhere","code","addOption","OPTION_INFORMACOES","OPTION_EXCLUIR","OPTION_LOGS","EntregaListComponent_Query","EntregaListComponent_Template_grid_select_0_listener","$event","onSelect","EntregaListComponent_toolbar_1_Template","EntregaListComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","dao","add","orderBy","groupBy","selectable","auth","hasPermissionTo","filterSubmit","filterCollapseChange","filterCollapsed","_r1","edit","options","rowsLimit","RouterModule","AuthGuard","ConfigResolver","routes","path","component","canActivate","config","runGuardsAndResolvers","modal","EntregaRoutingModule","forChild","imports","i1","exports","CommonModule","ReactiveFormsModule","ComponentsModule","EntregaModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}