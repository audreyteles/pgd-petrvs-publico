{"version":3,"file":"4214.js","mappings":"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","sources":["./src/app/models/tipo-modalidade.model.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-form/tipo-modalidade-form.component.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-form/tipo-modalidade-form.component.html","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-list/tipo-modalidade-list.component.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-list/tipo-modalidade-list.component.html","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-routing.module.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade.module.ts"],"sourcesContent":["import { Base } from './base.model';\r\n\r\nexport class TipoModalidade extends Base {\r\n    public nome: string = \"\"; /* Nome da modalidade */\r\n    public plano_trabalho_calcula_horas: boolean = false; /* Se o plano de trabalho calcula horas (considerando a carga horaria e os dias) */\r\n    public atividade_tempo_despendido: boolean = false; /* Se calcula tempo despendido na atividade */\r\n    public atividade_esforco: boolean = false; /* Se utiliza esforço (tempo para execução) na atividade */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'app-modalidade-form',\r\n  templateUrl: './tipo-modalidade-form.component.html',\r\n  styleUrls: ['./tipo-modalidade-form.component.scss']\r\n})\r\nexport class TipoModalidadeFormComponent extends PageFormBase<TipoModalidade, TipoModalidadeDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoModalidade, TipoModalidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      plano_trabalho_calcula_horas: { default: false },\r\n      atividade_tempo_despendido: { default: false },\r\n      atividade_esforco: { default: false },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoModalidade, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoModalidade());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoModalidade> {\r\n    return new Promise<TipoModalidade>((resolve, reject) => {\r\n      const tipoModalidade = this.util.fill(new TipoModalidade(), this.entity!);\r\n      resolve(this.util.fillForm(tipoModalidade, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoModalidade): string => {\r\n    return \"Editando \" + this.lex.translate(\"Tipo de Modalidade\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"nome\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form> (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <div class=\"row\">\r\n        <input-text [size]=\"12\" label=\"Título\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n    </div>\r\n    <separator transparent [title]=\"'Configurações ' + lex.translate('plano de trabalho')\">\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" controlName=\"plano_trabalho_calcula_horas\" [label]=\"'Se o ' + lex.translate('plano de trabalho') + ' calcula horas (considerando a carga horária e os dias)'\"></input-switch>\r\n    </separator>\r\n    <separator transparent [title]=\"'Configurações ' + lex.translate('atividade')\">\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" controlName=\"atividade_tempo_despendido\" [label]=\"'Calcula ' + lex.translate('tempo despendido') + lex.translate('atividade')\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" controlName=\"atividade_esforco\" [label]=\"'Usa ' + lex.translate('esforço') + ' (tempo para execução)' + lex.translate('atividade')\"></input-switch>\r\n    </separator>\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tipo-modalidade-list',\r\n  templateUrl: './tipo-modalidade-list.component.html',\r\n  styleUrls: ['./tipo-modalidade-list.component.scss']\r\n})\r\nexport class TipoModalidadeListComponent extends PageListBase<TipoModalidade, TipoModalidadeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoModalidade, TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Tipos de Modalidade\");\r\n    this.code=\"MOD_TIPO_MDL\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      atividades_homologadas: {default: \"\"},\r\n      dispensa_avaliacao: {default: \"\"},\r\n      exige_assinatura: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"}\r\n    });\r\n    this.addOption(this.OPTION_INFORMACOES);\r\n    this.addOption(this.OPTION_EXCLUIR, \"MOD_TIPO_MDL_EXCL\");\r\n    this.addOption(this.OPTION_LOGS, \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_MDL_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_MDL_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"'Nome ' + lex.translate('tipo de Modalidade')\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome...\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Descrição\" field=\"nome\"></column>\r\n        <column [title]=\"lex.translate('Plano de trabalho')\" [template]=\"columnPlanoTrabalho\">\r\n            <ng-template let-row=\"row\" #columnPlanoTrabalho>\r\n                <div class=\"one-per-line\">\r\n                    <!--badge *ngIf=\"row.plano_trabalho_assinatura_participante\" color=\"light\" icon=\"bi bi-pen\" label=\"Assinatura do participante\"></badge>\r\n                    <badge *ngIf=\"row.plano_trabalho_assinatura_gestor_unidade\" color=\"light\" icon=\"bi bi-pen\" label=\"Assinatura do gestor da unidade\"></badge>\r\n                    <badge *ngIf=\"row.plano_trabalho_assinatura_gestor_entidade\" color=\"light\" icon=\"bi bi-pen\" label=\"Assinatura do gestor da entidade\"></badge//-->\r\n                    <badge *ngIf=\"row.plano_trabalho_calcula_horas\" color=\"light\" icon=\"bi bi-clock\" [label]=\"'Usa horas no ' + lex.translate('plano de trabalho')\"></badge>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"lex.translate('Atividade')\" [template]=\"columnAtividade\">\r\n            <ng-template let-row=\"row\" #columnAtividade>\r\n                <div class=\"one-per-line\">\r\n                    <badge *ngIf=\"row.atividade_tempo_despendido\" color=\"light\" icon=\"bi bi-hourglass-bottom\" label=\"Assinatura do participante\"></badge>\r\n                    <badge *ngIf=\"row.atividade_esforco\" color=\"light\" icon=\"bi bi-stopwatch\" label=\"Assinatura do gestor da unidade\"></badge>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoModalidadeFormComponent } from './tipo-modalidade-form/tipo-modalidade-form.component';\r\nimport { TipoModalidadeListComponent } from './tipo-modalidade-list/tipo-modalidade-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoModalidadeListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Modalidade\" } },\r\n  { path: 'new', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Tipo de Modalidade\", modal: true } },\r\n  { path: ':id/edit', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Tipo de Modalidade\", modal: true } },\r\n  { path: ':id/consult', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Tipo de Modalidade\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoModalidadeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TipoModalidadeRoutingModule } from './tipo-modalidade-routing.module';\r\nimport { TipoModalidadeFormComponent } from './tipo-modalidade-form/tipo-modalidade-form.component';\r\nimport { TipoModalidadeListComponent } from './tipo-modalidade-list/tipo-modalidade-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoModalidadeFormComponent,\r\n    TipoModalidadeListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoModalidadeRoutingModule\r\n  ]\r\n})\r\nexport class TipoModalidadeModule { }\r\n"],"names":["Base","TipoModalidade","constructor","data","nome","plano_trabalho_calcula_horas","atividade_tempo_despendido","atividade_esforco","initialization","EditableFormComponent","TipoModalidadeDaoService","PageFormBase","TipoModalidadeFormComponent","injector","validate","control","controlName","result","indexOf","value","length","titleEdit","entity","lex","translate","form","fh","FormBuilder","default","cdRef","loadData","formValue","Object","assign","patchValue","util","fillForm","initializeData","saveData","Promise","resolve","reject","tipoModalidade","fill","_","i0","ɵɵdirectiveInject","Injector","_2","selectors","viewQuery","TipoModalidadeFormComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","TipoModalidadeFormComponent_Template_editable_form_submit_0_listener","onSaveData","TipoModalidadeFormComponent_Template_editable_form_cancel_0_listener","onCancel","ɵɵelement","ɵɵelementEnd","ɵɵproperty","formDisabled","isModal","title","ɵɵadvance","ɵɵattribute","GridComponent","PageListBase","ctx_r6","ɵɵtemplate","TipoModalidadeListComponent_ng_template_8_badge_1_Template","row_r5","TipoModalidadeListComponent_ng_template_11_badge_1_Template","TipoModalidadeListComponent_ng_template_11_badge_2_Template","row_r7","TipoModalidadeListComponent","filterWhere","filter","push","trim","replace","code","atividades_homologadas","dispensa_avaliacao","exige_assinatura","data_inicio","data_fim","addOption","OPTION_INFORMACOES","OPTION_EXCLUIR","OPTION_LOGS","TipoModalidadeListComponent_Query","TipoModalidadeListComponent_Template_grid_select_0_listener","$event","onSelect","TipoModalidadeListComponent_toolbar_1_Template","TipoModalidadeListComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","TipoModalidadeListComponent_ng_template_11_Template","dao","add","orderBy","groupBy","join","selectable","auth","hasPermissionTo","filterSubmit","bind","filterCollapseChange","filterCollapsed","controls","_r1","_r3","edit","options","rowsLimit","RouterModule","AuthGuard","ConfigResolver","routes","path","component","canActivate","config","runGuardsAndResolvers","modal","TipoModalidadeRoutingModule","_3","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","TipoModalidadeModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}