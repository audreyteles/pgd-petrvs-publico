{"version":3,"sources":["./src/app/modules/cadastros/tipo-avaliacao/tipo-avaliacao-form/tipo-avaliacao-form.component.ts","./src/app/modules/cadastros/tipo-avaliacao/tipo-avaliacao-form/tipo-avaliacao-form.component.html","./src/app/modules/cadastros/tipo-avaliacao/tipo-avaliacao-list/tipo-avaliacao-list.component.ts","./src/app/modules/cadastros/tipo-avaliacao/tipo-avaliacao-list/tipo-avaliacao-list.component.html","./src/app/modules/cadastros/tipo-avaliacao/tipo-avaliacao-routing.module.ts","./src/app/modules/cadastros/tipo-avaliacao/tipo-avaliacao.module.ts","./src/app/models/tipo-avaliacao.model.ts"],"names":[],"mappings":"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","file":"modules-cadastros-tipo-avaliacao-tipo-avaliacao-module.js","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoAvaliacaoDaoService } from 'src/app/dao/tipo-avaliacao-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { TipoJustificativaDaoService } from 'src/app/dao/tipo-justificativa-dao.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { TipoJustificativa} from 'src/app/models/tipo-justificativa.model';\r\n\r\n@Component({\r\n  selector: 'app-tipo-avaliacao-form',\r\n  templateUrl: './tipo-avaliacao-form.component.html',\r\n  styleUrls: ['./tipo-avaliacao-form.component.scss']\r\n})\r\n\r\nexport class TipoAvaliacaoFormComponent extends PageFormBase<TipoAvaliacao, TipoAvaliacaoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public tipoJustificativaDao: TipoJustificativaDaoService;\r\n  public justificativasLista: LookupItem[] = [];\r\n  public form: FormGroup;\r\n  public formNota: FormGroup;\r\n  public tipoJustificativa: TipoJustificativa = new TipoJustificativa();\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoAvaliacao, TipoAvaliacaoDaoService);\r\n    this.tipoJustificativaDao = injector.get<TipoJustificativaDaoService>(TipoJustificativaDaoService);\r\n    this.join = [\"tipos_avaliacoes_justificativas\", \"tipos_avaliacoes_justificativas.tipo_justificativa\"];\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      tipo: {default: \"QUANTITATIVO\"},\r\n      notas: {default: []}\r\n    }, this.cdRef, this.validate);\r\n    this.formNota = this.fh.FormBuilder({\r\n      aceita_entrega: {default: \"\"},\r\n      pergunta: {default: \"\"},\r\n      icone: {default: \"\"},\r\n      cor: {default: \"\"}\r\n    }, this.cdRef, this.validateNota);\r\n  }\r\n  \r\n  public addItemHandle(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if(this.util.validateLookupItem(this.justificativasLista, this.form.controls.justificativa_id.value)) {\r\n      this.tipoJustificativaDao.getById(this.form.controls.justificativa_id.value).then(j => {\r\n        result = {\r\n          key: j?.id,\r\n          value: j?.nome\r\n        }\r\n        return result;\r\n      })\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateNota = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(['pergunta'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoAvaliacao, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    this.entity = new TipoAvaliacao();\r\n    this.loadData(this.entity, form);    \r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoAvaliacao> {\r\n    return new Promise<TipoAvaliacao>((resolve, reject) => {\r\n      let tipoAvaliacao = this.util.fill(new TipoAvaliacao(), this.entity!);\r\n      tipoAvaliacao = this.util.fillForm(tipoAvaliacao, this.form!.value);\r\n      resolve(tipoAvaliacao);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoAvaliacao): string => {\r\n    return \"Editando \" + this.lex.translate(\"Tipo de Avaliação\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form> (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <div class=\"row\">\r\n        <input-text [size]=\"4\" label=\"Título\" controlName=\"nome\"></input-text>\r\n        <input-rate [size]=\"6\" label=\"Nota\" icon=\"bi bi-question-octagon\" controlName=\"nota_atribuida\"></input-rate>\r\n        <input-radio [size]=\"2\" [label]=\"'Aceita ' + lex.translate('Entrega') + '?'\" icon=\"bi bi-hexagon\" controlName=\"aceita_entrega\" [items]=\"lookup.SIMNAO\"></input-radio>\r\n    </div>\r\n    <div class=\"row\">\r\n        <input-text [size]=\"6\" label=\"Pergunta Motivacional\" controlName=\"pergunta\"></input-text>\r\n        <input-select [size]=\"3\" label=\"Ícone\" icon=\"fas fa-sign-out-alt\" controlName=\"icone\" [items]=\"lookup.ICONES\"></input-select>\r\n        <input-color [size]=\"3\" label=\"Cor\" controlName=\"cor\"></input-color>\r\n    </div>\r\n    <div class=\"row\">\r\n        <input-multiselect [size]=\"12\" [canEdit]=\"true\" [addItemControl]=\"justificativa\" controlName=\"justificativas\" [label]=\"lex.translate('Justificativa')\" [items]=\"justificativasLista\">\r\n            <input-select [size]=\"12\" #justificativa controlName=\"justificativa_id\" [dao]=\"tipoJustificativaDao\" [addRoute]=\"{route: ['cadastros', 'tipo-justificativa', 'new']}\"></input-select>\r\n        </input-multiselect>\r\n    </div>\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoAvaliacaoDaoService } from 'src/app/dao/tipo-avaliacao-dao.service';\r\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tipo-avaliacao-list',\r\n  templateUrl: './tipo-avaliacao-list.component.html',\r\n  styleUrls: ['./tipo-avaliacao-list.component.scss']\r\n})\r\nexport class TipoAvaliacaoListComponent extends PageListBase<TipoAvaliacao, TipoAvaliacaoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoAvaliacao, TipoAvaliacaoDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Tipos de Avaliação\");\r\n    this.code=\"MOD_TIPO_AVAL\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      nota_atribuida: {default: \"\"},\r\n      aceita_entrega: {default: \"\"},\r\n      pergunta: {default: \"\"},\r\n      icone: {default: \"\"},\r\n      cor: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados do tipo de avaliação\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_AVAL_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o tipo de avaliação\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_AVAL_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_AVAL_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_AVAL_EDT')\">\r\n    <toolbar></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"'Nome ' + lex.translate('tipo de avaliação')\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome...\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Descrição\" [template]=\"columnDescricao\">\r\n            <ng-template let-row=\"row\" #columnDescricao>\r\n                <i [class]=\"row.icone\" [style.color]=\"row.cor\"></i><span [style.color]=\"row.cor\"> {{row.nome}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Nota\" field=\"nota_atribuida\"></column>\r\n        <column [title]=\"'Aceita ' + lex.translate('entrega')\" [template]=\"columnAceita_entrega\">\r\n            <ng-template let-row=\"row\" #columnAceita_entrega>\r\n                <span>{{ row.aceita_entrega ? 'Sim' : 'Não'}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Pergunta Motivacional\" field=\"pergunta\"></column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoAvaliacaoFormComponent } from './tipo-avaliacao-form/tipo-avaliacao-form.component';\r\nimport { TipoAvaliacaoListComponent } from './tipo-avaliacao-list/tipo-avaliacao-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoAvaliacaoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Avaliação\" } },\r\n  { path: 'new', component: TipoAvaliacaoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Tipo de Avaliação\", modal: true } },\r\n  { path: ':id/edit', component: TipoAvaliacaoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Tipo de Avaliação\", modal: true } },\r\n  { path: ':id/consult', component: TipoAvaliacaoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Tipo de Avaliação\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoAvaliacaoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TipoAvaliacaoRoutingModule } from './tipo-avaliacao-routing.module';\r\nimport { TipoAvaliacaoFormComponent } from './tipo-avaliacao-form/tipo-avaliacao-form.component';\r\nimport { TipoAvaliacaoListComponent } from './tipo-avaliacao-list/tipo-avaliacao-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoAvaliacaoFormComponent,\r\n    TipoAvaliacaoListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoAvaliacaoRoutingModule\r\n  ]\r\n})\r\nexport class TipoAvaliacaoModule { }\r\n\r\n\r\n","import { Base } from './base.model';\r\n\r\nexport type TipoAvaliacaoTipo = 'QUALITATIVO' | 'QUANTITATIVO';\r\nexport type TipoAvaliacaoNota = {\r\n    nota: any;\r\n    aprova?: boolean;\r\n    pergunta?: string;\r\n    icone?: string;\r\n    cor?: string\r\n};\r\n\r\nexport class TipoAvaliacao extends Base {\r\n    public tipo: TipoAvaliacaoTipo = 'QUANTITATIVO'; /* Se a nota será um número ou um conceito */\r\n    public nome: string = \"\"; /* Nome do tipo de avaliação */\r\n    public notas: TipoAvaliacaoNota[] = []; /* Notas */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n\r\n\r\n "],"sourceRoot":"webpack:///"}