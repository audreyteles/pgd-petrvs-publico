{"version":3,"sources":["./src/app/modules/base/page-list-base.ts","./src/app/modules/base/page-form-base.ts","./src/app/dao/cidade-dao.service.ts"],"names":[],"mappings":"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","file":"default~modules-cadastros-cidade-cidade-module~modules-cadastros-feriado-feriado-module~modules-conf~d8d5409e.js","sourcesContent":["import { OnInit, Injector, Injectable, Type } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DaoBaseService, QueryOrderBy } from 'src/app/dao/dao-base.service';\r\nimport { Base, IIndexable } from 'src/app/models/base.model';\r\nimport { PageBase } from './page-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { GridComponent, GroupBy } from 'src/app/components/grid/grid.component';\r\nimport { QueryContext } from 'src/app/dao/query-context';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\n\r\n//@Component({ template: '' })\r\n@Injectable()\r\nexport abstract class PageListBase<M extends Base, D extends DaoBaseService<M>> extends PageBase implements OnInit {\r\n  public abstract grid?: GridComponent;\r\n\r\n  public dao?: D;\r\n  public filter?: FormGroup;\r\n\r\n  /* configurações */\r\n  public orderBy?: QueryOrderBy[];\r\n  public groupBy?: GroupBy[];\r\n  public join: string[] = [];\r\n  public options: ToolbarButton[] = [];\r\n  public rowsLimit = QueryContext.DEFAULT_LIMIT;\r\n  public selectable: boolean = false;\r\n  public loadFilterParams?: (params: any, filter?: FormGroup) => void;\r\n\r\n  constructor(public injector: Injector, mType: Type<M>, dType: Type<D>) {\r\n    super(injector);\r\n    this.dao = injector.get<D>(dType);\r\n    this.options = [\r\n      {\r\n        label: \"Informações\", \r\n        icon: \"bi bi-info-circle\", \r\n        onClick: this.consult.bind(this)\r\n      },\r\n      {\r\n        label: \"Excluir\",\r\n        icon: \"bi bi-trash\",\r\n        onClick: this.delete.bind(this)\r\n      }\r\n    ];\r\n  }\r\n\r\n  public onLoad() {\r\n    this.grid?.queryInit();\r\n  }\r\n  \r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.selectable = !!this.queryParams?.selectable;\r\n    if(this.selectable) {\r\n      this.title = \"Selecionar \" + this.title;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if(this.queryParams?.filter) {\r\n      if(this.loadFilterParams) {\r\n        this.loadFilterParams(this.queryParams?.filter, this.filter);\r\n      } else {\r\n        this.filter?.patchValue(this.queryParams?.filter, { emitEvent: true });\r\n      }      \r\n    }\r\n    this.onLoad();\r\n  }\r\n\r\n  public add = async () => {\r\n    this.go.navigate({route: [...this.go.currentOrDefault.route, \"new\"]}, {\r\n      filterSnapshot: undefined, \r\n      querySnapshot: undefined,\r\n      modalClose: (modalResult) => {\r\n        if(modalResult) this.grid!.query!.refresh();\r\n      } \r\n    });\r\n  }\r\n\r\n  public consult = async (doc: M) => {\r\n    this.go.navigate({route: [...this.go.currentOrDefault.route, doc.id, \"consult\"]});\r\n  }  \r\n  \r\n  public edit = async (doc: M) => {\r\n    this.go.navigate({route: [...this.go.currentOrDefault.route, doc.id, \"edit\"]}, {\r\n      filterSnapshot: undefined, \r\n      querySnapshot: undefined,\r\n      modalClose: (modalResult) => {\r\n        if(modalResult) this.grid!.query!.refreshId(doc.id);\r\n      } \r\n    });\r\n  }\r\n\r\n  public delete = async (doc: M) => {\r\n    const self = this;\r\n\r\n    this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\").then(confirm => {\r\n      if(confirm) {\r\n        this.dao!.delete(doc).then(function () {\r\n          self.grid!.query!.removeId(doc.id);\r\n          //self.grid!.query!.refresh();\r\n          self.dialog.alert(\"Sucesso\", \"Registro excluído com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao excluir: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    }); \r\n  }\r\n\r\n  public error = (error: string) => {\r\n    if(this.grid) this.grid.error = error;\r\n  }\r\n\r\n  public onSelect(selected: Base | IIndexable | null) {\r\n    const routeId = this.modalRoute?.queryParams?.idroute;\r\n    if(selected && routeId?.length) {\r\n      this.go.setModalResult(routeId, selected.id);\r\n      this.go.back(undefined, this.backRoute);\r\n    } \r\n  }\r\n}\r\n","import { OnInit, Injector, Injectable, Type } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\r\nimport { Base, IIndexable } from 'src/app/models/base.model';\r\nimport { PageBase } from './page-base';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\n\r\n//@Component({ template: '' })\r\n@Injectable()\r\nexport abstract class PageFormBase<M extends Base, D extends DaoBaseService<M>> extends PageBase implements OnInit {\r\n  public abstract editableForm?: EditableFormComponent;\r\n\r\n  public form?: FormGroup;\r\n  public entity?: M;\r\n  public dao?: D;\r\n  public action: string = \"\";\r\n  public formValidation?: (form?: FormGroup) => string | undefined | null;\r\n  private _submitting: boolean = false;\r\n  public set submitting(value: boolean) {\r\n    if(!value) {\r\n      this.dialog.closeSppinerOverlay();\r\n    } else if(!this._submitting) {\r\n      this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n    }\r\n    this._submitting = value;\r\n  }\r\n  public get submitting(): boolean {\r\n    return this._submitting;\r\n  } \r\n  private _loading: boolean = false;\r\n  public set loading(value: boolean) {\r\n    if(!value) {\r\n      this.dialog.closeSppinerOverlay();\r\n    } else if(!this._loading) {\r\n      this.dialog.showSppinerOverlay(\"Carregando dados do formulário\");\r\n    }\r\n    this._loading = value;\r\n  }\r\n  public get loading(): boolean {\r\n    return this._loading;\r\n  } \r\n\r\n  /* Configurações */\r\n  public join: string[] = [];\r\n  public mensagemSalvarSucesso = \"Registro salvo com sucesso!\";\r\n\r\n  constructor(public injector: Injector, mType: Type<M>, dType: Type<D>) {\r\n    super(injector);\r\n    this.dao = injector.get<D>(dType);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";  \r\n    this.action = [\"edit\", \"consult\"].includes(segment) ? segment : \"new\";\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.onInitializeData();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public get formDisabled(): boolean {\r\n    return this.action == \"consult\";\r\n  }\r\n\r\n  public abstract loadData(entity: M, form: FormGroup): Promise<void> | void;\r\n\r\n  public abstract initializeData(form: FormGroup): Promise<void> | void;\r\n\r\n  public abstract saveData(form: IIndexable): Promise<M | boolean | undefined | null>;\r\n\r\n  public abstract titleEdit(entity: M): string;\r\n\r\n  private onInitializeData() {\r\n    (async () => {\r\n      this.loading = true;\r\n      try {\r\n        if ([\"edit\", \"consult\"].includes(this.action)) {\r\n          const entity = await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join);\r\n          this.entity = entity!;\r\n          await this.loadData(this.entity, this.form!);\r\n        } else if (this.action == \"new\") {\r\n          await this.initializeData(this.form!);\r\n        }\r\n      } catch (erro) {\r\n        this.error(\"Erro ao carregar dados: \" + erro);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    })();\r\n  }\r\n\r\n  async onSaveData() {\r\n    const self = this;\r\n    const error = this.formValidation ? this.formValidation(this.form!) : undefined; \r\n    if(this.form!.valid && !error){\r\n      this.submitting = true;\r\n      try {\r\n        let entity = await this.saveData(this.form!.value);\r\n        if(entity){\r\n          let saved = typeof entity == \"boolean\" ? {id: this.entity?.id} : await this.dao!.save(entity);\r\n          if(self.modalRoute?.queryParams?.idroute?.length) self.go.setModalResult(self.modalRoute?.queryParams?.idroute, saved.id);\r\n          //self.dialog.alert(\"Sucesso\", this.mensagemSalvarSucesso).then(() => self.go.back());\r\n          self.go.back(undefined, this.backRoute);\r\n        }\r\n      } catch (error: any) {\r\n        self.error(error.message ? error.message : error);\r\n        console.log(error);\r\n      } finally {\r\n        self.submitting = false;\r\n      }\r\n    } else {\r\n      this.form!.markAllAsTouched();\r\n      if(error) {\r\n        this.error(error);\r\n        console.log(\"Form error => \" + error);\r\n      }\r\n      Object.entries(this.form!.controls).forEach(([key, value]) => {\r\n        if(value.invalid) console.log(\"Validate => \" + key, value.value, value.errors);\r\n      });\r\n    }\r\n  }\r\n\r\n  public onCancel() {\r\n    this.go.back(undefined, this.backRoute);\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.title = this.action == \"new\" ? \"Novo\" : this.titleEdit(this.entity!);\r\n  }\r\n\r\n  public getControlByName(controlName: string): AbstractControl {\r\n    return this.form!.controls[controlName];\r\n  }\r\n\r\n  public error = (error: string) => {\r\n    if(this.editableForm) this.editableForm.error = error;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Cidade } from '../models/cidade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CidadeDaoService extends DaoBaseService<Cidade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Cidade\", injector);\r\n    this.searchFields = [\"UF\", \"nome\"];\r\n  }  \r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}