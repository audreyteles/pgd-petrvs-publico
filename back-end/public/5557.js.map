{"version":3,"file":"5557.js","mappings":"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","sources":["./src/app/models/atividade-tarefa.model.ts","./src/app/modules/gestao/atividade/atividade-list-base.ts","./src/app/modules/gestao/atividade/atividade-list-grid/atividade-list-grid.component.ts","./src/app/modules/gestao/atividade/atividade-list-grid/atividade-list-grid.component.html"],"sourcesContent":["import { Base } from './base.model';\nimport { Comentario, HasComentarios } from './comentario';\nimport { Atividade } from './atividade.model';\nimport { TipoTarefa } from './tipo-tarefa.model';\nimport { Usuario } from './usuario.model';\nimport { Documento } from './documento.model';\n\nexport class AtividadeTarefa extends Base implements HasComentarios {\n    public atividade?: Atividade;\n    public usuario?: Usuario;\n    public tipo_tarefa?: TipoTarefa;\n    public documento: Documento | null = null ; /* Documento de entrga */ \n    public comentarios: Comentario[] = []; /* Comentarios da tarefa */\n\n    public descricao: string | null = null; /* Descrição da tarefa */\n    public data_lancamento: Date = new Date(); /* Data hora do lançamento da tarefa */\n    public tempo_estimado: number = 0; /* Tempo estimado para a execução da tarefa (Horas decimais) */\n    public data_conclusao: Date | null = null; /* Data de conclusao */\n\n    public documento_id: string | null = null ; /* Documento de entrga */ \n    public atividade_id: string = \"\"; /* Atividade */\n    public usuario_id: string = \"\"; /* Usuário */\n    public tipo_tarefa_id: string | null = null; /* Tarefa */\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}\n","import { Injector, TemplateRef } from '@angular/core';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { Atividade, Checklist } from 'src/app/models/atividade.model';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { CalendarService, Efemerides, FeriadoList } from 'src/app/services/calendar.service';\nimport { Afastamento } from 'src/app/models/afastamento.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { TipoProcessoDaoService } from 'src/app/dao/tipo-processo-dao.service';\nimport { ComentarioService } from 'src/app/services/comentario.service';\nimport { BadgeButton } from 'src/app/components/badge/badge.component';\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { AtividadeOptionsMetadata, AtividadeService, ExtraAtividade } from './atividade.service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\n\nexport abstract class AtividadeListBase extends PageListBase<Atividade, AtividadeDaoService> {\n  public calendarEfemerides?: TemplateRef<any>;\n  public unidadeDao: UnidadeDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public planoTrabalhoDao: PlanoTrabalhoDaoService;\n  public tipoAtividadeDao: TipoAtividadeDaoService;\n  public tipoProcessoDao: TipoProcessoDaoService;\n  public allPages: ListenerAllPagesService;\n  public atividadeService: AtividadeService;\n  public calendar: CalendarService;\n  public comentario: ComentarioService;\n  public extra: ExtraAtividade;\n  public etiquetas: LookupItem[] = [];\n  public checklist?: Checklist[];\n  public efemerides?: Efemerides;\n  public optionsMetadata: AtividadeOptionsMetadata;\n  public addComentarioButton: ToolbarButton = {\n    icon: \"bi bi-plus-circle\",\n    hint: \"Incluir comentário\"\n  }\n  public DATAS_FILTRO: LookupItem[] = [\n    { key: \"DISTRIBUICAO\", value: \"Distribuição\", icon: \"bi bi-file-earmark-plus\", color: \"badge rounded-pill bg-warning text-dark\" },\n    { key: \"PRAZO\", value: \"Prazo\", icon: \"bi bi-calendar-check\", color: \"badge rounded-pill bg-info text-dark\" },\n    { key: \"CONCLUSAO\", value: \"Conclusão\", icon: \"bi bi-check-circle\", color: \"badge rounded-pill bg-info text-dark\" }\n  ];\n\n  constructor(public injector: Injector) {\n    super(injector, Atividade, AtividadeDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\n    this.tipoProcessoDao = injector.get<TipoProcessoDaoService>(TipoProcessoDaoService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.atividadeService = injector.get<AtividadeService>(AtividadeService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.comentario = injector.get<ComentarioService>(ComentarioService);\n    this.join = [\"tipo_atividade\", \"plano_trabalho_entrega:id,descricao\", \"demandante\", \"pausas\", \"usuario\", \"unidade\", \"comentarios.usuario:id,nome,apelido\", \"tarefas.tipo_tarefa\", \"tarefas.comentarios.usuario:id,nome,apelido\", \"reacoes.usuario:id,nome,apelido\"];\n    /* Inicializações */\n    this.extra = { planos_trabalho: {}, afastamentos: {} };\n    this.optionsMetadata = {\n      refreshId: ((id: string) => (this.grid?.query || this.query!).refreshId(id)).bind(this),\n      removeId: ((id: string) => (this.grid?.query || this.query!).removeId(id)).bind(this),\n      refresh: this.refresh.bind(this)\n    }\n  }\n\n  public onGridLoad(rows?: any[]) {\n    /* Ordena os comentários */\n    rows?.forEach((atividade: Atividade) => {\n      atividade.comentarios = this.comentario.orderComentarios(atividade.comentarios);\n    });\n    /* Recebe informações extra da query para auxiliar em cálculos e melhorar performace da consulta */\n    const extra = (this.grid?.query || this.query!).extra;\n    if (extra) {\n      //this.extra.avaliadores = Object.assign(this.extra.avaliadores, extra.avaliadores || {});\n      this.extra.planos_trabalho = Object.assign(this.extra.planos_trabalho, extra.planos || {});\n      for (let [key, value] of Object.entries(extra.afastamentos || {})) {\n        this.extra.afastamentos[key] = (value as Array<Afastamento>).reduce((a, v) => {\n          if (!a.find(x => x.id == v.id)) a.push(v);\n          return a;\n        }, this.extra.afastamentos[key] || []);\n      }\n      Object.entries(extra.feriados || {}).forEach(([key, value]) => {\n        if (!this.calendar.feriadosCadastrados[key]) this.calendar.feriadosCadastrados[key] = value as FeriadoList;\n      });\n\n      rows?.forEach(a => {\n        a.planoTrabalho = extra.planos_trabalho[a.plano_trabalho_id];\n      });\n\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onAtribuidasParaMimChange(event: Event) {\n    if (this.filter!.controls.atribuidas_para_mim.value) {\n      this.filter!.controls.usuario_id.setValue(this.auth.usuario!.id);\n    } else {\n      this.filter!.controls.usuario_id.setValue(undefined);\n    }\n  }\n\n  public onSomenteUnidadeAtualChange(event: Event) {\n    if (this.filter!.controls.somente_unidade_atual.value) {\n      this.filter!.controls.unidade_id.setValue(this.auth.unidade!.id);\n    } else {\n      this.filter!.controls.unidade_id.setValue(undefined);\n    }\n  }\n\n  public onDespendidoClick(row: Atividade) {\n    if (row.metadados && !row.metadados.concluido) {\n      const cargaHoraria = this.extra?.planos_trabalho[row.plano_trabalho_id!]?.carga_horaria || 0;\n      const afastamentos = this.extra?.afastamentos[row.usuario_id!] || [];\n      this.efemerides = this.calendar.calculaDataTempoUnidade(row.data_inicio!, this.auth.hora, cargaHoraria, row.unidade!, \"ENTREGA\", row.pausas, afastamentos);\n      this.dialog.template({ title: \"Cálculos do tempo despendido\" }, this.calendarEfemerides!, []);\n    }\n  }\n\n/*   public temposAtividade(row: Atividade): BadgeButton[] {\n    // Atualiza somente a cada mudança de minuto da unidade atual\n    if (row.metadados && row.metadados.extra?.lastUpdate != this.auth.unidadeHora) {\n      let planoTrabalho = this.extra?.planos_trabalho[row.plano_trabalho_id!];\n      let tempos: BadgeButton[] = [\n        { color: \"light\", hint: this.lex.translate(\"Data de distribuição\"), icon: \"bi bi-file-earmark-plus\", label: this.dao!.getDateTimeFormatted(row.data_distribuicao) },\n        { color: \"light\", hint: this.lex.translate(\"Prazo de entrega\"), icon: \"bi bi-calendar-check\", label: this.dao!.getDateTimeFormatted(row.data_estipulada_entrega) }\n      ];\n      if (planoTrabalho?.tipo_modalidade?.atividade_esforco) tempos.push({ color: \"light\", hint: this.lex.translate(\"Esforço\"), icon: \"bi bi-stopwatch\", label: (row.esforco ? this.util.decimalToTimerFormated(row.esforco, true) + \" \" + this.lex.translate(\"esforço\") : \"Sem \" + this.lex.translate(\"esforço\"))});\n      if (row.metadados.concluido) tempos.push({ color: \"light\", hint: \"Data de entrega realizada\", icon: \"bi bi-check-circle\", label: this.dao!.getDateTimeFormatted(row.data_entrega) });\n      if (row.metadados.iniciado && !!planoTrabalho?.tipo_modalidade?.atividade_tempo_despendido) {\n        const cargaHoraria = planoTrabalho?.carga_horaria || 0;\n        const afastamentos = this.extra?.afastamentos[row.usuario_id!] || [];\n        const despendido = row.metadados.concluido ? (row.tempo_despendido || 0) : this.calendar.horasUteis(row.data_inicio!, this.auth.hora, cargaHoraria, row.unidade!, \"ENTREGA\", row.pausas, afastamentos);\n        tempos.push({ color: (despendido > row.esforco ? \"warning\" : \"light\"), hint: \"Tempo despendido\", icon: \"bi bi-hourglass-split\", label: this.util.decimalToTimerFormated(despendido, true) + \" despendido\", click: !row.metadados.concluido ? this.onDespendidoClick.bind(this) : undefined, data: row });\n      }\n      if (!row.metadados.concluido && row.data_estipulada_entrega.getTime() < this.auth.hora.getTime()) {\n        const atrasado = this.calendar.horasAtraso(row.data_estipulada_entrega, row.unidade!);\n        tempos.push({ color: \"danger\", hint: \"Tempo de atraso\", icon: \"bi bi-alarm\", label: this.util.decimalToTimerFormated(atrasado, true) + \" atrasado\" });\n      }\n      row.metadados.extra = row.metadados.extra || {};\n      row.metadados.extra.lastUpdate = this.auth.unidadeHora;\n      row.metadados.extra.tempos = tempos;\n    }\n    return row.metadados?.extra?.tempos || [];\n  } \n\n  public desarquivar(atividade: Atividade) {\n    this.dao!.arquivar(atividade.id, false).then(() => {\n      this.grid!.query!.refreshId(atividade.id);\n    }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao cancelar inicio: \" + error?.message ? error?.message : error));\n  }\n\n  public arquivar(atividade: Atividade) {\n    this.dialog.confirm(\"Arquivar?\", \"Deseja realmente arquivar a atividade?\").then(confirm => {\n      if (confirm) {\n        this.dao!.arquivar(atividade.id, true).then(() => {\n          if (this.filter?.controls.arquivadas?.value) {\n            this.grid!.query!.refreshId(atividade.id);\n          } else {\n            (this.grid?.query || this.query!).removeId(atividade.id);\n          }\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao cancelar inicio: \" + error?.message ? error?.message : error));\n      }\n    });\n  }*/\n\n  /*public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let atividade: Atividade = row as Atividade;\n    const isGestor = this.auth.usuario?.id == atividade.unidade?.gestor?.id || this.auth.usuario?.id == atividade.unidade?.gestor_substituto?.id;\n    const isDemandante = this.auth.usuario?.id == atividade.demandante_id;\n    const isResponsavel = this.auth.usuario?.id == atividade.usuario_id;\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'consult'] }, { modal: true }) };\n    const BOTAO_COMENTARIOS = { label: \"Comentários\", icon: \"bi bi-chat-left-quote\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['uteis', 'comentarios', 'ATIVIDADE', atividade.id, 'new'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_CLONAR = { label: \"Clonar\", icon: \"bi bi-stickies\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'clonar'] }, this.modalRefresh()) };\n    const BOTAO_ALTERAR = { label: \"Alterar atividade\", icon: \"bi bi-pencil-square\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'edit'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_EXCLUIR = { label: \"Excluir atividade\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    const BOTAO_PRORROGAR_PRAZO = { label: \"Prorrogar prazo\", icon: \"bi bi-skip-end-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'prorrogar'] }, this.modalRefreshId(atividade))};\n    const BOTAO_INICIAR = { label: \"Iniciar\", id: \"INICIADO\", icon: \"bi bi-play-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'iniciar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_CANCELAR_INICIO = { label: \"Cancelar inicio\", id: \"NAOINICIADO\", icon: \"bi bi-backspace\", onClick: this.cancelarInicio.bind(this) };\n    const BOTAO_ALTERAR_INICIO = { label: \"Alterar inicio\", icon: \"bi bi-play-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'iniciar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_PAUSAR = { label: \"Pausar\", id: \"PAUSADO\", icon: \"bi bi-pause-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'pausar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_REINICIAR = { label: \"Reiniciar\", id: \"INICIADO\", icon: \"bi bi-play-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'pausar'], params: { reiniciar: true } }, this.modalRefreshId(atividade)) };\n    const BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: \"bi bi-check-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_ALTERAR_CONCLUSAO = { label: \"Alterar conclusão\", icon: \"bi bi-check-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", id: \"INICIADO\", icon: \"bi bi-backspace\", onClick: this.cancelarConclusao.bind(this) };\n    const BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    const BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n\n    result.push(BOTAO_INFORMACOES);\n    if (isResponsavel || isGestor || isDemandante) result.push(BOTAO_COMENTARIOS);\n    result.push(BOTAO_CLONAR);\n    if (atividade.metadados?.arquivado) { /* Arquivado * /\n      if (isGestor || isResponsavel) result.push(BOTAO_DESARQUIVAR);\n    } else if (!atividade.metadados?.iniciado) {\n      if (isResponsavel || (atividade.usuario_id == null) || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) { /* Não iniciado * /\n        result.push(BOTAO_INICIAR);\n      }\n      if (isGestor || isDemandante || this.auth.hasPermissionTo('MOD_DMD_USERS_ALT')) {\n        result.push(BOTAO_ALTERAR);\n      }\n      if (isGestor || isDemandante || this.auth.hasPermissionTo('MOD_DMD_USERS_EXCL') || this.auth.hasPermissionTo('MOD_DMD_NI_EXCL')) {\n        if (result.length) result.push({ divider: true });\n        result.push(BOTAO_EXCLUIR);\n      }\n    } else if (atividade.metadados?.concluido) { /* Concluído -> Gestor ou substituto pode avaliar * /\n      if (isGestor || isResponsavel) result.push(BOTAO_ARQUIVAR);\n      if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_ALT_CONCL')) {\n        result.push(BOTAO_ALTERAR_CONCLUSAO);\n      }\n      if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CANC_CONCL') ) {\n        if (result.length) result.push({ divider: true });\n        result.push(BOTAO_CANCELAR_CONCLUSAO);\n      }\n    } else if (atividade.metadados?.iniciado) { /* Iniciado * /\n      if (atividade.metadados?.pausado) {\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) { /* Iniciada e Pausada * /\n          result.push(BOTAO_REINICIAR);\n        }\n      } else { /* Iniciada e não Suspensa * /\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CONCL')) result.push(BOTAO_CONCLUIR);\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_PAUSA')) result.push(BOTAO_PAUSAR);\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CANC_INICIAR')) result.push(BOTAO_CANCELAR_INICIO);\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) result.push(BOTAO_ALTERAR_INICIO);\n      }\n      if (isGestor || isDemandante || this.auth.hasPermissionTo('MOD_DMD_USERS_PPRZO')) {\n        result.push(BOTAO_PRORROGAR_PRAZO);\n      }\n    }\n    return result;\n  }*/\n\n  /*public cancelarInicio(atividade: Atividade) {\n    const self = this;\n    this.dialog.confirm(\"Cancelar inicio ?\", \"Deseja realmente cancelar a inicialização?\").then(confirm => {\n      if (confirm) {\n        this.dao!.cancelarInicio(atividade.id).then(function () {\n          (self.grid?.query || self.query!).refreshId(atividade.id);\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\n        }).catch(function (error) {\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar inicio: \" + error?.message ? error?.message : error);\n        });\n      }\n    });\n  }\n\n  public cancelarConclusao(atividade: Atividade) {\n    const self = this;\n    this.dialog.confirm(\"Cancelar conclusão ?\", \"Deseja realmente cancelar a conclusão?\").then(confirm => {\n      if (confirm) {\n        this.dao!.cancelarConclusao(atividade.id).then(function () {\n          (self.grid?.query || self.query!).refreshId(atividade.id);\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\n        }).catch(function (error) {\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar conclusão: \" + error?.message ? error?.message : error);\n        });\n      }\n    });\n  }*/\n\n  /*public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let atividade: Atividade = row as Atividade;\n    const isGestor = this.auth.usuario?.id == atividade.unidade?.gestor?.id || this.auth.usuario?.id == atividade.unidade?.gestor_substituto?.id;\n    const isResponsavel = this.auth.usuario?.id == atividade.usuario_id;\n    const BOTAO_ALTERAR_AVALIACAO = { hint: \"Alterar avaliação\", icon: \"bi bi-check-all\", color: \"btn-outline-danger\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'avaliar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'consult'] }, { modal: true }) };\n    const BOTAO_INICIAR = { hint: \"Iniciar\", icon: \"bi bi-play-circle\", color: \"btn-outline-secondary\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'iniciar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_REINICIAR = { hint: \"Reiniciar\", icon: \"bi bi-play-circle\", color: \"btn-outline-secondary\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'pausar'], params: { reiniciar: true } }, this.modalRefreshId(atividade)) };\n    const BOTAO_CONCLUIR = { hint: \"Concluir\", icon: \"bi bi-check\", color: \"btn-outline-success\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_ARQUIVAR = { hint: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    const BOTAO_DESARQUIVAR = { hint: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    const BOTAO_ALTERAR_CONCLUSAO = { hint: \"Alterar conclusão\", icon: \"bi bi-check-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n\n    if (!atividade.metadados?.iniciado) { /* Não iniciado * /\n      if (isResponsavel || (atividade.usuario_id == null) || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) { /* Usuário da atividade é o mesmo logado * /\n        result.push(BOTAO_INICIAR);\n      }\n    } else if (atividade.metadados?.concluido) { /* Concluído * /\n      if (isGestor || isResponsavel) {\n        result.push(atividade.metadados?.arquivado ? BOTAO_DESARQUIVAR : BOTAO_ARQUIVAR);\n      } else if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_ALT_CONCL')) {\n        result.push(BOTAO_ALTERAR_CONCLUSAO);\n      }\n    } else if (atividade.metadados?.avaliado) { /* Avaliado * /\n      if (isGestor) { /* Usuário logado é gestor da Unidade ou substituto * /\n        result.push(BOTAO_ALTERAR_AVALIACAO);\n      }\n    } else if (atividade.metadados?.iniciado) { /* Iniciado * /\n      if (atividade.metadados?.pausado && isResponsavel) { /* Iniciada e Pausada * /\n        result.push(BOTAO_REINICIAR);\n      } else if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CONCL')) { /* Iniciada e não Suspensa * /\n        result.push(BOTAO_CONCLUIR);\n      }\n    }\n    if(!result.length) result.push(BOTAO_INFORMACOES);\n    return result;\n  }*/\n\n  public onEtiquetaConfigClick() {\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\n      modal: true, modalClose: (modalResult) => {\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n        this.cdRef.detectChanges();\n      }\n    });\n  }\n\n  public comentarioClick(element: HTMLSpanElement) {\n    const value = element.getAttribute(\"data-expanded\");\n    element.setAttribute(\"data-expanded\", value == \"true\" ? \"false\" : \"true\");\n  }\n\n  public addComentarioClick(row: any) {\n    this.go.navigate({ route: ['gestao', 'atividade', row.id, 'comentar'] }, { modal: true, modalClose: modalResult => { if (modalResult) (this.grid?.query || this.query!).refreshId(row.id); } });\n  }\n\n}\n\n","import { Component, ElementRef, Injector, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { Atividade } from 'src/app/models/atividade.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { FullRoute, RouteMetadata } from 'src/app/services/navigate.service';\nimport { AtividadeListBase } from '../atividade-list-base';\nimport { BadgeButton } from 'src/app/components/badge/badge.component';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\n\n@Component({\n  selector: 'atividade-list-grid',\n  templateUrl: './atividade-list-grid.component.html',\n  styleUrls: ['./atividade-list-grid.component.scss']\n})\nexport class AtividadeListGridComponent extends AtividadeListBase {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('calendarEfemerides', { static: false }) public calendarEfemerides?: TemplateRef<any>;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSelectComponent;\n  @ViewChild('planoEntregaEntrega', { static: false }) public planoEntregaEntrega?: InputSelectComponent;\n  @Input() snapshot?: ActivatedRouteSnapshot;\n  @Input() fixedFilter?: any[];\n  @Input() minhas: boolean = false;\n\n  public static selectRoute?: FullRoute = { route: [\"gestao\", \"atividade\", \"grid\"] };\n  public planosEntregas: LookupItem[] = [];\n  public planosEntregasEntregas: LookupItem[] = [];\n  public formEdit: FormGroup;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    /* Inicializações */\n    this.title = this.lex.translate(\"Atividades\");\n    this.code = \"MOD_DMD\";\n    this.modalWidth = 1100;\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      atribuidas_para_mim: { default: false },\n      usuario_id: { default: null },\n      numero: { default: \"\" },\n      somente_unidade_atual: { default: false },\n      unidades_subordinadas: { default: false },\n      plano_trabalho_id: { default: null },\n      unidade_id: { default: null },\n      numero_processo: { default: \"\" },\n      status: { default: null },\n      etiquetas: { default: [] },\n      arquivadas: { default: false },\n      tipo_atividade_id: { default: null },\n      tipo_processo_id: { default: null },\n      data_filtro: { default: null },\n      data_inicio: { default: null },\n      data_fim: { default: null },\n      plano_entrega_id: { default: null},\n      plano_entrega_entrega_id: { default: null},\n    });\n    this.formEdit = this.fh.FormBuilder({\n      progresso: { default: 0 },\n      etiquetas: { default: [] },\n      etiqueta: { default: null }\n    });\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.addOption(this.OPTION_LOGS, \"MOD_AUDIT_LOG\");\n  }\n\n  public storeFilter = (filter?: FormGroup) => {\n    const form = filter?.value;\n    return {\n      atribuidas_para_mim: form.atribuidas_para_mim,\n      usuario_id: form.usuario_id,\n      plano_trabalho_id: form.plano_trabalho_id,\n      somente_unidade_atual: form.somente_unidade_atual,\n      unidades_subordinadas: form.unidades_subordinadas,\n      unidade_id: form.somente_unidade_atual ? null : form.unidade_id\n    }\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    if(this.metadata?.atribuidas_para_mim){\n      this.filter?.controls.atribuidas_para_mim.setValue(true);\n      this.filter?.controls.usuario_id.setValue(this.auth.usuario?.id);\n    }\n\n    if (this.fixedFilter) {\n      const status = this.fixedFilter.find(x => x[0] == \"status\");\n      if (status) this.filter?.controls.status.setValue(status[2]);\n    }\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public onStatusClick(status: BadgeButton) {\n    this.filter?.controls.status.setValue(status.data?.status);\n    this.grid!.showFilter();\n    this.grid!.reloadFilter();\n  }\n\n  public onEtiquetaClick(etiqueta: LookupItem) {\n    let etiquetas = this.filter!.controls.etiquetas.value;\n    etiquetas.push(etiqueta);\n    this.filter?.controls.etiquetas.setValue(etiquetas);\n    this.grid!.showFilter();\n    this.grid!.reloadFilter();\n  }\n\n  public onEntregaClick(atividade: Atividade){\n    this.go.navigate({route: ['gestao', 'atividade', atividade.id, 'hierarquia']}, {metadata: {atividade: atividade}})\n  }\n\n  public async onColumnProgressoEtiquetasChecklistEdit(row: any) {\n    this.formEdit.controls.progresso.setValue(row.progresso);\n    //this.formEdit.controls.etiquetas.setValue(row.etiquetas);\n    //this.formEdit.controls.etiqueta.setValue(null);\n    //this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\n    //this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n    this.checklist = this.util.clone(row.checklist);\n  }\n\n  public async onColumnProgressoEtiquetasChecklistSave(row: any) {\n    try {\n      const saved = await this.dao!.update(row.id, {\n        progresso: this.formEdit.controls.progresso.value,\n        //etiquetas: this.formEdit.controls.etiquetas.value,\n        checklist: this.checklist\n      });\n      row.progresso = this.formEdit.controls.progresso.value;\n      row.checklist = this.checklist;\n      //row.etiquetas = this.formEdit.controls.etiquetas.value;\n      return !!saved;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = this.fixedFilter || [];\n    let form: any = filter.value;\n\n    /* Verifica se estiver marcado Atual e a Unidade for diferente da Lotacao da barra superior */\n    if (form.somente_unidade_atual && form.unidade_id != this.auth.unidade?.id) {\n      filter.controls.unidade_id.setValue(this.auth.unidade?.id);\n      form.unidade_id = this.auth.unidade?.id;\n    }\n    /* Verifica se Minhas está selecionado e o usuário está diferente do logado (vazio) */\n    if (form.atribuidas_para_mim && form.usuario_id != this.auth.usuario?.id) {\n      filter.controls.usuario_id.setValue(this.auth.usuario?.id);\n      form.usuario_id = this.auth.usuario?.id;\n    }\n    /* Filtros */\n    if (form.usuario_id?.length) {\n      result.push([\"usuario_id\", \"==\", form.usuario_id]);\n    }\n    if (form.plano_trabalho_id?.length) {\n      result.push([\"plano_trabalho_id\", \"==\", form.plano_trabalho_id]);\n    }\n    if (form.unidade_id?.length) {\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.unidades_subordinadas) {\n      result.push([\"unidades_subordinadas\", \"==\", true]);\n    }\n    if (form.etiquetas?.length) {\n      result.push([\"etiquetas\", \"in\", form.etiquetas.map((x: LookupItem) => x.value)]);\n    }\n    if (form.numero_processo?.length) {\n      result.push([\"numero_processo\", \"==\", form.numero_processo]);\n    }\n    if (form.numero?.length) {\n      result.push([\"numero\", \"==\", form.numero]);\n    }\n    if (form.status?.length && !result.find(x => x[0] == \"status\")) {\n      result.push([\"status\", \"==\", form.status]);\n      if (form.status == \"ARQUIVADO\") this.filter!.controls.arquivadas.setValue(true);\n    }\n    if (!this.filter!.controls.arquivadas.value) {\n      result.push([\"data_arquivamento\", \"==\", null]);\n    }\n    if (form.tipo_atividade_id?.length) {\n      result.push([\"tipo_atividade_id\", \"==\", form.tipo_atividade_id]);\n    }\n    if (form.tipo_processo_id?.length) {\n      result.push([\"tipo_processo_id\", \"==\", form.tipo_processo_id]);\n    }\n    if (form.plano_entrega_id?.length) {\n      result.push([\"plano_entrega_id\", \"==\", form.plano_entrega_id]);\n    }\n    if (form.plano_entrega_entrega_id?.length) {\n      result.push([\"plano_entrega_entrega_id\", \"==\", form.plano_entrega_entrega_id]);\n    }\n    if (form.data_filtro?.length) {\n      const field = form.data_filtro == \"DISTRIBUICAO\" ? \"data_distribuicao\" : form.data_filtro == \"PRAZO\" ? \"data_estipulada_entrega\" : \"data_entrega\";\n      if (form.data_inicio) {\n        result.push([field, \">=\", form.data_inicio]);\n      }\n      if (form.data_fim) {\n        result.push([field, \"<=\", form.data_fim]);\n      }\n    }\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    this.filter!.controls.atribuidas_para_mim.setValue(false);\n    this.filter!.controls.usuario_id.setValue(null);\n    this.filter!.controls.somente_unidade_atual.setValue(false);\n    this.filter!.controls.unidades_subordinadas.setValue(false);\n    this.filter!.controls.unidade_id.setValue(null);\n    this.filter!.controls.plano_trabalho_id.setValue(null);\n    this.filter!.controls.numero_processo.setValue(\"\");\n    this.filter!.controls.atividade_id.setValue(null);\n    this.filter!.controls.tipo_processo_id.setValue(null);\n    this.filter!.controls.data_filtro.setValue(null);\n    this.filter!.controls.data_inicio.setValue(null);\n    this.filter!.controls.data_fim.setValue(null);\n    this.filter!.controls.plano_entrega_id.setValue(null);\n    this.filter!.controls.plano_entrega_entrega_id.setValue(null);\n    if (!this.fixedFilter?.length || !this.fixedFilter.find(x => x[0] == \"status\")) this.filter!.controls.status.setValue(null);\n    this.filter!.controls.etiquetas.setValue([]);\n    super.filterClear(filter);\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    if (this.etiqueta && this.etiqueta.selectedItem) {\n      const item = this.etiqueta.selectedItem;\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\n        result = {\n          key: key,\n          value: item.value,\n          color: item.color,\n          icon: item.icon\n        };\n        this.formEdit.controls.etiqueta.setValue(null);\n      }\n    }\n    return result;\n  };\n\n  public async onColumnEtiquetasEdit(row: any) {\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\n    this.formEdit.controls.etiqueta.setValue(null);\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n  }\n\n  public async onColumnEtiquetasSave(row: any) {\n    try {\n      const saved = await this.dao!.update(row.id, {\n        etiquetas: this.formEdit.controls.etiquetas.value\n      });\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\n      return !!saved;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public onEtiquetaConfigClick() {\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\n      modal: true, modalClose: (modalResult) => {\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n        this.cdRef.detectChanges();\n      }\n    });\n  }\n\n  public async onUnidadeChange(event: Event) {\n    let unidade_selecionada = await this.unidadeDao.getById(this.filter?.controls.unidade_id.value, ['planos_entrega']);\n    this.planosEntregas = unidade_selecionada?.planos_entrega?.map(x => Object.assign({\n      key: x.id,\n      value: x.nome\n    })) || [];\n  }\n\n  public async onPlanoEntregaChange(event: Event) {\n    let plano_entrega_selecionado: any[] = [];\n    let unidade_selecionada = await this.unidadeDao.getById(this.filter?.controls.unidade_id.value, ['planos_entrega.entregas']);\n    unidade_selecionada?.planos_entrega?.forEach(element => {\n      if (element.id == this.filter!.controls.plano_entrega_id.value) plano_entrega_selecionado.push(element.entregas);\n    });\n    this.planosEntregasEntregas = plano_entrega_selecionado[0]!.map((x: { id: any; descricao: any; }) => Object.assign({\n      key: x.id,\n      value: x.descricao\n    })) || [];\n  }\n}\n\n","<ng-template #calendarEfemerides>\n    <calendar-efemerides [efemerides]=\"efemerides\"></calendar-efemerides>\n</ng-template>\n<grid [dao]=\"dao\" [add]=\"add\" [form]=\"formEdit\" [hasEdit]=\"false\" [hasDelete]=\"false\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [loadList]=\"onGridLoad.bind(this)\" [selectable]=\"selectable\" (select)=\"onSelect($event)\">\n    <toolbar *ngIf=\"!fixedFilter && !selectable\">\n        <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\n    </toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && !queryParams?.filter && filterCollapsed\">\n        <div class=\"row\">\n            <input-switch [size]=\"1\" label=\"Minhas\" controlName=\"atribuidas_para_mim\" [control]=\"filter!.controls.atribuidas_para_mim\" (change)=\"onAtribuidasParaMimChange($event)\"></input-switch>\n            <input-search [size]=\"4\" label=\"Usuário\" #usuario [control]=\"filter!.controls.usuario_id\" controlName=\"usuario_id\"  [disabled]=\"filter!.controls.atribuidas_para_mim.value ? 'true' : undefined\" [dao]=\"usuarioDao\" ></input-search>\n            <input-search [size]=\"5\" label=\"Plano de trabalho\" #planoTrabalho [control]=\"filter!.controls.plano_trabalho_id\" controlName=\"plano_trabalho_id\" [dao]=\"planoTrabalhoDao\" ></input-search>\n            <input-switch [size]=\"1\" label=\"Atual\" controlName=\"somente_unidade_atual\" [control]=\"filter!.controls.somente_unidade_atual\" (change)=\"onSomenteUnidadeAtualChange($event)\" labelInfo=\"Somente as atividades da unidade selecionada\"></input-switch>\n            <input-switch [size]=\"1\" label=\"Sub.\" controlName=\"unidades_subordinadas\" [control]=\"filter!.controls.unidades_subordinadas\" labelInfo=\"Incluir as unidades subordinadas\"></input-switch>\n        </div>\n        <div class=\"row\">\n            <input-search [size]=\"4\" label=\"Unidade\" #unidade [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [disabled]=\"filter!.controls.somente_unidade_atual.value ? 'true' : undefined\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange($event)\"></input-search>\n            <input-select [size]=\"4\" [label]=\"lex.translate('Plano de Entrega')\" #planoEntrega itemTodos=\"- Todos -\" [valueTodos]=\"null\" controlName=\"plano_entrega_id\" [control]=\"filter!.controls.plano_entrega_id\" [items]=\"planosEntregas\" (change)=\"onPlanoEntregaChange($event)\"></input-select>\n            <input-select [size]=\"4\" [label]=\"lex.translate('Entrega do Plano de Entrega')\" #planoEntregaEntrega itemTodos=\"- Todos -\" [valueTodos]=\"null\"  controlName=\"plano_entrega_entrega_id\" [control]=\"filter!.controls.plano_entrega_entrega_id\" [items]=\"planosEntregasEntregas\"></input-select>\n        </div>\n        <div class=\"row\">\n            <input-text [size]=\"1\" label=\"#ID\" controlName=\"numero\" maskFormat=\"999999\" [control]=\"filter!.controls.numero\" [labelInfo]=\"'Número ' + lex.translate('atividade')\" [attr.maxlength]=250></input-text>\n            <input-text [size]=\"3\" [label]=\"'Nº '+ lex.translate('Processo') +' (Sei)'\" maskFormat=\"00000.000000/0000-00\" controlName=\"numero_processo\" [control]=\"filter!.controls.numero_processo\" labelInfo=\"Pesquisa no documento de requisição, conclusão e nos documentos das tarefas\" [attr.maxlength]=250></input-text>\n            <input-select [size]=\"3\" label=\"Status\" itemTodos=\"- Todos -\" [valueTodos]=\"null\" [disabled]=\"fixedFilter?.length && fixedFilter![0]![0] == 'status' ? 'true' : undefined\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.ATIVIDADE_STATUS_COM_ARQUIVADAS\"></input-select>\n            <input-multiselect noForm noBox [size]=\"4\" label=\"Etiquetas\" controlName=\"etiquetas\" [control]=\"filter!.controls.etiquetas\"></input-multiselect>\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também atividades arquivadas\"></input-switch>\n        </div>\n        <div class=\"row\">\n            <input-search [size]=\"3\" [label]=\"lex.translate('Tipo de Atividade')\" [control]=\"filter!.controls.tipo_atividade_id\" controlName=\"tipo_atividade_id\" [dao]=\"tipoAtividadeDao\"></input-search>\n            <input-search [size]=\"3\" [label]=\"lex.translate('Tipo de Processo')\" [control]=\"filter!.controls.tipo_processo_id\" controlName=\"tipo_processo_id\" [dao]=\"tipoProcessoDao\" ></input-search>\n            <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Todos -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\n            <input-datetime [size]=\"2\" noIcon [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Data início do período\"></input-datetime>\n            <input-datetime [size]=\"2\" noIcon [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Data fim do período\"></input-datetime>\n        </div>\n    </filter>\n    <columns>\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-boxes\" [align]=\"'center'\" [hint]=\"lex.translate('Tarefas da atividade')\" [template]=\"columnTarefas\" [expandTemplate]=\"columnExpandedTarefas\">\n            <ng-template let-row=\"row\" #columnTarefas>\n                <span *ngIf=\"row.tarefas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row.tarefas?.length}}</span>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedTarefas>\n                <atividade-list-tarefa persist [selectable]=\"selectable\" [editable]=\"!row.metadados.concluido\" [atividade]=\"row\"></atividade-list-tarefa>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\n            <ng-template let-header=\"header\" #titleIdAtividadeDescricao>\n                <order by=\"numero\" [header]=\"header\">#ID</order>/{{lex.translate('Tipo de Atividade')}}/\n                <order by=\"plano_trabalho_entrega.descricao\" [header]=\"header\">{{lex.translate('Entrega')}}</order><br>\n                Descrição\n            </ng-template>\n            <ng-template let-row=\"row\" #columnAtividadeDescricao>\n                <span class=\"text-nowrap d-block\">\n                    <badge icon=\"bi bi-hash\" [label]=\"row.numero\" color=\"light\" [data]=\"row.numero\" [click]=\"atividadeService.onIdClick.bind(this)\"></badge>\n                    <badge *ngIf=\"row.tipo_atividade\" [icon]=\"entityService.getIcon('TipoAtividade')\" [label]=\"row.tipo_atividade.nome\" color=\"light\"></badge>\n                    <badge *ngIf=\"row.plano_trabalho_entrega\" [icon]=\"entityService.getIcon('Entrega')\" [label]=\"row.plano_trabalho_entrega.descricao\" color=\"info\" (click)=\"onEntregaClick(row)\" role=\"button\"></badge>\n                </span>\n                <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n                <reaction [entity]=\"row\" origem=\"ATIVIDADE\"></reaction>\n            </ng-template>\n        </column>\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\n            <ng-template let-row=\"row\" #columnEtiquetas>\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\" [click]=\"onEtiquetaClick.bind(this)\"></badge>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\n                </input-multiselect>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titlePlanoTrabalho\" [template]=\"columnPlanoTrabalho\">\n            <ng-template let-header=\"header\" #titlePlanoTrabalho>\n                Plano de trabalho\n            </ng-template>\n            <ng-template let-row=\"row\" #columnPlanoTrabalho>\n               <span class=\"d-block\" *ngIf=\"row.planoTrabalho\">{{dao!.getDateFormatted(row.planoTrabalho.data_inicio)}} <br>{{ \" até \"+dao!.getDateFormatted(row.planoTrabalho.data_fim)}}</span>\n            </ng-template>\n        </column>\n\n        <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\n            <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\n                Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\n                <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnPessoas>\n                <div class=\"text-nowrap\">\n                    <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\n                    <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\n                </div>\n                <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleTempos\" [template]=\"columnTempos\">\n            <ng-template let-header=\"header\" #titleTempos>\n                Tempos\n                <order by=\"data_distribuicao\" [header]=\"header\">Distribuição</order><br>\n                <order by=\"data_estipulada_entrega\" [header]=\"header\">Prazo</order>\n                <order by=\"data_entrega\" [header]=\"header\">Entrega</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnTempos>\n                <div class=\"one-per-line\">\n                    <badge *ngFor=\"let tempo of atividadeService.temposAtividade(row, extra, onDespendidoClick.bind(this))\" [badge]=\"tempo\"></badge>\n                </div>\n            </ng-template>\n        </column>\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"200\" [columnEditTemplate]=\"selectable ? undefined : columnProgressoEtiquetasChecklistEdit\" [template]=\"columnProgressoEtiquetasChecklist\" [edit]=\"selectable ? undefined : onColumnProgressoEtiquetasChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnProgressoEtiquetasChecklistSave.bind(this)\">\n            <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n                <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                <table *ngIf=\"row.checklist?.length\">\n                    <tr *ngFor=\"let check of row.checklist\">\n                        <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                    </tr>\n                </table>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklistEdit>\n                <input-number [size]=\"12\" [decimals]=\"2\" label=\"Progresso\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso\" [control]=\"formEdit.controls.progresso\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                <table *ngIf=\"row.checklist?.length\">\n                    <tr *ngFor=\"let check of checklist; let i = index\">\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                    </tr>\n                </table>\n            </ng-template>\n        </column>\n        <column [title]=\"'nº Processo/Status\\nComentários'\" [width]=\"300\" [template]=\"columnNumero\">\n            <ng-template let-row=\"row\" #columnNumero>\n                <documentos-badge [documento]=\"row.documento_requisicao\"></documentos-badge>\n                <span class=\"d-block\">\n                    <badge *ngFor=\"let status of atividadeService.getStatus(row)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\" [click]=\"status.data?.filter ? onStatusClick.bind(this) : undefined\"></badge>\n                </span>\n                <comentarios-widget [entity]=\"row\" [selectable]=\"selectable\" origem=\"ATIVIDADE\" [grid]=\"grid\"></comentarios-widget>\n            </ng-template>\n        </column>\n        <column *ngIf=\"!selectable\" type=\"options\" [metadata]=\"optionsMetadata\" [dynamicOptions]=\"atividadeService.dynamicOptions.bind(this)\" [dynamicButtons]=\"atividadeService.dynamicButtons.bind(this)\" [options]=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n"],"names":["Base","AtividadeTarefa","constructor","data","documento","comentarios","descricao","data_lancamento","Date","tempo_estimado","data_conclusao","documento_id","atividade_id","usuario_id","tipo_tarefa_id","initialization","PageListBase","UsuarioDaoService","UnidadeDaoService","Atividade","ListenerAllPagesService","CalendarService","AtividadeDaoService","TipoProcessoDaoService","ComentarioService","TipoAtividadeDaoService","AtividadeService","PlanoTrabalhoDaoService","AtividadeListBase","injector","etiquetas","addComentarioButton","icon","hint","DATAS_FILTRO","key","value","color","unidadeDao","get","usuarioDao","planoTrabalhoDao","tipoAtividadeDao","tipoProcessoDao","allPages","atividadeService","calendar","comentario","join","extra","planos_trabalho","afastamentos","optionsMetadata","refreshId","id","grid","query","bind","removeId","refresh","onGridLoad","rows","forEach","atividade","orderComentarios","Object","assign","planos","entries","reduce","a","v","find","x","push","feriados","feriadosCadastrados","planoTrabalho","plano_trabalho_id","cdRef","detectChanges","onAtribuidasParaMimChange","event","filter","controls","atribuidas_para_mim","setValue","auth","usuario","undefined","onSomenteUnidadeAtualChange","somente_unidade_atual","unidade_id","unidade","onDespendidoClick","row","metadados","concluido","cargaHoraria","carga_horaria","efemerides","calculaDataTempoUnidade","data_inicio","hora","pausas","dialog","template","title","calendarEfemerides","onEtiquetaConfigClick","go","navigate","route","params","modal","modalClose","modalResult","util","merge","config","b","comentarioClick","element","getAttribute","setAttribute","addComentarioClick","GridComponent","i0","ɵɵelement","ɵɵproperty","ctx_r1","ɵɵelementStart","ɵɵlistener","AtividadeListGridComponent_toolbar_3_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r37","ctx_r36","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ctx_r2","agrupar","ɵɵtext","ɵɵtextInterpolate1","row_r42","tarefas","length","ɵɵtemplate","AtividadeListGridComponent_column_33_ng_template_1_span_0_Template","ctx_r41","selectable","row_r45","AtividadeListGridComponent_column_33_ng_template_1_Template","ɵɵtemplateRefExtractor","AtividadeListGridComponent_column_33_ng_template_3_Template","ctx_r8","lex","translate","_r38","_r40","header_r46","ctx_r10","ɵɵtextInterpolate","ctx_r48","entityService","getIcon","row_r47","tipo_atividade","nome","AtividadeListGridComponent_ng_template_37_badge_3_Template_badge_click_0_listener","_r53","ctx_r51","onEntregaClick","ctx_r49","plano_trabalho_entrega","AtividadeListGridComponent_ng_template_37_badge_2_Template","AtividadeListGridComponent_ng_template_37_badge_3_Template","numero","ctx_r12","onIdClick","etiqueta_r57","ctx_r56","onEtiquetaClick","AtividadeListGridComponent_ng_template_40_badge_0_Template","row_r55","AtividadeListGridComponent_ng_template_42_Template_input_select_details_1_listener","_r61","ctx_r60","ctx_r16","formEdit","addItemHandleEtiquetas","etiqueta","ctx_r64","dao","getDateFormatted","row_r63","data_fim","AtividadeListGridComponent_ng_template_47_span_0_Template","header_r66","row_r67","sigla","ctx_r24","apelidoOuNome","demandante","header_r68","tempo_r71","AtividadeListGridComponent_ng_template_57_badge_1_Template","ctx_r28","temposAtividade","row_r69","AtividadeListGridComponent_ng_template_60_table_2_tr_1_i_2_Template","check_r76","checked","texto","AtividadeListGridComponent_ng_template_60_table_2_tr_1_Template","row_r72","checklist","AtividadeListGridComponent_ng_template_60_separator_1_Template","AtividadeListGridComponent_ng_template_60_table_2_Template","progresso","ctx_r82","i_r84","check_r83","AtividadeListGridComponent_ng_template_62_table_2_tr_1_Template","ctx_r81","AtividadeListGridComponent_ng_template_62_separator_1_Template","AtividadeListGridComponent_ng_template_62_table_2_Template","ctx_r32","row_r79","status_r87","label","ctx_r86","onStatusClick","AtividadeListGridComponent_ng_template_65_badge_2_Template","row_r85","documento_requisicao","ctx_r34","getStatus","ctx_r35","dynamicOptions","dynamicButtons","options","AtividadeListGridComponent","minhas","planosEntregas","planosEntregasEntregas","storeFilter","form","unidades_subordinadas","filterWhere","result","fixedFilter","map","numero_processo","status","arquivadas","tipo_atividade_id","tipo_processo_id","plano_entrega_id","plano_entrega_entrega_id","data_filtro","field","code","modalWidth","fh","FormBuilder","default","groupBy","addOption","OPTION_LOGS","ngAfterViewInit","metadata","reloadFilter","showFilter","onColumnProgressoEtiquetasChecklistEdit","_this","_asyncToGenerator","clone","onColumnProgressoEtiquetasChecklistSave","_this2","saved","update","error","filterClear","selectedItem","item","textHash","validateLookupItem","onColumnEtiquetasEdit","_this3","onColumnEtiquetasSave","_this4","onUnidadeChange","_this5","unidade_selecionada","getById","planos_entrega","onPlanoEntregaChange","_this6","plano_entrega_selecionado","entregas","_class","selectRoute","ɵɵdirectiveInject","Injector","selectors","viewQuery","AtividadeListGridComponent_Query","rf","ctx","AtividadeListGridComponent_ng_template_0_Template","AtividadeListGridComponent_Template_grid_select_2_listener","onSelect","AtividadeListGridComponent_toolbar_3_Template","AtividadeListGridComponent_Template_input_switch_change_6_listener","AtividadeListGridComponent_Template_input_switch_change_11_listener","AtividadeListGridComponent_Template_input_search_change_14_listener","AtividadeListGridComponent_Template_input_select_change_16_listener","AtividadeListGridComponent_column_33_Template","AtividadeListGridComponent_ng_template_35_Template","AtividadeListGridComponent_ng_template_37_Template","AtividadeListGridComponent_ng_template_40_Template","AtividadeListGridComponent_ng_template_42_Template","AtividadeListGridComponent_ng_template_45_Template","AtividadeListGridComponent_ng_template_47_Template","AtividadeListGridComponent_ng_template_50_Template","AtividadeListGridComponent_ng_template_52_Template","AtividadeListGridComponent_ng_template_55_Template","AtividadeListGridComponent_ng_template_57_Template","AtividadeListGridComponent_ng_template_60_Template","AtividadeListGridComponent_ng_template_62_Template","AtividadeListGridComponent_ng_template_65_Template","AtividadeListGridComponent_column_67_Template","add","orderBy","hasPermissionTo","filterSubmit","filterCollapseChange","queryParams","filterCollapsed","ɵɵattribute","lookup","ATIVIDADE_STATUS_COM_ARQUIVADAS","_r9","_r11","_r13","_r15","_r17","_r19","_r21","_r23","_r25","_r27","_r31","_r29","_r33","rowsLimit"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}