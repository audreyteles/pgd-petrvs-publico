{"version":3,"file":"5557.js","mappings":"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","sources":["./src/app/models/atividade-tarefa.model.ts","./src/app/modules/gestao/atividade/atividade-list-base.ts","./src/app/modules/gestao/atividade/atividade-list-grid/atividade-list-grid.component.ts","./src/app/modules/gestao/atividade/atividade-list-grid/atividade-list-grid.component.html"],"sourcesContent":["import { Base } from './base.model';\nimport { Comentario, HasComentarios } from './comentario';\nimport { Atividade } from './atividade.model';\nimport { TipoTarefa } from './tipo-tarefa.model';\nimport { Usuario } from './usuario.model';\nimport { Documento } from './documento.model';\n\nexport class AtividadeTarefa extends Base implements HasComentarios {\n    public atividade?: Atividade;\n    public usuario?: Usuario;\n    public tipo_tarefa?: TipoTarefa;\n    public documento: Documento | null = null ; /* Documento de entrga */ \n    public comentarios: Comentario[] = []; /* Comentarios da tarefa */\n\n    public descricao: string | null = null; /* Descrição da tarefa */\n    public data_lancamento: Date = new Date(); /* Data hora do lançamento da tarefa */\n    public tempo_estimado: number = 0; /* Tempo estimado para a execução da tarefa (Horas decimais) */\n    public data_conclusao: Date | null = null; /* Data de conclusao */\n\n    public documento_id: string | null = null ; /* Documento de entrga */ \n    public atividade_id: string = \"\"; /* Atividade */\n    public usuario_id: string = \"\"; /* Usuário */\n    public tipo_tarefa_id: string | null = null; /* Tarefa */\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}\n","import { Injector, TemplateRef } from '@angular/core';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { Atividade, Checklist } from 'src/app/models/atividade.model';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { CalendarService, Efemerides, FeriadoList } from 'src/app/services/calendar.service';\nimport { Afastamento } from 'src/app/models/afastamento.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { TipoProcessoDaoService } from 'src/app/dao/tipo-processo-dao.service';\nimport { ComentarioService } from 'src/app/services/comentario.service';\nimport { BadgeButton } from 'src/app/components/badge/badge.component';\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { AtividadeOptionsMetadata, AtividadeService, ExtraAtividade } from './atividade.service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\n\nexport abstract class AtividadeListBase extends PageListBase<Atividade, AtividadeDaoService> {\n  public calendarEfemerides?: TemplateRef<any>;\n  public unidadeDao: UnidadeDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public planoTrabalhoDao: PlanoTrabalhoDaoService;\n  public tipoAtividadeDao: TipoAtividadeDaoService;\n  public tipoProcessoDao: TipoProcessoDaoService;\n  public allPages: ListenerAllPagesService;\n  public atividadeService: AtividadeService;\n  public calendar: CalendarService;\n  public comentario: ComentarioService;\n  public extra: ExtraAtividade;\n  public etiquetas: LookupItem[] = [];\n  public checklist?: Checklist[];\n  public efemerides?: Efemerides;\n  public optionsMetadata: AtividadeOptionsMetadata;\n  public addComentarioButton: ToolbarButton = {\n    icon: \"bi bi-plus-circle\",\n    hint: \"Incluir comentário\"\n  }\n  public DATAS_FILTRO: LookupItem[] = [\n    { key: \"DISTRIBUICAO\", value: \"Distribuição\", icon: \"bi bi-file-earmark-plus\", color: \"badge rounded-pill bg-warning text-dark\" },\n    { key: \"PRAZO\", value: \"Prazo\", icon: \"bi bi-calendar-check\", color: \"badge rounded-pill bg-info text-dark\" },\n    { key: \"CONCLUSAO\", value: \"Conclusão\", icon: \"bi bi-check-circle\", color: \"badge rounded-pill bg-info text-dark\" }\n  ];\n\n  constructor(public injector: Injector) {\n    super(injector, Atividade, AtividadeDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\n    this.tipoProcessoDao = injector.get<TipoProcessoDaoService>(TipoProcessoDaoService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.atividadeService = injector.get<AtividadeService>(AtividadeService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.comentario = injector.get<ComentarioService>(ComentarioService);\n    this.join = [\"tipo_atividade\", \"plano_trabalho_entrega:id,descricao\", \"demandante\", \"pausas\", \"usuario\", \"unidade\", \"comentarios.usuario:id,nome,apelido\", \"tarefas.tipo_tarefa\", \"tarefas.comentarios.usuario:id,nome,apelido\", \"reacoes.usuario:id,nome,apelido\"];\n    /* Inicializações */\n    this.extra = { planos_trabalho: {}, afastamentos: {} };\n    this.optionsMetadata = {\n      refreshId: ((id: string) => (this.grid?.query || this.query!).refreshId(id)).bind(this),\n      removeId: ((id: string) => (this.grid?.query || this.query!).removeId(id)).bind(this),\n      refresh: this.refresh.bind(this)\n    }\n  }\n\n  public onGridLoad(rows?: any[]) {\n    /* Ordena os comentários */\n    rows?.forEach((atividade: Atividade) => {\n      atividade.comentarios = this.comentario.orderComentarios(atividade.comentarios);\n    });\n    /* Recebe informações extra da query para auxiliar em cálculos e melhorar performace da consulta */\n    const extra = (this.grid?.query || this.query!).extra;\n    if (extra) {\n      //this.extra.avaliadores = Object.assign(this.extra.avaliadores, extra.avaliadores || {});\n      this.extra.planos_trabalho = Object.assign(this.extra.planos_trabalho, extra.planos || {});\n      for (let [key, value] of Object.entries(extra.afastamentos || {})) {\n        this.extra.afastamentos[key] = (value as Array<Afastamento>).reduce((a, v) => {\n          if (!a.find(x => x.id == v.id)) a.push(v);\n          return a;\n        }, this.extra.afastamentos[key] || []);\n      }\n      Object.entries(extra.feriados || {}).forEach(([key, value]) => {\n        if (!this.calendar.feriadosCadastrados[key]) this.calendar.feriadosCadastrados[key] = value as FeriadoList;\n      });\n\n      rows?.forEach(a => {\n        a.planoTrabalho = extra.planos_trabalho[a.plano_trabalho_id];\n      });\n\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onAtribuidasParaMimChange(event: Event) {\n    if (this.filter!.controls.atribuidas_para_mim.value) {\n      this.filter!.controls.usuario_id.setValue(this.auth.usuario!.id);\n    } else {\n      this.filter!.controls.usuario_id.setValue(undefined);\n    }\n  }\n\n  public onSomenteUnidadeAtualChange(event: Event) {\n    if (this.filter!.controls.somente_unidade_atual.value) {\n      this.filter!.controls.unidade_id.setValue(this.auth.unidade!.id);\n    } else {\n      this.filter!.controls.unidade_id.setValue(undefined);\n    }\n  }\n\n  public onDespendidoClick(row: Atividade) {\n    if (row.metadados && !row.metadados.concluido) {\n      const cargaHoraria = this.extra?.planos_trabalho[row.plano_trabalho_id!]?.carga_horaria || 0;\n      const afastamentos = this.extra?.afastamentos[row.usuario_id!] || [];\n      this.efemerides = this.calendar.calculaDataTempoUnidade(row.data_inicio!, this.auth.hora, cargaHoraria, row.unidade!, \"ENTREGA\", row.pausas, afastamentos);\n      this.dialog.template({ title: \"Cálculos do tempo despendido\" }, this.calendarEfemerides!, []);\n    }\n  }\n\n/*   public temposAtividade(row: Atividade): BadgeButton[] {\n    // Atualiza somente a cada mudança de minuto da unidade atual\n    if (row.metadados && row.metadados.extra?.lastUpdate != this.auth.unidadeHora) {\n      let planoTrabalho = this.extra?.planos_trabalho[row.plano_trabalho_id!];\n      let tempos: BadgeButton[] = [\n        { color: \"light\", hint: this.lex.translate(\"Data de distribuição\"), icon: \"bi bi-file-earmark-plus\", label: this.dao!.getDateTimeFormatted(row.data_distribuicao) },\n        { color: \"light\", hint: this.lex.translate(\"Prazo de entrega\"), icon: \"bi bi-calendar-check\", label: this.dao!.getDateTimeFormatted(row.data_estipulada_entrega) }\n      ];\n      if (planoTrabalho?.tipo_modalidade?.atividade_esforco) tempos.push({ color: \"light\", hint: this.lex.translate(\"Esforço\"), icon: \"bi bi-stopwatch\", label: (row.esforco ? this.util.decimalToTimerFormated(row.esforco, true) + \" \" + this.lex.translate(\"esforço\") : \"Sem \" + this.lex.translate(\"esforço\"))});\n      if (row.metadados.concluido) tempos.push({ color: \"light\", hint: \"Data de entrega realizada\", icon: \"bi bi-check-circle\", label: this.dao!.getDateTimeFormatted(row.data_entrega) });\n      if (row.metadados.iniciado && !!planoTrabalho?.tipo_modalidade?.atividade_tempo_despendido) {\n        const cargaHoraria = planoTrabalho?.carga_horaria || 0;\n        const afastamentos = this.extra?.afastamentos[row.usuario_id!] || [];\n        const despendido = row.metadados.concluido ? (row.tempo_despendido || 0) : this.calendar.horasUteis(row.data_inicio!, this.auth.hora, cargaHoraria, row.unidade!, \"ENTREGA\", row.pausas, afastamentos);\n        tempos.push({ color: (despendido > row.esforco ? \"warning\" : \"light\"), hint: \"Tempo despendido\", icon: \"bi bi-hourglass-split\", label: this.util.decimalToTimerFormated(despendido, true) + \" despendido\", click: !row.metadados.concluido ? this.onDespendidoClick.bind(this) : undefined, data: row });\n      }\n      if (!row.metadados.concluido && row.data_estipulada_entrega.getTime() < this.auth.hora.getTime()) {\n        const atrasado = this.calendar.horasAtraso(row.data_estipulada_entrega, row.unidade!);\n        tempos.push({ color: \"danger\", hint: \"Tempo de atraso\", icon: \"bi bi-alarm\", label: this.util.decimalToTimerFormated(atrasado, true) + \" atrasado\" });\n      }\n      row.metadados.extra = row.metadados.extra || {};\n      row.metadados.extra.lastUpdate = this.auth.unidadeHora;\n      row.metadados.extra.tempos = tempos;\n    }\n    return row.metadados?.extra?.tempos || [];\n  } \n\n  public desarquivar(atividade: Atividade) {\n    this.dao!.arquivar(atividade.id, false).then(() => {\n      this.grid!.query!.refreshId(atividade.id);\n    }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao cancelar inicio: \" + error?.message ? error?.message : error));\n  }\n\n  public arquivar(atividade: Atividade) {\n    this.dialog.confirm(\"Arquivar?\", \"Deseja realmente arquivar a atividade?\").then(confirm => {\n      if (confirm) {\n        this.dao!.arquivar(atividade.id, true).then(() => {\n          if (this.filter?.controls.arquivadas?.value) {\n            this.grid!.query!.refreshId(atividade.id);\n          } else {\n            (this.grid?.query || this.query!).removeId(atividade.id);\n          }\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao cancelar inicio: \" + error?.message ? error?.message : error));\n      }\n    });\n  }*/\n\n  /*public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let atividade: Atividade = row as Atividade;\n    const isGestor = this.auth.usuario?.id == atividade.unidade?.gestor?.id || this.auth.usuario?.id == atividade.unidade?.gestor_substituto?.id;\n    const isDemandante = this.auth.usuario?.id == atividade.demandante_id;\n    const isResponsavel = this.auth.usuario?.id == atividade.usuario_id;\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'consult'] }, { modal: true }) };\n    const BOTAO_COMENTARIOS = { label: \"Comentários\", icon: \"bi bi-chat-left-quote\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['uteis', 'comentarios', 'ATIVIDADE', atividade.id, 'new'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_CLONAR = { label: \"Clonar\", icon: \"bi bi-stickies\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'clonar'] }, this.modalRefresh()) };\n    const BOTAO_ALTERAR = { label: \"Alterar atividade\", icon: \"bi bi-pencil-square\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'edit'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_EXCLUIR = { label: \"Excluir atividade\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    const BOTAO_PRORROGAR_PRAZO = { label: \"Prorrogar prazo\", icon: \"bi bi-skip-end-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'prorrogar'] }, this.modalRefreshId(atividade))};\n    const BOTAO_INICIAR = { label: \"Iniciar\", id: \"INICIADO\", icon: \"bi bi-play-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'iniciar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_CANCELAR_INICIO = { label: \"Cancelar inicio\", id: \"NAOINICIADO\", icon: \"bi bi-backspace\", onClick: this.cancelarInicio.bind(this) };\n    const BOTAO_ALTERAR_INICIO = { label: \"Alterar inicio\", icon: \"bi bi-play-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'iniciar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_PAUSAR = { label: \"Pausar\", id: \"PAUSADO\", icon: \"bi bi-pause-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'pausar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_REINICIAR = { label: \"Reiniciar\", id: \"INICIADO\", icon: \"bi bi-play-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'pausar'], params: { reiniciar: true } }, this.modalRefreshId(atividade)) };\n    const BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: \"bi bi-check-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_ALTERAR_CONCLUSAO = { label: \"Alterar conclusão\", icon: \"bi bi-check-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", id: \"INICIADO\", icon: \"bi bi-backspace\", onClick: this.cancelarConclusao.bind(this) };\n    const BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    const BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n\n    result.push(BOTAO_INFORMACOES);\n    if (isResponsavel || isGestor || isDemandante) result.push(BOTAO_COMENTARIOS);\n    result.push(BOTAO_CLONAR);\n    if (atividade.metadados?.arquivado) { /* Arquivado * /\n      if (isGestor || isResponsavel) result.push(BOTAO_DESARQUIVAR);\n    } else if (!atividade.metadados?.iniciado) {\n      if (isResponsavel || (atividade.usuario_id == null) || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) { /* Não iniciado * /\n        result.push(BOTAO_INICIAR);\n      }\n      if (isGestor || isDemandante || this.auth.hasPermissionTo('MOD_DMD_USERS_ALT')) {\n        result.push(BOTAO_ALTERAR);\n      }\n      if (isGestor || isDemandante || this.auth.hasPermissionTo('MOD_DMD_USERS_EXCL') || this.auth.hasPermissionTo('MOD_DMD_NI_EXCL')) {\n        if (result.length) result.push({ divider: true });\n        result.push(BOTAO_EXCLUIR);\n      }\n    } else if (atividade.metadados?.concluido) { /* Concluído -> Gestor ou substituto pode avaliar * /\n      if (isGestor || isResponsavel) result.push(BOTAO_ARQUIVAR);\n      if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_ALT_CONCL')) {\n        result.push(BOTAO_ALTERAR_CONCLUSAO);\n      }\n      if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CANC_CONCL') ) {\n        if (result.length) result.push({ divider: true });\n        result.push(BOTAO_CANCELAR_CONCLUSAO);\n      }\n    } else if (atividade.metadados?.iniciado) { /* Iniciado * /\n      if (atividade.metadados?.pausado) {\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) { /* Iniciada e Pausada * /\n          result.push(BOTAO_REINICIAR);\n        }\n      } else { /* Iniciada e não Suspensa * /\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CONCL')) result.push(BOTAO_CONCLUIR);\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_PAUSA')) result.push(BOTAO_PAUSAR);\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CANC_INICIAR')) result.push(BOTAO_CANCELAR_INICIO);\n        if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) result.push(BOTAO_ALTERAR_INICIO);\n      }\n      if (isGestor || isDemandante || this.auth.hasPermissionTo('MOD_DMD_USERS_PPRZO')) {\n        result.push(BOTAO_PRORROGAR_PRAZO);\n      }\n    }\n    return result;\n  }*/\n\n  /*public cancelarInicio(atividade: Atividade) {\n    const self = this;\n    this.dialog.confirm(\"Cancelar inicio ?\", \"Deseja realmente cancelar a inicialização?\").then(confirm => {\n      if (confirm) {\n        this.dao!.cancelarInicio(atividade.id).then(function () {\n          (self.grid?.query || self.query!).refreshId(atividade.id);\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\n        }).catch(function (error) {\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar inicio: \" + error?.message ? error?.message : error);\n        });\n      }\n    });\n  }\n\n  public cancelarConclusao(atividade: Atividade) {\n    const self = this;\n    this.dialog.confirm(\"Cancelar conclusão ?\", \"Deseja realmente cancelar a conclusão?\").then(confirm => {\n      if (confirm) {\n        this.dao!.cancelarConclusao(atividade.id).then(function () {\n          (self.grid?.query || self.query!).refreshId(atividade.id);\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\n        }).catch(function (error) {\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar conclusão: \" + error?.message ? error?.message : error);\n        });\n      }\n    });\n  }*/\n\n  /*public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let atividade: Atividade = row as Atividade;\n    const isGestor = this.auth.usuario?.id == atividade.unidade?.gestor?.id || this.auth.usuario?.id == atividade.unidade?.gestor_substituto?.id;\n    const isResponsavel = this.auth.usuario?.id == atividade.usuario_id;\n    const BOTAO_ALTERAR_AVALIACAO = { hint: \"Alterar avaliação\", icon: \"bi bi-check-all\", color: \"btn-outline-danger\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'avaliar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'consult'] }, { modal: true }) };\n    const BOTAO_INICIAR = { hint: \"Iniciar\", icon: \"bi bi-play-circle\", color: \"btn-outline-secondary\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'iniciar'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_REINICIAR = { hint: \"Reiniciar\", icon: \"bi bi-play-circle\", color: \"btn-outline-secondary\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'pausar'], params: { reiniciar: true } }, this.modalRefreshId(atividade)) };\n    const BOTAO_CONCLUIR = { hint: \"Concluir\", icon: \"bi bi-check\", color: \"btn-outline-success\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n    const BOTAO_ARQUIVAR = { hint: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    const BOTAO_DESARQUIVAR = { hint: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    const BOTAO_ALTERAR_CONCLUSAO = { hint: \"Alterar conclusão\", icon: \"bi bi-check-circle\", onClick: (atividade: Atividade) => this.go.navigate({ route: ['gestao', 'atividade', atividade.id, 'concluir'] }, this.modalRefreshId(atividade)) };\n\n    if (!atividade.metadados?.iniciado) { /* Não iniciado * /\n      if (isResponsavel || (atividade.usuario_id == null) || this.auth.hasPermissionTo('MOD_DMD_USERS_INICIAR')) { /* Usuário da atividade é o mesmo logado * /\n        result.push(BOTAO_INICIAR);\n      }\n    } else if (atividade.metadados?.concluido) { /* Concluído * /\n      if (isGestor || isResponsavel) {\n        result.push(atividade.metadados?.arquivado ? BOTAO_DESARQUIVAR : BOTAO_ARQUIVAR);\n      } else if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_ALT_CONCL')) {\n        result.push(BOTAO_ALTERAR_CONCLUSAO);\n      }\n    } else if (atividade.metadados?.avaliado) { /* Avaliado * /\n      if (isGestor) { /* Usuário logado é gestor da Unidade ou substituto * /\n        result.push(BOTAO_ALTERAR_AVALIACAO);\n      }\n    } else if (atividade.metadados?.iniciado) { /* Iniciado * /\n      if (atividade.metadados?.pausado && isResponsavel) { /* Iniciada e Pausada * /\n        result.push(BOTAO_REINICIAR);\n      } else if (isResponsavel || this.auth.hasPermissionTo('MOD_DMD_USERS_CONCL')) { /* Iniciada e não Suspensa * /\n        result.push(BOTAO_CONCLUIR);\n      }\n    }\n    if(!result.length) result.push(BOTAO_INFORMACOES);\n    return result;\n  }*/\n\n  public onEtiquetaConfigClick() {\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\n      modal: true, modalClose: (modalResult) => {\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n        this.cdRef.detectChanges();\n      }\n    });\n  }\n\n  public comentarioClick(element: HTMLSpanElement) {\n    const value = element.getAttribute(\"data-expanded\");\n    element.setAttribute(\"data-expanded\", value == \"true\" ? \"false\" : \"true\");\n  }\n\n  public addComentarioClick(row: any) {\n    this.go.navigate({ route: ['gestao', 'atividade', row.id, 'comentar'] }, { modal: true, modalClose: modalResult => { if (modalResult) (this.grid?.query || this.query!).refreshId(row.id); } });\n  }\n\n}\n\n","import { Component, ElementRef, Injector, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { GridComponent, GroupBy } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { Atividade } from 'src/app/models/atividade.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { FullRoute, RouteMetadata } from 'src/app/services/navigate.service';\nimport { AtividadeListBase } from '../atividade-list-base';\nimport { BadgeButton } from 'src/app/components/badge/badge.component';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\n\n@Component({\n  selector: 'atividade-list-grid',\n  templateUrl: './atividade-list-grid.component.html',\n  styleUrls: ['./atividade-list-grid.component.scss']\n})\nexport class AtividadeListGridComponent extends AtividadeListBase {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('calendarEfemerides', { static: false }) public calendarEfemerides?: TemplateRef<any>;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSelectComponent;\n  @ViewChild('planoEntregaEntrega', { static: false }) public planoEntregaEntrega?: InputSelectComponent;\n  @Input() snapshot?: ActivatedRouteSnapshot;\n  @Input() fixedFilter?: any[];\n  @Input() minhas: boolean = false;\n\n  public static selectRoute?: FullRoute = { route: [\"gestao\", \"atividade\", \"grid\"] };\n  public planosEntregas: LookupItem[] = [];\n  public planosEntregasEntregas: LookupItem[] = [];\n  public formEdit: FormGroup;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    /* Inicializações */\n    this.title = this.lex.translate(\"Atividades\");\n    this.code = \"MOD_DMD\";\n    this.modalWidth = 1100;\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      agrupar_entrega: { default: true },\n      atribuidas_para_mim: { default: false },\n      usuario_id: { default: null },\n      numero: { default: \"\" },\n      somente_unidade_atual: { default: false },\n      unidades_subordinadas: { default: false },\n      plano_trabalho_id: { default: null },\n      unidade_id: { default: null },\n      numero_processo: { default: \"\" },\n      status: { default: null },\n      etiquetas: { default: [] },\n      arquivadas: { default: false },\n      tipo_atividade_id: { default: null },\n      tipo_processo_id: { default: null },\n      data_filtro: { default: null },\n      data_inicio: { default: null },\n      data_fim: { default: null },\n      plano_entrega_id: { default: null},\n      plano_entrega_entrega_id: { default: null},\n    });\n    this.formEdit = this.fh.FormBuilder({\n      progresso: { default: 0 },\n      etiquetas: { default: [] },\n      etiqueta: { default: null }\n    });\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }, { field: \"plano_trabalho_entrega.descricao\", label: \"Entrega\" }];\n    this.addOption(this.OPTION_LOGS, \"MOD_AUDIT_LOG\");\n  }\n\n  public storeFilter = (filter?: FormGroup) => {\n    const form = filter?.value;\n    return {\n      atribuidas_para_mim: form.atribuidas_para_mim,\n      usuario_id: form.usuario_id,\n      plano_trabalho_id: form.plano_trabalho_id,\n      somente_unidade_atual: form.somente_unidade_atual,\n      unidades_subordinadas: form.unidades_subordinadas,\n      unidade_id: form.somente_unidade_atual ? null : form.unidade_id\n    }\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    if(this.metadata?.atribuidas_para_mim){\n      this.filter?.controls.atribuidas_para_mim.setValue(true);\n      this.filter?.controls.usuario_id.setValue(this.auth.usuario?.id);\n    }\n\n    if (this.fixedFilter) {\n      const status = this.fixedFilter.find(x => x[0] == \"status\");\n      if (status) this.filter?.controls.status.setValue(status[2]);\n    }\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    const agrupar_entrega = this.filter!.controls.agrupar_entrega.value;\n    const groupByOptions: GroupBy[] = [];\n\n    if (agrupar) groupByOptions.push({ field: \"unidade.sigla\", label: \"Unidade\" });  \n    if (agrupar_entrega) groupByOptions.push({ field: \"plano_trabalho_entrega.descricao\", label: \"Entrega\" });  \n    this.groupBy = groupByOptions;\n    this.grid!.reloadFilter();   \n  }\n\n  public onStatusClick(status: BadgeButton) {\n    this.filter?.controls.status.setValue(status.data?.status);\n    this.grid!.showFilter();\n    this.grid!.reloadFilter();\n  }\n\n  public onEtiquetaClick(etiqueta: LookupItem) {\n    let etiquetas = this.filter!.controls.etiquetas.value;\n    etiquetas.push(etiqueta);\n    this.filter?.controls.etiquetas.setValue(etiquetas);\n    this.grid!.showFilter();\n    this.grid!.reloadFilter();\n  }\n\n  public onEntregaClick(atividade: Atividade){\n    this.go.navigate({route: ['gestao', 'atividade', atividade.id, 'hierarquia']}, {metadata: {atividade: atividade}})\n  }\n\n  public async onColumnProgressoEtiquetasChecklistEdit(row: any) {\n    this.formEdit.controls.progresso.setValue(row.progresso);\n    //this.formEdit.controls.etiquetas.setValue(row.etiquetas);\n    //this.formEdit.controls.etiqueta.setValue(null);\n    //this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\n    //this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n    this.checklist = this.util.clone(row.checklist);\n  }\n\n  public async onColumnProgressoEtiquetasChecklistSave(row: any) {\n    try {\n      const saved = await this.dao!.update(row.id, {\n        progresso: this.formEdit.controls.progresso.value,\n        //etiquetas: this.formEdit.controls.etiquetas.value,\n        checklist: this.checklist\n      });\n      row.progresso = this.formEdit.controls.progresso.value;\n      row.checklist = this.checklist;\n      //row.etiquetas = this.formEdit.controls.etiquetas.value;\n      return !!saved;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = this.fixedFilter || [];\n    let form: any = filter.value;\n\n    /* Verifica se estiver marcado Atual e a Unidade for diferente da Lotacao da barra superior */\n    if (form.somente_unidade_atual && form.unidade_id != this.auth.unidade?.id) {\n      filter.controls.unidade_id.setValue(this.auth.unidade?.id);\n      form.unidade_id = this.auth.unidade?.id;\n    }\n    /* Verifica se Minhas está selecionado e o usuário está diferente do logado (vazio) */\n    if (form.atribuidas_para_mim && form.usuario_id != this.auth.usuario?.id) {\n      filter.controls.usuario_id.setValue(this.auth.usuario?.id);\n      form.usuario_id = this.auth.usuario?.id;\n    }\n    /* Filtros */\n    if (form.usuario_id?.length) {\n      result.push([\"usuario_id\", \"==\", form.usuario_id]);\n    }\n    if (form.plano_trabalho_id?.length) {\n      result.push([\"plano_trabalho_id\", \"==\", form.plano_trabalho_id]);\n    }\n    if (form.unidade_id?.length) {\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.unidades_subordinadas) {\n      result.push([\"unidades_subordinadas\", \"==\", true]);\n    }\n    if (form.etiquetas?.length) {\n      result.push([\"etiquetas\", \"in\", form.etiquetas.map((x: LookupItem) => x.value)]);\n    }\n    if (form.numero_processo?.length) {\n      result.push([\"numero_processo\", \"==\", form.numero_processo]);\n    }\n    if (form.numero?.length) {\n      result.push([\"numero\", \"==\", form.numero]);\n    }\n    if (form.status?.length && !result.find(x => x[0] == \"status\")) {\n      result.push([\"status\", \"==\", form.status]);\n      if (form.status == \"ARQUIVADO\") this.filter!.controls.arquivadas.setValue(true);\n    }\n    if (!this.filter!.controls.arquivadas.value) {\n      result.push([\"data_arquivamento\", \"==\", null]);\n    }\n    if (form.tipo_atividade_id?.length) {\n      result.push([\"tipo_atividade_id\", \"==\", form.tipo_atividade_id]);\n    }\n    if (form.tipo_processo_id?.length) {\n      result.push([\"tipo_processo_id\", \"==\", form.tipo_processo_id]);\n    }\n    if (form.plano_entrega_id?.length) {\n      result.push([\"plano_entrega_id\", \"==\", form.plano_entrega_id]);\n    }\n    if (form.plano_entrega_entrega_id?.length) {\n      result.push([\"plano_entrega_entrega_id\", \"==\", form.plano_entrega_entrega_id]);\n    }\n    if (form.data_filtro?.length) {\n      const field = form.data_filtro == \"DISTRIBUICAO\" ? \"data_distribuicao\" : form.data_filtro == \"PRAZO\" ? \"data_estipulada_entrega\" : \"data_entrega\";\n      if (form.data_inicio) {\n        result.push([field, \">=\", form.data_inicio]);\n      }\n      if (form.data_fim) {\n        result.push([field, \"<=\", form.data_fim]);\n      }\n    }\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    this.filter!.controls.atribuidas_para_mim.setValue(false);\n    this.filter!.controls.usuario_id.setValue(null);\n    this.filter!.controls.somente_unidade_atual.setValue(false);\n    this.filter!.controls.unidades_subordinadas.setValue(false);\n    this.filter!.controls.unidade_id.setValue(null);\n    this.filter!.controls.plano_trabalho_id.setValue(null);\n    this.filter!.controls.numero_processo.setValue(\"\");\n    this.filter!.controls.atividade_id.setValue(null);\n    this.filter!.controls.tipo_processo_id.setValue(null);\n    this.filter!.controls.data_filtro.setValue(null);\n    this.filter!.controls.data_inicio.setValue(null);\n    this.filter!.controls.data_fim.setValue(null);\n    this.filter!.controls.plano_entrega_id.setValue(null);\n    this.filter!.controls.plano_entrega_entrega_id.setValue(null);\n    if (!this.fixedFilter?.length || !this.fixedFilter.find(x => x[0] == \"status\")) this.filter!.controls.status.setValue(null);\n    this.filter!.controls.etiquetas.setValue([]);\n    super.filterClear(filter);\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    if (this.etiqueta && this.etiqueta.selectedItem) {\n      const item = this.etiqueta.selectedItem;\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\n        result = {\n          key: key,\n          value: item.value,\n          color: item.color,\n          icon: item.icon\n        };\n        this.formEdit.controls.etiqueta.setValue(null);\n      }\n    }\n    return result;\n  };\n\n  public async onColumnEtiquetasEdit(row: any) {\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\n    this.formEdit.controls.etiqueta.setValue(null);\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n  }\n\n  public async onColumnEtiquetasSave(row: any) {\n    try {\n      const saved = await this.dao!.update(row.id, {\n        etiquetas: this.formEdit.controls.etiquetas.value\n      });\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\n      return !!saved;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public onEtiquetaConfigClick() {\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\n      modal: true, modalClose: (modalResult) => {\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n        this.cdRef.detectChanges();\n      }\n    });\n  }\n\n  public async onUnidadeChange(event: Event) {\n    let unidade_selecionada = await this.unidadeDao.getById(this.filter?.controls.unidade_id.value, ['planos_entrega']);\n    this.planosEntregas = unidade_selecionada?.planos_entrega?.map(x => Object.assign({\n      key: x.id,\n      value: x.nome\n    })) || [];\n  }\n\n  public async onPlanoEntregaChange(event: Event) {\n    let plano_entrega_selecionado: any[] = [];\n    let unidade_selecionada = await this.unidadeDao.getById(this.filter?.controls.unidade_id.value, ['planos_entrega.entregas']);\n    unidade_selecionada?.planos_entrega?.forEach(element => {\n      if (element.id == this.filter!.controls.plano_entrega_id.value) plano_entrega_selecionado.push(element.entregas);\n    });\n    this.planosEntregasEntregas = plano_entrega_selecionado[0]!.map((x: { id: any; descricao: any; }) => Object.assign({\n      key: x.id,\n      value: x.descricao\n    })) || [];\n  }\n}\n\n","<ng-template #calendarEfemerides>\n    <calendar-efemerides [efemerides]=\"efemerides\"></calendar-efemerides>\n</ng-template>\n\n\n<grid [dao]=\"dao\" [add]=\"add\" [form]=\"formEdit\" [hasEdit]=\"false\" [hasDelete]=\"false\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [loadList]=\"onGridLoad.bind(this)\" [selectable]=\"selectable\" (select)=\"onSelect($event)\" [groupTemplate]=\"groupAtividades\">\n    <ng-template #groupAtividades let-grid='grid' let-separator='separator' let-group='group'>\n        <div class=\"d-flex ps-3\"> \n            <ng-container *ngFor=\"let item of group\">\n                <label class=\"me-3\">{{item.label}}: <b>{{item.value}}</b></label>\n            </ng-container>\n        </div>\n    </ng-template>\n\n    <toolbar *ngIf=\"!fixedFilter && !selectable\">\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Entrega\" controlName=\"agrupar_entrega\" [control]=\"filter!.controls.agrupar_entrega\" (change)=\"onAgruparChange($event)\"></input-switch>\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\n    </toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && !queryParams?.filter && filterCollapsed\">\n        <div class=\"row\">\n            <input-switch [size]=\"1\" label=\"Minhas\" controlName=\"atribuidas_para_mim\" [control]=\"filter!.controls.atribuidas_para_mim\" (change)=\"onAtribuidasParaMimChange($event)\"></input-switch>\n            <input-search [size]=\"5\" label=\"Usuário\" #usuario [control]=\"filter!.controls.usuario_id\" controlName=\"usuario_id\"  [disabled]=\"filter!.controls.atribuidas_para_mim.value ? 'true' : undefined\" [dao]=\"usuarioDao\" ></input-search>\n            <input-search [size]=\"5\" label=\"Plano de trabalho\" #planoTrabalho [control]=\"filter!.controls.plano_trabalho_id\" controlName=\"plano_trabalho_id\" [dao]=\"planoTrabalhoDao\" ></input-search>\n            <input-switch [size]=\"1\" label=\"Atual\" controlName=\"somente_unidade_atual\" [control]=\"filter!.controls.somente_unidade_atual\" (change)=\"onSomenteUnidadeAtualChange($event)\" labelInfo=\"Somente as atividades da unidade selecionada\"></input-switch>\n            \n        </div>\n        <div class=\"row\">\n            <input-search [size]=\"4\" label=\"Unidade\" #unidade [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [disabled]=\"filter!.controls.somente_unidade_atual.value ? 'true' : undefined\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange($event)\"></input-search>\n            <input-switch [size]=\"1\" label=\"Sub.\" controlName=\"unidades_subordinadas\" [control]=\"filter!.controls.unidades_subordinadas\" labelInfo=\"Incluir as unidades subordinadas\"></input-switch>\n            <input-select [size]=\"4\" [label]=\"lex.translate('Plano de Entrega')\" #planoEntrega itemTodos=\"- Todos -\" [valueTodos]=\"null\" controlName=\"plano_entrega_id\" [control]=\"filter!.controls.plano_entrega_id\" [items]=\"planosEntregas\" (change)=\"onPlanoEntregaChange($event)\"></input-select>\n            <input-select [size]=\"3\" [label]=\"lex.translate('Entrega do Plano de Entrega')\" #planoEntregaEntrega itemTodos=\"- Todos -\" [valueTodos]=\"null\"  controlName=\"plano_entrega_entrega_id\" [control]=\"filter!.controls.plano_entrega_entrega_id\" [items]=\"planosEntregasEntregas\"></input-select>\n        </div>\n        <div class=\"row\">\n            <input-text [size]=\"1\" label=\"#ID\" controlName=\"numero\" maskFormat=\"999999\" [control]=\"filter!.controls.numero\" [labelInfo]=\"'Número ' + lex.translate('atividade')\" [attr.maxlength]=250></input-text>\n            <input-text [size]=\"3\" [label]=\"'Nº '+ lex.translate('Processo') +' (Sei)'\" maskFormat=\"00000.000000/0000-00\" controlName=\"numero_processo\" [control]=\"filter!.controls.numero_processo\" labelInfo=\"Pesquisa no documento de requisição, conclusão e nos documentos das tarefas\" [attr.maxlength]=250></input-text>\n            <input-select [size]=\"3\" label=\"Status\" itemTodos=\"- Todos -\" [valueTodos]=\"null\" [disabled]=\"fixedFilter?.length && fixedFilter![0]![0] == 'status' ? 'true' : undefined\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.ATIVIDADE_STATUS_COM_ARQUIVADAS\"></input-select>\n            <input-multiselect noForm noBox [size]=\"4\" label=\"Etiquetas\" controlName=\"etiquetas\" [control]=\"filter!.controls.etiquetas\"></input-multiselect>\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também atividades arquivadas\"></input-switch>\n        </div>\n        <div class=\"row\">\n            <input-search [size]=\"3\" [label]=\"lex.translate('Tipo de Atividade')\" [control]=\"filter!.controls.tipo_atividade_id\" controlName=\"tipo_atividade_id\" [dao]=\"tipoAtividadeDao\"></input-search>\n            <input-search [size]=\"3\" [label]=\"lex.translate('Tipo de Processo')\" [control]=\"filter!.controls.tipo_processo_id\" controlName=\"tipo_processo_id\" [dao]=\"tipoProcessoDao\" ></input-search>\n            <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Todos -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\n            <input-datetime [size]=\"2\" noIcon [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Data início do período\"></input-datetime>\n            <input-datetime [size]=\"2\" noIcon [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Data fim do período\"></input-datetime>\n        </div>\n    </filter>\n    <columns>\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-boxes\" [align]=\"'center'\" [hint]=\"lex.translate('Tarefas da atividade')\" [template]=\"columnTarefas\" [expandTemplate]=\"columnExpandedTarefas\">\n            <ng-template let-row=\"row\" #columnTarefas>\n                <span *ngIf=\"row.tarefas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row.tarefas?.length}}</span>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedTarefas>\n                <atividade-list-tarefa persist [selectable]=\"selectable\" [editable]=\"!row.metadados.concluido\" [atividade]=\"row\"></atividade-list-tarefa>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\n            <ng-template let-header=\"header\" #titleIdAtividadeDescricao>\n                <order by=\"numero\" [header]=\"header\">#ID</order>/{{lex.translate('Tipo de Atividade')}}/\n                <order by=\"plano_trabalho_entrega.descricao\" [header]=\"header\">{{lex.translate('Entrega')}}</order><br>\n                Descrição\n            </ng-template>\n            <ng-template let-row=\"row\" #columnAtividadeDescricao>\n                <span class=\"text-nowrap d-block\">\n                    <badge icon=\"bi bi-hash\" [label]=\"row.numero\" color=\"light\" [data]=\"row.numero\" [click]=\"atividadeService.onIdClick.bind(this)\"></badge>\n                    <badge *ngIf=\"row.tipo_atividade\" [icon]=\"entityService.getIcon('TipoAtividade')\" [label]=\"row.tipo_atividade.nome\" color=\"light\"></badge>\n                    <badge *ngIf=\"row.plano_trabalho_entrega\" [icon]=\"entityService.getIcon('Entrega')\" [label]=\"row.plano_trabalho_entrega.descricao\" color=\"info\" (click)=\"onEntregaClick(row)\" role=\"button\"></badge>\n                </span>\n                <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n                <reaction [entity]=\"row\" origem=\"ATIVIDADE\"></reaction>\n            </ng-template>\n        </column>\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\n            <ng-template let-row=\"row\" #columnEtiquetas>\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\" [click]=\"onEtiquetaClick.bind(this)\"></badge>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\n                </input-multiselect>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titlePlanoTrabalho\" [template]=\"columnPlanoTrabalho\">\n            <ng-template let-header=\"header\" #titlePlanoTrabalho>\n                Plano de trabalho\n            </ng-template>\n            <ng-template let-row=\"row\" #columnPlanoTrabalho>\n               <span class=\"d-block\" *ngIf=\"row.planoTrabalho\">{{dao!.getDateFormatted(row.planoTrabalho.data_inicio)}} <br>{{ \" até \"+dao!.getDateFormatted(row.planoTrabalho.data_fim)}}</span>\n            </ng-template>\n        </column>\n\n        <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\n            <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\n                Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\n                <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnPessoas>\n                <div class=\"text-nowrap\">\n                    <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\n                    <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\n                </div>\n                <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleTempos\" [template]=\"columnTempos\">\n            <ng-template let-header=\"header\" #titleTempos>\n                Tempos\n                <order by=\"data_distribuicao\" [header]=\"header\">Distribuição</order><br>\n                <order by=\"data_estipulada_entrega\" [header]=\"header\">Prazo</order>\n                <order by=\"data_entrega\" [header]=\"header\">Entrega</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnTempos>\n                <div class=\"one-per-line\">\n                    <badge *ngFor=\"let tempo of atividadeService.temposAtividade(row, extra, onDespendidoClick.bind(this))\" [badge]=\"tempo\"></badge>\n                </div>\n            </ng-template>\n        </column>\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"150\" [columnEditTemplate]=\"selectable ? undefined : columnProgressoEtiquetasChecklistEdit\" [template]=\"columnProgressoEtiquetasChecklist\" [edit]=\"selectable ? undefined : onColumnProgressoEtiquetasChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnProgressoEtiquetasChecklistSave.bind(this)\">\n            <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n                <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                <table *ngIf=\"row.checklist?.length\">\n                    <tr *ngFor=\"let check of row.checklist\">\n                        <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                    </tr>\n                </table>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklistEdit>\n                <input-number [size]=\"12\" [decimals]=\"2\" label=\"Progresso\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso\" [control]=\"formEdit.controls.progresso\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                <table *ngIf=\"row.checklist?.length\">\n                    <tr *ngFor=\"let check of checklist; let i = index\">\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                    </tr>\n                </table>\n            </ng-template>\n        </column>\n        <column [title]=\"'nº Processo/Status\\nComentários'\" [width]=\"300\" [template]=\"columnNumero\">\n            <ng-template let-row=\"row\" #columnNumero>\n                <documentos-badge [documento]=\"row.documento_requisicao\"></documentos-badge>\n                <span class=\"d-block\">\n                    <badge *ngFor=\"let status of atividadeService.getStatus(row)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\" [click]=\"status.data?.filter ? onStatusClick.bind(this) : undefined\"></badge>\n                </span>\n                <comentarios-widget [entity]=\"row\" [selectable]=\"selectable\" origem=\"ATIVIDADE\" [grid]=\"grid\"></comentarios-widget>\n            </ng-template>\n        </column>\n        <column *ngIf=\"!selectable\" type=\"options\" [metadata]=\"optionsMetadata\" [dynamicOptions]=\"atividadeService.dynamicOptions.bind(this)\" [dynamicButtons]=\"atividadeService.dynamicButtons.bind(this)\" [options]=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n\n"],"names":["Base","AtividadeTarefa","constructor","data","documento","comentarios","descricao","data_lancamento","Date","tempo_estimado","data_conclusao","documento_id","atividade_id","usuario_id","tipo_tarefa_id","initialization","PageListBase","UsuarioDaoService","UnidadeDaoService","Atividade","ListenerAllPagesService","CalendarService","AtividadeDaoService","TipoProcessoDaoService","ComentarioService","TipoAtividadeDaoService","AtividadeService","PlanoTrabalhoDaoService","AtividadeListBase","injector","etiquetas","addComentarioButton","icon","hint","DATAS_FILTRO","key","value","color","unidadeDao","get","usuarioDao","planoTrabalhoDao","tipoAtividadeDao","tipoProcessoDao","allPages","atividadeService","calendar","comentario","join","extra","planos_trabalho","afastamentos","optionsMetadata","refreshId","id","grid","query","bind","removeId","refresh","onGridLoad","rows","forEach","atividade","orderComentarios","Object","assign","planos","entries","reduce","a","v","find","x","push","feriados","feriadosCadastrados","planoTrabalho","plano_trabalho_id","cdRef","detectChanges","onAtribuidasParaMimChange","event","filter","controls","atribuidas_para_mim","setValue","auth","usuario","undefined","onSomenteUnidadeAtualChange","somente_unidade_atual","unidade_id","unidade","onDespendidoClick","row","metadados","concluido","cargaHoraria","carga_horaria","efemerides","calculaDataTempoUnidade","data_inicio","hora","pausas","dialog","template","title","calendarEfemerides","onEtiquetaConfigClick","go","navigate","route","params","modal","modalClose","modalResult","util","merge","config","b","comentarioClick","element","getAttribute","setAttribute","addComentarioClick","GridComponent","i0","ɵɵelement","ɵɵproperty","ctx_r1","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","item_r42","label","ɵɵtextInterpolate","ɵɵtemplate","AtividadeListGridComponent_ng_template_3_ng_container_1_Template","group_r40","ɵɵlistener","AtividadeListGridComponent_toolbar_5_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r44","ctx_r43","ɵɵnextContext","ɵɵresetView","onAgruparChange","AtividadeListGridComponent_toolbar_5_Template_input_switch_change_2_listener","ctx_r45","ctx_r4","agrupar_entrega","agrupar","row_r50","tarefas","length","AtividadeListGridComponent_column_35_ng_template_1_span_0_Template","ctx_r49","selectable","row_r53","AtividadeListGridComponent_column_35_ng_template_1_Template","ɵɵtemplateRefExtractor","AtividadeListGridComponent_column_35_ng_template_3_Template","ctx_r10","lex","translate","_r46","_r48","header_r54","ctx_r12","ctx_r56","entityService","getIcon","row_r55","tipo_atividade","nome","AtividadeListGridComponent_ng_template_39_badge_3_Template_badge_click_0_listener","_r61","ctx_r59","onEntregaClick","ctx_r57","plano_trabalho_entrega","AtividadeListGridComponent_ng_template_39_badge_2_Template","AtividadeListGridComponent_ng_template_39_badge_3_Template","numero","ctx_r14","onIdClick","etiqueta_r65","ctx_r64","onEtiquetaClick","AtividadeListGridComponent_ng_template_42_badge_0_Template","row_r63","AtividadeListGridComponent_ng_template_44_Template_input_select_details_1_listener","_r69","ctx_r68","ctx_r18","formEdit","addItemHandleEtiquetas","etiqueta","ctx_r72","dao","getDateFormatted","row_r71","data_fim","AtividadeListGridComponent_ng_template_49_span_0_Template","header_r74","row_r75","sigla","ctx_r26","apelidoOuNome","demandante","header_r76","tempo_r79","AtividadeListGridComponent_ng_template_59_badge_1_Template","ctx_r30","temposAtividade","row_r77","AtividadeListGridComponent_ng_template_62_table_2_tr_1_i_2_Template","check_r84","checked","texto","AtividadeListGridComponent_ng_template_62_table_2_tr_1_Template","row_r80","checklist","AtividadeListGridComponent_ng_template_62_separator_1_Template","AtividadeListGridComponent_ng_template_62_table_2_Template","progresso","ctx_r90","i_r92","check_r91","AtividadeListGridComponent_ng_template_64_table_2_tr_1_Template","ctx_r89","AtividadeListGridComponent_ng_template_64_separator_1_Template","AtividadeListGridComponent_ng_template_64_table_2_Template","ctx_r34","row_r87","status_r95","ctx_r94","onStatusClick","AtividadeListGridComponent_ng_template_67_badge_2_Template","row_r93","documento_requisicao","ctx_r36","getStatus","ctx_r37","dynamicOptions","dynamicButtons","options","AtividadeListGridComponent","_","selectRoute","minhas","planosEntregas","planosEntregasEntregas","storeFilter","form","unidades_subordinadas","filterWhere","result","fixedFilter","map","numero_processo","status","arquivadas","tipo_atividade_id","tipo_processo_id","plano_entrega_id","plano_entrega_entrega_id","data_filtro","field","code","modalWidth","fh","FormBuilder","default","groupBy","addOption","OPTION_LOGS","ngAfterViewInit","metadata","groupByOptions","reloadFilter","showFilter","onColumnProgressoEtiquetasChecklistEdit","_this","_asyncToGenerator","clone","onColumnProgressoEtiquetasChecklistSave","_this2","saved","update","error","filterClear","selectedItem","item","textHash","validateLookupItem","onColumnEtiquetasEdit","_this3","onColumnEtiquetasSave","_this4","onUnidadeChange","_this5","unidade_selecionada","getById","planos_entrega","onPlanoEntregaChange","_this6","plano_entrega_selecionado","entregas","_2","ɵɵdirectiveInject","Injector","_3","selectors","viewQuery","AtividadeListGridComponent_Query","rf","ctx","AtividadeListGridComponent_ng_template_0_Template","AtividadeListGridComponent_Template_grid_select_2_listener","onSelect","AtividadeListGridComponent_ng_template_3_Template","AtividadeListGridComponent_toolbar_5_Template","AtividadeListGridComponent_Template_input_switch_change_8_listener","AtividadeListGridComponent_Template_input_switch_change_13_listener","AtividadeListGridComponent_Template_input_search_change_15_listener","AtividadeListGridComponent_Template_input_select_change_18_listener","AtividadeListGridComponent_column_35_Template","AtividadeListGridComponent_ng_template_37_Template","AtividadeListGridComponent_ng_template_39_Template","AtividadeListGridComponent_ng_template_42_Template","AtividadeListGridComponent_ng_template_44_Template","AtividadeListGridComponent_ng_template_47_Template","AtividadeListGridComponent_ng_template_49_Template","AtividadeListGridComponent_ng_template_52_Template","AtividadeListGridComponent_ng_template_54_Template","AtividadeListGridComponent_ng_template_57_Template","AtividadeListGridComponent_ng_template_59_Template","AtividadeListGridComponent_ng_template_62_Template","AtividadeListGridComponent_ng_template_64_Template","AtividadeListGridComponent_ng_template_67_Template","AtividadeListGridComponent_column_69_Template","add","orderBy","_r2","hasPermissionTo","filterSubmit","filterCollapseChange","queryParams","filterCollapsed","ɵɵattribute","lookup","ATIVIDADE_STATUS_COM_ARQUIVADAS","_r11","_r13","_r15","_r17","_r19","_r21","_r23","_r25","_r27","_r29","_r33","_r31","_r35","rowsLimit"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}