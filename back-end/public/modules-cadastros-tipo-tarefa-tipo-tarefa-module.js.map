{"version":3,"sources":["./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-form/tipo-tarefa-form.component.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-form/tipo-tarefa-form.component.html","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-list/tipo-tarefa-list.component.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-list/tipo-tarefa-list.component.html","./src/app/models/tipo-tarefa.model.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-routing.module.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa.module.ts"],"names":[],"mappings":"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","file":"modules-cadastros-tipo-tarefa-tipo-tarefa-module.js","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoTarefaDaoService } from 'src/app/dao/tipo-tarefa-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoTarefa } from 'src/app/models/tipo-tarefa.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'tipo-tarefa-form',\r\n  templateUrl: './tipo-tarefa-form.component.html',\r\n  styleUrls: ['./tipo-tarefa-form.component.scss']\r\n})\r\nexport class TipoTarefaFormComponent extends PageFormBase<TipoTarefa, TipoTarefaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoTarefa, TipoTarefaDaoService);\r\n    this.modalWidth = 1100;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      tempo_estimado: {default: 0},\r\n      documental: {default: false},\r\n      comentario_predefinido: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoTarefa, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoTarefa());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoTarefa> {\r\n    return new Promise<TipoTarefa>((resolve, reject) => {\r\n      const tarefa = this.util.fill(new TipoTarefa(), this.entity!);\r\n      resolve(this.util.fillForm(tarefa, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoTarefa): string => {\r\n    return \"Editando \" + this.lex.translate(\"Tipo de Tarefa\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div class=\"row\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"8\" label=\"Nome\" icon=\"bi bi-upc\" controlName=\"nome\"></input-text>\r\n            <input-timer onlyHours [label]=\"lex.translate('Tempo estimado')\" [size]=\"3\" controlName=\"tempo_estimado\" labelInfo=\"Tempo estimado para execução\"></input-timer>\r\n            <input-switch label=\"Documental?\" [size]=\"1\" controlName=\"documental\" labelInfo=\"\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-textarea [size]=\"12\" [rows]=\"3\" label=\"Comentário automático\" controlName=\"comentario_predefinido\"></input-textarea>\r\n        </div>\r\n    </div>\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoTarefaDaoService } from 'src/app/dao/tipo-tarefa-dao.service';\r\nimport { TipoTarefa } from 'src/app/models/tipo-tarefa.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tarefa-list',\r\n  templateUrl: './tipo-tarefa-list.component.html',\r\n  styleUrls: ['./tipo-tarefa-list.component.scss']\r\n})\r\nexport class TipoTarefaListComponent extends PageListBase<TipoTarefa, TipoTarefaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoTarefa, TipoTarefaDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Tipos de Tarefa\");\r\n    this.code = \"MOD_TRF\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"}\r\n     });\r\n     this.join = [\"unidade\", \"entidade\"];\r\n    // Testa se o usuário possui permissão para exibir dados da tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir a tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TRF_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TRF_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"lex.translate('Tarefa')\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome ...\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column [title]=\"lex.translate('Tempo estimado') + ' /(h)'\" field=\"tempo_estimado\"></column>\r\n        <column title=\"Documental?\" type=\"select\" field=\"documental\" [items]=\"lookup.SIMNAO\"></column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Base } from './base.model';\r\n\r\nexport class TipoTarefa extends Base {\r\n    public nome: string = \"\"; /* Nome da tarefa */\r\n    public tempo_estimado: number = 0; /* Tempo estimado para a execução da tarefa (Horas decimais) */\r\n    public documental: boolean = false; /* Se a entrega requer obrigatoriamente um documento */\r\n    public comentario: string | null = null; /* Comentário predefinida para a tarefa */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoTarefaFormComponent } from './tipo-tarefa-form/tipo-tarefa-form.component';\r\nimport { TipoTarefaListComponent } from './tipo-tarefa-list/tipo-tarefa-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoTarefaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Tarefa\" } },\r\n  { path: 'new', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Tipo de Tarefa\", modal: true } },\r\n  { path: ':id/edit', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Tipo de Tarefa\", modal: true } },\r\n  { path: ':id/consult', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Tipo de Tarefa\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoTarefaRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TipoTarefaRoutingModule } from './tipo-tarefa-routing.module';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TipoTarefaFormComponent } from './tipo-tarefa-form/tipo-tarefa-form.component';\r\nimport { TipoTarefaListComponent } from './tipo-tarefa-list/tipo-tarefa-list.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoTarefaFormComponent,\r\n    TipoTarefaListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoTarefaRoutingModule\r\n  ]\r\n})\r\nexport class TipoTarefaModule { }\r\n"],"sourceRoot":"webpack:///"}