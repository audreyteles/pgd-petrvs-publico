{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-atividade.model.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\nimport { Atividade } from './atividade.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoAtividade extends Base {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public atividade?: Atividade;\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public atividade_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public avaliacao?: Avaliacao;\r\n    //public status?: Status;\r\n\r\n    public data_inicio: Date = new Date();\r\n    public data_fim: Date = new Date();\r\n    public avaliacoes: Avaliacao[] = [];\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public avaliacao_id: string | null = null;\r\n    public status_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\r\nimport { Afastamento } from 'src/app/models/afastamento.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\n\r\nexport type ConsolidacaoEntrega = {\r\n  id: string,\r\n  entrega: PlanoTrabalhoEntrega,\r\n  atividades: Atividade[]\r\n};\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-form',\r\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridEntregas', { static: false }) public gridEntregas?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() planoTrabalho?: PlanoTrabalho;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\r\n\r\n  public consolidacaoOcorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public formAtividade: FormGroup;\r\n  public formOcorrencia: FormGroup;\r\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public tipoAtividadeDao: TipoAtividadeDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\r\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\r\n  public itemsAfastamentos: Afastamento[] = [];\r\n  \r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.consolidacaoOcorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.formAtividade = this.fh.FormBuilder({\r\n      esforco: { default: 0 },\r\n      realizado: { default: null },\r\n      descricao: { default: \"\" },\r\n      tipo_atividade: {default: null}\r\n    }, this.cdRef, this.validateEntrega);\r\n    this.formOcorrencia = this.fh.FormBuilder({\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      descricao: { default: \"\" }\r\n    }, this.cdRef, this.validateOcorrencia);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public validateEntrega = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia?.controls.data_inicio.value.getTime()) {\r\n        result = \"Menor que início\";\r\n    } \r\n    return result;\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.gridEntregas!.loading = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      let dados = await this.dao!.dadosConsolidacao(entity.id);\r\n      this.itemsEntregas = dados.entregas.map(x => {\r\n        return {\r\n          id: x.id,\r\n          entrega: x,\r\n          atividades: dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id)\r\n        };\r\n      });\r\n      this.itemsOcorrencias = dados.ocorrencias;\r\n      this.itemsAfastamentos = dados.afastamentos;\r\n    } finally {\r\n      this.gridEntregas!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public get hasEsforco(): boolean {\r\n    return !!this.planoTrabalho?.tipo_modalidade?.atividade_esforco;\r\n  }\r\n  \r\n  public get hasRealizado(): boolean {\r\n    return false;\r\n  }\r\n  \r\n  /***************************************************************************************\r\n  * Atividades \r\n  ****************************************************************************************/\r\n  public async addAtividade(entrega: PlanoTrabalhoEntrega) {\r\n    return new Atividade({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_consolidacao_id: this.entity!.id,\r\n      plano_trabalho_entrega_id: entrega.id\r\n    });\r\n  }\r\n\r\n  public async loadAtividade(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      esforco: row.esforco,\r\n      realizado: row.realizado,\r\n      descricao: row.descricao\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeAtividade(atividades: Atividade[], row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let atividade = row as Atividade;\r\n        await this.atividadeDao?.delete(atividade);\r\n        atividades.splice(atividades.findIndex(x => x.id == atividade.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveAtividade(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formAtividade.markAllAsTouched();\r\n    if (this.formAtividade!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.esforco = form.controls.esforco.value;\r\n      row.realizado = form.controls.esforco.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.atividadeDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_EDIT, {}));\r\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_DELETE, {}));\r\n    return result;\r\n  }  \r\n\r\n  /***************************************************************************************\r\n  * Ocorrências \r\n  ****************************************************************************************/\r\n  public async addOcorrencia() {\r\n    return new PlanoTrabalhoConsolidacaoOcorrencia({\r\n      plano_trabalho_consolidacao_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadOcorrencia(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim,\r\n      descricao: row.descricao\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeOcorrencia(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let ocorrencia = row as PlanoTrabalhoConsolidacaoOcorrencia;\r\n        await this.consolidacaoOcorrenciaDao?.delete(ocorrencia);\r\n        this.itemsOcorrencias.splice(this.itemsOcorrencias.findIndex(x => x.id == ocorrencia.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveOcorrencia(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formOcorrencia.markAllAsTouched();\r\n    if (this.formOcorrencia!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.consolidacaoOcorrenciaDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n}\r\n","<separator [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\r\n    <grid [items]=\"itemsEntregas\" #gridEntregas [minHeight]=\"0\" expanded>\r\n        <columns>\r\n            <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n                <ng-template let-row=\"row\" #columnConsolidacao>\r\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n                </ng-template>\r\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                    <grid [items]=\"row.atividades\" [minHeight]=\"0\" #gridAtividade [form]=\"formAtividade\" [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                        [add]=\"addAtividade.bind(this, row.entrega)\" [load]=\"loadAtividade.bind(this)\" [remove]=\"removeAtividade.bind(this, row.atividades)\" [save]=\"saveAtividade.bind(this)\" editable>\r\n                        <columns>\r\n                            <column [title]=\"lex.translate('Atividade')\" [template]=\"columnAtividade\" [editTemplate]=\"columnAtividadeEdit\">\r\n                                <ng-template let-row=\"row\" #columnAtividade>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <small class=\"micro-text fw-ligh\">#{{row.numero}}</small><br>\r\n                                            <badge color=\"success\" label=\"TODO\"></badge>\r\n                                            <!-- TODO: Por status!-->\r\n                                            <!-- badge *ngFor=\"let status of getStatus(row)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\" [click]=\"status.data?.filter ? onStatusClick.bind(this) : undefined\"></badge//-->\r\n                                        </div>\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n                                            <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n                                        </div>\r\n                                        <div class=\"col-md-2 one-per-line\">\r\n                                            <!-- TODO: Por tempos //-->\r\n                                            <badge color=\"primary\" label=\"TODO\"></badge>\r\n                                            <!-- badge *ngFor=\"let tempo of temposAtividade(row)\" [badge]=\"tempo\"></badge /-->\r\n                                            <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <small *ngIf=\"row.atividade\" class=\"atividade-atividade\"><strong>{{row.tipo_atividade.nome || \"\"}}</strong><br></small>\r\n                                            <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                                <ng-template let-row=\"row\" #columnAtividadeEdit>\r\n                                    <div class=\"row\">\r\n                                        <div *ngIf=\"hasEsforco || hasRealizado\" class=\"col-md-4\">\r\n                                            <input-timer *ngIf=\"hasEsforco\" onlyHours icon=\"bi bi-stopwatch\" [label]=\"lex.translate('Esforço')\" [control]=\"formAtividade.controls.esforco\" labelInfo=\"Tempo em horas da execução da atividade\"></input-timer>\r\n                                            <!--plano-entrega-indicador-valor [entrega]=\"row.entrega\" [size]=\"12\" [control]=\"formAtividade.controls.realizado\"></plano-entrega-indicador-valor/-->\r\n                                        </div>\r\n                                        <div [class]=\"(hasEsforco || hasRealizado ? 'col-md-8' : 'col-md-12') + ' row'\">\r\n                                            <input-search [label]=\"lex.translate('Tipo de Atividade')\" #tipoAtividade [emptyValue]=\"null\" [control]=\"formAtividade.controls.tipo_atividade_id\" [dao]=\"tipoAtividadeDao\"></input-search>\r\n                                            <input-textarea [rows]=\"5\" label=\"Descriçao\" [control]=\"formAtividade.controls.descricao\"></input-textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column type=\"options\" [dynamicButtons]=\"atividadeDynamicButtons.bind(this)\"></column>\r\n                        </columns>\r\n                    </grid>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Origem\" [template]=\"columnOrigem\" [width]=\"200\">\r\n                <ng-template let-row=\"row\" #columnOrigem>\r\n                    <badge [label]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).cor\"></badge>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                <ng-template let-row=\"row\" #columnEntrega>\r\n                    <small>{{ planoTrabalhoService.tipoEntrega(row).nome }}</small>\r\n                </ng-template>\r\n            </column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Ocorrências')\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\">\r\n    <grid [items]=\"itemsOcorrencias\" [minHeight]=\"0\" #gridOcorrencia [form]=\"formOcorrencia\" [hasDelete]=\"true\" \r\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \r\n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\r\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Afastamentos')\" [icon]=\"entityService.getIcon('Afastamento')\">\r\n    <grid [items]=\"itemsAfastamentos\" [minHeight]=\"0\" #gridAfastamento>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\r\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\r\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\r\n                    {{row.observacao}}\r\n                </ng-template>\r\n            </column>\r\n            <!--column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column/-->\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-list',\r\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageFrameBase {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n\r\n  public get items(): PlanoTrabalhoConsolidacao[] {\r\n    return this.entity?.consolidacoes || [];\r\n  }\r\n\r\n  public dao?: PlanoTrabalhoConsolidacaoDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    /* Inicializações */\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.title = this.lex.translate(\"Consolidações\");\r\n    this.code = \"MOD_PTR_CSLD\";\r\n    this.form = this.fh.FormBuilder({\r\n      'data_inicio': {default: new Date()},\r\n      'data_fim': {default: new Date()}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    // TODO: Validar data\r\n    return result;\r\n  }\r\n\r\n  public async addConsolidacao() {\r\n    return new PlanoTrabalhoConsolidacao({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadConsolidacao(form: FormGroup, row: any) {\r\n    this.form!.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim\r\n    });    \r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeConsolidacao(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let consolidacao = row as PlanoTrabalhoConsolidacao;\r\n        await this.dao?.delete(consolidacao);\r\n        this.items.splice(this.items.findIndex(x => x.id == consolidacao.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveConsolidacao(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      result = await this.dao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n}\r\n","<grid [items]=\"items\" #grid [form]=\"form!\" [hasDelete]=\"true\" [minHeight]=\"0\"\r\n    [add]=\"addConsolidacao.bind(this)\" [hasAdd]=\"true\" [hasEdit]=\"false\" [hasDelete]=\"false\" editable>\r\n<!--\r\n    [load]=\"loadConsolidacao.bind(this)\" [remove]=\"removeConsolidacao.bind(this)\" [save]=\"saveConsolidacao.bind(this)\" \r\n-->\r\n    <columns>\r\n        <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n            <ng-template let-row=\"row\" #columnConsolidacao>\r\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                <plano-trabalho-consolidacao-form #consolidacao [entity]=\"row\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data início\" [template]=\"columnDataInicio\">\r\n            <ng-template let-row=\"row\" #columnDataInicio>\r\n                {{util.getDateFormatted(row.data_inicio)}}\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\r\n            <ng-template let-row=\"row\" #columnDataFim>\r\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\r\n            <ng-template let-row=\"row\" #columnEstatisticas>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicButtons]=\"dynamicButtons\"></column>\r\n    </columns>\r\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageBase } from 'src/app/modules/base/page-base';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-consolidacao',\r\n  templateUrl: './plano-trabalho-consolidacao.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoComponent extends PageFrameBase {\r\n  @ViewChild(TabsComponent, { static: false }) public tabs?: TabsComponent;\r\n\r\n  public usuarios: Usuario[] = [];\r\n  public unidade?: Unidade;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public loadingUnidade: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      arquivados: { default: false }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    this.tabs!.active = this.queryParams?.tab || \"USUARIO\";\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.unidade = this.auth.unidadeGestor();\r\n    if(this.unidade) {\r\n      this.usuarios = [];\r\n      this.loadingUnidade = true;\r\n      this.cdRef.detectChanges()\r\n      try {\r\n        this.usuarios = await this.unidadeDao.lotados(this.unidade.id);\r\n      } finally {\r\n        this.loadingUnidade = false;\r\n        this.cdRef.detectChanges()\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<tabs right #tabs [title]=\"isModal ? '' : title\">\r\n    <tab key=\"UNIDADE\" *ngIf=\"unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\r\n        <ng-template #tabUnidade>\r\n            <h5>{{unidade.sigla}} - {{unidade.nome}}</h5>\r\n            <div *ngIf=\"loading\" class=\"d-flex justify-content-center my-2\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\"></span>\r\n                </div>\r\n            </div>\r\n            <collapse-card *ngFor=\"let usuario of usuarios\" [data]=\"usuario\" [titleTemplate]=\"usuarioCardTitle\" [template]=\"usuarioCard\">\r\n                <ng-template let-data=\"data\" #usuarioCardTitle>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <profile-picture [url]=\"data.url_foto\" [size]=\"40\" [hint]=\"data.nome\"></profile-picture>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <strong>{{data.nome || \"\"}}</strong><br>\r\n                            <small>{{data.apelido || \"\"}}</small>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template let-data=\"data\" #usuarioCard>\r\n                    <plano-trabalho-list-accordeon [usuarioId]=\"data.id\"></plano-trabalho-list-accordeon>\r\n                </ng-template>\r\n            </collapse-card>\r\n        </ng-template>\r\n    </tab>\r\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\r\n        <ng-template #tabUsuario>\r\n            <separator [control]=\"this.form!.controls.arquivados\" [title]=\"'Mostrar ' + lex.translate('Planos de trabalho') + ' arquivados?'\"></separator>\r\n            <plano-trabalho-list-accordeon [usuarioId]=\"auth.usuario!.id\"></plano-trabalho-list-accordeon>\r\n        </ng-template>\r\n    </tab>\r\n</tabs>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form-termo',\r\n  templateUrl: './plano-trabalho-form-termo.component.html',\r\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public processo?: SeiKeys;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio: {default: new Date()},\r\n      data_fim: {default: new Date()},\r\n      programa_id: {default: \"\"},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      documento_id: {default: \"\"},\r\n      documentos: {default: []},\r\n      tipo_documento_id: {default: \"\"},\r\n      numero_processo: {default: \"\"},\r\n      vinculadas: {default: true},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(!this.tipoDocumento?.searchObj && form?.controls.tipo_documento_id.value?.length) {\r\n      return \"Aguarde o carregamento do tipo de documento\";\r\n    }\r\n    return undefined;\r\n  } \r\n\r\n  public onVinculadasChange(event: Event) {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    await Promise.all ([\r\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    if(this.processo) {\r\n      formValue.id_processo = this.processo.id_processo;\r\n      formValue.numero_processo = this.processo.numero_processo;\r\n    }\r\n    formValue.data_inicio = this.auth.hora;\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\r\n    this.processo = this.metadata?.processo;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\r\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\r\n      //if(this.processo) {\r\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\r\n        /* TODO Gerar documento do TCR\r\n        termo: this.termo!.conteudo,\r\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\r\n        codigo_tipo_documento: (this.tipoDocumento?.searchObj as TipoDocumento)?.codigo\r\n      })));\r\n      /*} else {\r\n        const documento = Object.assign(new Documento(), {\r\n          especie: \"TERMO_ADESAO\",\r\n          conteudo: this.termo!.conteudo,\r\n          plano_id: this.entity!.id,\r\n          status: \"GERADO\"\r\n        });\r\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\r\n        <div class=\"row\">\r\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\r\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\r\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\r\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\r\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\r\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\r\n        </div>\r\n    </separator>\r\n    <div class=\"row\">\r\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\r\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\r\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\"></input-search>\r\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\r\n    </div>\r\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\r\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\r\n    </separator/-->\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoAtividade } from 'src/app/models/plano-trabalho-atividade.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form',\r\n  templateUrl: './plano-trabalho-form.component.html',\r\n  styleUrls: ['./plano-trabalho-form.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\r\n\r\n  public formAtividades: FormGroup;\r\n  public formEntregas: FormGroup;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public templateService: TemplateService;\r\n  public allPages: ListenerAllPagesService;\r\n  public calendar: CalendarService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public horasTotais?: Efemerides;\r\n  public horasParciais?: Efemerides;\r\n  public planoDataset: TemplateDataset[];\r\n  public documentoId?: string;\r\n  public entregas: LookupItem[] = [];\r\n  public programa?: Programa;\r\n  public unidade?: Unidade;\r\n\r\n  private _datasource: any;\r\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"plano_entrega.entregas.entrega\", \"plano_entrega.unidade.entidade\", \"plano_entrega.programa\", \r\n                \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"atividades.atividade\", \"entregas.plano_entrega_entrega.entrega\"];\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.templateService = injector.get<TemplateService>(TemplateService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.modalWidth = 1200;\r\n    this.planoDataset = this.dao!.dataset();\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio: {default: new Date()},\r\n      data_fim: {default: new Date()},\r\n      usuario_id: {default: \"\"},\r\n      plano_entrega_id: {default: \"\"},\r\n      documento_id: {default: null},\r\n      documentos: {default: []},\r\n      atividades: {default: []},\r\n      entregas: {default: []},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"},\r\n      editar_texto_complementar_unidade: {default: false},\r\n      editar_texto_complementar_usuario: {default: false},\r\n      unidade_texto_complementar: {default: \"\"},\r\n      usuario_texto_complementar: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    this.formAtividades = this.fh.FormBuilder({\r\n      atividade_id: {default: \"\"}\r\n    }, this.cdRef, this.validateAtividades);\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      entrega_id: {default: \"\"}\r\n    }, this.cdRef, this.validateEntregas);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\r\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\r\n  }\r\n\r\n  public get datasource(): any {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    let data = this.dao!.datasource(this._entityDocumentos);\r\n    /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\r\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\r\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\r\n      this._datasource = data;\r\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente */\r\n      this.documentoId = undefined;\r\n      if(this.programa?.termo_obrigatorio) {\r\n        this.documentoId = this.form!.controls.documento_id.value;\r\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\r\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\r\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          this.documentoId = this.dao?.generateUuid(),\r\n          documentos.push(new Documento({\r\n            id: this.documentoId, \r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(this.programa.template_tcr?.conteudo || \"\", this._datasource),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: this.programa.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: this._datasource,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: this.entity?.id,\r\n            template_id: this.programa.template_tcr_id\r\n          }));\r\n          this.form!.controls.documento_id.setValue(this.documentoId);\r\n          this.form!.controls.documentos.setValue(documentos);\r\n        }\r\n      }\r\n    }\r\n    return this._datasource;\r\n  }\r\n\r\n  public get template(): Template | undefined {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    return this.planoTrabalhoService.template(this._entityDocumentos);\r\n  }\r\n\r\n  public get isTermos(): boolean {\r\n    return this.action == \"termos\";\r\n  }\r\n\r\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'atividade_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'entrega_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['usuario_id', 'plano_entrega_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\r\n      result = \"Valor não pode ser zero.\";\r\n    } \r\n    if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(this.programa && controlName == 'data_inicio' && (control.value as Date).getTime() < this.programa!.data_inicio.getTime()) {\r\n      result = \"Menor que programa\";\r\n    } else if(this.programa && controlName == 'data_fim' && (control.value as Date).getTime() > this.programa!.data_fim.getTime()) {\r\n      result = \"Maior que programa\";\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.gridAtividades?.editing) {\r\n      this.tabs!.active = \"ATIVIDADES\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    // Validar se o unidade & programa & plano de entrega são interlidados\r\n    // Validar se as entregas pertencem ao plano de entregas da unidade\r\n    // Validar o período está dentro do plano de entregas\r\n    // Validar se o usuários está habilitado no programa\r\n    return undefined;\r\n  };\r\n\r\n  public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\r\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\r\n  }\r\n\r\n  public onPlanoEntregaSelect(selected: SelectItem) {\r\n    let planoEntrega = selected.entity as PlanoEntrega;\r\n    this.updateEntregas(planoEntrega);\r\n    this.form?.controls.data_inicio.updateValueAndValidity();\r\n    this.form?.controls.data_fim.updateValueAndValidity();\r\n    this.programa = planoEntrega?.programa as Programa;\r\n    this.unidade = planoEntrega?.unidade as Unidade;\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(this.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\r\n    this.form!.controls.unidade_texto_complementar.setValue(this.unidade?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onUsuarioSelect(selected: SelectItem) {\r\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onDataInicioChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onDataFimChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onCargaHorariaChenge(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public calculaTempos() {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const carga = this.form?.controls.carga_horaria.value || 8;\r\n    const usuario = this.usuario?.searchObj as Usuario;\r\n    if(usuario && this.unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\r\n      this.calendar.loadFeriadosCadastrados(this.unidade.id).then((feriados) => {\r\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], []);\r\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], usuario.afastamentos);\r\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\r\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    this.updateEntregas(entity.plano_entrega);\r\n    await Promise.all([\r\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\r\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id),\r\n      this.planoEntrega?.loadSearch(entity.plano_entrega || entity.plano_entrega_id)\r\n    ]);\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    let documento = entity.documentos.find(x => x.id == entity.documento_id);\r\n    if(documento) this._datasource = documento.datasource;\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    if(this.isTermos) {\r\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\r\n    } else {\r\n      this.entity = new PlanoTrabalho();\r\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\r\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    }\r\n    await this.loadData(this.entity, this.form!);\r\n  }\r\n\r\n  /* Atividades */  \r\n  public async addAtividades() {\r\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadAtividades(form: FormGroup, row: any) {\r\n    form.controls.atividade_id.setValue(row.atividade_id);\r\n  }\r\n\r\n  public async removeAtividades(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveAtividades(form: FormGroup, row: any) {\r\n    row.atividade_id = form.controls.atividade_id.value;\r\n    row.atividade = this.atividade?.searchObj as Atividade;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\r\n    try {\r\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\r\n    } finally {\r\n      this.dialog.closeSppinerOverlay();\r\n    }*/\r\n    return row;\r\n  }\r\n\r\n  /* Entregas */\r\n  public async addEntregas() {\r\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadEntregas(form: FormGroup, row: any) {\r\n    form.controls.entrega_id.setValue(row.entrega_id);\r\n    form.controls.nome.setValue(row.nome);\r\n  }\r\n\r\n  public async removeEntregas(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveEntregas(form: FormGroup, row: any) {\r\n    row.entrega_id = form.controls.entrega_id.value;\r\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\r\n    row.nome = form.controls.nome.value;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    return row;\r\n  }\r\n\r\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos */\r\n  public get entityDocumentos(): PlanoTrabalho {\r\n    let plano = this.loadEntity();\r\n    /* Remove campo de documentos para comparar */\r\n    plano.documentos = [];\r\n    this._entityDocumentos.documentos = [];\r\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\r\n      this._entityDocumentos = plano;  \r\n    }\r\n    /* Atribui novamente o campo de documentos */\r\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\r\n    return this._entityDocumentos;\r\n  }\r\n\r\n  /* Cria um objeto Plano baseado nos dados do formulário */\r\n  public loadEntity(): PlanoTrabalho {\r\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\r\n    plano = this.util.fillForm(plano, this.form!.value);\r\n    plano.usuario = this.usuario!.searchObj as Usuario;\r\n    plano.unidade = (this.entity?.unidade || this.unidade) as Unidade;\r\n    plano.programa = (this.entity?.programa || this.programa) as Programa;\r\n    plano.tipo_modalidade = this.tipoModalidade!.searchObj as TipoModalidade;\r\n    return plano;\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\r\n    let plano = this.loadEntity();\r\n    /* Confirma dados do documento */\r\n    this.documentos?.saveData();\r\n    plano.documentos = plano.documentos.filter((documento: Documento) => {\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\")\r\n    });\r\n    /* Salva separadamente as informações do plano */\r\n    this.submitting = true;\r\n    try {\r\n      this.entity = await this.dao!.save(plano);\r\n      if(this.form!.controls.editar_texto_complementar_unidade.value) {\r\n        await this.unidadeDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value});\r\n      }\r\n      if(this.form!.controls.editar_texto_complementar_usuario.value) {\r\n        await this.usuarioDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value});\r\n      }\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\r\n  }\r\n\r\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let documento: Documento = row as Documento;\r\n\r\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\r\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\r\n    }\r\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\r\n\r\n    return result;\r\n  }\r\n\r\n  /*public needSign(documento: Documento): boolean {\r\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.searchObj as TipoModalidade);\r\n    const usuario = this.entity!.usuario!; // (this.usuario?.searchObj as Usuario);\r\n    const unidade = this.entity!.unidade!; // (this.unidade?.searchObj as Unidade);\r\n    const entidade = unidade?.entidade;\r\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n    let ids: string[] = [];\r\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n  }*/\r\n\r\n  public async signDocumento(documento: Documento) {\r\n    await this.documentoService.sign([documento]);\r\n    this.cdRef.detectChanges();\r\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\r\n      if(response) {\r\n        this.loading = true;\r\n        this.documentoDao.assinar([documento.id]).then(response => {\r\n          if(response?.length) {\r\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n            let found = documentos.find(x => x.id == documento?.id);\r\n            if(found) found.assinaturas = response[0].assinaturas;\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.gridDocumentos?.reset();\r\n          }\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    //const forma = (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    //console.log(\"FORMA: \", (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\r\n  }\r\n\r\n  public async addDocumento() {\r\n    const documento = new Documento();\r\n    documento.id = this.dao!.generateUuid();\r\n    documento.plano_trabalho_id = this.entity!.id;\r\n    documento.especie = \"TCR\";\r\n    documento._status = \"ADD\";\r\n    this.go.navigate({route: ['gestao', 'plano-trabalho', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\r\n      if(modalResult) {\r\n        (async () => {\r\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n          if(this.isTermos) {\r\n            this.clearErros();\r\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n            try {\r\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\r\n                especie: \"TCR\",\r\n                conteudo: modalResult?.termo,\r\n                plano_trabalho_id: this.entity!.id,\r\n                status: \"GERADO\"\r\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\r\n            } catch (error: any) {\r\n              this.error(error.message ? error.message : error);\r\n              modalResult = undefined;\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          }\r\n          if(modalResult) {\r\n            documentos.push(modalResult);\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\r\n            await this.initializeData(this.form!);\r\n            this.dialog.closeSppinerOverlay();\r\n          }\r\n          this.cdRef.detectChanges();\r\n        })();\r\n      }\r\n    }});\r\n    return undefined;\r\n  }\r\n\r\n  public isVigente(documento: Documento): boolean {\r\n    return this.form!.controls.documento_id.value == documento.id;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"DADOS\" label=\"Dados\">\r\n            <div class=\"row\">\r\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de plano de entregas deve ficar desabilitado nas edições e habilitado apenas nas inclusões; -->\r\n                <input-search #planoEntrega [size]=\"6\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" [join]=\"['entregas.entrega','unidade.entidade','programa.template_tcr']\" (select)=\"onPlanoEntregaSelect($event)\"></input-search>\r\n                <input-search #usuario [size]=\"6\" controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            </div>\r\n            <ng-container *ngIf=\"tipoModalidade!.selectedItem?.entity?.plano_trabalho_calcula_horas\">\r\n                <div class=\"row\">\r\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"></input-workload>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\r\n                </div>\r\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\r\n                </separator>\r\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\r\n                </separator>\r\n            </ng-container>\r\n            <separator [title]=\"lex.translate('Entrega') + lex.translate('plano de trabalho')\">\r\n                <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n                <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                    <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                        <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                    </editable-form>\r\n                </div>\r\n            </separator>\r\n        </tab>\r\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\r\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                </editable-form>\r\n            </div>\r\n        </tab//-->\r\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\r\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\r\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\r\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n            <separator title=\"Texto complementar do usuario\">\r\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\r\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\r\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\r\n            <div clss=\"row\">\r\n                <documentos #documentos [entity]=\"entityDocumentos\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \r\n                    [editingId]=\"documentoId\" [datasource]=\"datasource\" [template]=\"template\"></documentos>\r\n                <!--grid [control]=\"form!.controls.documentos\" #gridDocumentos [disabled]=\"undefined\" #documentos [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"isTermos\" [add]=\"isTermos ? addDocumento.bind(this) : undefined\" editable>\r\n                    <columns>\r\n                        <column title=\"Data\" [template]=\"dataInicio\">\r\n                            <ng-template let-row=\"row\" #dataInicio>\r\n                                <span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data da inclusão\">\r\n                                    <i class=\"bi bi-calendar-plus\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_inicio)}}\r\n                                </span>\r\n                                <span *ngIf=\"row.data_fim\" class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data substituição\">\r\n                                    <i class=\"bi bi-calendar-x\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_fim)}}\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Documento Sei\" [template]=\"documento\">\r\n                            <ng-template let-row=\"row\" #documento>\r\n                                <span *ngIf=\"row.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.numero_processo, row.numero_documento)\">\r\n                                    <i [class]=\"'bi ' + (row.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                                    {{row.numero_processo?.length ? row.numero_processo : \"Não atribuído\"}}\r\n                                    <small *ngIf=\"row.numero_documento?.length\"><br>Sei nº {{row.numero_documento}}</small>\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Status\" [template]=\"vigente\">\r\n                            <ng-template let-row=\"row\" #vigente>\r\n                                <badge [color]=\"lookup.getColor(lookup.DOCUMENTO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.DOCUMENTO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.DOCUMENTO_STATUS, row.status)\"></badge>\r\n                                <span *ngIf=\"isVigente(row)\" class=\"badge rounded-pill bg-info text-dark\">\r\n                                    <i class=\"bi bi-clipboard-check\"></i>\r\n                                    Vigente\r\n                                </span>\r\n                                <div class=\"d-block\">\r\n                                    <span *ngFor=\"let assinatura of row.assinaturas\" class=\"badge rounded-pill bg-primary\">\r\n                                        <i class=\"bi bi-pen\"></i>\r\n                                        {{util.apelidoOuNome(assinatura.usuario)}}\r\n                                    </span>\r\n                                </div>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column type=\"options\" [dynamicButtons]=\"documentoDynamicButtons.bind(this)\"></column>\r\n                    </columns>\r\n                </grid//-->\r\n            </div>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-accordeon',\r\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\r\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\r\n})\r\nexport class PlanoTrabalhoListAccordeonComponent extends PageFrameBase {\r\n  @ViewChild('accordion', { static: false }) public accordion?: AccordionComponent;\r\n  @Input() usuarioId?: string;\r\n  @Input() arquivados: boolean = false;\r\n\r\n  public dao?: PlanoTrabalhoDaoService;\r\n  public planos: PlanoTrabalho[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.accordion!.loading = true;\r\n    try {\r\n      let dados = await this.dao!.getByUsuario(this.usuarioId!, this.arquivados);\r\n      this.planos = dados.planos;\r\n    } finally {\r\n      this.accordion!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","<accordion #accordion [items]=\"planos\" [titleTemplate]=\"planoTrabalhoSectionTitle\" [template]=\"planoTrabalhoSection\">\r\n    <ng-template let-item=\"item\" #planoTrabalhoSectionTitle>\r\n        <div class=\"row w-100\">\r\n            <div class=\"col-md-1\">{{'#' + item.numero}}</div>\r\n            <div class=\"col-md-5\">\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"item.unidade?.sigla\" color=\"light\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"item.programa?.nome\" color=\"light\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('TipoModalidade')\" [label]=\"item.tipo_modalidade?.nome\" color=\"light\"></badge>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                {{dao!.getDateFormatted(item.data_inicio)+\" até \"+dao!.getDateFormatted(item.data_fim)}}\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <badge color=\"danger\" label=\"STATUS\"></badge>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template let-item=\"item\" #planoTrabalhoSection>\r\n        <plano-trabalho-consolidacao-list [entity]=\"item\"></plano-trabalho-consolidacao-list>\r\n    </ng-template>\r\n</accordion>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-entrega',\r\n  templateUrl: './plano-trabalho-list-entrega.component.html',\r\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\r\n})\r\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\r\n  @ViewChild('entregaMesmaUnidade', { static: false }) public entregaMesmaUnidade?: InputSelectComponent;\r\n  @ViewChild('entregaOutraUnidade', { static: false }) public entregaOutraUnidade?: InputSelectComponent;\r\n  @ViewChild('entregaCatalogo', { static: false }) public entregaCatalogo?: InputSelectComponent;\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set entregasDoPlanoEntrega(value: LookupItem[]) {\r\n    if (JSON.stringify(value) != JSON.stringify(this._entregasDoPlanoEntrega)) {\r\n      this._entregasDoPlanoEntrega = value;\r\n      this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n  get entregasDoPlanoEntrega(): LookupItem[] { return this._entregasDoPlanoEntrega; }\r\n\r\n  public get items(): PlanoTrabalhoEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\r\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\r\n    return this.gridControl.value.entregas;\r\n  }\r\n  public options: ToolbarButton[] = [];\r\n  public entregaDao?: EntregaDaoService;\r\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\r\n  public planoEntregaDao?: PlanoEntregaDaoService;\r\n  public peeDao?: PlanoEntregaEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public totalForcaTrabalho: number = 0;\r\n  public entregasMesmaUnidade: LookupItem[] = [];\r\n  public entregasOutraUnidade: LookupItem[] = [];\r\n  public entregasCatalogo: LookupItem[] = [];\r\n  public planoEntregaOutraUnidade?: PlanoEntrega | null;\r\n\r\n  private _disabled: boolean = false;\r\n  private _entregasDoPlanoEntrega: LookupItem[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\"];\r\n    this.form = this.fh.FormBuilder({\r\n      origem: { default: null },\r\n      entregaMesmaUnidade: { default: null },\r\n      entregaOutraUnidade: { default: null },\r\n      entregaCatalogo: { default: null },\r\n      descricao: { default: \"\" },\r\n      forca_trabalho: { default: 1 },\r\n      plano_trabalho_id: { default: null },\r\n      entrega_id: { default: null },\r\n      plano_entrega_entrega_id: { default: null }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\r\n   * @param control \r\n   * @param controlName \r\n   * @returns \r\n   */\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\r\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\r\n    if (['entrega_id'].indexOf(controlName) >= 0) {\r\n      if (this.form?.controls.origem.value == 'CATALOGO' && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*1)\r\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\r\n      if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*2)\r\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\r\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\r\n   */\r\n  async ngOnInit() {\r\n    super.ngOnInit();\r\n    this.entity = this.metadata?.entity || this.entity;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n    this.entregasCatalogo = await this.carregarEntregasCatalogo();\r\n    this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.idPlanoEntregas = this.entregasMesmaUnidade[0]?.data.plano_entrega_id;\r\n    this.entity!._metadata.novaEntrega = undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\r\n   * @returns \r\n   */\r\n  public async addEntrega() {\r\n    return Object.assign(new PlanoTrabalhoEntrega(), {\r\n      _status: this.isNoPersist ? \"ADD\" : \"\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  /**\r\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\r\n   * @param form \r\n   * @param row \r\n   */\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    form.controls.descricao.setValue(row.descricao);\r\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\r\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\r\n    if (!row.entrega_id?.length && !row.plano_entrega_entrega_id?.length) { // É uma nova entrega\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if (!row.plano_entrega_entrega_id?.length && !!row.entrega_id?.length) { // É uma entrega do tipo catálogo\r\n      form.controls.origem.setValue('CATALOGO');\r\n      form.controls.entrega_id.setValue(row.entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row._metadata.entrega_selecionada?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) == this.entity?.plano_entrega_id) {\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row.objeto?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) != this.entity?.plano_entrega_id) {\r\n      form.controls.origem.setValue('OUTRA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      await this.carregarEntregasOutraUnidade(row.plano_entrega_entrega?.plano_entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async removeEntrega(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      this.loading = true;\r\n      try {\r\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\r\n      return this.isNoPersist ? false : true; // (*3)\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\r\n   * @param form \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\r\n    this.entity!._metadata.novaEntrega.entrega_id = this.form?.controls.entrega_id.value ?? null;\r\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\r\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\r\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.loading = true;\r\n    try {\r\n      if (!this.isNoPersist) {\r\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\r\n        if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\r\n      }\r\n    } catch (e: any) {\r\n      this.error(e.message ? e.message : e.toString() || e);\r\n    } finally {\r\n      this.entity!._metadata.novaEntrega.entrega = this.entregaCatalogo?.selectedItem?.data || null;\r\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entregaMesmaUnidade?.selectedItem?.data || this.entregaOutraUnidade?.selectedItem?.data || null;\r\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\r\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n      this.loading = false;\r\n    }\r\n    return this.entity!._metadata.novaEntrega;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\r\n   * @param entregas Array de entregas do plano de trabalho\r\n   * @returns \r\n   */\r\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente para armazenar as entregas da mesma unidade do plano de trabalho.\r\n   * @returns \r\n   */\r\n  public carregarEntregasMesmaUnidade(): LookupItem[] {\r\n    if (!this.entity?.id?.length) return this.entregasDoPlanoEntrega; // (*5)\r\n    let entregasPlanoEntrega = this.entity?.plano_entrega?.entregas || [];\r\n    //let result = entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\r\n    return entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas de uma outra unidade, com base no seu plano de entregas passado como parâmetro.\r\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\r\n   */\r\n  public async carregarEntregasOutraUnidade(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\r\n    this.cdRef.detectChanges();\r\n    this.planoEntregaOutraUnidade = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega\", \"unidade\"]) : idPlanoOuPlano;\r\n    this.entregasOutraUnidade = this.planoEntregaOutraUnidade?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe })) || [];\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas existentes no Catálogo de Entregas.\r\n   * @returns \r\n   */\r\n  public async carregarEntregasCatalogo(): Promise<LookupItem[]> {\r\n    let result: LookupItem[] = [];\r\n    result = (await this.entregaDao?.query().getAll())?.map(ee => Object.assign({}, { key: ee.id, value: ee.nome, data: ee })) || [];\r\n    return result;\r\n  }\r\n\r\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\r\n\r\n  public onOrigemChange(row: any) {\r\n    let value = this.form!.controls.origem.value;\r\n    if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(value)) {\r\n      this.form?.controls.entrega_id.setValue(null);\r\n      this.cdRef.detectChanges();\r\n      if (value == \"OUTRA_UNIDADE\") this.entregaOutraUnidade?.onSearchClick(this.entregaOutraUnidade?.searchRoute);\r\n    } else if (value == 'CATALOGO') {\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    }\r\n  }\r\n\r\n  public onEntregaMesmaUnidadeChange(event: Event) {\r\n    if (this.entregaMesmaUnidade?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaMesmaUnidade?.selectedItem?.value || '');\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaMesmaUnidade?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onEntregaOutraUnidadeChange(event: Event) {\r\n    if (this.entregaOutraUnidade?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaOutraUnidade?.selectedItem?.value || '');\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaOutraUnidade?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onEntregaCatalogoChange(event: Event) {\r\n    if (this.entregaCatalogo?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaCatalogo?.selectedItem?.value || '');\r\n      this.form?.controls.entrega_id.setValue(this.entregaCatalogo?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onForcaTrabalhoChange(row: any) {\r\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\r\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\r\n  }\r\n}\r\n\r\n\r\n/*\r\nTESTES\r\n\r\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\r\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\r\nInclusão Entrega Catálogo                          \r\nInclusão Entrega Mesma Unidade                     \r\nInclusão Entrega Outra Unidade                     \r\nAlteração Entrega Catálogo                         \r\nAlteração Entrega Mesma Unidade                    \r\nAlteração Entrega Outra Unidade                    \r\nCancelamento Entrega Catálogo                      \r\nCancelamento Entrega Mesma Unidade                 \r\nCancelamento Entrega Outra Unidade                 \r\nExclusão Entrega Catálogo                          \r\nExclusão Entrega Mesma Unidade                     \r\nExclusão Entrega Outra Unidade                     \r\n\r\n*/\r\n\r\n/*\r\nOBSERVAÇÕES:\r\n\r\n(*1)  let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\r\njá existe no grid.\r\n\r\n(*2)  let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\nIdem a obs 1, em relação às entregas de outras unidades.\r\n\r\n(*3)  return this.isNoPersist ? false : true;\r\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\r\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\r\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\r\n\r\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\r\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\r\n\r\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\r\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\r\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\r\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\r\n\r\n\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \r\nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\r\n                      |   (foi carregada junto com o Plano)  |                            |        |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\r\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\r\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\r\n                      |                                      |                            | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \r\n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n                      +--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\r\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\r\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\r\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\r\n                      |                                      | addEntrega loadEntrega     | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\r\n                      |   já está sendo editada              | loadEntrega                | três   |\r\n------------------------------------------------------------------------------------------+--------+------------------------------------\r\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\r\n\r\n*/","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\r\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\r\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\r\n            <columns>\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnOrigem><span><small><badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge></small></span></ng-template>\r\n                    <ng-template let-row=\"row\" #editOrigem><input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\r\n                    <ng-template let-row=\"row\" #columnEntrega><small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editEntrega>\r\n                        <input-select *ngIf=\"origem?.value == 'MESMA_UNIDADE'\" #entregaMesmaUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasMesmaUnidade\" (change)=\"onEntregaMesmaUnidadeChange($event)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'OUTRA_UNIDADE'\" #entregaOutraUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasOutraUnidade\" (change)=\"onEntregaOutraUnidadeChange($event)\" searchButton [sufix]=\"planoEntregaOutraUnidade?.unidade?.sigla\" [searchRoute]=\"{route: ['gestao', 'plano-entrega']}\" [afterSearch]=\"carregarEntregasOutraUnidade.bind(this)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'CATALOGO'\" #entregaCatalogo nullable itemNull=\"- Selecione -\" controlName=\"entrega_id\" [control]=\"form!.controls.entrega_id\" [items]=\"entregasCatalogo\" (change)=\"onEntregaCatalogoChange($event)\"></input-select>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                        <div class=\"text-center\">\r\n                            <small><strong>% Força Trab.</strong></small><br>\r\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\r\n                </column>\r\n                <column type=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\r\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\r\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\r\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\" } },\r\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\r\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\r\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoTrabalhoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\r\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\r\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoTrabalhoFormComponent,\r\n    PlanoTrabalhoListComponent,\r\n    PlanoTrabalhoListEntregaComponent,\r\n    PlanoTrabalhoFormTermoComponent,\r\n    PlanoTrabalhoConsolidacaoComponent,\r\n    PlanoTrabalhoConsolidacaoListComponent,\r\n    PlanoTrabalhoConsolidacaoFormComponent,\r\n    PlanoTrabalhoListAccordeonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PlanoTrabalhoRoutingModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoTrabalhoModule { }\r\n"],"names":["DaoBaseService","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","constructor","injector","dataset","deeps","deepsFilter","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoTrabalhoAtividade","data","plano_trabalho_id","atividade_id","initialization","PlanoTrabalhoConsolidacao","data_inicio","Date","data_fim","avaliacoes","avaliacao_id","status_id","ChangeDetectorRef","EditableFormComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","Atividade","PlanoTrabalhoConsolidacaoOcorrencia","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","AtividadeDaoService","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","row_r20","tipo_atividade","nome","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_small_13_Template","ɵɵtextInterpolate1","numero","ɵɵproperty","usuario","length","ctx_r17","util","apelidoOuNome","demandante","progresso","atividade","descricao","ctx_r26","lex","translate","formAtividade","controls","esforco","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_div_1_input_timer_1_Template","ctx_r24","hasEsforco","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_div_1_Template","ctx_r19","hasRealizado","ɵɵclassMap","tipo_atividade_id","tipoAtividadeDao","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template","row_r14","atividades","ctx_r4","addAtividade","bind","entrega","loadAtividade","removeAtividade","saveAtividade","_r16","_r18","atividadeDynamicButtons","ctx_r6","planoTrabalhoService","tipoEntrega","row_r27","planoTrabalho","titulo","cor","ctx_r8","row_r28","row_r29","tipo_motivo_afastamento","icone","observacao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","entity","itemsEntregas","itemsOcorrencias","itemsAfastamentos","validateEntrega","controlName","result","indexOf","validateOcorrencia","includes","isDataValid","getTime","formOcorrencia","cdRef","get","dao","consolidacaoOcorrenciaDao","atividadeDao","ocorrenciaDao","planoEntregaService","fh","FormBuilder","default","realizado","ngAfterViewInit","_this","_asyncToGenerator","loadData","form","_this2","gridEntregas","loading","detectChanges","dados","dadosConsolidacao","id","entregas","map","x","filter","y","plano_trabalho_entrega_id","ocorrencias","afastamentos","tipo_modalidade","atividade_esforco","_this3","generateUuid","plano_trabalho_consolidacao_id","row","_this4","patchValue","_this5","confirm","dialog","delete","splice","findIndex","_this6","undefined","markAllAsTouched","valid","save","push","Object","assign","BUTTON_EDIT","BUTTON_DELETE","addOcorrencia","_this7","loadOcorrencia","_this8","removeOcorrencia","_this9","ocorrencia","saveOcorrencia","_this10","ocorrenciaDynamicButtons","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_5_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_10_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_13_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_30_Template","entityService","getIcon","_r1","_r3","_r5","_r7","_r11","GridComponent","getDateFormatted","row_r16","row_r17","ctx_r12","lookup","getColor","CONSOLIDACAO_STATUS","row_r19","status","codigo","getValue","PlanoTrabalhoConsolidacaoListComponent","items","consolidacoes","validate","title","code","addConsolidacao","loadConsolidacao","removeConsolidacao","consolidacao","saveConsolidacao","dynamicButtons","PlanoTrabalhoConsolidacaoListComponent_Query","PlanoTrabalhoConsolidacaoListComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_18_Template","_r9","TabsComponent","UnidadeDaoService","data_r13","url_foto","apelido","data_r14","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_1_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_3_Template","usuario_r8","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_div_2_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_Template","ɵɵtextInterpolate2","ctx_r5","unidade","sigla","usuarios","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_Template","ctx_r1","_r4","ctx_r3","arquivados","auth","PlanoTrabalhoConsolidacaoComponent","loadingUnidade","unidadeDao","tabs","active","queryParams","tab","unidadeGestor","lotados","PlanoTrabalhoConsolidacaoComponent_Query","PlanoTrabalhoConsolidacaoComponent_tab_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_4_Template","isModal","_r2","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","numero_processo","formValidation","tipoDocumento","searchObj","tipo_documento_id","titleEdit","join","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","carga_horaria","tempo_total","tempo_proporcional","programa_id","usuario_id","unidade_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","fillForm","Promise","all","loadSearch","programa","tipoModalidade","processo","id_processo","hora","initializeData","getById","metadata","plano_trabalho","saveData","resolve","reject","codigo_tipo_documento","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","ɵɵlistener","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","$event","formDisabled","ganho_produtividade","PlanoEntregaDaoService","Documento","PlanoTrabalhoEntrega","DocumentoService","CalendarService","TemplateService","ctx_r9","horasTotais","ctx_r10","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_14_Template_input_workload_change_2_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_14_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_14_separator_6_Template","ɵɵelementContainerEnd","onFormaContagemCargaHorariaChange","formEntregas","ctx_r7","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","entityDocumentos","needSign","extraTags","documentoId","datasource","template","PlanoTrabalhoFormComponent","_entityDocumentos","validateAtividades","validateEntregas","gridAtividades","editing","planoEntregaDao","documentoService","templateService","calendar","modalWidth","plano_entrega_id","unidade_texto_complementar","usuario_texto_complementar","formAtividades","entrega_id","ngOnInit","segment","url","path","action","texto_complementar_plano","JSON","stringify","_datasource","termo_obrigatorio","documento","find","assinaturas","tipo","especie","conteudo","renderTemplate","template_tcr","_status","entidade_id","entidade","template_id","template_tcr_id","setValue","isTermos","updateEntregas","planoEntrega","key","onPlanoEntregaSelect","selected","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","then","feriados","calculaDataTempoUnidade","tempoUtil","plano_entrega","urlParams","carga_horaria_padrao","addAtividades","loadAtividades","removeAtividades","saveAtividades","addEntregas","loadEntregas","removeEntregas","saveEntregas","selectedItem","plano","loadEntity","fill","submitting","update","documentoDynamicButtons","hint","icon","onClick","signDocumento","html","sign","unit","addDocumento","go","navigate","route","modalClose","modalResult","clearErros","showSppinerOverlay","termo","error","message","closeSppinerOverlay","isVigente","onProcessoClick","openDocumentoSei","id_documento","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_10_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_11_listener","PlanoTrabalhoFormComponent_ng_container_14_Template","PlanoTrabalhoFormComponent_top_alert_16_Template","PlanoTrabalhoFormComponent_div_17_Template","PlanoTrabalhoFormComponent_tab_18_Template","PlanoTrabalhoFormComponent_tab_19_Template","ɵɵpureFunction0","_c9","_c10","plano_trabalho_calcula_horas","checkFilled","_c11","_c12","item_r5","ctx_r2","item_r6","PlanoTrabalhoListAccordeonComponent","planos","accordion","getByUsuario","usuarioId","PlanoTrabalhoListAccordeonComponent_Query","PlanoTrabalhoListAccordeonComponent_ng_template_2_Template","PlanoTrabalhoListAccordeonComponent_ng_template_4_Template","PlanoTrabalhoEntregaDaoService","EntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","PlanoTrabalhoListEntregaComponent_ng_template_10_Template_input_select_change_0_listener","restoredCtx","_r30","ctx_r29","onOrigemChange","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","row_r32","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template_input_select_change_0_listener","_r39","ctx_r38","onEntregaMesmaUnidadeChange","ctx_r34","plano_entrega_entrega_id","entregasMesmaUnidade","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_1_Template_input_select_change_0_listener","_r42","ctx_r41","onEntregaOutraUnidadeChange","ctx_r35","entregasOutraUnidade","planoEntregaOutraUnidade","ɵɵpureFunction1","_c5","_c4","carregarEntregasOutraUnidade","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_2_Template_input_select_change_0_listener","_r45","ctx_r44","onEntregaCatalogoChange","ctx_r36","entregasCatalogo","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_1_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_2_Template","ctx_r14","totalForcaTrabalho","row_r47","forca_trabalho","PlanoTrabalhoListEntregaComponent_ng_template_24_Template_input_text_change_0_listener","_r50","row_r48","ctx_r49","onForcaTrabalhoChange","ctx_r18","row_r52","PlanoTrabalhoListEntregaComponent","disabled","_disabled","entregasDoPlanoEntrega","_entregasDoPlanoEntrega","carregarEntregasMesmaUnidade","gridControl","options","cont","e","grid","reduce","acc","entregaDao","planoTrabalhoDao","peeDao","entregaMesmaUnidade","entregaOutraUnidade","entregaCatalogo","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","carregarEntregasCatalogo","_metadata","idPlanoEntregas","novaEntrega","addEntrega","isNoPersist","loadEntrega","entrega_selecionada","plano_entrega_entrega","objeto","removeEntrega","saveEntrega","adding","toString","a","b","entregasPlanoEntrega","epe","idPlanoOuPlano","query","getAll","ee","onSearchClick","searchRoute","index","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_24_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","PlanoTrabalhoListEntregaComponent_ng_template_31_Template","groupBy","_r13","_r15","_r17","_r19","_r21","_r23","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","config","runGuardsAndResolvers","modal","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}