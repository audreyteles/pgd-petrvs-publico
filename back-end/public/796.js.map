{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/plano-trabalho-consolidacao-atividade-dao.service.ts","./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-atividade.model.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoAtividade } from '../models/plano-trabalho-consolidacao-atividade.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoAtividadeDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoAtividade> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoAtividade\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\nimport { Atividade } from './atividade.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoAtividade extends Base {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public atividade?: Atividade;\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public atividade_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public avaliacao?: Avaliacao;\r\n    //public status?: Status;\r\n\r\n    public data_inicio: Date = new Date();\r\n    public data_fim: Date = new Date();\r\n    public avaliacoes: Avaliacao[] = [];\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public avaliacao_id: string | null = null;\r\n    public status_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputLevelItem } from 'src/app/components/input/input-level/input-level.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoAtividadeDaoService } from 'src/app/dao/plano-trabalho-consolidacao-atividade-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoAtividade } from 'src/app/models/plano-trabalho-consolidacao-atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\r\nimport { Afastamento } from 'src/app/models/afastamento.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\r\n\r\nexport type ConsolidacaoEntrega = {\r\n  entrega: PlanoTrabalhoEntrega,\r\n  atividades: (Atividade | PlanoTrabalhoConsolidacaoAtividade)[]\r\n};\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-form',\r\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() planoTrabalho?: PlanoTrabalho;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\r\n\r\n  public consolidacaoAtividadeDao: PlanoTrabalhoConsolidacaoAtividadeDaoService;\r\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public formAtividade: FormGroup;\r\n  public formOcorrencia: FormGroup;\r\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\r\n  public tipoAtividadeDao: TipoAtividadeDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\r\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\r\n  public itemsAfastamentos: Afastamento[] = [];\r\n  \r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.consolidacaoAtividadeDao = injector.get<PlanoTrabalhoConsolidacaoAtividadeDaoService>(PlanoTrabalhoConsolidacaoAtividadeDaoService);\r\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.formAtividade = this.fh.FormBuilder({\r\n      esforco: { default: 0 },\r\n      realizado: { default: null },\r\n      descricao: { default: \"\" }\r\n    }, this.cdRef, this.validateEntrega);\r\n    this.formOcorrencia = this.fh.FormBuilder({\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      descricao: { default: \"\" }\r\n    }, this.cdRef, this.validateOcorrencia);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public validateEntrega = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia.controls.data_inicio.value.getTime()) {\r\n        result = \"Menor que início\";\r\n    } \r\n    return result;\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    let dados = await this.dao!.dadosConsolidacao(entity.id);\r\n    this.itemsEntregas = dados.entregas.map(x => {\r\n      return {\r\n        entrega: x,\r\n        atividades: [\r\n          ...dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id),\r\n          ...dados.consolidaoAtividades.filter(y => y.plano_trabalho_entrega_id == x.id)\r\n        ]\r\n      };\r\n    });\r\n    this.itemsOcorrencias = dados.ocorrencias;\r\n    this.itemsAfastamentos = dados.afastamentos;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public get hasEsforco(): boolean {\r\n    return true;\r\n  }\r\n  \r\n  public get hasRealizado(): boolean {\r\n    return true;\r\n  }\r\n  \r\n  /***************************************************************************************\r\n  * Atividades \r\n  ****************************************************************************************/\r\n  public async addAtividade() {\r\n    return new PlanoTrabalhoConsolidacaoAtividade({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_consolidacao_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadAtividade(form: FormGroup, row: any) {\r\n    \r\n    \r\n    /*form.controls.nivel.setValue(this.getSequencia(this.grid?.getMetadata(row), row));\r\n    form.controls.sequencia.setValue(row.sequencia);\r\n    form.controls.nome.setValue(row.nome);\r\n    this.cdRef.detectChanges();*/\r\n  }\r\n\r\n  public async removeAtividade(row: any) {\r\n    /*let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n        let processo = row as CadeiaValorProcesso;\r\n        let filhos = this.items.filter(x => x.processo_pai_id == processo.id) || [];\r\n        filhos.forEach(x => this.removeProcesso(x));\r\n        this.items.splice(this.items.findIndex(x => x.id == processo.id), 1);\r\n        if (!this.isNoPersist)  await this.processosDao?.delete(row);\r\n        return true;\r\n      \r\n    } else {\r\n      return false;\r\n    }*/\r\n  }\r\n\r\n  public async saveAtividade(form: FormGroup, row: any) {\r\n    /*let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      let niveis = form.controls.nivel.value.split(\".\");\r\n      let parents = this.processos(niveis.slice(0, niveis.length - 1));\r\n      let parentId = parents?.length ? parents[parents.length - 1].id : null;\r\n      let sequencia = niveis[niveis.length - 1] * 1;\r\n      /* Atualiza o indice a partir sa sequencia atual para os irmão que tem sequencia maior * /\r\n      this.items.filter(x => x.processo_pai_id == parentId && x.sequencia >= sequencia).forEach(x => x.sequencia++);\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.sequencia = sequencia;\r\n      row.cadeia_valor_id = this.entity?.id;\r\n      row.sequencia = sequencia;\r\n      row.processo_pai_id = parentId;\r\n      row.nome = form.controls.nome.value;\r\n      result = row;\r\n      if (!this.isNoPersist) result = await this.processosDao?.save(row);\r\n    }\r\n    return result;*/\r\n  }\r\n\r\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n  /***************************************************************************************\r\n  * Ocorrências \r\n  ****************************************************************************************/\r\n  public async addOcorrencia() {\r\n    return new PlanoTrabalhoConsolidacaoAtividade({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_consolidacao_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadOcorrencia(form: FormGroup, row: any) {\r\n    \r\n    \r\n    /*form.controls.nivel.setValue(this.getSequencia(this.grid?.getMetadata(row), row));\r\n    form.controls.sequencia.setValue(row.sequencia);\r\n    form.controls.nome.setValue(row.nome);\r\n    this.cdRef.detectChanges();*/\r\n  }\r\n\r\n  public async removeOcorrencia(row: any) {\r\n    /*let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n        let processo = row as CadeiaValorProcesso;\r\n        let filhos = this.items.filter(x => x.processo_pai_id == processo.id) || [];\r\n        filhos.forEach(x => this.removeProcesso(x));\r\n        this.items.splice(this.items.findIndex(x => x.id == processo.id), 1);\r\n        if (!this.isNoPersist)  await this.processosDao?.delete(row);\r\n        return true;\r\n      \r\n    } else {\r\n      return false;\r\n    }*/\r\n  }\r\n\r\n  public async saveOcorrencia(form: FormGroup, row: any) {\r\n    /*let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      let niveis = form.controls.nivel.value.split(\".\");\r\n      let parents = this.processos(niveis.slice(0, niveis.length - 1));\r\n      let parentId = parents?.length ? parents[parents.length - 1].id : null;\r\n      let sequencia = niveis[niveis.length - 1] * 1;\r\n      /* Atualiza o indice a partir sa sequencia atual para os irmão que tem sequencia maior * /\r\n      this.items.filter(x => x.processo_pai_id == parentId && x.sequencia >= sequencia).forEach(x => x.sequencia++);\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.sequencia = sequencia;\r\n      row.cadeia_valor_id = this.entity?.id;\r\n      row.sequencia = sequencia;\r\n      row.processo_pai_id = parentId;\r\n      row.nome = form.controls.nome.value;\r\n      result = row;\r\n      if (!this.isNoPersist) result = await this.processosDao?.save(row);\r\n    }\r\n    return result;*/\r\n  }\r\n\r\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n\r\n}\r\n","<separator [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\r\n    <grid [items]=\"itemsEntregas\" expanded>\r\n        <columns>\r\n            <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n                <ng-template let-row=\"row\" #columnConsolidacao>\r\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n                </ng-template>\r\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                    <grid [items]=\"row.atividades\" noHeader [form]=\"formAtividade\" [hasDelete]=\"true\" \r\n                        [add]=\"addAtividade.bind(this)\" [load]=\"loadAtividade.bind(this)\" \r\n                        [remove]=\"removeAtividade.bind(this)\" [save]=\"saveAtividade.bind(this)\" editable>\r\n                        <columns>\r\n                            <column [template]=\"columnAtividade\" [editTemplate]=\"columnAtividadeEdit\">\r\n                                <ng-template let-row=\"row\" #columnAtividade>\r\n                                    <div *ngIf=\"row instanceof Atividade; else consolidacaoAtividade\" class=\"row\">\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n                                            TODO: Por status\r\n                                            <!--badge *ngFor=\"let status of getStatus(row)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\" [click]=\"status.data?.filter ? onStatusClick.bind(this) : undefined\"></badge//-->\r\n                                        </div>\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n                                            <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n                                        </div>\r\n                                        <div class=\"col-md-2 one-per-line\">\r\n                                            TODO: Por tempos\r\n                                            <!-- badge *ngFor=\"let tempo of temposAtividade(row)\" [badge]=\"tempo\"></badge /-->\r\n                                            <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <small *ngIf=\"row.atividade\" class=\"atividade-atividade\"><strong>{{row.tipo_atividade.nome || \"\"}}</strong><br></small>\r\n                                            <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ng-template #consolidacaoAtividade>\r\n                                        <div class=\"row\">\r\n                                            <div *ngIf=\"hasEsforco || hasRealizado\" class=\"col-md-4 one-per-line\">\r\n                                                <badge *ngIf=\"hasEsforco\" icon=\"bi bi-stopwatch\" [hint]=\"lex.translate('Esforço')\" color=\"light\" [label]=\"util.decimalToTimerFormated(row.esforco, true)\"></badge>\r\n                                                <badge *ngIf=\"hasRealizado\" [hint]=\"lex.translate('Realizado')\" color=\"light\" [label]=\"planoEntregaService.getValorRealizado(row)\"></badge>\r\n                                            </div>\r\n                                            <div [class]=\"hasEsforco || hasRealizado ? 'col-md-8' : 'col-md-12'\">\r\n                                                <small *ngIf=\"row.atividade\" class=\"atividade-atividade\"><strong>{{row.tipo_atividade.nome || \"\"}}</strong><br></small>\r\n                                                <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </ng-template>\r\n                                <ng-template let-row=\"row\" #columnAtividadeEdit>\r\n                                    <div class=\"row\">\r\n                                        <div *ngIf=\"hasEsforco || hasRealizado\" class=\"col-md-4\">\r\n                                            <input-timer *ngIf=\"hasEsforco\" onlyHours icon=\"bi bi-stopwatch\" [label]=\"lex.translate('Esforço')\" controlName=\"esforco\" labelInfo=\"Tempo em horas da execução da atividade\"></input-timer>\r\n                                            <!--plano-entrega-indicador-valor [entrega]=\"row.entrega\" [size]=\"12\" [control]=\"formAtividade.controls.realizado\"></plano-entrega-indicador-valor/-->\r\n                                        </div>\r\n                                        <div [class]=\"(hasEsforco || hasRealizado ? 'col-md-8' : 'col-md-12') + ' row'\">\r\n                                            <input-search [label]=\"lex.translate('Tipo de Atividade')\" #tipoAtividade [emptyValue]=\"null\" controlName=\"tipo_atividade_id\" [dao]=\"tipoAtividadeDao\"></input-search>\r\n                                            <input-textarea [rows]=\"5\" label=\"Descriçao\" controlName=\"descricao\"></input-textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column type=\"options\" [dynamicButtons]=\"atividadeDynamicButtons.bind(this)\"></column>\r\n                        </columns>\r\n                    </grid>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Origem\" [template]=\"columnOrigem\">\r\n                <ng-template let-row=\"row\" #columnOrigem>\r\n                    <badge [label]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).cor\"></badge>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                <ng-template let-row=\"row\" #columnEntrega>\r\n                    <small>{{ planoTrabalhoService.tipoEntrega(row).nome }}</small>\r\n                </ng-template>\r\n            </column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Ocorrências')\">\r\n    <grid [items]=\"itemsOcorrencias\" [form]=\"formOcorrencia\" [hasDelete]=\"true\" \r\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \r\n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\r\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Afastamentos')\">\r\n    <grid [items]=\"itemsAfastamentos\">\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\r\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\r\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\r\n                    {{row.observacao}}\r\n                </ng-template>\r\n            </column>\r\n            <!--column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column/-->\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-consolidacao-list',\r\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageListBase<PlanoTrabalhoConsolidacao, PlanoTrabalhoConsolidacaoDaoService> {\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalhoConsolidacao, PlanoTrabalhoConsolidacaoDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Planos de Trabalho\");\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({}, this.cdRef, this.filterValidate);\r\n    this.join = [];\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    return result;\r\n  }\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PTR_CSLD_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_PTR_CSLD_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\"></filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n            <ng-template let-row=\"row\" #columnConsolidacao>\r\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                <plano-trabalho-consolidacao-form #consolidacao [entity]=\"row\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data inicio\" [template]=\"columnDataInicio\">\r\n            <ng-template let-row=\"row\" #columnDataInicio>\r\n                {{util.getDateFormatted(row.data_inicio)}}\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\r\n            <ng-template let-row=\"row\" #columnDataFim>\r\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\r\n            <ng-template let-row=\"row\" #columnEstatisticas>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column *ngIf=\"!selectable\" type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { PageBase } from 'src/app/modules/base/page-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-consolidacao',\r\n  templateUrl: './plano-trabalho-consolidacao.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoComponent extends PageBase implements OnInit {\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<tabs right [title]=\"isModal ? '' : title\">\r\n    <tab key=\"UNIDADE\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\r\n        <ng-template #tabUnidade>\r\n            <div class=\"card border-primary m-3\">\r\n                <div class=\"card-header\">\r\n                    <!--profile-picture></profile-picture/-->\r\n                    Nome\r\n                </div>\r\n                <div class=\"card-body text-primary\">\r\n                    plano-trabalho-list-accordeon\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </tab>\r\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\r\n        <ng-template #tabUsuario>\r\n        </ng-template>\r\n    </tab>\r\n</tabs>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form-termo',\r\n  templateUrl: './plano-trabalho-form-termo.component.html',\r\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public processo?: SeiKeys;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio_vigencia: {default: new Date()},\r\n      data_fim_vigencia: {default: new Date()},\r\n      programa_id: {default: \"\"},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      documento_id: {default: \"\"},\r\n      documentos: {default: []},\r\n      tipo_documento_id: {default: \"\"},\r\n      numero_processo: {default: \"\"},\r\n      vinculadas: {default: true},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(!this.tipoDocumento?.searchObj && form?.controls.tipo_documento_id.value?.length) {\r\n      return \"Aguarde o carregamento do tipo de documento\";\r\n    }\r\n    return undefined;\r\n  } \r\n\r\n  public onVinculadasChange(event: Event) {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    await Promise.all ([\r\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    if(this.processo) {\r\n      formValue.id_processo = this.processo.id_processo;\r\n      formValue.numero_processo = this.processo.numero_processo;\r\n    }\r\n    formValue.data_inicio = this.auth.hora;\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\r\n    this.processo = this.metadata?.processo;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\r\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\r\n      //if(this.processo) {\r\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\r\n        /* TODO Gerar documento do TCR\r\n        termo: this.termo!.conteudo,\r\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\r\n        codigo_tipo_documento: (this.tipoDocumento?.searchObj as TipoDocumento)?.codigo\r\n      })));\r\n      /*} else {\r\n        const documento = Object.assign(new Documento(), {\r\n          especie: \"TERMO_ADESAO\",\r\n          conteudo: this.termo!.conteudo,\r\n          plano_id: this.entity!.id,\r\n          status: \"GERADO\"\r\n        });\r\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\r\n        <div class=\"row\">\r\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\r\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\r\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\r\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\r\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\r\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\r\n        </div>\r\n    </separator>\r\n    <div class=\"row\">\r\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\r\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\r\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\"></input-search>\r\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\r\n    </div>\r\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\r\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\r\n    </separator/-->\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoAtividade } from 'src/app/models/plano-trabalho-atividade.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form',\r\n  templateUrl: './plano-trabalho-form.component.html',\r\n  styleUrls: ['./plano-trabalho-form.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\r\n\r\n  public formAtividades: FormGroup;\r\n  public formEntregas: FormGroup;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public templateService: TemplateService;\r\n  public allPages: ListenerAllPagesService;\r\n  public calendar: CalendarService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public horasTotais?: Efemerides;\r\n  public horasParciais?: Efemerides;\r\n  public planoDataset: TemplateDataset[];\r\n  public documentoId?: string;\r\n  public entregas: LookupItem[] = [];\r\n  public programa?: Programa;\r\n  public unidade?: Unidade;\r\n\r\n  private _datasource: any;\r\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"plano_entrega.entregas.entrega\", \"plano_entrega.unidade.entidade\", \"plano_entrega.programa\", \r\n                \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"atividades.atividade\", \"entregas.plano_entrega_entrega.entrega\"];\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.templateService = injector.get<TemplateService>(TemplateService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.modalWidth = 1200;\r\n    this.planoDataset = this.dao!.dataset();\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio_vigencia: {default: new Date()},\r\n      data_fim_vigencia: {default: new Date()},\r\n      usuario_id: {default: \"\"},\r\n      plano_entrega_id: {default: \"\"},\r\n      documento_id: {default: null},\r\n      documentos: {default: []},\r\n      atividades: {default: []},\r\n      entregas: {default: []},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"},\r\n      editar_texto_complementar_unidade: {default: false},\r\n      editar_texto_complementar_usuario: {default: false},\r\n      unidade_texto_complementar: {default: \"\"},\r\n      usuario_texto_complementar: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    this.formAtividades = this.fh.FormBuilder({\r\n      atividade_id: {default: \"\"}\r\n    }, this.cdRef, this.validateAtividades);\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      entrega_id: {default: \"\"}\r\n    }, this.cdRef, this.validateEntregas);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\r\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\r\n  }\r\n\r\n  public get datasource(): any {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    let data = this.dao!.datasource(this._entityDocumentos);\r\n    /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\r\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\r\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\r\n      this._datasource = data;\r\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente */\r\n      this.documentoId = undefined;\r\n      if(this.programa?.termo_obrigatorio) {\r\n        this.documentoId = this.form!.controls.documento_id.value;\r\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\r\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\r\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          this.documentoId = this.dao?.generateUuid(),\r\n          documentos.push(new Documento({\r\n            id: this.documentoId, \r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(this.programa.template_tcr?.conteudo || \"\", this._datasource),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: this.programa.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: this._datasource,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: this.entity?.id,\r\n            template_id: this.programa.template_tcr_id\r\n          }));\r\n          this.form!.controls.documento_id.setValue(this.documentoId);\r\n          this.form!.controls.documentos.setValue(documentos);\r\n        }\r\n      }\r\n    }\r\n    return this._datasource;\r\n  }\r\n\r\n  public get template(): Template | undefined {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    return this.planoTrabalhoService.template(this._entityDocumentos);\r\n  }\r\n\r\n  public get isTermos(): boolean {\r\n    return this.action == \"termos\";\r\n  }\r\n\r\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'atividade_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'entrega_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['usuario_id', 'plano_entrega_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\r\n      result = \"Valor não pode ser zero.\";\r\n    } \r\n    if(['data_inicio_vigencia', 'data_fim_vigencia'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(this.programa && controlName == 'data_inicio_vigencia' && (control.value as Date).getTime() < this.programa!.data_inicio_vigencia.getTime()) {\r\n        result = \"Menor que programa\";\r\n    } else if(this.programa && controlName == 'data_fim_vigencia' && (control.value as Date).getTime() > this.programa!.data_fim_vigencia.getTime()) {\r\n        result = \"Maior que programa\";\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.gridAtividades?.editing) {\r\n      this.tabs!.active = \"ATIVIDADES\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    // Validar se o unidade & programa & plano de entrega são interlidados\r\n    // Validar se as entregas pertencem ao plano de entregas da unidade\r\n    // Validar o período está dentro do plano de entregas\r\n    // Validar se o usuários está habilitado no programa\r\n    return undefined;\r\n  };\r\n\r\n  public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\r\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\r\n  }\r\n\r\n  public onPlanoEntregaSelect(selected: SelectItem) {\r\n    let planoEntrega = selected.entity as PlanoEntrega;\r\n    this.updateEntregas(planoEntrega);\r\n    this.form?.controls.data_inicio_vigencia.updateValueAndValidity();\r\n    this.form?.controls.data_fim_vigencia.updateValueAndValidity();\r\n    this.programa = planoEntrega?.programa as Programa;\r\n    this.unidade = planoEntrega?.unidade as Unidade;\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(this.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\r\n    this.form!.controls.unidade_texto_complementar.setValue(this.unidade?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onUsuarioSelect(selected: SelectItem) {\r\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onDataInicioChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onDataFimChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onCargaHorariaChenge(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public calculaTempos() {\r\n    const inicio = this.form?.controls.data_inicio_vigencia.value;\r\n    const fim = this.form?.controls.data_fim_vigencia.value;\r\n    const carga = this.form?.controls.carga_horaria.value || 8;\r\n    const usuario = this.usuario?.searchObj as Usuario;\r\n    if(usuario && this.unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\r\n      this.calendar.loadFeriadosCadastrados(this.unidade.id).then((feriados) => {\r\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], []);\r\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], usuario.afastamentos);\r\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\r\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    this.updateEntregas(entity.plano_entrega);\r\n    await Promise.all([\r\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\r\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id),\r\n      this.planoEntrega?.loadSearch(entity.plano_entrega || entity.plano_entrega_id)\r\n    ]);\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    let documento = entity.documentos.find(x => x.id == entity.documento_id);\r\n    if(documento) this._datasource = documento.datasource;\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    if(this.isTermos) {\r\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\r\n    } else {\r\n      this.entity = new PlanoTrabalho();\r\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\r\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    }\r\n    await this.loadData(this.entity, this.form!);\r\n  }\r\n\r\n  /* Atividades */  \r\n  public async addAtividades() {\r\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadAtividades(form: FormGroup, row: any) {\r\n    form.controls.atividade_id.setValue(row.atividade_id);\r\n  }\r\n\r\n  public async removeAtividades(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveAtividades(form: FormGroup, row: any) {\r\n    row.atividade_id = form.controls.atividade_id.value;\r\n    row.atividade = this.atividade?.searchObj as Atividade;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\r\n    try {\r\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\r\n    } finally {\r\n      this.dialog.closeSppinerOverlay();\r\n    }*/\r\n    return row;\r\n  }\r\n\r\n  /* Entregas */\r\n  public async addEntregas() {\r\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadEntregas(form: FormGroup, row: any) {\r\n    form.controls.entrega_id.setValue(row.entrega_id);\r\n    form.controls.nome.setValue(row.nome);\r\n  }\r\n\r\n  public async removeEntregas(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveEntregas(form: FormGroup, row: any) {\r\n    row.entrega_id = form.controls.entrega_id.value;\r\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\r\n    row.nome = form.controls.nome.value;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    return row;\r\n  }\r\n\r\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos */\r\n  public get entityDocumentos(): PlanoTrabalho {\r\n    let plano = this.loadEntity();\r\n    /* Remove campo de documentos para comparar */\r\n    plano.documentos = [];\r\n    this._entityDocumentos.documentos = [];\r\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\r\n      this._entityDocumentos = plano;  \r\n    }\r\n    /* Atribui novamente o campo de documentos */\r\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\r\n    return this._entityDocumentos;\r\n  }\r\n\r\n  /* Cria um objeto Plano baseado nos dados do formulário */\r\n  public loadEntity(): PlanoTrabalho {\r\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\r\n    plano = this.util.fillForm(plano, this.form!.value);\r\n    plano.usuario = this.usuario!.searchObj as Usuario;\r\n    plano.unidade = (this.entity?.unidade || this.unidade) as Unidade;\r\n    plano.programa = (this.entity?.programa || this.programa) as Programa;\r\n    plano.tipo_modalidade = this.tipoModalidade!.searchObj as TipoModalidade;\r\n    return plano;\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\r\n    let plano = this.loadEntity();\r\n    /* Confirma dados do documento */\r\n    this.documentos?.saveData();\r\n    plano.documentos = plano.documentos.filter((documento: Documento) => {\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\")\r\n    });\r\n    /* Salva separadamente as informações do plano */\r\n    this.submitting = true;\r\n    try {\r\n      this.entity = await this.dao!.save(plano);\r\n      if(this.form!.controls.editar_texto_complementar_unidade.value) {\r\n        await this.unidadeDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value});\r\n      }\r\n      if(this.form!.controls.editar_texto_complementar_usuario.value) {\r\n        await this.usuarioDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value});\r\n      }\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\r\n  }\r\n\r\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let documento: Documento = row as Documento;\r\n\r\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\r\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\r\n    }\r\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\r\n\r\n    return result;\r\n  }\r\n\r\n  /*public needSign(documento: Documento): boolean {\r\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.searchObj as TipoModalidade);\r\n    const usuario = this.entity!.usuario!; // (this.usuario?.searchObj as Usuario);\r\n    const unidade = this.entity!.unidade!; // (this.unidade?.searchObj as Unidade);\r\n    const entidade = unidade?.entidade;\r\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n    let ids: string[] = [];\r\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n  }*/\r\n\r\n  public async signDocumento(documento: Documento) {\r\n    await this.documentoService.sign([documento]);\r\n    this.cdRef.detectChanges();\r\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\r\n      if(response) {\r\n        this.loading = true;\r\n        this.documentoDao.assinar([documento.id]).then(response => {\r\n          if(response?.length) {\r\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n            let found = documentos.find(x => x.id == documento?.id);\r\n            if(found) found.assinaturas = response[0].assinaturas;\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.gridDocumentos?.reset();\r\n          }\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    //const forma = (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    //console.log(\"FORMA: \", (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\r\n  }\r\n\r\n  public async addDocumento() {\r\n    const documento = new Documento();\r\n    documento.id = this.dao!.generateUuid();\r\n    documento.plano_trabalho_id = this.entity!.id;\r\n    documento.especie = \"TCR\";\r\n    documento._status = \"ADD\";\r\n    this.go.navigate({route: ['gestao', 'plano-trabalho', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\r\n      if(modalResult) {\r\n        (async () => {\r\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n          if(this.isTermos) {\r\n            this.clearErros();\r\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n            try {\r\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\r\n                especie: \"TCR\",\r\n                conteudo: modalResult?.termo,\r\n                plano_trabalho_id: this.entity!.id,\r\n                status: \"GERADO\"\r\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\r\n            } catch (error: any) {\r\n              this.error(error.message ? error.message : error);\r\n              modalResult = undefined;\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          }\r\n          if(modalResult) {\r\n            documentos.push(modalResult);\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\r\n            await this.initializeData(this.form!);\r\n            this.dialog.closeSppinerOverlay();\r\n          }\r\n          this.cdRef.detectChanges();\r\n        })();\r\n      }\r\n    }});\r\n    return undefined;\r\n  }\r\n\r\n  public isVigente(documento: Documento): boolean {\r\n    return this.form!.controls.documento_id.value == documento.id;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"DADOS\" label=\"Dados\">\r\n            <div class=\"row\">\r\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de plano de entregas deve ficar desabilitado nas edições e habilitado apenas nas inclusões; -->\r\n                <input-search #planoEntrega [size]=\"6\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" [join]=\"['entregas.entrega','unidade.entidade','programa.template_tcr']\" (select)=\"onPlanoEntregaSelect($event)\"></input-search>\r\n                <input-search #usuario [size]=\"6\" controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            </div>\r\n            <ng-container *ngIf=\"tipoModalidade!.selectedItem?.entity?.plano_trabalho_calcula_horas\">\r\n                <div class=\"row\">\r\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"></input-workload>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\r\n                </div>\r\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\r\n                </separator>\r\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\r\n                </separator>\r\n            </ng-container>\r\n            <separator [title]=\"lex.translate('Entrega') + lex.translate('plano de trabalho')\">\r\n                <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n                <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                    <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                        <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                    </editable-form>\r\n                </div>\r\n            </separator>\r\n        </tab>\r\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\r\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                </editable-form>\r\n            </div>\r\n        </tab//-->\r\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\r\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\r\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\r\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n            <separator title=\"Texto complementar do usuario\">\r\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\r\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\r\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\r\n            <div clss=\"row\">\r\n                <documentos #documentos [entity]=\"entityDocumentos\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \r\n                    [editingId]=\"documentoId\" [datasource]=\"datasource\" [template]=\"template\"></documentos>\r\n                <!--grid [control]=\"form!.controls.documentos\" #gridDocumentos [disabled]=\"undefined\" #documentos [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"isTermos\" [add]=\"isTermos ? addDocumento.bind(this) : undefined\" editable>\r\n                    <columns>\r\n                        <column title=\"Data\" [template]=\"dataInicio\">\r\n                            <ng-template let-row=\"row\" #dataInicio>\r\n                                <span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data da inclusão\">\r\n                                    <i class=\"bi bi-calendar-plus\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_inicio)}}\r\n                                </span>\r\n                                <span *ngIf=\"row.data_fim\" class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data substituição\">\r\n                                    <i class=\"bi bi-calendar-x\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_fim)}}\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Documento Sei\" [template]=\"documento\">\r\n                            <ng-template let-row=\"row\" #documento>\r\n                                <span *ngIf=\"row.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.numero_processo, row.numero_documento)\">\r\n                                    <i [class]=\"'bi ' + (row.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                                    {{row.numero_processo?.length ? row.numero_processo : \"Não atribuído\"}}\r\n                                    <small *ngIf=\"row.numero_documento?.length\"><br>Sei nº {{row.numero_documento}}</small>\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Status\" [template]=\"vigente\">\r\n                            <ng-template let-row=\"row\" #vigente>\r\n                                <badge [color]=\"lookup.getColor(lookup.DOCUMENTO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.DOCUMENTO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.DOCUMENTO_STATUS, row.status)\"></badge>\r\n                                <span *ngIf=\"isVigente(row)\" class=\"badge rounded-pill bg-info text-dark\">\r\n                                    <i class=\"bi bi-clipboard-check\"></i>\r\n                                    Vigente\r\n                                </span>\r\n                                <div class=\"d-block\">\r\n                                    <span *ngFor=\"let assinatura of row.assinaturas\" class=\"badge rounded-pill bg-primary\">\r\n                                        <i class=\"bi bi-pen\"></i>\r\n                                        {{util.apelidoOuNome(assinatura.usuario)}}\r\n                                    </span>\r\n                                </div>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column type=\"options\" [dynamicButtons]=\"documentoDynamicButtons.bind(this)\"></column>\r\n                    </columns>\r\n                </grid//-->\r\n            </div>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-list-accordeon',\r\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\r\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\r\n})\r\nexport class PlanoTrabalhoListAccordeonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>plano-trabalho-list-accordeon works!</p>\r\n","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-entrega',\r\n  templateUrl: './plano-trabalho-list-entrega.component.html',\r\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\r\n})\r\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\r\n  @ViewChild('entregaMesmaUnidade', { static: false }) public entregaMesmaUnidade?: InputSelectComponent;\r\n  @ViewChild('entregaOutraUnidade', { static: false }) public entregaOutraUnidade?: InputSelectComponent;\r\n  @ViewChild('entregaCatalogo', { static: false }) public entregaCatalogo?: InputSelectComponent;\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set entregasDoPlanoEntrega(value: LookupItem[]) {\r\n    if (JSON.stringify(value) != JSON.stringify(this._entregasDoPlanoEntrega)) {\r\n      this._entregasDoPlanoEntrega = value;\r\n      this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n  get entregasDoPlanoEntrega(): LookupItem[] { return this._entregasDoPlanoEntrega; }\r\n\r\n  public get items(): PlanoTrabalhoEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\r\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\r\n    return this.gridControl.value.entregas;\r\n  }\r\n  public options: ToolbarButton[] = [];\r\n  public entregaDao?: EntregaDaoService;\r\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\r\n  public planoEntregaDao?: PlanoEntregaDaoService;\r\n  public peeDao?: PlanoEntregaEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public totalForcaTrabalho: number = 0;\r\n  public entregasMesmaUnidade: LookupItem[] = [];\r\n  public entregasOutraUnidade: LookupItem[] = [];\r\n  public entregasCatalogo: LookupItem[] = [];\r\n  public planoEntregaOutraUnidade?: PlanoEntrega | null;\r\n\r\n  private _disabled: boolean = false;\r\n  private _entregasDoPlanoEntrega: LookupItem[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\"];\r\n    this.form = this.fh.FormBuilder({\r\n      origem: { default: null },\r\n      entregaMesmaUnidade: { default: null },\r\n      entregaOutraUnidade: { default: null },\r\n      entregaCatalogo: { default: null },\r\n      descricao: { default: \"\" },\r\n      forca_trabalho: { default: 1 },\r\n      plano_trabalho_id: { default: null },\r\n      entrega_id: { default: null },\r\n      plano_entrega_entrega_id: { default: null }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\r\n   * @param control \r\n   * @param controlName \r\n   * @returns \r\n   */\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\r\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\r\n    if (['entrega_id'].indexOf(controlName) >= 0) {\r\n      if (this.form?.controls.origem.value == 'CATALOGO' && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*1)\r\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\r\n      if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*2)\r\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\r\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\r\n   */\r\n  async ngOnInit() {\r\n    super.ngOnInit();\r\n    this.entity = this.metadata?.entity || this.entity;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n    this.entregasCatalogo = await this.carregarEntregasCatalogo();\r\n    this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n    this.entity!._metadata.idPlanoEntregas = this.entregasMesmaUnidade[0]?.data.plano_entrega_id;\r\n    this.entity!._metadata.novaEntrega = undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\r\n   * @returns \r\n   */\r\n  public async addEntrega() {\r\n    return Object.assign(new PlanoTrabalhoEntrega(), {\r\n      _status: this.isNoPersist ? \"ADD\" : \"\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  /**\r\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\r\n   * @param form \r\n   * @param row \r\n   */\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    form.controls.descricao.setValue(row.descricao);\r\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\r\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\r\n    if (!row.entrega_id?.length && !row.plano_entrega_entrega_id?.length) { // É uma nova entrega\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if (!row.plano_entrega_entrega_id?.length && !!row.entrega_id?.length) { // É uma entrega do tipo catálogo\r\n      form.controls.origem.setValue('CATALOGO');\r\n      form.controls.entrega_id.setValue(row.entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row._metadata.entrega_selecionada?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) == this.entity?.plano_entrega_id) {\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row.objeto?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) != this.entity?.plano_entrega_id) {\r\n      form.controls.origem.setValue('OUTRA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      await this.carregarEntregasOutraUnidade(row.plano_entrega_entrega?.plano_entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async removeEntrega(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      this.loading = true;\r\n      try {\r\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\r\n      return this.isNoPersist ? false : true; // (*3)\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\r\n   * @param form \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\r\n    this.entity!._metadata.novaEntrega.entrega_id = this.form?.controls.entrega_id.value ?? null;\r\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\r\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\r\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.loading = true;\r\n    try {\r\n      if (!this.isNoPersist) {\r\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\r\n        if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\r\n      }\r\n    } catch (e: any) {\r\n      this.error(e.message ? e.message : e.toString() || e);\r\n    } finally {\r\n      this.entity!._metadata.novaEntrega.entrega = this.entregaCatalogo?.selectedItem?.data || null;\r\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entregaMesmaUnidade?.selectedItem?.data || this.entregaOutraUnidade?.selectedItem?.data || null;\r\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\r\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n      this.loading = false;\r\n    }\r\n    return this.entity!._metadata.novaEntrega;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\r\n   * @param entregas Array de entregas do plano de trabalho\r\n   * @returns \r\n   */\r\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente para armazenar as entregas da mesma unidade do plano de trabalho.\r\n   * @returns \r\n   */\r\n  public carregarEntregasMesmaUnidade(): LookupItem[] {\r\n    if (!this.entity?.id?.length) return this.entregasDoPlanoEntrega; // (*5)\r\n    let entregasPlanoEntrega = this.entity?.plano_entrega?.entregas || [];\r\n    //let result = entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\r\n    return entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas de uma outra unidade, com base no seu plano de entregas passado como parâmetro.\r\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\r\n   */\r\n  public async carregarEntregasOutraUnidade(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\r\n    this.cdRef.detectChanges();\r\n    this.planoEntregaOutraUnidade = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega\", \"unidade\"]) : idPlanoOuPlano;\r\n    this.entregasOutraUnidade = this.planoEntregaOutraUnidade?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe })) || [];\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas existentes no Catálogo de Entregas.\r\n   * @returns \r\n   */\r\n  public async carregarEntregasCatalogo(): Promise<LookupItem[]> {\r\n    let result: LookupItem[] = [];\r\n    result = (await this.entregaDao?.query().getAll())?.map(ee => Object.assign({}, { key: ee.id, value: ee.nome, data: ee })) || [];\r\n    return result;\r\n  }\r\n\r\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\r\n\r\n  public onOrigemChange(row: any) {\r\n    let value = this.form!.controls.origem.value;\r\n    if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(value)) {\r\n      this.form?.controls.entrega_id.setValue(null);\r\n      this.cdRef.detectChanges();\r\n      if (value == \"OUTRA_UNIDADE\") this.entregaOutraUnidade?.onSearchClick(this.entregaOutraUnidade?.searchRoute);\r\n    } else if (value == 'CATALOGO') {\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    }\r\n  }\r\n\r\n  public onEntregaMesmaUnidadeChange(event: Event) {\r\n    if (this.entregaMesmaUnidade?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaMesmaUnidade?.selectedItem?.value || '');\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaMesmaUnidade?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onEntregaOutraUnidadeChange(event: Event) {\r\n    if (this.entregaOutraUnidade?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaOutraUnidade?.selectedItem?.value || '');\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaOutraUnidade?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onEntregaCatalogoChange(event: Event) {\r\n    if (this.entregaCatalogo?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaCatalogo?.selectedItem?.value || '');\r\n      this.form?.controls.entrega_id.setValue(this.entregaCatalogo?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onForcaTrabalhoChange(row: any) {\r\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\r\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\r\n  }\r\n}\r\n\r\n\r\n/*\r\nTESTES\r\n\r\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\r\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\r\nInclusão Entrega Catálogo                          \r\nInclusão Entrega Mesma Unidade                     \r\nInclusão Entrega Outra Unidade                     \r\nAlteração Entrega Catálogo                         \r\nAlteração Entrega Mesma Unidade                    \r\nAlteração Entrega Outra Unidade                    \r\nCancelamento Entrega Catálogo                      \r\nCancelamento Entrega Mesma Unidade                 \r\nCancelamento Entrega Outra Unidade                 \r\nExclusão Entrega Catálogo                          \r\nExclusão Entrega Mesma Unidade                     \r\nExclusão Entrega Outra Unidade                     \r\n\r\n*/\r\n\r\n/*\r\nOBSERVAÇÕES:\r\n\r\n(*1)  let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\r\njá existe no grid.\r\n\r\n(*2)  let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\nIdem a obs 1, em relação às entregas de outras unidades.\r\n\r\n(*3)  return this.isNoPersist ? false : true;\r\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\r\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\r\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\r\n\r\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\r\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\r\n\r\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\r\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\r\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\r\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\r\n\r\n\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \r\nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\r\n                      |   (foi carregada junto com o Plano)  |                            |        |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\r\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\r\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\r\n                      |                                      |                            | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \r\n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n                      +--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\r\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\r\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\r\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\r\n                      |                                      | addEntrega loadEntrega     | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\r\n                      |   já está sendo editada              | loadEntrega                | três   |\r\n------------------------------------------------------------------------------------------+--------+------------------------------------\r\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\r\n\r\n*/","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\r\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\r\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\r\n            <columns>\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnOrigem><span><small><badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge></small></span></ng-template>\r\n                    <ng-template let-row=\"row\" #editOrigem><input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\r\n                    <ng-template let-row=\"row\" #columnEntrega><small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editEntrega>\r\n                        <input-select *ngIf=\"origem?.value == 'MESMA_UNIDADE'\" #entregaMesmaUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasMesmaUnidade\" (change)=\"onEntregaMesmaUnidadeChange($event)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'OUTRA_UNIDADE'\" #entregaOutraUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasOutraUnidade\" (change)=\"onEntregaOutraUnidadeChange($event)\" searchButton [sufix]=\"planoEntregaOutraUnidade?.unidade?.sigla\" [searchRoute]=\"{route: ['gestao', 'plano-entrega']}\" [afterSearch]=\"carregarEntregasOutraUnidade.bind(this)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'CATALOGO'\" #entregaCatalogo nullable itemNull=\"- Selecione -\" controlName=\"entrega_id\" [control]=\"form!.controls.entrega_id\" [items]=\"entregasCatalogo\" (change)=\"onEntregaCatalogoChange($event)\"></input-select>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                        <div class=\"text-center\">\r\n                            <small><strong>% Força Trab.</strong></small><br>\r\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\r\n                </column>\r\n                <column type=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\r\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\r\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\r\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\", modal: true } },\r\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\r\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\r\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoTrabalhoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\r\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\r\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoTrabalhoFormComponent,\r\n    PlanoTrabalhoListComponent,\r\n    PlanoTrabalhoListEntregaComponent,\r\n    PlanoTrabalhoFormTermoComponent,\r\n    PlanoTrabalhoConsolidacaoComponent,\r\n    PlanoTrabalhoConsolidacaoListComponent,\r\n    PlanoTrabalhoConsolidacaoFormComponent,\r\n    PlanoTrabalhoListAccordeonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PlanoTrabalhoRoutingModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoTrabalhoModule { }\r\n"],"names":["DaoBaseService","PlanoTrabalhoConsolidacaoAtividadeDaoService","constructor","injector","dataset","deeps","deepsFilter","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","Base","PlanoTrabalhoAtividade","data","plano_trabalho_id","atividade_id","initialization","PlanoTrabalhoConsolidacao","data_inicio","Date","data_fim","avaliacoes","avaliacao_id","status_id","ChangeDetectorRef","EditableFormComponent","GridComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","PlanoTrabalhoConsolidacaoAtividade","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","row_r16","tipo_atividade","nome","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_div_0_small_12_Template","ɵɵtextInterpolate1","numero","ɵɵproperty","usuario","length","ctx_r17","util","apelidoOuNome","demandante","progresso","atividade","descricao","ctx_r25","lex","translate","decimalToTimerFormated","esforco","ctx_r26","planoEntregaService","getValorRealizado","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_ng_template_1_div_1_badge_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_ng_template_1_div_1_badge_2_Template","ctx_r23","hasEsforco","hasRealizado","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_ng_template_1_div_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_ng_template_1_small_3_Template","ctx_r19","ɵɵclassMap","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_div_0_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_ng_template_1_Template","ɵɵtemplateRefExtractor","ctx_r13","Atividade","_r18","ctx_r34","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_5_div_1_input_timer_1_Template","ctx_r32","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_5_div_1_Template","ctx_r15","tipoAtividadeDao","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_3_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_ng_template_5_Template","row_r11","atividades","ctx_r3","formAtividade","addAtividade","bind","loadAtividade","removeAtividade","saveAtividade","_r12","_r14","atividadeDynamicButtons","ctx_r5","planoTrabalhoService","tipoEntrega","row_r35","entrega","planoTrabalho","titulo","cor","ctx_r7","row_r36","row_r37","tipo_motivo_afastamento","icone","observacao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","entity","itemsEntregas","itemsOcorrencias","itemsAfastamentos","validateEntrega","controlName","result","indexOf","validateOcorrencia","includes","isDataValid","getTime","formOcorrencia","controls","cdRef","get","dao","consolidacaoAtividadeDao","ocorrenciaDao","fh","FormBuilder","default","realizado","ngAfterViewInit","_this","_asyncToGenerator","loadData","form","_this2","dados","dadosConsolidacao","id","entregas","map","x","filter","y","plano_trabalho_entrega_id","consolidaoAtividades","ocorrencias","afastamentos","detectChanges","_this3","generateUuid","plano_trabalho_consolidacao_id","row","addOcorrencia","_this4","loadOcorrencia","removeOcorrencia","saveOcorrencia","ocorrenciaDynamicButtons","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_27_Template","entityService","getIcon","_r0","_r2","_r4","_r6","_r8","PageListBase","ctx_r14","PlanoTrabalhoConsolidacaoListComponent_column_4_ng_template_1_Template","PlanoTrabalhoConsolidacaoListComponent_column_4_ng_template_3_Template","ctx_r1","_r11","_r13","getDateFormatted","row_r18","row_r19","ctx_r9","lookup","getColor","CONSOLIDACAO_STATUS","row_r21","status","codigo","getValue","ctx_r10","edit","options","PlanoTrabalhoConsolidacaoListComponent","filterValidate","title","code","join","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","PlanoTrabalhoConsolidacaoListComponent_Template","ɵɵlistener","PlanoTrabalhoConsolidacaoListComponent_Template_grid_select_0_listener","$event","onSelect","PlanoTrabalhoConsolidacaoListComponent_toolbar_1_Template","PlanoTrabalhoConsolidacaoListComponent_column_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_column_17_Template","add","isModal","orderBy","groupBy","selectable","auth","hasPermissionTo","filterWhere","filterSubmit","filterClear","filterCollapseChange","filterCollapsed","rowsLimit","PageBase","PlanoTrabalhoConsolidacaoComponent","ngOnInit","PlanoTrabalhoConsolidacaoComponent_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_5_Template","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","validate","numero_processo","formValidation","tipoDocumento","searchObj","tipo_documento_id","undefined","titleEdit","unidadeDao","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","carga_horaria","tempo_total","tempo_proporcional","data_inicio_vigencia","data_fim_vigencia","programa_id","usuario_id","unidade_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","Object","assign","fillForm","Promise","all","unidade","loadSearch","programa","tipoModalidade","tipo_modalidade","processo","id_processo","hora","patchValue","initializeData","getById","metadata","plano_trabalho","saveData","resolve","reject","codigo_tipo_documento","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","formDisabled","ganho_produtividade","AtividadeDaoService","PlanoEntregaDaoService","Documento","PlanoTrabalhoEntrega","DocumentoService","CalendarService","TemplateService","horasTotais","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_14_Template_input_workload_change_2_listener","ɵɵrestoreView","ctx_r11","ɵɵnextContext","ɵɵresetView","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_14_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_14_separator_6_Template","ɵɵelementContainerEnd","ctx_r4","onFormaContagemCargaHorariaChange","ctx_r6","formEntregas","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","ctx_r8","entityDocumentos","needSign","extraTags","documentoId","datasource","PlanoTrabalhoFormComponent","_entityDocumentos","validateAtividades","validateEntregas","gridAtividades","editing","tabs","active","apelido","atividadeDao","planoEntregaDao","documentoService","templateService","calendar","modalWidth","plano_entrega_id","unidade_texto_complementar","usuario_texto_complementar","formAtividades","entrega_id","segment","url","path","action","texto_complementar_plano","JSON","stringify","_datasource","termo_obrigatorio","documento","find","assinaturas","tipo","push","especie","conteudo","renderTemplate","template_tcr","_status","entidade_id","entidade","template_id","template_tcr_id","setValue","isTermos","updateEntregas","planoEntrega","key","onPlanoEntregaSelect","selected","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","then","feriados","calculaDataTempoUnidade","tempoUtil","plano_entrega","urlParams","carga_horaria_padrao","addAtividades","loadAtividades","removeAtividades","saveAtividades","addEntregas","_this5","loadEntregas","removeEntregas","saveEntregas","_this6","selectedItem","plano","loadEntity","fill","_this7","submitting","save","update","documentoDynamicButtons","hint","icon","onClick","signDocumento","dialog","html","_this8","sign","unit","addDocumento","_this9","go","navigate","route","modalClose","modalResult","clearErros","showSppinerOverlay","termo","error","message","closeSppinerOverlay","isVigente","onProcessoClick","openDocumentoSei","id_documento","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_10_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_11_listener","PlanoTrabalhoFormComponent_ng_container_14_Template","PlanoTrabalhoFormComponent_top_alert_16_Template","PlanoTrabalhoFormComponent_div_17_Template","PlanoTrabalhoFormComponent_tab_18_Template","PlanoTrabalhoFormComponent_tab_19_Template","ɵɵpureFunction0","_c9","_c10","_r3","plano_trabalho_calcula_horas","checkFilled","_c11","_c12","PlanoTrabalhoListAccordeonComponent","PlanoTrabalhoListAccordeonComponent_Template","PlanoTrabalhoEntregaDaoService","EntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","PlanoTrabalhoListEntregaComponent_ng_template_10_Template_input_select_change_0_listener","restoredCtx","_r30","row_r27","ctx_r29","onOrigemChange","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","row_r32","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template_input_select_change_0_listener","_r39","ctx_r38","onEntregaMesmaUnidadeChange","plano_entrega_entrega_id","entregasMesmaUnidade","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_1_Template_input_select_change_0_listener","_r42","ctx_r41","onEntregaOutraUnidadeChange","ctx_r35","entregasOutraUnidade","planoEntregaOutraUnidade","sigla","ɵɵpureFunction1","_c5","_c4","carregarEntregasOutraUnidade","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_2_Template_input_select_change_0_listener","_r45","ctx_r44","onEntregaCatalogoChange","ctx_r36","entregasCatalogo","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_1_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_2_Template","ctx_r12","totalForcaTrabalho","row_r47","forca_trabalho","PlanoTrabalhoListEntregaComponent_ng_template_24_Template_input_text_change_0_listener","_r50","row_r48","ctx_r49","onForcaTrabalhoChange","ctx_r18","row_r52","ctx_r24","PlanoTrabalhoListEntregaComponent","disabled","_disabled","entregasDoPlanoEntrega","_entregasDoPlanoEntrega","carregarEntregasMesmaUnidade","items","gridControl","cont","e","grid","reduce","acc","entregaDao","planoTrabalhoDao","peeDao","entregaMesmaUnidade","entregaOutraUnidade","entregaCatalogo","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","carregarEntregasCatalogo","_metadata","idPlanoEntregas","novaEntrega","addEntrega","isNoPersist","loadEntrega","entrega_selecionada","plano_entrega_entrega","objeto","removeEntrega","confirm","loading","delete","saveEntrega","adding","toString","a","b","entregasPlanoEntrega","epe","idPlanoOuPlano","query","getAll","ee","onSearchClick","searchRoute","index","findIndex","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_24_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","PlanoTrabalhoListEntregaComponent_ng_template_31_Template","_r1","_r5","_r7","_r9","_r15","_r17","_r19","_r21","_r23","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","config","runGuardsAndResolvers","modal","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}