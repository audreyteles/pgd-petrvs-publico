{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/plano-trabalho-consolidacao-atividade-dao.service.ts","./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-atividade.model.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoAtividade } from '../models/plano-trabalho-consolidacao-atividade.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoAtividadeDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoAtividade> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoAtividade\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\nimport { Atividade } from './atividade.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoAtividade extends Base {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public atividade?: Atividade;\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public atividade_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public avaliacao?: Avaliacao;\r\n    //public status?: Status;\r\n\r\n    public data_inicio: Date = new Date();\r\n    public data_fim: Date = new Date();\r\n    public avaliacoes: Avaliacao[] = [];\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public avaliacao_id: string | null = null;\r\n    public status_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoAtividadeDaoService } from 'src/app/dao/plano-trabalho-consolidacao-atividade-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoAtividade } from 'src/app/models/plano-trabalho-consolidacao-atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\r\nimport { Afastamento } from 'src/app/models/afastamento.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\r\n\r\nexport type ConsolidacaoEntrega = {\r\n  id: string,\r\n  entrega: PlanoTrabalhoEntrega,\r\n  atividades: (Atividade | PlanoTrabalhoConsolidacaoAtividade)[]\r\n};\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-form',\r\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridEntregas', { static: false }) public gridEntregas?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() planoTrabalho?: PlanoTrabalho;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\r\n\r\n  public consolidacaoAtividadeDao: PlanoTrabalhoConsolidacaoAtividadeDaoService;\r\n  public consolidacaoOcorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public formAtividade: FormGroup;\r\n  public formOcorrencia: FormGroup;\r\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\r\n  public tipoAtividadeDao: TipoAtividadeDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\r\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\r\n  public itemsAfastamentos: Afastamento[] = [];\r\n  \r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.consolidacaoAtividadeDao = injector.get<PlanoTrabalhoConsolidacaoAtividadeDaoService>(PlanoTrabalhoConsolidacaoAtividadeDaoService);\r\n    this.consolidacaoOcorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.formAtividade = this.fh.FormBuilder({\r\n      esforco: { default: 0 },\r\n      realizado: { default: null },\r\n      descricao: { default: \"\" },\r\n      tipo_atividade: {default: null}\r\n    }, this.cdRef, this.validateEntrega);\r\n    this.formOcorrencia = this.fh.FormBuilder({\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      descricao: { default: \"\" }\r\n    }, this.cdRef, this.validateOcorrencia);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public validateEntrega = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia?.controls.data_inicio.value.getTime()) {\r\n        result = \"Menor que início\";\r\n    } \r\n    return result;\r\n  }\r\n\r\n  public isAtividade(row: Atividade | PlanoTrabalhoConsolidacaoAtividade) {\r\n    return row instanceof Atividade;\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.gridEntregas!.loading = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      let dados = await this.dao!.dadosConsolidacao(entity.id);\r\n      this.itemsEntregas = dados.entregas.map(x => {\r\n        return {\r\n          id: x.id,\r\n          entrega: x,\r\n          atividades: [\r\n            ...dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id),\r\n            ...dados.consolidaoAtividades.filter(y => y.plano_trabalho_entrega_id == x.id)\r\n          ]\r\n        };\r\n      });\r\n      this.itemsOcorrencias = dados.ocorrencias;\r\n      this.itemsAfastamentos = dados.afastamentos;\r\n    } finally {\r\n      this.gridEntregas!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public get hasEsforco(): boolean {\r\n    return !!this.planoTrabalho?.tipo_modalidade?.atividade_esforco;\r\n  }\r\n  \r\n  public get hasRealizado(): boolean {\r\n    return false;\r\n  }\r\n  \r\n  /***************************************************************************************\r\n  * Atividades \r\n  ****************************************************************************************/\r\n  public async addAtividade(entrega: PlanoTrabalhoEntrega) {\r\n    return new PlanoTrabalhoConsolidacaoAtividade({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_consolidacao_id: this.entity!.id,\r\n      plano_trabalho_entrega_id: entrega.id\r\n    });\r\n  }\r\n\r\n  public async loadAtividade(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      esforco: row.esforco,\r\n      realizado: row.realizado,\r\n      descricao: row.descricao\r\n    });    \r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeAtividade(atividades: (Atividade | PlanoTrabalhoConsolidacaoAtividade)[], row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let atividade = row as PlanoTrabalhoConsolidacaoAtividade;\r\n        await this.consolidacaoAtividadeDao?.delete(atividade);\r\n        atividades.splice(atividades.findIndex(x => x.id == atividade.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveAtividade(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formAtividade.markAllAsTouched();\r\n    if (this.formAtividade!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.esforco = form.controls.esforco.value;\r\n      row.realizado = form.controls.esforco.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.consolidacaoAtividadeDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    if(row instanceof PlanoTrabalhoConsolidacaoAtividade) {\r\n      result.push(Object.assign({}, this.gridEntregas!.BUTTON_EDIT, {}));\r\n      result.push(Object.assign({}, this.gridEntregas!.BUTTON_DELETE, {}));\r\n    }\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n  /***************************************************************************************\r\n  * Ocorrências \r\n  ****************************************************************************************/\r\n  public async addOcorrencia() {\r\n    return new PlanoTrabalhoConsolidacaoOcorrencia({\r\n      plano_trabalho_consolidacao_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadOcorrencia(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim,\r\n      descricao: row.descricao\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeOcorrencia(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let ocorrencia = row as PlanoTrabalhoConsolidacaoOcorrencia;\r\n        await this.consolidacaoOcorrenciaDao?.delete(ocorrencia);\r\n        this.itemsOcorrencias.splice(this.itemsOcorrencias.findIndex(x => x.id == ocorrencia.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveOcorrencia(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formOcorrencia.markAllAsTouched();\r\n    if (this.formOcorrencia!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.consolidacaoOcorrenciaDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n}\r\n","<separator [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\r\n    <grid [items]=\"itemsEntregas\" #gridEntregas [minHeight]=\"0\" expanded>\r\n        <columns>\r\n            <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n                <ng-template let-row=\"row\" #columnConsolidacao>\r\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n                </ng-template>\r\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                    <grid [items]=\"row.atividades\" [minHeight]=\"0\" #gridAtividade [form]=\"formAtividade\" [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                        [add]=\"addAtividade.bind(this, row.entrega)\" [load]=\"loadAtividade.bind(this)\" [remove]=\"removeAtividade.bind(this, row.atividades)\" [save]=\"saveAtividade.bind(this)\" editable>\r\n                        <columns>\r\n                            <column [title]=\"lex.translate('Atividade')\" [template]=\"columnAtividade\" [editTemplate]=\"columnAtividadeEdit\">\r\n                                <ng-template let-row=\"row\" #columnAtividade>\r\n                                    <div *ngIf=\"isAtividade(row); else consolidacaoAtividade\" class=\"row\">\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <small class=\"micro-text fw-ligh\">#{{row.numero}}</small><br>\r\n                                            <badge color=\"success\" label=\"TODO\"></badge>\r\n                                            <!-- TODO: Por status!-->\r\n                                            <!-- badge *ngFor=\"let status of getStatus(row)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\" [click]=\"status.data?.filter ? onStatusClick.bind(this) : undefined\"></badge//-->\r\n                                        </div>\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n                                            <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n                                        </div>\r\n                                        <div class=\"col-md-2 one-per-line\">\r\n                                            <!-- TODO: Por tempos //-->\r\n                                            <badge color=\"primary\" label=\"TODO\"></badge>\r\n                                            <!-- badge *ngFor=\"let tempo of temposAtividade(row)\" [badge]=\"tempo\"></badge /-->\r\n                                            <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <small *ngIf=\"row.atividade\" class=\"atividade-atividade\"><strong>{{row.tipo_atividade.nome || \"\"}}</strong><br></small>\r\n                                            <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ng-template #consolidacaoAtividade>\r\n                                        <div class=\"row\">\r\n                                            <div *ngIf=\"hasEsforco || hasRealizado\" class=\"col-md-4 one-per-line\">\r\n                                                <badge *ngIf=\"hasEsforco\" icon=\"bi bi-stopwatch\" [hint]=\"lex.translate('Esforço')\" color=\"light\" [label]=\"util.decimalToTimerFormated(row.esforco, true)\"></badge>\r\n                                                <badge *ngIf=\"hasRealizado\" [hint]=\"lex.translate('Realizado')\" color=\"light\" [label]=\"planoEntregaService.getValorRealizado(row)\"></badge>\r\n                                            </div>\r\n                                            <div [class]=\"hasEsforco || hasRealizado ? 'col-md-8' : 'col-md-12'\">\r\n                                                <small *ngIf=\"row.atividade\" class=\"atividade-atividade\"><strong>{{row.tipo_atividade.nome || \"\"}}</strong><br></small>\r\n                                                <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </ng-template>\r\n                                <ng-template let-row=\"row\" #columnAtividadeEdit>\r\n                                    <div class=\"row\">\r\n                                        <div *ngIf=\"hasEsforco || hasRealizado\" class=\"col-md-4\">\r\n                                            <input-timer *ngIf=\"hasEsforco\" onlyHours icon=\"bi bi-stopwatch\" [label]=\"lex.translate('Esforço')\" [control]=\"formAtividade.controls.esforco\" labelInfo=\"Tempo em horas da execução da atividade\"></input-timer>\r\n                                            <!--plano-entrega-indicador-valor [entrega]=\"row.entrega\" [size]=\"12\" [control]=\"formAtividade.controls.realizado\"></plano-entrega-indicador-valor/-->\r\n                                        </div>\r\n                                        <div [class]=\"(hasEsforco || hasRealizado ? 'col-md-8' : 'col-md-12') + ' row'\">\r\n                                            <input-search [label]=\"lex.translate('Tipo de Atividade')\" #tipoAtividade [emptyValue]=\"null\" [control]=\"formAtividade.controls.tipo_atividade_id\" [dao]=\"tipoAtividadeDao\"></input-search>\r\n                                            <input-textarea [rows]=\"5\" label=\"Descriçao\" [control]=\"formAtividade.controls.descricao\"></input-textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column type=\"options\" [dynamicButtons]=\"atividadeDynamicButtons.bind(this)\"></column>\r\n                        </columns>\r\n                    </grid>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Origem\" [template]=\"columnOrigem\" [width]=\"200\">\r\n                <ng-template let-row=\"row\" #columnOrigem>\r\n                    <badge [label]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).cor\"></badge>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                <ng-template let-row=\"row\" #columnEntrega>\r\n                    <small>{{ planoTrabalhoService.tipoEntrega(row).nome }}</small>\r\n                </ng-template>\r\n            </column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Ocorrências')\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\">\r\n    <grid [items]=\"itemsOcorrencias\" [minHeight]=\"0\" #gridOcorrencia [form]=\"formOcorrencia\" [hasDelete]=\"true\" \r\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \r\n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\r\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Afastamentos')\" [icon]=\"entityService.getIcon('Afastamento')\">\r\n    <grid [items]=\"itemsAfastamentos\" [minHeight]=\"0\" #gridAfastamento>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\r\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\r\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\r\n                    {{row.observacao}}\r\n                </ng-template>\r\n            </column>\r\n            <!--column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column/-->\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-list',\r\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageFrameBase {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n\r\n  public get items(): PlanoTrabalhoConsolidacao[] {\r\n    return this.entity?.consolidacoes || [];\r\n  }\r\n\r\n  public dao?: PlanoTrabalhoConsolidacaoDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    /* Inicializações */\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.title = this.lex.translate(\"Consolidações\");\r\n    this.code = \"MOD_PTR_CSLD\";\r\n    this.form = this.fh.FormBuilder({\r\n      'data_inicio': {default: new Date()},\r\n      'data_fim': {default: new Date()}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    // TODO: Validar data\r\n    return result;\r\n  }\r\n\r\n  public async addConsolidacao() {\r\n    return new PlanoTrabalhoConsolidacao({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadConsolidacao(form: FormGroup, row: any) {\r\n    this.form!.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim\r\n    });    \r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeConsolidacao(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let consolidacao = row as PlanoTrabalhoConsolidacao;\r\n        await this.dao?.delete(consolidacao);\r\n        this.items.splice(this.items.findIndex(x => x.id == consolidacao.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveConsolidacao(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      result = await this.dao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n}\r\n","<grid [items]=\"items\" #grid [form]=\"form!\" [hasDelete]=\"true\" [minHeight]=\"0\"\r\n    [add]=\"addConsolidacao.bind(this)\" [hasAdd]=\"true\" [hasEdit]=\"false\" [hasDelete]=\"false\" editable>\r\n<!--\r\n    [load]=\"loadConsolidacao.bind(this)\" [remove]=\"removeConsolidacao.bind(this)\" [save]=\"saveConsolidacao.bind(this)\" \r\n-->\r\n    <columns>\r\n        <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n            <ng-template let-row=\"row\" #columnConsolidacao>\r\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                <plano-trabalho-consolidacao-form #consolidacao [entity]=\"row\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data inicio\" [template]=\"columnDataInicio\">\r\n            <ng-template let-row=\"row\" #columnDataInicio>\r\n                {{util.getDateFormatted(row.data_inicio)}}\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\r\n            <ng-template let-row=\"row\" #columnDataFim>\r\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\r\n            <ng-template let-row=\"row\" #columnEstatisticas>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status.codigo)\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicButtons]=\"dynamicButtons\"></column>\r\n    </columns>\r\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageBase } from 'src/app/modules/base/page-base';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-consolidacao',\r\n  templateUrl: './plano-trabalho-consolidacao.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoComponent extends PageFrameBase {\r\n  @ViewChild(TabsComponent, { static: false }) public tabs?: TabsComponent;\r\n\r\n  public usuarios: Usuario[] = [];\r\n  public unidade?: Unidade;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public loadingUnidade: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      arquivados: { default: false }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    this.tabs!.active = this.queryParams?.tab || \"USUARIO\";\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.unidade = this.auth.unidadeGestor();\r\n    if(this.unidade) {\r\n      this.usuarios = [];\r\n      this.loadingUnidade = true;\r\n      this.cdRef.detectChanges()\r\n      try {\r\n        this.usuarios = await this.unidadeDao.lotados(this.unidade.id);\r\n      } finally {\r\n        this.loadingUnidade = false;\r\n        this.cdRef.detectChanges()\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<tabs right #tabs [title]=\"isModal ? '' : title\">\r\n    <tab key=\"UNIDADE\" *ngIf=\"unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\r\n        <ng-template #tabUnidade>\r\n            <h5>{{unidade.sigla}} - {{unidade.nome}}</h5>\r\n            <div *ngIf=\"loading\" class=\"d-flex justify-content-center my-2\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\"></span>\r\n                </div>\r\n            </div>\r\n            <collapse-card *ngFor=\"let usuario of usuarios\" [data]=\"usuario\" [titleTemplate]=\"usuarioCardTitle\" [template]=\"usuarioCard\">\r\n                <ng-template let-data=\"data\" #usuarioCardTitle>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <profile-picture [url]=\"data.url_foto\" [size]=\"40\" [hint]=\"data.nome\"></profile-picture>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <strong>{{data.nome || \"\"}}</strong><br>\r\n                            <small>{{data.apelido || \"\"}}</small>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template let-data=\"data\" #usuarioCard>\r\n                    <plano-trabalho-list-accordeon [usuarioId]=\"data.id\"></plano-trabalho-list-accordeon>\r\n                </ng-template>\r\n            </collapse-card>\r\n        </ng-template>\r\n    </tab>\r\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\r\n        <ng-template #tabUsuario>\r\n            <separator [control]=\"this.form!.controls.arquivados\" [title]=\"'Mostrar ' + lex.translate('Planos de trabalho') + ' arquivados?'\"></separator>\r\n            <plano-trabalho-list-accordeon [usuarioId]=\"auth.usuario!.id\"></plano-trabalho-list-accordeon>\r\n        </ng-template>\r\n    </tab>\r\n</tabs>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form-termo',\r\n  templateUrl: './plano-trabalho-form-termo.component.html',\r\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public processo?: SeiKeys;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio_vigencia: {default: new Date()},\r\n      data_fim_vigencia: {default: new Date()},\r\n      programa_id: {default: \"\"},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      documento_id: {default: \"\"},\r\n      documentos: {default: []},\r\n      tipo_documento_id: {default: \"\"},\r\n      numero_processo: {default: \"\"},\r\n      vinculadas: {default: true},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(!this.tipoDocumento?.searchObj && form?.controls.tipo_documento_id.value?.length) {\r\n      return \"Aguarde o carregamento do tipo de documento\";\r\n    }\r\n    return undefined;\r\n  } \r\n\r\n  public onVinculadasChange(event: Event) {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    await Promise.all ([\r\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    if(this.processo) {\r\n      formValue.id_processo = this.processo.id_processo;\r\n      formValue.numero_processo = this.processo.numero_processo;\r\n    }\r\n    formValue.data_inicio = this.auth.hora;\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\r\n    this.processo = this.metadata?.processo;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\r\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\r\n      //if(this.processo) {\r\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\r\n        /* TODO Gerar documento do TCR\r\n        termo: this.termo!.conteudo,\r\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\r\n        codigo_tipo_documento: (this.tipoDocumento?.searchObj as TipoDocumento)?.codigo\r\n      })));\r\n      /*} else {\r\n        const documento = Object.assign(new Documento(), {\r\n          especie: \"TERMO_ADESAO\",\r\n          conteudo: this.termo!.conteudo,\r\n          plano_id: this.entity!.id,\r\n          status: \"GERADO\"\r\n        });\r\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\r\n        <div class=\"row\">\r\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\r\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\r\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\r\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\r\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\r\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\r\n        </div>\r\n    </separator>\r\n    <div class=\"row\">\r\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\r\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\r\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\"></input-search>\r\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\r\n    </div>\r\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\r\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\r\n    </separator/-->\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoAtividade } from 'src/app/models/plano-trabalho-atividade.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form',\r\n  templateUrl: './plano-trabalho-form.component.html',\r\n  styleUrls: ['./plano-trabalho-form.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\r\n\r\n  public formAtividades: FormGroup;\r\n  public formEntregas: FormGroup;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public templateService: TemplateService;\r\n  public allPages: ListenerAllPagesService;\r\n  public calendar: CalendarService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public horasTotais?: Efemerides;\r\n  public horasParciais?: Efemerides;\r\n  public planoDataset: TemplateDataset[];\r\n  public documentoId?: string;\r\n  public entregas: LookupItem[] = [];\r\n  public programa?: Programa;\r\n  public unidade?: Unidade;\r\n\r\n  private _datasource: any;\r\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"plano_entrega.entregas.entrega\", \"plano_entrega.unidade.entidade\", \"plano_entrega.programa\", \r\n                \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"atividades.atividade\", \"entregas.plano_entrega_entrega.entrega\"];\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.templateService = injector.get<TemplateService>(TemplateService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.modalWidth = 1200;\r\n    this.planoDataset = this.dao!.dataset();\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio_vigencia: {default: new Date()},\r\n      data_fim_vigencia: {default: new Date()},\r\n      usuario_id: {default: \"\"},\r\n      plano_entrega_id: {default: \"\"},\r\n      documento_id: {default: null},\r\n      documentos: {default: []},\r\n      atividades: {default: []},\r\n      entregas: {default: []},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"},\r\n      editar_texto_complementar_unidade: {default: false},\r\n      editar_texto_complementar_usuario: {default: false},\r\n      unidade_texto_complementar: {default: \"\"},\r\n      usuario_texto_complementar: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    this.formAtividades = this.fh.FormBuilder({\r\n      atividade_id: {default: \"\"}\r\n    }, this.cdRef, this.validateAtividades);\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      entrega_id: {default: \"\"}\r\n    }, this.cdRef, this.validateEntregas);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\r\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\r\n  }\r\n\r\n  public get datasource(): any {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    let data = this.dao!.datasource(this._entityDocumentos);\r\n    /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\r\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\r\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\r\n      this._datasource = data;\r\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente */\r\n      this.documentoId = undefined;\r\n      if(this.programa?.termo_obrigatorio) {\r\n        this.documentoId = this.form!.controls.documento_id.value;\r\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\r\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\r\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          this.documentoId = this.dao?.generateUuid(),\r\n          documentos.push(new Documento({\r\n            id: this.documentoId, \r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(this.programa.template_tcr?.conteudo || \"\", this._datasource),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: this.programa.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: this._datasource,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: this.entity?.id,\r\n            template_id: this.programa.template_tcr_id\r\n          }));\r\n          this.form!.controls.documento_id.setValue(this.documentoId);\r\n          this.form!.controls.documentos.setValue(documentos);\r\n        }\r\n      }\r\n    }\r\n    return this._datasource;\r\n  }\r\n\r\n  public get template(): Template | undefined {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    return this.planoTrabalhoService.template(this._entityDocumentos);\r\n  }\r\n\r\n  public get isTermos(): boolean {\r\n    return this.action == \"termos\";\r\n  }\r\n\r\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'atividade_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'entrega_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['usuario_id', 'plano_entrega_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\r\n      result = \"Valor não pode ser zero.\";\r\n    } \r\n    if(['data_inicio_vigencia', 'data_fim_vigencia'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(this.programa && controlName == 'data_inicio_vigencia' && (control.value as Date).getTime() < this.programa!.data_inicio_vigencia.getTime()) {\r\n      result = \"Menor que programa\";\r\n    } else if(this.programa && controlName == 'data_fim_vigencia' && (control.value as Date).getTime() > this.programa!.data_fim_vigencia.getTime()) {\r\n      result = \"Maior que programa\";\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.gridAtividades?.editing) {\r\n      this.tabs!.active = \"ATIVIDADES\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    // Validar se o unidade & programa & plano de entrega são interlidados\r\n    // Validar se as entregas pertencem ao plano de entregas da unidade\r\n    // Validar o período está dentro do plano de entregas\r\n    // Validar se o usuários está habilitado no programa\r\n    return undefined;\r\n  };\r\n\r\n  public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\r\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\r\n  }\r\n\r\n  public onPlanoEntregaSelect(selected: SelectItem) {\r\n    let planoEntrega = selected.entity as PlanoEntrega;\r\n    this.updateEntregas(planoEntrega);\r\n    this.form?.controls.data_inicio_vigencia.updateValueAndValidity();\r\n    this.form?.controls.data_fim_vigencia.updateValueAndValidity();\r\n    this.programa = planoEntrega?.programa as Programa;\r\n    this.unidade = planoEntrega?.unidade as Unidade;\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(this.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\r\n    this.form!.controls.unidade_texto_complementar.setValue(this.unidade?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onUsuarioSelect(selected: SelectItem) {\r\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onDataInicioChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onDataFimChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onCargaHorariaChenge(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public calculaTempos() {\r\n    const inicio = this.form?.controls.data_inicio_vigencia.value;\r\n    const fim = this.form?.controls.data_fim_vigencia.value;\r\n    const carga = this.form?.controls.carga_horaria.value || 8;\r\n    const usuario = this.usuario?.searchObj as Usuario;\r\n    if(usuario && this.unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\r\n      this.calendar.loadFeriadosCadastrados(this.unidade.id).then((feriados) => {\r\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], []);\r\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], usuario.afastamentos);\r\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\r\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    this.updateEntregas(entity.plano_entrega);\r\n    await Promise.all([\r\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\r\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id),\r\n      this.planoEntrega?.loadSearch(entity.plano_entrega || entity.plano_entrega_id)\r\n    ]);\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    let documento = entity.documentos.find(x => x.id == entity.documento_id);\r\n    if(documento) this._datasource = documento.datasource;\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    if(this.isTermos) {\r\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\r\n    } else {\r\n      this.entity = new PlanoTrabalho();\r\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\r\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    }\r\n    await this.loadData(this.entity, this.form!);\r\n  }\r\n\r\n  /* Atividades */  \r\n  public async addAtividades() {\r\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadAtividades(form: FormGroup, row: any) {\r\n    form.controls.atividade_id.setValue(row.atividade_id);\r\n  }\r\n\r\n  public async removeAtividades(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveAtividades(form: FormGroup, row: any) {\r\n    row.atividade_id = form.controls.atividade_id.value;\r\n    row.atividade = this.atividade?.searchObj as Atividade;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\r\n    try {\r\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\r\n    } finally {\r\n      this.dialog.closeSppinerOverlay();\r\n    }*/\r\n    return row;\r\n  }\r\n\r\n  /* Entregas */\r\n  public async addEntregas() {\r\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadEntregas(form: FormGroup, row: any) {\r\n    form.controls.entrega_id.setValue(row.entrega_id);\r\n    form.controls.nome.setValue(row.nome);\r\n  }\r\n\r\n  public async removeEntregas(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveEntregas(form: FormGroup, row: any) {\r\n    row.entrega_id = form.controls.entrega_id.value;\r\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\r\n    row.nome = form.controls.nome.value;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    return row;\r\n  }\r\n\r\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos */\r\n  public get entityDocumentos(): PlanoTrabalho {\r\n    let plano = this.loadEntity();\r\n    /* Remove campo de documentos para comparar */\r\n    plano.documentos = [];\r\n    this._entityDocumentos.documentos = [];\r\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\r\n      this._entityDocumentos = plano;  \r\n    }\r\n    /* Atribui novamente o campo de documentos */\r\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\r\n    return this._entityDocumentos;\r\n  }\r\n\r\n  /* Cria um objeto Plano baseado nos dados do formulário */\r\n  public loadEntity(): PlanoTrabalho {\r\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\r\n    plano = this.util.fillForm(plano, this.form!.value);\r\n    plano.usuario = this.usuario!.searchObj as Usuario;\r\n    plano.unidade = (this.entity?.unidade || this.unidade) as Unidade;\r\n    plano.programa = (this.entity?.programa || this.programa) as Programa;\r\n    plano.tipo_modalidade = this.tipoModalidade!.searchObj as TipoModalidade;\r\n    return plano;\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\r\n    let plano = this.loadEntity();\r\n    /* Confirma dados do documento */\r\n    this.documentos?.saveData();\r\n    plano.documentos = plano.documentos.filter((documento: Documento) => {\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\")\r\n    });\r\n    /* Salva separadamente as informações do plano */\r\n    this.submitting = true;\r\n    try {\r\n      this.entity = await this.dao!.save(plano);\r\n      if(this.form!.controls.editar_texto_complementar_unidade.value) {\r\n        await this.unidadeDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value});\r\n      }\r\n      if(this.form!.controls.editar_texto_complementar_usuario.value) {\r\n        await this.usuarioDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value});\r\n      }\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\r\n  }\r\n\r\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let documento: Documento = row as Documento;\r\n\r\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\r\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\r\n    }\r\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\r\n\r\n    return result;\r\n  }\r\n\r\n  /*public needSign(documento: Documento): boolean {\r\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.searchObj as TipoModalidade);\r\n    const usuario = this.entity!.usuario!; // (this.usuario?.searchObj as Usuario);\r\n    const unidade = this.entity!.unidade!; // (this.unidade?.searchObj as Unidade);\r\n    const entidade = unidade?.entidade;\r\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n    let ids: string[] = [];\r\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n  }*/\r\n\r\n  public async signDocumento(documento: Documento) {\r\n    await this.documentoService.sign([documento]);\r\n    this.cdRef.detectChanges();\r\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\r\n      if(response) {\r\n        this.loading = true;\r\n        this.documentoDao.assinar([documento.id]).then(response => {\r\n          if(response?.length) {\r\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n            let found = documentos.find(x => x.id == documento?.id);\r\n            if(found) found.assinaturas = response[0].assinaturas;\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.gridDocumentos?.reset();\r\n          }\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    //const forma = (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    //console.log(\"FORMA: \", (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\r\n  }\r\n\r\n  public async addDocumento() {\r\n    const documento = new Documento();\r\n    documento.id = this.dao!.generateUuid();\r\n    documento.plano_trabalho_id = this.entity!.id;\r\n    documento.especie = \"TCR\";\r\n    documento._status = \"ADD\";\r\n    this.go.navigate({route: ['gestao', 'plano-trabalho', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\r\n      if(modalResult) {\r\n        (async () => {\r\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n          if(this.isTermos) {\r\n            this.clearErros();\r\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n            try {\r\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\r\n                especie: \"TCR\",\r\n                conteudo: modalResult?.termo,\r\n                plano_trabalho_id: this.entity!.id,\r\n                status: \"GERADO\"\r\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\r\n            } catch (error: any) {\r\n              this.error(error.message ? error.message : error);\r\n              modalResult = undefined;\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          }\r\n          if(modalResult) {\r\n            documentos.push(modalResult);\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\r\n            await this.initializeData(this.form!);\r\n            this.dialog.closeSppinerOverlay();\r\n          }\r\n          this.cdRef.detectChanges();\r\n        })();\r\n      }\r\n    }});\r\n    return undefined;\r\n  }\r\n\r\n  public isVigente(documento: Documento): boolean {\r\n    return this.form!.controls.documento_id.value == documento.id;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"DADOS\" label=\"Dados\">\r\n            <div class=\"row\">\r\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de plano de entregas deve ficar desabilitado nas edições e habilitado apenas nas inclusões; -->\r\n                <input-search #planoEntrega [size]=\"6\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" [join]=\"['entregas.entrega','unidade.entidade','programa.template_tcr']\" (select)=\"onPlanoEntregaSelect($event)\"></input-search>\r\n                <input-search #usuario [size]=\"6\" controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            </div>\r\n            <ng-container *ngIf=\"tipoModalidade!.selectedItem?.entity?.plano_trabalho_calcula_horas\">\r\n                <div class=\"row\">\r\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"></input-workload>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\r\n                </div>\r\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\r\n                </separator>\r\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\r\n                </separator>\r\n            </ng-container>\r\n            <separator [title]=\"lex.translate('Entrega') + lex.translate('plano de trabalho')\">\r\n                <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n                <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                    <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                        <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                    </editable-form>\r\n                </div>\r\n            </separator>\r\n        </tab>\r\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\r\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                </editable-form>\r\n            </div>\r\n        </tab//-->\r\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\r\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\r\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\r\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n            <separator title=\"Texto complementar do usuario\">\r\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\r\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\r\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\r\n            <div clss=\"row\">\r\n                <documentos #documentos [entity]=\"entityDocumentos\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \r\n                    [editingId]=\"documentoId\" [datasource]=\"datasource\" [template]=\"template\"></documentos>\r\n                <!--grid [control]=\"form!.controls.documentos\" #gridDocumentos [disabled]=\"undefined\" #documentos [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"isTermos\" [add]=\"isTermos ? addDocumento.bind(this) : undefined\" editable>\r\n                    <columns>\r\n                        <column title=\"Data\" [template]=\"dataInicio\">\r\n                            <ng-template let-row=\"row\" #dataInicio>\r\n                                <span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data da inclusão\">\r\n                                    <i class=\"bi bi-calendar-plus\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_inicio)}}\r\n                                </span>\r\n                                <span *ngIf=\"row.data_fim\" class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data substituição\">\r\n                                    <i class=\"bi bi-calendar-x\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_fim)}}\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Documento Sei\" [template]=\"documento\">\r\n                            <ng-template let-row=\"row\" #documento>\r\n                                <span *ngIf=\"row.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.numero_processo, row.numero_documento)\">\r\n                                    <i [class]=\"'bi ' + (row.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                                    {{row.numero_processo?.length ? row.numero_processo : \"Não atribuído\"}}\r\n                                    <small *ngIf=\"row.numero_documento?.length\"><br>Sei nº {{row.numero_documento}}</small>\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Status\" [template]=\"vigente\">\r\n                            <ng-template let-row=\"row\" #vigente>\r\n                                <badge [color]=\"lookup.getColor(lookup.DOCUMENTO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.DOCUMENTO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.DOCUMENTO_STATUS, row.status)\"></badge>\r\n                                <span *ngIf=\"isVigente(row)\" class=\"badge rounded-pill bg-info text-dark\">\r\n                                    <i class=\"bi bi-clipboard-check\"></i>\r\n                                    Vigente\r\n                                </span>\r\n                                <div class=\"d-block\">\r\n                                    <span *ngFor=\"let assinatura of row.assinaturas\" class=\"badge rounded-pill bg-primary\">\r\n                                        <i class=\"bi bi-pen\"></i>\r\n                                        {{util.apelidoOuNome(assinatura.usuario)}}\r\n                                    </span>\r\n                                </div>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column type=\"options\" [dynamicButtons]=\"documentoDynamicButtons.bind(this)\"></column>\r\n                    </columns>\r\n                </grid//-->\r\n            </div>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-accordeon',\r\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\r\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\r\n})\r\nexport class PlanoTrabalhoListAccordeonComponent extends PageFrameBase {\r\n  @ViewChild('accordion', { static: false }) public accordion?: AccordionComponent;\r\n  @Input() usuarioId?: string;\r\n  @Input() arquivados: boolean = false;\r\n\r\n  public dao?: PlanoTrabalhoDaoService;\r\n  public planos: PlanoTrabalho[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.accordion!.loading = true;\r\n    try {\r\n      let dados = await this.dao!.getByUsuario(this.usuarioId!, this.arquivados);\r\n      this.planos = dados.planos;\r\n    } finally {\r\n      this.accordion!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","<accordion #accordion [items]=\"planos\" [titleTemplate]=\"planoTrabalhoSectionTitle\" [template]=\"planoTrabalhoSection\">\r\n    <ng-template let-item=\"item\" #planoTrabalhoSectionTitle>\r\n        <div class=\"row w-100\">\r\n            <div class=\"col-md-1\">{{'#' + item.numero}}</div>\r\n            <div class=\"col-md-5\">\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"item.unidade?.sigla\" color=\"light\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"item.programa?.nome\" color=\"light\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('TipoModalidade')\" [label]=\"item.tipo_modalidade?.nome\" color=\"light\"></badge>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                {{dao!.getDateFormatted(item.data_inicio_vigencia)+\" até \"+dao!.getDateFormatted(item.data_fim_vigencia)}}\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <badge color=\"danger\" label=\"STATUS\"></badge>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template let-item=\"item\" #planoTrabalhoSection>\r\n        <plano-trabalho-consolidacao-list [entity]=\"item\"></plano-trabalho-consolidacao-list>\r\n    </ng-template>\r\n</accordion>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-entrega',\r\n  templateUrl: './plano-trabalho-list-entrega.component.html',\r\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\r\n})\r\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\r\n  @ViewChild('entregaMesmaUnidade', { static: false }) public entregaMesmaUnidade?: InputSelectComponent;\r\n  @ViewChild('entregaOutraUnidade', { static: false }) public entregaOutraUnidade?: InputSelectComponent;\r\n  @ViewChild('entregaCatalogo', { static: false }) public entregaCatalogo?: InputSelectComponent;\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set entregasDoPlanoEntrega(value: LookupItem[]) {\r\n    if (JSON.stringify(value) != JSON.stringify(this._entregasDoPlanoEntrega)) {\r\n      this._entregasDoPlanoEntrega = value;\r\n      this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n  get entregasDoPlanoEntrega(): LookupItem[] { return this._entregasDoPlanoEntrega; }\r\n\r\n  public get items(): PlanoTrabalhoEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\r\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\r\n    return this.gridControl.value.entregas;\r\n  }\r\n  public options: ToolbarButton[] = [];\r\n  public entregaDao?: EntregaDaoService;\r\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\r\n  public planoEntregaDao?: PlanoEntregaDaoService;\r\n  public peeDao?: PlanoEntregaEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public totalForcaTrabalho: number = 0;\r\n  public entregasMesmaUnidade: LookupItem[] = [];\r\n  public entregasOutraUnidade: LookupItem[] = [];\r\n  public entregasCatalogo: LookupItem[] = [];\r\n  public planoEntregaOutraUnidade?: PlanoEntrega | null;\r\n\r\n  private _disabled: boolean = false;\r\n  private _entregasDoPlanoEntrega: LookupItem[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\"];\r\n    this.form = this.fh.FormBuilder({\r\n      origem: { default: null },\r\n      entregaMesmaUnidade: { default: null },\r\n      entregaOutraUnidade: { default: null },\r\n      entregaCatalogo: { default: null },\r\n      descricao: { default: \"\" },\r\n      forca_trabalho: { default: 1 },\r\n      plano_trabalho_id: { default: null },\r\n      entrega_id: { default: null },\r\n      plano_entrega_entrega_id: { default: null }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\r\n   * @param control \r\n   * @param controlName \r\n   * @returns \r\n   */\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\r\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\r\n    if (['entrega_id'].indexOf(controlName) >= 0) {\r\n      if (this.form?.controls.origem.value == 'CATALOGO' && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*1)\r\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\r\n      if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Este campo não pode ser nulo!\";\r\n      let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*2)\r\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\r\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\r\n   */\r\n  async ngOnInit() {\r\n    super.ngOnInit();\r\n    this.entity = this.metadata?.entity || this.entity;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n    this.entregasCatalogo = await this.carregarEntregasCatalogo();\r\n    this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.idPlanoEntregas = this.entregasMesmaUnidade[0]?.data.plano_entrega_id;\r\n    this.entity!._metadata.novaEntrega = undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\r\n   * @returns \r\n   */\r\n  public async addEntrega() {\r\n    return Object.assign(new PlanoTrabalhoEntrega(), {\r\n      _status: this.isNoPersist ? \"ADD\" : \"\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  /**\r\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\r\n   * @param form \r\n   * @param row \r\n   */\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    form.controls.descricao.setValue(row.descricao);\r\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\r\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\r\n    if (!row.entrega_id?.length && !row.plano_entrega_entrega_id?.length) { // É uma nova entrega\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if (!row.plano_entrega_entrega_id?.length && !!row.entrega_id?.length) { // É uma entrega do tipo catálogo\r\n      form.controls.origem.setValue('CATALOGO');\r\n      form.controls.entrega_id.setValue(row.entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row._metadata.entrega_selecionada?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) == this.entity?.plano_entrega_id) {\r\n      form.controls.origem.setValue('MESMA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row.objeto?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) != this.entity?.plano_entrega_id) {\r\n      form.controls.origem.setValue('OUTRA_UNIDADE');\r\n      form.controls.entrega_id.setValue(null);\r\n      await this.carregarEntregasOutraUnidade(row.plano_entrega_entrega?.plano_entrega_id);\r\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async removeEntrega(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      this.loading = true;\r\n      try {\r\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\r\n      return this.isNoPersist ? false : true; // (*3)\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\r\n   * @param form \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\r\n    this.entity!._metadata.novaEntrega.entrega_id = this.form?.controls.entrega_id.value ?? null;\r\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\r\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\r\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.loading = true;\r\n    try {\r\n      if (!this.isNoPersist) {\r\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\r\n        if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\r\n      }\r\n    } catch (e: any) {\r\n      this.error(e.message ? e.message : e.toString() || e);\r\n    } finally {\r\n      this.entity!._metadata.novaEntrega.entrega = this.entregaCatalogo?.selectedItem?.data || null;\r\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entregaMesmaUnidade?.selectedItem?.data || this.entregaOutraUnidade?.selectedItem?.data || null;\r\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\r\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n      this.loading = false;\r\n    }\r\n    return this.entity!._metadata.novaEntrega;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\r\n   * @param entregas Array de entregas do plano de trabalho\r\n   * @returns \r\n   */\r\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente para armazenar as entregas da mesma unidade do plano de trabalho.\r\n   * @returns \r\n   */\r\n  public carregarEntregasMesmaUnidade(): LookupItem[] {\r\n    if (!this.entity?.id?.length) return this.entregasDoPlanoEntrega; // (*5)\r\n    let entregasPlanoEntrega = this.entity?.plano_entrega?.entregas || [];\r\n    //let result = entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\r\n    return entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas de uma outra unidade, com base no seu plano de entregas passado como parâmetro.\r\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\r\n   */\r\n  public async carregarEntregasOutraUnidade(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\r\n    this.cdRef.detectChanges();\r\n    this.planoEntregaOutraUnidade = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega\", \"unidade\"]) : idPlanoOuPlano;\r\n    this.entregasOutraUnidade = this.planoEntregaOutraUnidade?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe })) || [];\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas existentes no Catálogo de Entregas.\r\n   * @returns \r\n   */\r\n  public async carregarEntregasCatalogo(): Promise<LookupItem[]> {\r\n    let result: LookupItem[] = [];\r\n    result = (await this.entregaDao?.query().getAll())?.map(ee => Object.assign({}, { key: ee.id, value: ee.nome, data: ee })) || [];\r\n    return result;\r\n  }\r\n\r\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\r\n\r\n  public onOrigemChange(row: any) {\r\n    let value = this.form!.controls.origem.value;\r\n    if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(value)) {\r\n      this.form?.controls.entrega_id.setValue(null);\r\n      this.cdRef.detectChanges();\r\n      if (value == \"OUTRA_UNIDADE\") this.entregaOutraUnidade?.onSearchClick(this.entregaOutraUnidade?.searchRoute);\r\n    } else if (value == 'CATALOGO') {\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    }\r\n  }\r\n\r\n  public onEntregaMesmaUnidadeChange(event: Event) {\r\n    if (this.entregaMesmaUnidade?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaMesmaUnidade?.selectedItem?.value || '');\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaMesmaUnidade?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onEntregaOutraUnidadeChange(event: Event) {\r\n    if (this.entregaOutraUnidade?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaOutraUnidade?.selectedItem?.value || '');\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaOutraUnidade?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onEntregaCatalogoChange(event: Event) {\r\n    if (this.entregaCatalogo?.selectedItem) {\r\n      this.form?.controls.descricao.setValue(this.entregaCatalogo?.selectedItem?.value || '');\r\n      this.form?.controls.entrega_id.setValue(this.entregaCatalogo?.selectedItem?.key);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onForcaTrabalhoChange(row: any) {\r\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\r\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\r\n  }\r\n}\r\n\r\n\r\n/*\r\nTESTES\r\n\r\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\r\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\r\nInclusão Entrega Catálogo                          \r\nInclusão Entrega Mesma Unidade                     \r\nInclusão Entrega Outra Unidade                     \r\nAlteração Entrega Catálogo                         \r\nAlteração Entrega Mesma Unidade                    \r\nAlteração Entrega Outra Unidade                    \r\nCancelamento Entrega Catálogo                      \r\nCancelamento Entrega Mesma Unidade                 \r\nCancelamento Entrega Outra Unidade                 \r\nExclusão Entrega Catálogo                          \r\nExclusão Entrega Mesma Unidade                     \r\nExclusão Entrega Outra Unidade                     \r\n\r\n*/\r\n\r\n/*\r\nOBSERVAÇÕES:\r\n\r\n(*1)  let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\r\njá existe no grid.\r\n\r\n(*2)  let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\r\nIdem a obs 1, em relação às entregas de outras unidades.\r\n\r\n(*3)  return this.isNoPersist ? false : true;\r\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\r\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\r\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\r\n\r\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\r\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\r\n\r\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\r\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\r\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\r\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\r\n\r\n\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \r\nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\r\n                      |   (foi carregada junto com o Plano)  |                            |        |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\r\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\r\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\r\n                      |                                      |                            | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \r\n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n                      +--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\r\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\r\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\r\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\r\n                      |                                      | addEntrega loadEntrega     | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\r\n                      |   já está sendo editada              | loadEntrega                | três   |\r\n------------------------------------------------------------------------------------------+--------+------------------------------------\r\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\r\n\r\n*/","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\r\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\r\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\r\n            <columns>\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnOrigem><span><small><badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge></small></span></ng-template>\r\n                    <ng-template let-row=\"row\" #editOrigem><input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\r\n                    <ng-template let-row=\"row\" #columnEntrega><small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editEntrega>\r\n                        <input-select *ngIf=\"origem?.value == 'MESMA_UNIDADE'\" #entregaMesmaUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasMesmaUnidade\" (change)=\"onEntregaMesmaUnidadeChange($event)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'OUTRA_UNIDADE'\" #entregaOutraUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasOutraUnidade\" (change)=\"onEntregaOutraUnidadeChange($event)\" searchButton [sufix]=\"planoEntregaOutraUnidade?.unidade?.sigla\" [searchRoute]=\"{route: ['gestao', 'plano-entrega']}\" [afterSearch]=\"carregarEntregasOutraUnidade.bind(this)\"></input-select>\r\n                        <input-select *ngIf=\"origem?.value == 'CATALOGO'\" #entregaCatalogo nullable itemNull=\"- Selecione -\" controlName=\"entrega_id\" [control]=\"form!.controls.entrega_id\" [items]=\"entregasCatalogo\" (change)=\"onEntregaCatalogoChange($event)\"></input-select>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                        <div class=\"text-center\">\r\n                            <small><strong>% Força Trab.</strong></small><br>\r\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\r\n                </column>\r\n                <column type=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\r\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\r\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\r\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\" } },\r\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\r\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\r\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoTrabalhoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\r\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\r\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoTrabalhoFormComponent,\r\n    PlanoTrabalhoListComponent,\r\n    PlanoTrabalhoListEntregaComponent,\r\n    PlanoTrabalhoFormTermoComponent,\r\n    PlanoTrabalhoConsolidacaoComponent,\r\n    PlanoTrabalhoConsolidacaoListComponent,\r\n    PlanoTrabalhoConsolidacaoFormComponent,\r\n    PlanoTrabalhoListAccordeonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PlanoTrabalhoRoutingModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoTrabalhoModule { }\r\n"],"names":["DaoBaseService","PlanoTrabalhoConsolidacaoAtividadeDaoService","constructor","injector","dataset","deeps","deepsFilter","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","Base","PlanoTrabalhoAtividade","data","plano_trabalho_id","atividade_id","initialization","PlanoTrabalhoConsolidacao","data_inicio","Date","data_fim","avaliacoes","avaliacao_id","status_id","ChangeDetectorRef","EditableFormComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","Atividade","PlanoTrabalhoConsolidacaoAtividade","PlanoTrabalhoConsolidacaoOcorrencia","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","row_r20","tipo_atividade","nome","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_div_0_small_13_Template","ɵɵtextInterpolate1","numero","ɵɵproperty","usuario","length","ctx_r21","util","apelidoOuNome","demandante","progresso","atividade","descricao","ctx_r29","lex","translate","decimalToTimerFormated","esforco","ctx_r30","planoEntregaService","getValorRealizado","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_ng_template_1_div_1_badge_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_ng_template_1_div_1_badge_2_Template","ctx_r27","hasEsforco","hasRealizado","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_ng_template_1_div_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_ng_template_1_small_3_Template","ctx_r23","ɵɵclassMap","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_div_0_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_ng_template_1_Template","ɵɵtemplateRefExtractor","ctx_r17","isAtividade","_r22","ctx_r38","formAtividade","controls","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_div_1_input_timer_1_Template","ctx_r36","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_div_1_Template","ctx_r19","tipo_atividade_id","tipoAtividadeDao","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template","row_r14","atividades","ctx_r4","addAtividade","bind","entrega","loadAtividade","removeAtividade","saveAtividade","_r16","_r18","atividadeDynamicButtons","ctx_r6","planoTrabalhoService","tipoEntrega","row_r39","planoTrabalho","titulo","cor","ctx_r8","row_r40","row_r41","tipo_motivo_afastamento","icone","observacao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","entity","itemsEntregas","itemsOcorrencias","itemsAfastamentos","validateEntrega","controlName","result","indexOf","validateOcorrencia","includes","isDataValid","getTime","formOcorrencia","cdRef","get","dao","consolidacaoAtividadeDao","consolidacaoOcorrenciaDao","ocorrenciaDao","fh","FormBuilder","default","realizado","ngAfterViewInit","_this","_asyncToGenerator","loadData","form","row","_this2","gridEntregas","loading","detectChanges","dados","dadosConsolidacao","id","entregas","map","x","filter","y","plano_trabalho_entrega_id","consolidaoAtividades","ocorrencias","afastamentos","tipo_modalidade","atividade_esforco","_this3","generateUuid","plano_trabalho_consolidacao_id","_this4","patchValue","_this5","confirm","dialog","delete","splice","findIndex","_this6","undefined","markAllAsTouched","valid","save","push","Object","assign","BUTTON_EDIT","BUTTON_DELETE","addOcorrencia","_this7","loadOcorrencia","_this8","removeOcorrencia","_this9","ocorrencia","saveOcorrencia","_this10","ocorrenciaDynamicButtons","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_5_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_10_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_13_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_30_Template","entityService","getIcon","_r1","_r3","_r5","_r7","_r11","GridComponent","getDateFormatted","row_r16","row_r17","ctx_r12","lookup","getColor","CONSOLIDACAO_STATUS","row_r19","status","codigo","getValue","PlanoTrabalhoConsolidacaoListComponent","items","consolidacoes","validate","title","code","addConsolidacao","loadConsolidacao","removeConsolidacao","consolidacao","saveConsolidacao","dynamicButtons","PlanoTrabalhoConsolidacaoListComponent_Query","PlanoTrabalhoConsolidacaoListComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_18_Template","_r9","TabsComponent","UnidadeDaoService","data_r13","url_foto","apelido","data_r14","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_1_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_3_Template","usuario_r8","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_div_2_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_Template","ɵɵtextInterpolate2","ctx_r5","unidade","sigla","usuarios","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_Template","ctx_r1","_r4","ctx_r3","arquivados","auth","PlanoTrabalhoConsolidacaoComponent","loadingUnidade","unidadeDao","tabs","active","queryParams","tab","unidadeGestor","lotados","PlanoTrabalhoConsolidacaoComponent_Query","PlanoTrabalhoConsolidacaoComponent_tab_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_4_Template","isModal","_r2","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","numero_processo","formValidation","tipoDocumento","searchObj","tipo_documento_id","titleEdit","join","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","carga_horaria","tempo_total","tempo_proporcional","data_inicio_vigencia","data_fim_vigencia","programa_id","usuario_id","unidade_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","fillForm","Promise","all","loadSearch","programa","tipoModalidade","processo","id_processo","hora","initializeData","getById","metadata","plano_trabalho","saveData","resolve","reject","codigo_tipo_documento","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","ɵɵlistener","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","$event","formDisabled","ganho_produtividade","AtividadeDaoService","PlanoEntregaDaoService","Documento","PlanoTrabalhoEntrega","DocumentoService","CalendarService","TemplateService","ctx_r9","horasTotais","ctx_r10","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_14_Template_input_workload_change_2_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_14_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_14_separator_6_Template","ɵɵelementContainerEnd","onFormaContagemCargaHorariaChange","formEntregas","ctx_r7","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","entityDocumentos","needSign","extraTags","documentoId","datasource","template","PlanoTrabalhoFormComponent","_entityDocumentos","validateAtividades","validateEntregas","gridAtividades","editing","atividadeDao","planoEntregaDao","documentoService","templateService","calendar","modalWidth","plano_entrega_id","unidade_texto_complementar","usuario_texto_complementar","formAtividades","entrega_id","ngOnInit","segment","url","path","action","texto_complementar_plano","JSON","stringify","_datasource","termo_obrigatorio","documento","find","assinaturas","tipo","especie","conteudo","renderTemplate","template_tcr","_status","entidade_id","entidade","template_id","template_tcr_id","setValue","isTermos","updateEntregas","planoEntrega","key","onPlanoEntregaSelect","selected","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","then","feriados","calculaDataTempoUnidade","tempoUtil","plano_entrega","urlParams","carga_horaria_padrao","addAtividades","loadAtividades","removeAtividades","saveAtividades","addEntregas","loadEntregas","removeEntregas","saveEntregas","selectedItem","plano","loadEntity","fill","submitting","update","documentoDynamicButtons","hint","icon","onClick","signDocumento","html","sign","unit","addDocumento","go","navigate","route","modalClose","modalResult","clearErros","showSppinerOverlay","termo","error","message","closeSppinerOverlay","isVigente","onProcessoClick","openDocumentoSei","id_documento","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_10_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_11_listener","PlanoTrabalhoFormComponent_ng_container_14_Template","PlanoTrabalhoFormComponent_top_alert_16_Template","PlanoTrabalhoFormComponent_div_17_Template","PlanoTrabalhoFormComponent_tab_18_Template","PlanoTrabalhoFormComponent_tab_19_Template","ɵɵpureFunction0","_c9","_c10","plano_trabalho_calcula_horas","checkFilled","_c11","_c12","item_r5","ctx_r2","item_r6","PlanoTrabalhoListAccordeonComponent","planos","accordion","getByUsuario","usuarioId","PlanoTrabalhoListAccordeonComponent_Query","PlanoTrabalhoListAccordeonComponent_ng_template_2_Template","PlanoTrabalhoListAccordeonComponent_ng_template_4_Template","PlanoTrabalhoEntregaDaoService","EntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","PlanoTrabalhoListEntregaComponent_ng_template_10_Template_input_select_change_0_listener","restoredCtx","_r30","row_r27","onOrigemChange","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","row_r32","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template_input_select_change_0_listener","_r39","onEntregaMesmaUnidadeChange","ctx_r34","plano_entrega_entrega_id","entregasMesmaUnidade","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_1_Template_input_select_change_0_listener","_r42","ctx_r41","onEntregaOutraUnidadeChange","ctx_r35","entregasOutraUnidade","planoEntregaOutraUnidade","ɵɵpureFunction1","_c5","_c4","carregarEntregasOutraUnidade","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_2_Template_input_select_change_0_listener","_r45","ctx_r44","onEntregaCatalogoChange","entregasCatalogo","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_1_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_2_Template","ctx_r14","totalForcaTrabalho","row_r47","forca_trabalho","PlanoTrabalhoListEntregaComponent_ng_template_24_Template_input_text_change_0_listener","_r50","row_r48","ctx_r49","onForcaTrabalhoChange","ctx_r18","row_r52","ctx_r24","PlanoTrabalhoListEntregaComponent","disabled","_disabled","entregasDoPlanoEntrega","_entregasDoPlanoEntrega","carregarEntregasMesmaUnidade","gridControl","options","cont","e","grid","reduce","acc","entregaDao","planoTrabalhoDao","peeDao","entregaMesmaUnidade","entregaOutraUnidade","entregaCatalogo","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","carregarEntregasCatalogo","_metadata","idPlanoEntregas","novaEntrega","addEntrega","isNoPersist","loadEntrega","entrega_selecionada","plano_entrega_entrega","objeto","removeEntrega","saveEntrega","adding","toString","a","b","entregasPlanoEntrega","epe","idPlanoOuPlano","query","getAll","ee","onSearchClick","searchRoute","index","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_24_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","PlanoTrabalhoListEntregaComponent_ng_template_31_Template","groupBy","_r13","_r15","_r17","_r19","_r21","_r23","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","config","runGuardsAndResolvers","modal","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}