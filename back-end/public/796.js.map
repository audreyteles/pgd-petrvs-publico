{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { DaoBaseService } from './dao-base.service';\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\n\n  constructor(protected injector: Injector) {\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\n  }\n\n  public dataset(deeps?: string[]): TemplateDataset[] {\n    return this.deepsFilter([], deeps);\n  }\n\n}\n\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\nimport { Base } from './base.model';\nimport { PlanoTrabalho } from './plano-trabalho.model';\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\n\nexport type PlanoTrabalhoConsolidacaoStatus = 'CONCLUIDO' | 'AVALIADO' | 'INCLUIDO';\n\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao, HasStatus {\n    public plano_trabalho?: PlanoTrabalho;\n    public avaliacao?: Avaliacao;\n\n    public data_inicio: Date = new Date();\n    public data_fim: Date = new Date();\n    public status: PlanoTrabalhoConsolidacaoStatus | null = null; // Status atual da consolidação\n    public avaliacoes: Avaliacao[] = [];\n    public status_historico: StatusJustificativa[] = [];\n\n    public plano_trabalho_id: string = \"\";\n    public avaliacao_id: string | null = null;\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { ConsolidacaoDados, PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { Atividade, AtividadeChecklist } from 'src/app/models/atividade.model';\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\nimport { Afastamento } from 'src/app/models/afastamento.model';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { BadgeTrabalho, PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { AtividadeOptionsMetadata, AtividadeService } from '../../atividade/atividade.service';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { CalendarService } from 'src/app/services/calendar.service';\nimport { SelectItem } from 'src/app/components/input/input-base';\nimport { TipoAtividade } from 'src/app/models/tipo-atividade.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Programa } from 'src/app/models/programa.model';\n\nexport type ConsolidacaoEntrega = {\n  id: string,\n  entrega: PlanoTrabalhoEntrega,\n  badge: BadgeTrabalho,\n  atividades: Atividade[]\n};\n\n@Component({\n  selector: 'plano-trabalho-consolidacao-form',\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\n})\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridEntregas', { static: false }) public gridEntregas?: GridComponent;\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\n  @Input() cdRef: ChangeDetectorRef;\n  @Input() planoTrabalho?: PlanoTrabalho;\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; this.bindEntity(); } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\n  @Input() set disabled(value: boolean) {\n    if(this._disabled != value || this.atividadeOptionsMetadata.disabled !== value) {\n      this._disabled = value;\n      this.atividadeOptionsMetadata.disabled = value;\n      this.cdRef.detectChanges();\n    }\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  public consolidacaoOcorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\n  public formAtividade: FormGroup;\n  public formOcorrencia: FormGroup;\n  public formEdit: FormGroup;\n  public unidade?: Unidade;\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\n  public atividadeDao: AtividadeDaoService;\n  public atividadeService: AtividadeService;\n  public calendar: CalendarService;\n  public joinAtividade: string[] = ['demandante', 'usuario', 'tipo_atividade', 'comentarios.usuario:id,nome,apelido'];\n  public tipoAtividadeDao: TipoAtividadeDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public planoEntregaService: PlanoEntregaService;\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\n  public etiquetas: LookupItem[] = [];\n  public checklist?: AtividadeChecklist[];\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\n  public itemsAfastamentos: Afastamento[] = [];\n  public atividadeOptionsMetadata: AtividadeOptionsMetadata;\n  public programa?: Programa;\n  \n  private _disabled: boolean = true;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\n    this.consolidacaoOcorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\n    this.atividadeService = injector.get<AtividadeService>(AtividadeService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.formAtividade = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      etiquetas: { default: [] },\n      checklist: { default: [] },\n      comentarios: { default: [] },\n      esforco: { default: 0 },\n      tempo_planejado: { default: 0 },\n      data_distribuicao: {default: new Date()},\n      data_estipulada_entrega: {default: new Date()},\n      data_entrega: {default: new Date()},\n      tipo_atividade_id: {default: null}\n    }, this.cdRef, this.validateAtividade);\n    this.formOcorrencia = this.fh.FormBuilder({\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      descricao: { default: \"\" }\n    }, this.cdRef, this.validateOcorrencia);\n    this.formEdit = this.fh.FormBuilder({\n      progresso: { default: 0 },\n      etiquetas: { default: [] },\n      etiqueta: { default: null }\n    });\n    this.atividadeOptionsMetadata = {\n      refreshId: this.atividadeRefreshId.bind(this),\n      removeId: this.atividadeRemoveId.bind(this),\n      refresh: this.refresh.bind(this)\n    }\n  }\n\n  public refresh() {\n    this.loadData(this.entity!, this.form);\n  }\n\n  public bindEntity() {\n    if(this.entity) {\n      this.entity._metadata = this.entity._metadata || {};\n      this.entity._metadata.planoTrabalhoConsolidacaoFormComponent = this;\n    }\n  }\n\n  public atividadeRefreshId(id: string, atividade?: Atividade) {\n    this.itemsEntregas.forEach(entrega => {\n      let foundIndex = entrega.atividades.findIndex(x => x.id == id);\n      if(foundIndex >= 0) {\n        if(atividade) {\n          entrega.atividades[foundIndex] = atividade;\n        } else {\n          this.atividadeDao.getById(id, this.joinAtividade).then(atividade => { if(atividade) entrega.atividades[foundIndex] = atividade; });\n        }\n      }\n    });\n    this.cdRef.detectChanges();\n  }\n\n  public atividadeRemoveId(id: string) {\n    this.itemsEntregas.forEach(entrega => {\n      let foundIndex = entrega.atividades.findIndex(x => x.id == id);\n      if(foundIndex >= 0) entrega.atividades.splice(foundIndex, 1);\n    });\n    this.cdRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    (async () => {\n      await this.loadData(this.entity!, this.form);\n    })();\n  }\n\n  public validateAtividade = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if(['data_distribuicao', 'data_estipulada_entrega', 'data_entrega'].includes(controlName) && !this.util.isDataValid(control.value)) {\n      result = \"Inválido\";\n    } else if(controlName == 'data_estipulada_entrega' && control.value.getTime() < this.formAtividade?.controls.data_distribuicao.value.getTime()) {\n      result = \"Menor que distribuição\";\n    } else if(controlName == 'data_entrega' && control.value.getTime() < this.formAtividade?.controls.data_distribuicao.value.getTime()) {\n      result = \"Menor que distribuição\";\n    }\n    return result;\n  }\n\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\n      result = \"Inválido\";\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia?.controls.data_inicio.value.getTime()) {\n      result = \"Menor que início\";\n    } \n    return result;\n  }\n\n  public loadConsolidacao(dados: ConsolidacaoDados) {\n    this.itemsEntregas = dados.entregas.map(x => {\n      x.plano_entrega_entrega!.plano_entrega = dados.planosEntregas.find(pe => pe.id == x.plano_entrega_entrega!.plano_entrega_id);\n      let result = {\n        id: x.id,\n        entrega: x,\n        atividades: dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id),\n        badge: this.planoTrabalhoService.tipoEntrega(x, dados.planoTrabalho)\n      };\n      return result;\n    });\n    this.programa = dados.programa;\n    this.planoTrabalho = dados.planoTrabalho;\n    this.itemsOcorrencias = dados.ocorrencias;\n    this.itemsAfastamentos = dados.afastamentos;\n    this.unidade = dados.planoTrabalho.unidade || this.entity!.plano_trabalho?.unidade;\n    this.cdRef.detectChanges();\n  }\n\n  public async loadData(entity: IIndexable, form?: FormGroup) {\n    this.gridEntregas!.loading = true;\n    this.cdRef.detectChanges();\n    try {\n      let dados = await this.dao!.dadosConsolidacao(entity.id);\n      this.loadConsolidacao(dados);\n    } finally {\n      this.gridEntregas!.loading = false;\n      this.cdRef.detectChanges();\n    }\n  }  \n  \n  /***************************************************************************************\n  * Atividades \n  ****************************************************************************************/\n  public async addAtividade(entrega: PlanoTrabalhoEntrega) {\n    let planoTrabalho: PlanoTrabalho | undefined = entrega.plano_trabalho || this.entity!.plano_trabalho;\n    let efemerides = this.calendar.calculaDataTempoUnidade(this.entity!.data_inicio, this.entity!.data_fim, planoTrabalho!.carga_horaria, this.unidade!, \"ENTREGA\");\n    const tempoPlanejado = this.calendar.horasUteis(this.entity!.data_inicio, this.entity!.data_fim, planoTrabalho!.carga_horaria, this.unidade!, \"DISTRIBUICAO\");\n    const dataInicio = this.util.setTime(this.entity!.data_inicio, 0, 0, 0);\n    const dataFim = this.util.setTime(this.entity!.data_fim, 23, 59, 59);\n    return new Atividade({\n      id: this.dao!.generateUuid(),\n      plano_trabalho: planoTrabalho,\n      plano_trabalho_entrega: entrega,\n      plano_trabalho_consolidacao: this.entity,\n      demandante: this.auth.usuario,\n      usuario: this.auth.usuario,\n      unidade: this.unidade,\n      data_distribuicao: dataInicio,\n      carga_horaria: planoTrabalho!.carga_horaria,\n      data_estipulada_entrega: dataFim,\n      data_inicio: dataInicio,\n      data_entrega: dataFim,\n      tempo_planejado: tempoPlanejado,\n      tempo_despendido: efemerides?.tempoUtil || 0,\n      status: 'CONCLUIDO',\n      progresso: 100,\n      plano_trabalho_id: this.entity!.plano_trabalho_id,\n      plano_trabalho_entrega_id: entrega.id,\n      plano_trabalho_consolidacao_id: this.entity!.id,\n      demandante_id: this.auth.usuario!.id,\n      usuario_id: this.auth.usuario!.id,\n      unidade_id: this.unidade!.id,\n      metadados: { // Simula os metadados enviados pelo servidor\n        atrasado: false,\n        tempo_despendido: 0,\n        tempo_atraso: 0,\n        pausado: false,\n        iniciado: true,\n        concluido: true,\n        avaliado: false,\n        arquivado: false,\n        produtividade: 0,\n        extra: undefined,\n        _status: []\n      }\n    });\n  }\n\n  public async loadAtividade(form: FormGroup, row: any) {\n    this.formAtividade.patchValue(row);\n    this.cdRef.detectChanges();\n  }\n\n  public async removeAtividade(atividades: Atividade[], row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let atividade = row as Atividade;\n        await this.atividadeDao?.delete(atividade);\n        atividades.splice(atividades.findIndex(x => x.id == atividade.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveAtividade(form: FormGroup, row: any) {\n    let result = undefined;\n    this.formAtividade.markAllAsTouched();\n    if (this.formAtividade!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      this.util.fillForm(row, this.formAtividade!.value);\n      result = await this.atividadeDao?.save(row, this.joinAtividade, ['etiquetas', 'checklist', 'comentarios', 'pausas', 'tarefas']);\n      this.atividadeRefreshId(row.id, result);\n    }\n    return result;\n  }\n\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_EDIT, {}));\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_DELETE, {}));\n    return result;\n  }  \n\n  public async onColumnProgressoEtiquetasChecklistEdit(row: any) {\n    this.formEdit.controls.progresso.setValue(row.progresso);\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\n    this.formEdit.controls.etiqueta.setValue(null);\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n    this.checklist = this.util.clone(row.checklist);\n  }\n\n  public async onColumnProgressoEtiquetasChecklistSave(row: any) {\n    try {\n      const saved = await this.atividadeDao!.update(row.id, {\n        progresso: this.formEdit.controls.progresso.value,\n        etiquetas: this.formEdit.controls.etiquetas.value,\n        checklist: this.checklist\n      });\n      row.progresso = this.formEdit.controls.progresso.value;\n      row.checklist = this.checklist;\n      return !!saved;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public onEtiquetaConfigClick() {\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\n      modal: true, modalClose: (modalResult) => {\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n        this.cdRef.detectChanges();\n      }\n    });\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    if (this.etiqueta && this.etiqueta.selectedItem) {\n      const item = this.etiqueta.selectedItem;\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\n      if (this.util.validateLookupItem(this.formEdit.controls.etiquetas.value, key)) {\n        result = {\n          key: key,\n          value: item.value,\n          color: item.color,\n          icon: item.icon\n        };\n        this.formEdit.controls.etiqueta.setValue(null);\n      }\n    }\n    return result;\n  };\n\n  public loadTipoAtividade(tipoAtividade: TipoAtividade | undefined) {\n    if(tipoAtividade) {\n      this.etiquetas = this.atividadeService.buildEtiquetas(this.unidade, tipoAtividade);\n      this.atividadeService.buildChecklist(tipoAtividade, this.formAtividade.controls.checklist);\n      this.formAtividade.controls.esforco.setValue(tipoAtividade?.esforco || 0);\n    } else {\n      this.etiquetas = [];\n      this.formAtividade.controls.esforco.setValue(0);\n    }\n    this.cdRef.detectChanges();\n  }\n\n  public onTipoAtividadeSelect(item: SelectItem) {\n    const tipoAtividade: TipoAtividade | undefined = item.entity as TipoAtividade;\n    this.loadTipoAtividade(tipoAtividade);\n    this.atividadeService.comentarioAtividade(tipoAtividade, this.formAtividade!.controls.comentarios);\n    this.cdRef.detectChanges();\n  }\n\n  /***************************************************************************************\n  * Ocorrências \n  ****************************************************************************************/\n  public async addOcorrencia() {\n    return new PlanoTrabalhoConsolidacaoOcorrencia({\n      plano_trabalho_consolidacao_id: this.entity!.id\n    });\n  }\n\n  public async loadOcorrencia(form: FormGroup, row: any) {\n    this.formAtividade.patchValue({\n      data_inicio: row.data_inicio,\n      data_fim: row.data_fim,\n      descricao: row.descricao\n    });\n    this.cdRef.detectChanges();\n  }\n\n  public async removeOcorrencia(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let ocorrencia = row as PlanoTrabalhoConsolidacaoOcorrencia;\n        await this.consolidacaoOcorrenciaDao?.delete(ocorrencia);\n        this.itemsOcorrencias.splice(this.itemsOcorrencias.findIndex(x => x.id == ocorrencia.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveOcorrencia(form: FormGroup, row: any) {\n    let result = undefined;\n    this.formOcorrencia.markAllAsTouched();\n    if (this.formOcorrencia!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      row.data_inicio = form.controls.data_inicio.value;\n      row.data_fim = form.controls.data_fim.value;\n      row.descricao = form.controls.descricao.value;\n      result = await this.consolidacaoOcorrenciaDao?.save(row);\n    }\n    return result;\n  }\n\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\n    return result;\n  }  \n\n  /***************************************************************************************\n  * Afastamentos\n  ****************************************************************************************/\n  public async addAfastamento() {\n    this.go.navigate({route: ['cadastros', 'afastamento', 'new']}, {\n      metadata: { consolidacao: this.entity },\n      filterSnapshot: undefined,\n      querySnapshot: undefined,\n      modalClose: (modalResult) => {\n        if(modalResult) this.refresh();\n      }\n    });\n  }\n\n  public afastamentoDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push(Object.assign({}, this.OPTION_INFORMACOES, { onClick: (doc: Afastamento) => this.go.navigate({route: [\"cadastros\", \"afastamento\", doc.id, \"consult\"]}) }));\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\n    return result;\n  }  \n \n}\n","<separator [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\n    <grid [items]=\"itemsEntregas\" #gridEntregas [minHeight]=\"0\" expanded>\n        <columns>\n            <column type=\"expand\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\n                <ng-template let-row=\"row\" #columnConsolidacao>\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\n                </ng-template>\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\n                    <grid [items]=\"row.atividades\" [minHeight]=\"0\" #gridAtividade [form]=\"formAtividade\" [hasAdd]=\"!disabled\" [hasDelete]=\"false\" [hasEdit]=\"false\"\n                        [add]=\"addAtividade.bind(this, row.entrega)\" [load]=\"loadAtividade.bind(this)\" [remove]=\"removeAtividade.bind(this, row.atividades)\" [save]=\"saveAtividade.bind(this)\" editable>\n                        <columns>\n                            <column [title]=\"'#ID/' + lex.translate('Tipo de Atividade') + '\\nDescrição'\" [template]=\"columnAtividadeDescricao\" [editTemplate]=\"editAtividadeDescricao\">\n                                <ng-template let-row=\"row\" #columnAtividadeDescricao>\n                                    <span class=\"text-nowrap d-block\">\n                                        <badge icon=\"bi bi-hash\" [label]=\"row.numero\" color=\"light\" [data]=\"row.numero\" [click]=\"atividadeService.onIdClick.bind(this)\"></badge>\n                                        <badge *ngIf=\"row.tipo_atividade\" [icon]=\"entityService.getIcon('TipoAtividade')\" [label]=\"row.tipo_atividade.nome\" color=\"light\"></badge>\n                                    </span>\n                                    <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n                                </ng-template>\n                                <ng-template let-row=\"row\" #editAtividadeDescricao>\n                                    <input-search [label]=\"lex.translate('Tipo de atividade')\" [size]=\"12\" [emptyValue]=\"null\" controlName=\"tipo_atividade_id\" [control]=\"formAtividade!.controls.tipo_atividade_id\" [dao]=\"tipoAtividadeDao\" (select)=\"onTipoAtividadeSelect($event)\" [labelInfo]=\"lex.translate('Tipo de atividade') + ' utilizado para classificar a atividade'\" [required]=\"!auth.hasPermissionTo('MOD_ATV_TIPO_ATV_VAZIO') ? 'true' : undefined\"></input-search>\n                                    <input-textarea label=\"Descrição\" [size]=\"12\" [rows]=\"2\" controlName=\"descricao\" [control]=\"formAtividade!.controls.descricao\" required></input-textarea>\n                                </ng-template>\n                            </column>\n                            <column [title]=\"'Tempos'\" [width]=\"300\" [template]=\"columnTempos\" [editTemplate]=\"editTempos\">\n                                <ng-template let-row=\"row\" #columnTempos>\n                                    <div class=\"one-per-line\">\n                                        <badge *ngFor=\"let tempo of atividadeService.temposAtividade(row)\" [badge]=\"tempo\"></badge>\n                                    </div>\n                                </ng-template>\n                                <ng-template let-row=\"row\" #editTempos>\n                                    <input-datetime icon=\"bi bi-file-earmark-plus\" [label]=\"lex.translate('Data de distribuição')\" controlName=\"data_distribuicao\" [control]=\"formAtividade!.controls.data_distribuicao\" labelInfo=\"Data de inclusão/distribuição/lançamento\"></input-datetime>\n                                    <input-datetime icon=\"bi bi-calendar-check\" [label]=\"lex.translate('Prazo de entrega')\" controlName=\"data_estipulada_entrega\" [control]=\"formAtividade!.controls.data_estipulada_entrega\" labelInfo=\"Data estipulada para entrega da atividade\"></input-datetime>\n                                    <input-datetime icon=\"bi bi-check-circle\" label=\"Conclusão\" controlName=\"data_entrega\" [control]=\"formAtividade!.controls.data_entrega\" labelInfo=\"Data da conclusão da atividade\"></input-datetime>\n                                </ng-template>\n                            </column>\n                            <column [title]=\"'Progresso\\nEtiquetas/Checklist'\" [width]=\"200\" [template]=\"columnProgressoEtiquetasChecklist\" [editTemplate]=\"columnProgressoEtiquetasChecklist\" [columnEditTemplate]=\"columnProgressoEtiquetasChecklistEdit\" [edit]=\"onColumnProgressoEtiquetasChecklistEdit.bind(this)\" [save]=\"onColumnProgressoEtiquetasChecklistSave.bind(this)\">\n                                <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n                                    <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n                                    <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\n                                    <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                                    <table *ngIf=\"row.checklist?.length\">\n                                        <tr *ngFor=\"let check of row.checklist\">\n                                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\n                                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                                        </tr>\n                                    </table>\n                                </ng-template>\n                                <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklistEdit>\n                                    <input-number [size]=\"12\" [decimals]=\"2\" label=\"Progresso\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso\" [control]=\"formEdit.controls.progresso\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\n                                    <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                                        <input-select [size]=\"12\" label=\"Etiqueta\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\n                                    </input-multiselect>\n                                    <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                                    <table *ngIf=\"row.checklist?.length\">\n                                        <tr *ngFor=\"let check of checklist; let i = index\">\n                                            <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\n                                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                                        </tr>\n                                    </table>\n                                </ng-template>\n                            </column>\n                            <column [title]=\"'nº Processo/Status\\nComentários'\" [width]=\"400\" [template]=\"columnNumero\" [editTemplate]=\"columnNumero\">\n                                <ng-template let-row=\"row\" #columnNumero>\n                                    <documentos-badge [documento]=\"row.documento_requisicao\"></documentos-badge>\n                                    <span class=\"d-block\">\n                                        <badge *ngFor=\"let status of atividadeService.getStatus(row, entity)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\"></badge>\n                                    </span>\n                                    <comentarios-widget *ngIf=\"!gridAtividade.editing\" [entity]=\"row\" [selectable]=\"false\" origem=\"ATIVIDADE\" [grid]=\"gridAtividade\"></comentarios-widget>\n                                </ng-template>\n                            </column>\n                            <column type=\"options\" [metadata]=\"atividadeOptionsMetadata\" [dynamicOptions]=\"atividadeService.dynamicOptions.bind(this)\" [dynamicButtons]=\"atividadeService.dynamicButtons.bind(this)\"></column>\n                        </columns>\n                    </grid>\n                </ng-template>\n            </column>\n            <column title=\"Origem\" [template]=\"columnOrigem\" [width]=\"200\">\n                <ng-template let-row=\"row\" #columnOrigem>\n                    <badge [label]=\"row.badge.titulo\" [color]=\"row.badge.cor\"></badge>\n                </ng-template>\n            </column>\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\n                <ng-template let-row=\"row\" #columnEntrega>\n                    <badge [icon]=\"entityService.getIcon('Entrega')\" [label]=\"row.badge.nome\" [textValue]=\"row.badge.descricao\"></badge>\n                </ng-template>\n            </column>\n            <column title=\"% Força Trab. Planejado\" [template]=\"columnForcaTrabalho\">\n                <ng-template let-row=\"row\" #columnForcaTrabalho>\n                    <badge color=\"light\" [label]=\"row.entrega.forca_trabalho + '%'\"></badge>\n                </ng-template>\n            </column>\n        </columns>\n    </grid>\n</separator>\n<separator [title]=\"lex.translate('Ocorrências')\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\">\n    <grid [items]=\"itemsOcorrencias\" [minHeight]=\"0\" #gridOcorrencia [form]=\"formOcorrencia\" [hasDelete]=\"!disabled\" [hasAdd]=\"!disabled\" [hasEdit]=\"!disabled\"\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\n        <columns>\n            <column title=\"Início\" [width]=\"300\" type=\"datetime\" field=\"data_inicio\"></column>\n            <column title=\"Fim\" [width]=\"300\" type=\"datetime\" field=\"data_fim\"></column>\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\n        </columns>\n    </grid>\n</separator>\n<separator [title]=\"lex.translate('Afastamentos')\" [icon]=\"entityService.getIcon('Afastamento')\">\n    <grid [items]=\"itemsAfastamentos\" [minHeight]=\"0\" #gridAfastamento [add]=\"addAfastamento.bind(this)\" [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"!disabled\" editable>\n        <columns>\n            <column title=\"Início\" [width]=\"300\" type=\"datetime\" field=\"data_inicio\"></column>\n            <column title=\"Fim\" [width]=\"300\" type=\"datetime\" field=\"data_fim\"></column>\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\n                    {{row.observacao}}\n                </ng-template>\n            </column>\n            <column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column>\n        </columns>\n    </grid>\n</separator>\n\n\n\n\n\n\n\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\nimport { PlanoTrabalhoConsolidacao, PlanoTrabalhoConsolidacaoStatus } from 'src/app/models/plano-trabalho-consolidacao.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { PlanoTrabalhoConsolidacaoFormComponent } from '../plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\n\n@Component({\n  selector: 'plano-trabalho-consolidacao-list',\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\n})\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageFrameBase {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\n\n  public get items(): PlanoTrabalhoConsolidacao[] {\n    return this.entity?.consolidacoes || [];\n  }\n\n  public dao?: PlanoTrabalhoConsolidacaoDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    /* Inicializações */\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.title = this.lex.translate(\"Consolidações\");\n    this.code = \"MOD_PTR_CSLD\";\n    this.form = this.fh.FormBuilder({\n      'data_inicio': {default: new Date()},\n      'data_fim': {default: new Date()}\n    }, this.cdRef, this.validate);\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    let agora = (new Date()).getTime();\n    this.items.forEach(v => {\n      if(!v.plano_trabalho) v.plano_trabalho = this.entity;\n      if(this.util.asDate(v.data_inicio)!.getTime() <= agora && agora <= this.util.asDate(v.data_fim)!.getTime()) this.grid!.expand(v.id);\n    });\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    // TODO: Validar data\n    return result;\n  }\n\n  public async addConsolidacao() {\n    return new PlanoTrabalhoConsolidacao({\n      id: this.dao!.generateUuid(),\n      plano_trabalho_id: this.entity!.id\n    });\n  }\n\n  public async loadConsolidacao(form: FormGroup, row: any) {\n    this.form!.patchValue({\n      data_inicio: row.data_inicio,\n      data_fim: row.data_fim\n    });    \n    this.cdRef.detectChanges();\n  }\n\n  public async removeConsolidacao(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let consolidacao = row as PlanoTrabalhoConsolidacao;\n        await this.dao?.delete(consolidacao);\n        this.items.splice(this.items.findIndex(x => x.id == consolidacao.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveConsolidacao(form: FormGroup, row: any) {\n    let result = undefined;\n    this.form!.markAllAsTouched();\n    if (this.form!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      row.data_inicio = form.controls.data_inicio.value;\n      row.data_fim = form.controls.data_fim.value;\n      result = await this.dao?.save(row);\n    }\n    return result;\n  }\n\n  public async concluir(consolidacao: PlanoTrabalhoConsolidacao) {\n    this.submitting = true;\n    try {\n      let response = await this.dao!.concluir(consolidacao.id);\n      consolidacao.status = response.status as PlanoTrabalhoConsolidacaoStatus;\n      if(consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent) {\n        let consolidacaoForm = consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent as PlanoTrabalhoConsolidacaoFormComponent;\n        consolidacaoForm.loadConsolidacao(response);\n      } else {\n        this.grid!.refreshExpanded(consolidacao.id);\n      }\n    } catch (error: any) {\n      this.error(error.message || error);\n    } finally {\n      this.submitting = false;\n    }\n  }\n\n  public async cancelarConclusao(consolidacao: PlanoTrabalhoConsolidacao) {\n    this.submitting = true;\n    try {\n      let response = await this.dao!.cancelarConclusao(consolidacao.id);\n      consolidacao.status = response.status as PlanoTrabalhoConsolidacaoStatus;\n      if(consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent) {\n        let consolidacaoForm = consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent as PlanoTrabalhoConsolidacaoFormComponent;\n        consolidacaoForm.loadConsolidacao(response);\n      } else {\n        this.grid!.refreshExpanded(consolidacao.id);\n      }\n    } catch (error: any) {\n      this.error(error.message || error);\n    } finally {\n      this.submitting = false;\n    }\n  }\n\n  public isDisabled(row?: PlanoTrabalhoConsolidacao): boolean {\n    return (row && row.status != \"INCLUIDO\") || this.entity?.status != \"ATIVO\";\n  }\n\n  public avaliar(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public editarAvaliacao(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public fazerRecurso(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public cancelarAvaliacao(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let consolidacao: PlanoTrabalhoConsolidacao = row as PlanoTrabalhoConsolidacao;\n    const isUsuarioConsolidacao = this.auth.usuario!.id == this.entity!.usuario_id;\n    const isGestor = [this.entity!.unidade!.gestor?.usuario_id, this.entity!.unidade!.gestor_substituto?.usuario_id].includes(this.auth.usuario?.id);\n    const BOTAO_CONCLUIR = { hint: \"Concluir\", icon: \"bi bi-check-circle\", color: \"btn-outline-success\", onClick: this.concluir.bind(this) };\n    const BOTAO_CANCELAR_CONCLUSAO = { hint: \"Cancelar conclusão\", icon: \"bi bi-backspace\", color: \"btn-outline-danger\", onClick: this.cancelarConclusao.bind(this) };\n    const BOTAO_AVALIAR = { hint: \"Avaliar\", icon: \"bi bi-star\", color: \"btn-outline-warning\", onClick: this.avaliar.bind(this) };\n    const BOTAO_EDITAR_AVALIACAO = { hint: \"Editar avaliação\", icon: \"bi bi-star-half\", color: \"btn-outline-warning\", onClick: this.editarAvaliacao.bind(this) };\n    const BOTAO_FAZER_RECURSO = { hint: \"Fazer recurso\", id: \"RECORRIDO\", icon: \"bi bi-journal-medical\", color: \"btn-outline-warning\", onClick: this.fazerRecurso.bind(this) };\n    const BOTAO_CANCELAR_AVALIACAO = { hint: \"Cancelar avaliação\", id: \"INCLUIDO\", icon: \"bi bi-backspace\", color: \"btn-outline-warning\", onClick: this.cancelarAvaliacao.bind(this) };\n    if(!this.isDisabled()) {\n      if(consolidacao.status == \"INCLUIDO\" && (isUsuarioConsolidacao || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_CONCL\"))) {\n        result.push(BOTAO_CONCLUIR);\n      }\n      if(consolidacao.status == \"CONCLUIDO\" && this.planoTrabalhoService.diasParaConcluirConsolidacao(row, this.entity!.programa) >= 0 && (isUsuarioConsolidacao || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_DES_CONCL\"))) {\n        result.push(BOTAO_CANCELAR_CONCLUSAO);\n      }\n      if(consolidacao.status == \"CONCLUIDO\" && (isGestor || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_AVALIAR\"))) {\n        result.push(BOTAO_AVALIAR);\n      }\n      if(consolidacao.status == \"AVALIADO\") {\n        /* TODO: Fazer as condições para avaliado */\n      }\n    }\n    return result;\n  }\n\n}\n","<grid [items]=\"items\" #grid [form]=\"form!\" [hasDelete]=\"true\" [minHeight]=\"0\"\n    [add]=\"addConsolidacao.bind(this)\" [hasAdd]=\"!isDisabled()\" [hasEdit]=\"false\" [hasDelete]=\"false\" editable>\n    <columns>\n        <column type=\"expand\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\n            <ng-template let-row=\"row\" #columnConsolidacao>\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\n                <plano-trabalho-consolidacao-form #consolidacao [disabled]=\"isDisabled(row)\" [entity]=\"row\" [planoTrabalho]=\"entity\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\n            </ng-template>\n        </column>\n        <column title=\"Data início\" [template]=\"columnDataInicio\">\n            <ng-template let-row=\"row\" #columnDataInicio>\n                {{util.getDateFormatted(row.data_inicio)}}\n            </ng-template>\n        </column>\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\n            <ng-template let-row=\"row\" #columnDataFim>\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\n            </ng-template>\n        </column>\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\n            <ng-template let-row=\"row\" #columnEstatisticas>\n            </ng-template>\n        </column>\n        <column title=\"Status\" [template]=\"columnStatus\">\n            <ng-template let-row=\"row\" #columnStatus>\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status)\"></badge>\n            </ng-template>\n        </column>\n        <column type=\"options\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\n    </columns>\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageBase } from 'src/app/modules/base/page-base';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'app-plano-trabalho-consolidacao',\n  templateUrl: './plano-trabalho-consolidacao.component.html',\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\n})\nexport class PlanoTrabalhoConsolidacaoComponent extends PageFrameBase {\n  @ViewChild(TabsComponent, { static: false }) public tabs?: TabsComponent;\n\n  public usuarios: Usuario[] = [];\n  public unidade?: Unidade;\n  public unidadeDao: UnidadeDaoService;\n  public loadingUnidade: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.form = this.fh.FormBuilder({\n      arquivados: { default: false }\n    });\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.tabs!.active = this.queryParams?.tab || \"USUARIO\";\n    (async () => {\n      await this.loadData(this.entity!, this.form);\n    })();\n  }\n\n  public async loadData(entity: IIndexable, form?: FormGroup) {\n    this.unidade = this.auth.unidadeGestor();\n    if(this.unidade) {\n      this.usuarios = [];\n      this.loadingUnidade = true;\n      this.cdRef.detectChanges()\n      try {\n        this.usuarios = await this.unidadeDao.lotados(this.unidade.id);\n      } finally {\n        this.loadingUnidade = false;\n        this.cdRef.detectChanges()\n      }\n    }\n  }\n\n}\n","<tabs right #tabs [title]=\"isModal ? '' : title\">\n    <tab key=\"UNIDADE\" *ngIf=\"unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\n        <ng-template #tabUnidade>\n            <h5>{{unidade.sigla}} - {{unidade.nome}}</h5>\n            <div *ngIf=\"loading\" class=\"d-flex justify-content-center my-2\">\n                <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"visually-hidden\"></span>\n                </div>\n            </div>\n            <collapse-card *ngFor=\"let usuario of usuarios\" [data]=\"usuario\" [titleTemplate]=\"usuarioCardTitle\" [template]=\"usuarioCard\">\n                <ng-template let-data=\"data\" #usuarioCardTitle>\n                    <div class=\"row\">\n                        <div class=\"col-2\">\n                            <profile-picture [url]=\"data.url_foto\" [size]=\"40\" [hint]=\"data.nome\"></profile-picture>\n                        </div>\n                        <div class=\"col-10\">\n                            <strong>{{data.nome || \"\"}}</strong><br>\n                            <small>{{data.apelido || \"\"}}</small>\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template let-data=\"data\" #usuarioCard>\n                    <plano-trabalho-list-accordeon [usuarioId]=\"data.id\"></plano-trabalho-list-accordeon>\n                </ng-template>\n            </collapse-card>\n        </ng-template>\n    </tab>\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\n        <ng-template #tabUsuario>\n            <separator [control]=\"form!.controls.arquivados\" [title]=\"'Mostrar ' + lex.translate('Planos de trabalho') + ' arquivados?'\"></separator>\n            <plano-trabalho-list-accordeon [usuarioId]=\"auth.usuario!.id\" [arquivados]=\"form!.controls.arquivados.value\"></plano-trabalho-list-accordeon>\n        </ng-template>\n    </tab>\n</tabs>\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { NavigateResult } from 'src/app/services/navigate.service';\n\n@Component({\n  selector: 'plano-trabalho-form-termo',\n  templateUrl: './plano-trabalho-form-termo.component.html',\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\n})\n\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public documentoDao: DocumentoDaoService;\n  public tipoDocumentoDao: TipoDocumentoDaoService;\n  public allPages: ListenerAllPagesService;\n  public processo?: SeiKeys;\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n\n    this.form = this.fh.FormBuilder({\n      carga_horaria: {default: \"\"},\n      tempo_total: {default: \"\"},\n      tempo_proporcional: {default: \"\"},\n      data_inicio: {default: new Date()},\n      data_fim: {default: new Date()},\n      programa_id: {default: \"\"},\n      usuario_id: {default: \"\"},\n      unidade_id: {default: \"\"},\n      documento_id: {default: \"\"},\n      documentos: {default: []},\n      tipo_documento_id: {default: \"\"},\n      numero_processo: {default: \"\"},\n      vinculadas: {default: true},\n      tipo_modalidade_id: {default: \"\"},\n      forma_contagem_carga_horaria: {default: \"DIA\"}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    if(!this.tipoDocumento?.selectedEntity && form?.controls.tipo_documento_id.value?.length) {\n      return \"Aguarde o carregamento do tipo de documento\";\n    }\n    return undefined;\n  } \n\n  public onVinculadasChange(event: Event) {\n    this.cdRef.detectChanges();\n  }\n\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    formValue = this.util.fillForm(formValue, entity);\n    await Promise.all ([\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\n    ]);\n    if(this.processo) {\n      formValue.id_processo = this.processo.id_processo;\n      formValue.numero_processo = this.processo.numero_processo;\n    }\n    formValue.data_inicio = this.auth.hora;\n    form.patchValue(formValue);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\n    this.processo = this.metadata?.processo;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\n      //if(this.processo) {\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\n        /* TODO Gerar documento do TCR\n        termo: this.termo!.conteudo,\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\n        codigo_tipo_documento: (this.tipoDocumento?.selectedEntity as TipoDocumento)?.codigo\n      })));\n      /*} else {\n        const documento = Object.assign(new Documento(), {\n          especie: \"TERMO_ADESAO\",\n          conteudo: this.termo!.conteudo,\n          plano_id: this.entity!.id,\n          status: \"GERADO\"\n        });\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\n      }*/\n    });\n  }\n\n  public get formaContagemCargaHoraria(): UnitWorkload {\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\n  }\n\n  public titleEdit = (entity: PlanoTrabalho): string => {\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"programa_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\n        <div class=\"row\">\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\n        </div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\n        </div>\n    </separator>\n    <div class=\"row\">\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\" required></input-search>\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\n    </div>\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\n    </separator/-->\n</editable-form>\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { SelectItem } from 'src/app/components/input/input-base';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Documento } from 'src/app/models/documento.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\nimport { Template } from 'src/app/models/template.model';\n\n@Component({\n  selector: 'plano-trabalho-form',\n  templateUrl: './plano-trabalho-form.component.html',\n  styleUrls: ['./plano-trabalho-form.component.scss']\n})\n\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\n\n  //public formAtividades: FormGroup;\n  //public formEntregas: FormGroup;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public unidadeDao: UnidadeDaoService;\n  //public atividadeDao: AtividadeDaoService;\n  public documentoDao: DocumentoDaoService;\n  public documentoService: DocumentoService;\n  public templateService: TemplateService;\n  public allPages: ListenerAllPagesService;\n  public calendar: CalendarService;\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n  //public planoEntregaDao: PlanoEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public horasTotais?: Efemerides;\n  public horasParciais?: Efemerides;\n  public planoDataset: TemplateDataset[];\n  public joinPrograma: string[];\n  public entregas: LookupItem[] = [];\n  public planoTrabalho?: PlanoTrabalho;\n  public datasource: any;\n  public template?: Template;\n  public editingId?: string;\n\n  /*private _datasource: any;\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();*/\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"entregas.plano_entrega_entrega.entrega\"];\n    this.joinPrograma = [\"template_tcr\"];\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\n    this.templateService = injector.get<TemplateService>(TemplateService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.modalWidth = 1200;\n    this.planoDataset = this.dao!.dataset();\n    this.form = this.fh.FormBuilder({\n      carga_horaria: {default: \"\"},\n      tempo_total: {default: \"\"},\n      tempo_proporcional: {default: \"\"},\n      data_inicio: {default: new Date()},\n      data_fim: {default: new Date()},\n      usuario_id: {default: \"\"},\n      unidade_id: {default: \"\"},\n      programa_id: {default: \"\"},\n      documento_id: {default: null},\n      documentos: {default: []},\n      atividades: {default: []},\n      entregas: {default: []},\n      tipo_modalidade_id: {default: \"\"},\n      forma_contagem_carga_horaria: {default: \"DIA\"},\n      editar_texto_complementar_unidade: {default: false},\n      editar_texto_complementar_usuario: {default: false},\n      unidade_texto_complementar: {default: \"\"},\n      usuario_texto_complementar: {default: \"\"}\n    }, this.cdRef, this.validate);\n    /*this.formAtividades = this.fh.FormBuilder({\n      atividade_id: {default: \"\"}\n    }, this.cdRef, this.validateAtividades);\n    this.formEntregas = this.fh.FormBuilder({\n      nome: {default: \"\"},\n      entrega_id: {default: \"\"}\n    }, this.cdRef, this.validateEntregas);*/\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\n  }\n\n  public atualizarTcr() {\n    this.entity = this.loadEntity();\n    let textoUsuario = this.form!.controls.usuario_texto_complementar.value;\n    let textoUnidade = this.form!.controls.unidade_texto_complementar.value;\n    let documento = this.planoTrabalhoService.atualizarTcr(this.planoTrabalho!, this.entity!, textoUsuario, textoUnidade);\n    this.form?.controls.documento_id.setValue(documento?.id);\n    this.form?.controls.documentos.setValue(this.entity!.documentos);\n    this.datasource = documento?.datasource || {};\n    this.template = this.entity.programa?.template_tcr;\n    this.editingId = [\"ADD\", \"EDIT\"].includes(documento?._status || \"\") ? documento!.id : undefined;\n    this.cdRef.detectChanges();\n  }\n\n  /* SUBSTITUIDO pela proriedade public de mesmo nome\n  public get datasource(): any {\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() * /\n    let data = this.dao!.datasource(this._entityDocumentos);\n    let programa = this.programa?.selectedEntity as Programa;\n    /* Atualiza os campos de texto complementar do usuário e da unidade * /\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\n      this._datasource = data;\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente * /\n      this.documentoId = undefined;\n      if(programa?.termo_obrigatorio) {\n        this.documentoId = this.form!.controls.documento_id.value;\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\n          this.documentoId = this.dao?.generateUuid(),\n          documentos.push(new Documento({\n            id: this.documentoId, \n            tipo: \"HTML\",\n            especie: \"TCR\",\n            titulo: \"Termo de Ciência e Responsabilidade\",\n            conteudo: this.templateService.renderTemplate(programa.template_tcr?.conteudo || \"\", this._datasource),\n            status: \"GERADO\",\n            _status: \"ADD\",\n            template: programa.template_tcr?.conteudo,\n            dataset: this.dao!.dataset(),\n            datasource: this._datasource,\n            entidade_id: this.auth.entidade?.id,\n            plano_trabalho_id: this.entity?.id,\n            template_id: programa.template_tcr_id\n          }));\n          this.form!.controls.documento_id.setValue(this.documentoId);\n          this.form!.controls.documentos.setValue(documentos);\n        }\n      }\n    }\n    return this._datasource;\n  }*/\n\n  /*public get template(): Template | undefined {\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() * /\n    return this.planoTrabalhoService.template(this._entityDocumentos);\n  }*/\n\n  public get isTermos(): boolean {\n    return this.action == \"termos\";\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n    if(['unidade_id', 'programa_id', 'usuario_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\n      result = \"Valor não pode ser zero.\";\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\n      result = \"Inválido\";\n    } else if(this.programa && controlName == 'data_inicio' && (control.value as Date).getTime() < this.programa!.selectedEntity?.data_inicio.getTime()) {\n      result = \"Menor que programa\";\n    } else if(this.programa && controlName == 'data_fim' && (control.value as Date).getTime() > this.programa!.selectedEntity?.data_fim.getTime()) {\n      result = \"Maior que programa\";\n    } \n\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    // TODO:\n    // Validar se as entregas pertencem ao plano de entregas da unidade\n    // Validar se o usuários está habilitado no programa\n    return undefined;\n  };\n\n  /*public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\n  }*/\n\n  public onUnidadeSelect(selected: SelectItem) {\n    let unidade = this.unidade?.selectedEntity as Unidade;\n    this.entity!.unidade = unidade;\n    this.entity!.unidade_id = unidade.id;\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\n    this.form!.controls.unidade_texto_complementar.setValue(unidade?.texto_complementar_plano || \"\");\n  }\n\n  public onProgramaSelect(selected: SelectItem) {\n    let programa = selected.entity as Programa;\n    this.entity!.programa_id = programa.id;\n    this.entity!.programa = programa;\n    this.form?.controls.data_inicio.updateValueAndValidity();\n    this.form?.controls.data_fim.updateValueAndValidity();\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public onUsuarioSelect(selected: SelectItem) {\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public onDataInicioChange(event: Event) {\n         \n    const di = new Date(this.form!.controls.data_inicio.value).getTime();\n    const df = new Date(this.form!.controls.data_fim.value).getTime();\n\n    if(df < di){\n      let diaI = new Date(di);\n      diaI.setDate(diaI.getDate() + 1);\n      this.form!.controls.data_fim.setValue(diaI)   \n    }\n   \n   \n    this.calculaTempos();\n  }\n\n  public onDataFimChange(event: Event) {\n\n    const di = new Date(this.form!.controls.data_inicio.value).getTime();\n    const df = new Date(this.form!.controls.data_fim.value).getTime();\n\n    if(df < di){\n      let diaI = new Date(di);\n      diaI.setDate(diaI.getDate() + 1);\n      this.form!.controls.data_fim.setValue(diaI)   \n    }\n    this.calculaTempos();\n  }\n\n  public onCargaHorariaChenge(event: Event) {\n    this.calculaTempos();\n  }\n\n  public calculaTempos() {\n    const inicio = this.form?.controls.data_inicio.value;\n    const fim = this.form?.controls.data_fim.value;\n    const carga = this.form?.controls.carga_horaria.value || 8;\n    const usuario = this.usuario?.selectedEntity as Usuario;\n    const unidade = this.unidade?.selectedEntity as Unidade;\n    if(usuario && unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\n      this.calendar.loadFeriadosCadastrados(unidade.id).then((feriados) => {\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], []);\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], usuario.afastamentos);\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\n      });\n    }\n  }\n\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\n    this.planoTrabalho = new PlanoTrabalho(entity);\n    await Promise.all([\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\n      this.unidade?.loadSearch(entity.unidade || entity.unidade_id),\n      this.programa?.loadSearch(entity.programa || entity.programa_id),\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\n    ]);\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    /*let documento = entity.documentos.find(x => x.id == entity.documento_id);\n    if(documento) this._datasource = documento.datasource;*/\n    this.calculaTempos();\n    this.atualizarTcr();\n  }\n\n  public async initializeData(form: FormGroup) {\n    if(this.isTermos) {\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\n    } else {\n      this.entity = new PlanoTrabalho();\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\n    }\n    await this.loadData(this.entity, this.form!);\n  }\n\n  /* Atividades *\n  public async addAtividades() {\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\n  }\n\n  public async loadAtividades(form: FormGroup, row: any) {\n    form.controls.atividade_id.setValue(row.atividade_id);\n  }\n\n  public async removeAtividades(row: any) {\n    row._status = \"DELETE\";\n    return false;\n  }\n \n  public async saveAtividades(form: FormGroup, row: any) {\n    row.atividade_id = form.controls.atividade_id.value;\n    row.atividade = this.atividade?.selectedEntity as Atividade;\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\n    try {\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\n    } finally {\n      this.dialog.closeSppinerOverlay();\n    }* /\n    return row;\n  }\n\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == 'atividade_id' && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }*/\n\n  /* Entregas * /\n  public async addEntregas() {\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\n  }\n\n  public async loadEntregas(form: FormGroup, row: any) {\n    form.controls.entrega_id.setValue(row.entrega_id);\n    form.controls.nome.setValue(row.nome);\n  }\n\n  public async removeEntregas(row: any) {\n    row._status = \"DELETE\";\n    return false;\n  }\n \n  public async saveEntregas(form: FormGroup, row: any) {\n    row.entrega_id = form.controls.entrega_id.value;\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\n    row.nome = form.controls.nome.value;\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\n    return row;\n  }\n\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == 'entrega_id' && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }*/\n\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos * /\n  SUBSTITUIDO POR entity\n  public get entityDocumentos(): PlanoTrabalho {\n    let plano = this.loadEntity();\n    /* Remove campo de documentos para comparar * /\n    plano.documentos = [];\n    this._entityDocumentos.documentos = [];\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\n      this._entityDocumentos = plano;  \n    }\n    /* Atribui novamente o campo de documentos * /\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\n    return this._entityDocumentos;\n  }*/\n\n  /* Cria um objeto Plano baseado nos dados do formulário */\n  public loadEntity(): PlanoTrabalho {\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\n    plano = this.util.fillForm(plano, this.form!.value);\n    plano.usuario = (this.usuario!.selectedEntity || this.entity?.usuario) as Usuario;\n    plano.unidade = (this.unidade?.selectedEntity || this.entity?.unidade) as Unidade;\n    plano.programa = (this.programa?.selectedEntity || this.entity?.programa) as Programa;\n    plano.tipo_modalidade = (this.tipoModalidade!.selectedEntity || this.entity?.tipo_modalidade) as TipoModalidade;\n    return plano;\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\n    //let plano = this.loadEntity();\n    /* Atualiza o documento */\n    this.atualizarTcr();\n    /* Confirma dados do documento */\n    this.documentos?.saveData();\n    this.entity!.documentos = this.entity!.documentos.filter((documento: Documento) => {\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\");\n    });\n    /* Salva separadamente as informações do plano */\n    this.submitting = true;\n    try {\n      let requests: Promise<any>[] = [this.dao!.save(this.entity!, this.join)];\n      if(this.form!.controls.editar_texto_complementar_unidade.value) requests.push(this.unidadeDao.update(this.entity!.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value}));\n      if(this.form!.controls.editar_texto_complementar_usuario.value) requests.push(this.usuarioDao.update(this.entity!.usuario_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value}));\n      let responses = await Promise.all(requests);\n      this.entity = responses[0] as PlanoTrabalho;\n    } finally {\n      this.submitting = false;\n    }\n    return true;\n  }\n\n  public onTabSelect(tab: LookupItem) {\n    if(tab.key == \"TERMO\") this.atualizarTcr();\n  }\n\n  public titleEdit = (entity: PlanoTrabalho): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\n  }\n\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let documento: Documento = row as Documento;\n\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\n    }\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\n\n    return result;\n  }\n\n  /*public needSign(documento: Documento): boolean {\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.selectedEntity as TipoModalidade);\n    const usuario = this.entity!.usuario!; // (this.usuario?.selectedEntity as Usuario);\n    const unidade = this.entity!.unidade!; // (this.unidade?.selectedEntity as Unidade);\n    const entidade = unidade?.entidade;\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\n    let ids: string[] = [];\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\n  }*/\n\n  public async signDocumento(documento: Documento) {\n    await this.documentoService.sign([documento]);\n    this.cdRef.detectChanges();\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\n      if(response) {\n        this.loading = true;\n        this.documentoDao.assinar([documento.id]).then(response => {\n          if(response?.length) {\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\n            let found = documentos.find(x => x.id == documento?.id);\n            if(found) found.assinaturas = response[0].assinaturas;\n            this.form!.controls.documentos.setValue(documentos);\n            this.gridDocumentos?.reset();\n          }\n        }).finally(() => this.loading = false);\n      }\n    });*/\n  }\n\n  public get formaContagemCargaHoraria(): UnitWorkload {\n    //const forma = (this.unidade?.selectedEntity as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\n    //console.log(\"FORMA: \", (this.unidade?.selectedEntity as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\n  }\n\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\n  }\n\n  /*public async addDocumento() {\n    const documento = new Documento();\n    documento.id = this.dao!.generateUuid();\n    documento.plano_trabalho_id = this.entity!.id;\n    documento.especie = \"TCR\";\n    documento._status = \"ADD\";\n    this.go.navigate({route: ['gestao', 'plano-trabalho', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\n      if(modalResult) {\n        (async () => {\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\n          if(this.isTermos) {\n            this.clearErros();\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\n            try {\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\n                especie: \"TCR\",\n                conteudo: modalResult?.termo,\n                plano_trabalho_id: this.entity!.id,\n                status: \"GERADO\"\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\n            } catch (error: any) {\n              this.error(error.message ? error.message : error);\n              modalResult = undefined;\n            } finally {\n              this.dialog.closeSppinerOverlay();\n            }\n          }\n          if(modalResult) {\n            documentos.push(modalResult);\n            this.form!.controls.documentos.setValue(documentos);\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\n            await this.initializeData(this.form!);\n            this.dialog.closeSppinerOverlay();\n          }\n          this.cdRef.detectChanges();\n        })();\n      }\n    }});\n    return undefined;\n  }*/\n\n  public isVigente(documento: Documento): boolean {\n    return this.form!.controls.documento_id.value == documento.id;\n  }\n\n  /*public onProcessoClick(row: any) {\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\n  }*/\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\" [select]=\"onTabSelect.bind(this)\">\n        <tab key=\"DADOS\" label=\"Dados\">\n            <div class=\"row\">\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de unidade, programa e usuario devem ficar desabilitados nas edições e habilitado apenas nas inclusões; -->\n                <input-search #unidade [size]=\"4\" required [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (select)=\"onUnidadeSelect($event)\"></input-search>\n                <input-search #programa [size]=\"4\" required [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"programa_id\" [join]=\"joinPrograma\" [dao]=\"programaDao\" (select)=\"onProgramaSelect($event)\"></input-search>\n                <input-search #usuario [size]=\"4\" required controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\n            </div>\n            <div class=\"row\">\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"  required></input-datetime>\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"  required></input-datetime>\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"  required></input-search>\n            </div>\n            <ng-container *ngIf=\"tipoModalidade!.selectedEntity?.plano_trabalho_calcula_horas\">\n                <div class=\"row\">\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"  required></input-workload>\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\n                </div>\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\n                </separator>\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\n                </separator>\n            </ng-container>\n            <separator [title]=\"lex.translate('Entregas') + lex.translate(' do plano de trabalho')\">\n                <top-alert *ngIf=\"!form!.controls.programa_id.value?.length || !form!.controls.unidade_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar ' + lex.translate('a Unidade') + ' e ' + lex.translate('o Programa') + '!'\"></top-alert>\n                <div *ngIf=\"form!.controls.programa_id.value?.length && form!.controls.unidade_id.value?.length\">\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\"></plano-trabalho-list-entrega>\n                </div>\n            </separator>\n        </tab>\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\n                </editable-form>\n            </div>\n        </tab//-->\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\n            </separator>\n            <separator title=\"Texto complementar do usuario\">\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\n            </separator>\n        </tab>\n        <tab *ngIf=\"checkFilled(['usuario_id', 'programa_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\n            <div clss=\"row\">\n                <documentos #documentos [entity]=\"entity\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \n                    [editingId]=\"editingId\" [datasource]=\"datasource\" [template]=\"programa?.selectedEntity?.template_tcr\"></documentos>\n            </div>\n        </tab>\n    </tabs>\n</editable-form>\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'plano-trabalho-list-accordeon',\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\n})\nexport class PlanoTrabalhoListAccordeonComponent extends PageFrameBase {\n  @ViewChild('accordion', { static: false }) public accordion?: AccordionComponent;\n  @Input() usuarioId?: string;\n  @Input() set arquivados(value: boolean) {\n    if(this._arquivados != value) {\n      this._arquivados = value;\n      if(this.viewInit) this.loadData(this.entity!, this.form);\n    }\n  }\n  get arquivados(): boolean {\n    return this._arquivados;\n  }\n\n  public selectedIndex: number = -1;\n  public dao?: PlanoTrabalhoDaoService;\n  public planos: PlanoTrabalho[] = [];\n\n  private _arquivados: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.dao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    (async () => {\n      await this.loadData(this.entity!, this.form);\n    })();\n  }\n\n  public async loadData(entity: IIndexable, form?: FormGroup) {\n    this.accordion!.loading = true;\n    try {\n      let dados = await this.dao!.getByUsuario(this.usuarioId!, this.arquivados);\n      let agora = (new Date()).getTime();\n      this.planos = dados.planos;\n      for(var i = 0; i < this.planos.length; i++) {\n        if(this.util.asDate(this.planos[i].data_inicio)!.getTime() <= agora && agora <= this.util.asDate(this.planos[i].data_fim)!.getTime() && [\"ATIVO\", \"CONCLUIDO\"].includes(this.planos[i].status)) {\n          this.selectedIndex = i;\n        }\n      }\n    } finally {\n      this.accordion!.loading = false;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n","<accordion #accordion [items]=\"planos\" [selectedIndex]=\"selectedIndex\" [titleTemplate]=\"planoTrabalhoSectionTitle\" [template]=\"planoTrabalhoSection\">\n    <ng-template let-item=\"item\" #planoTrabalhoSectionTitle>\n        <div class=\"row w-100\">\n            <div class=\"col-md-1\">{{'#' + item.numero}}</div>\n            <div class=\"col-md-5\">\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"item.unidade?.sigla\" color=\"light\" [hint]=\"lex.translate('Unidade') + ': ' + item.unidade?.nome\"></badge>\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"item.programa?.nome\" color=\"light\" [hint]=\"lex.translate('Programa')\"></badge>\n                <badge [icon]=\"entityService.getIcon('TipoModalidade')\" [label]=\"item.tipo_modalidade?.nome\" color=\"light\" [hint]=\"lex.translate('Tipo de modalidade')\"></badge>\n            </div>\n            <div class=\"col-md-4\">\n                {{dao!.getDateFormatted(item.data_inicio)+\" até \"+dao!.getDateFormatted(item.data_fim)}}\n            </div>\n            <div class=\"col-md-2\">\n                <badge [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, item.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, item.status)\" [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, item.status)\"></badge>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template let-item=\"item\" #planoTrabalhoSection>\n        <plano-trabalho-consolidacao-list [entity]=\"item\"></plano-trabalho-consolidacao-list>\n    </ng-template>\n</accordion>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\n\n@Component({\n  selector: 'plano-trabalho-list-entrega',\n  templateUrl: './plano-trabalho-list-entrega.component.html',\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\n})\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\n  @Input() cdRef: ChangeDetectorRef;\n\n  public get items(): PlanoTrabalhoEntrega[] {\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\n    return this.gridControl.value.entregas;\n  }\n  public options: ToolbarButton[] = [];\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\n  public planoEntregaDao?: PlanoEntregaDaoService;\n  public peeDao?: PlanoEntregaEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public totalForcaTrabalho: number = 0;\n  public entregas: LookupItem[] = [];\n\n  private _disabled: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\", \"plano_entrega_entrega.plano_entrega:id,unidade_id\", \"plano_entrega_entrega.plano_entrega.unidade:id,sigla\"];\n    this.form = this.fh.FormBuilder({\n      origem: { default: null },\n      orgao: { default: null },\n      descricao: { default: \"\" },\n      forca_trabalho: { default: 1 },\n      plano_trabalho_id: { default: null },\n      plano_entrega_id: { default: null },\n      plano_entrega_entrega_id: { default: null }\n    }, this.cdRef, this.validate);\n  }\n\n  /**\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\n   * @param control \n   * @param controlName \n   * @returns \n   */\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\n      if (['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Obrigatório!\";\n      if (!!this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)) result = \"Esta entrega está em duplicidade!\"; /* (*2) */\n    }\n    return result;\n  }\n\n  public validateEntregas(): string | undefined {\n    let planoInterval = {start: this.entity!.data_inicio, end: this.entity!.data_fim};\n    for(let entrega of this.items) {\n      let entregaPlano = entrega.plano_entrega_entrega;\n      // valida as datas das entregas quando vinculado a uma entrega do plano de entrega\n      if(entregaPlano) {\n        let entregaDataFim = entregaPlano!.data_fim ? entregaPlano!.data_fim : (entregaPlano!.data_inicio.getTime() <= this.entity!.data_fim.getTime() ? this.entity!.data_fim : undefined);\n        let entregaInterval = {start: entregaPlano!.data_inicio, end: entregaPlano!.data_fim || entregaPlano!.data_inicio};\n        if(!entregaDataFim || !this.util.intersection([entregaInterval, planoInterval])) {\n          return this.lex.translate(\"Entrega\") + \" \" + entregaPlano!.descricao + \" possui datas incompatíveis (início \" + \n            this.util.getDateFormatted(entregaPlano!.data_inicio) + (entregaPlano!.data_fim ? \"e fim \" + this.util.getDateFormatted(entregaPlano!.data_fim) : \"\") + \")\";\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\n   */\n  async ngOnInit() {\n    super.ngOnInit();\n    this.entity = this.metadata?.entity || this.entity;\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\n    this.entity!._metadata = this.entity!._metadata || {};\n    this.entity!._metadata.novaEntrega = undefined;\n  }\n\n  /**\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\n   * @returns \n   */\n  public async addEntrega() {\n    return Object.assign(new PlanoTrabalhoEntrega(), {\n      _status: \"ADD\",\n      id: this.dao!.generateUuid(),\n      plano_trabalho_id: this.entity?.id\n    }) as IIndexable;\n  }\n\n  /**\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\n   * @param form \n   * @param row \n   */\n  public async loadEntrega(form: FormGroup, row: any) {\n    let entrega: PlanoTrabalhoEntrega = row;\n    form.controls.descricao.setValue(row.descricao);\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\n    form.controls.plano_entrega_entrega_id.setValue(null);\n    form.controls.orgao.setValue(null);\n    if (entrega._status == \"ADD\") { // É uma nova entrega\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\n    } else if (entrega.plano_entrega_entrega?.plano_entrega?.unidade_id == this.entity!.unidade_id) {\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\n    } else if (entrega.plano_entrega_entrega) {\n      form.controls.origem.setValue('OUTRA_UNIDADE');\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\n    } else if (!!entrega.orgao?.length) { \n      form.controls.origem.setValue('OUTRO_ORGAO');\n      form.controls.orgao.setValue(entrega.orgao);\n    } else {\n      form.controls.origem.setValue('SEM_ENTREGA');\n    }\n  }\n\n  /**\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \n   * @param row \n   * @returns \n   */\n  public async removeEntrega(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) {\n      this.loading = true;\n      try {\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\n      } finally {\n        this.loading = false;\n      }\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\n      return this.isNoPersist ? false : true; // (*3)\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\n   * @param form \n   * @param row \n   * @returns \n   */\n  public async saveEntrega(form: FormGroup, row: any) {\n\n    this.entity!._metadata = this.entity!._metadata || {};\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\n    this.entity!._metadata.novaEntrega.orgao = this.form?.controls.orgao.value;\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\n    this.loading = true;\n    try {\n      if (!this.isNoPersist) {\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\n        // TODO: Verificar isso (Foi feito uma modificação no grid para isso não ser mais necessário)\n        // if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\n      }\n    } catch (e: any) {\n      this.error(e.message ? e.message : e.toString() || e);\n    } finally {\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entrega?.selectedItem?.data || null;\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\n      this.loading = false;\n    }\n    return this.entity!._metadata.novaEntrega;\n  }\n\n  /**\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\n   * @param entregas Array de entregas do plano de trabalho\n   * @returns \n   */\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\n  }\n\n  /**\n   * Método chamado para carregar as entregas da unidade\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\n   */\n  public async carregarEntregas(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\n    let planoEntrega = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega:id,nome\", \"unidade\"]) : idPlanoOuPlano;\n    let planoEntregaComUnidade = {id: planoEntrega?.id, unidade_id: planoEntrega?.unidade_id, unidade: planoEntrega?.unidade};\n    this.entregas = planoEntrega?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: Object.assign(epe, {plano_entrega: planoEntregaComUnidade}) })) || [];\n    if(!this.entregas.find(x => x.key == this.form!.controls.plano_entrega_entrega_id.value)) this.form!.controls.plano_entrega_entrega_id.setValue(null);\n  }\n\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\n\n  public async onOrigemChange(row: any) {\n    let value = this.form!.controls.origem.value;\n    this.cdRef.detectChanges();\n    if (value == 'OUTRO_ORGAO') {\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\n    } else if(value == 'SEM_ENTREGA') {\n      this.form?.controls.orgao.setValue(null);\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\n    } if (value == 'PROPRIA_UNIDADE') {\n      this.form?.controls.orgao.setValue(null);\n      this.loading = true;\n      try {\n        let planosEntregas = await this.planoEntregaDao!.query({where: [[\"unidade_id\", \"==\", this.entity!.unidade_id], [\"status\", \"==\", \"ATIVO\"], [\"data_inicio\", \"<=\", this.entity!.data_fim], [\"data_fim\", \">=\", this.entity!.data_inicio]]}).asPromise();\n        if(planosEntregas.length == 1) {\n          this.form?.controls.plano_entrega_id.setValue(planosEntregas[0].id);\n        } else if(this.planoEntrega?.selectedEntity?.unidade_id != this.entity!.unidade_id) {\n          this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\n        }\n      } finally {\n        this.loading = false;\n      }\n    } if (value == 'OUTRA_UNIDADE') {\n      this.form?.controls.orgao.setValue(null);\n      this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\n    }\n  }\n\n  public onPlanoEntregaChange(event: Event) {\n    let planoEntrega = this.planoEntrega?.selectedEntity as PlanoEntrega;\n    this.carregarEntregas(planoEntrega);\n  }\n\n  public onEntregaChange(event: Event) {\n    let entrega = this.entrega!.selectedItem?.data as PlanoEntregaEntrega;\n    if(!this.form!.controls.descricao.value?.length) {\n      this.form!.controls.descricao.setValue(entrega?.descricao || \"\");\n    }\n  }\n\n  public onForcaTrabalhoChange(row: any) {\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\n  }\n}\n\n/*\nTESTES\n\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\nInclusão Entrega Catálogo                          \nInclusão Entrega Mesma Unidade                     \nInclusão Entrega Outra Unidade                     \nAlteração Entrega Catálogo                         \nAlteração Entrega Mesma Unidade                    \nAlteração Entrega Outra Unidade                    \nCancelamento Entrega Catálogo                      \nCancelamento Entrega Mesma Unidade                 \nCancelamento Entrega Outra Unidade                 \nExclusão Entrega Catálogo                          \nExclusão Entrega Mesma Unidade                     \nExclusão Entrega Outra Unidade                     \n\n*/\n\n/*\nOBSERVAÇÕES:\n\n(*2)  this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\njá existe no grid.\n\n(*3)  return this.isNoPersist ? false : true;\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\n\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\n\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\n\n\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\n                      |   (foi carregada junto com o Plano)  |                            |        |\n                      |--------------------------------------+----------------------------+--------+------------------------------------\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\n                      |                                      |                            | três   |\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\n                      |   editada agora                      |                            | três   |\n                      +--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\n                      |   editada agora                      |                            | três   |\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\n                      |                                      | addEntrega loadEntrega     | três   |\n                      |--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\n                      |   já está sendo editada              | loadEntrega                | três   |\n------------------------------------------------------------------------------------------+--------+------------------------------------\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\n\n*/","<editable-form noButtons noMargin [form]=\"form!\" [disabled]=\"formDisabled\">\n    <div class=\"row m-0 p-0\">\n        <grid [items]=\"items\" [form]=\"form!\" noMargin #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\n            <columns>\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\n                    <ng-template let-row=\"row\" #columnOrigem>\n                        <div class=\"w-100 d-flex justify-content-center\">\n                            <div class=\"one-per-line\">\n                                <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\n                                <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\n                                <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\n                            </div>\n                        </div>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #editOrigem>\n                        <input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select>\n                        <input-search *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" label #planoEntrega [placeholder]=\"'Selecione o ' + lex.translate('Plano de entrega')\" [join]=\"['entregas.entrega:id,nome', 'unidade']\" [where]=\"origem?.value == 'PROPRIA_UNIDADE' ? [['unidade_id', '==', entity?.unidade_id]] : undefined\" [selectParams]=\"origem?.value == 'PROPRIA_UNIDADE' ? {filter: {unidade_id: entity?.unidade_id}} : undefined\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" (change)=\"onPlanoEntregaChange($event)\"></input-search>\n                        <input-text *ngIf=\"origem?.value == 'OUTRO_ORGAO'\" #orgao controlName=\"orgao\" placeholder=\"Órgão\"></input-text>\n                    </ng-template>\n                </column>\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\n                    <ng-template let-row=\"row\" #columnEntrega>\n                        <small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small>\n                        <div *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(planoTrabalhoService.tipoEntrega(row, entity).tipo)\" class=\"w-100\">\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_inicio)\" hint=\"Data de início\"></badge>\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_fim)\" hint=\"Data de término\"></badge>\n                        </div>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #editEntrega>\n                        <input-select *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" #entrega nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregas\" (change)=\"onEntregaChange($event)\"></input-select>\n                        <div *ngIf=\"entrega?.selectedItem\" class=\"w-100\">\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(entrega!.selectedItem!.data!.data_inicio)\" hint=\"Data de início\"></badge>\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(entrega!.selectedItem!.data!.data_fim)\" hint=\"Data de término\"></badge>\n                        </div>\n                    </ng-template>\n                </column>\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\n                        <div class=\"text-center\">\n                            <small><strong>% Força Trab.</strong></small><br>\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\n                        </div>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\n                </column>\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\n                </column>\n                <column type=\"options\"></column>\n            </columns>\n        </grid>\n    </div>\n</editable-form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\n\nconst routes: Routes = [\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\" } },\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlanoTrabalhoRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UteisModule } from '../../uteis/uteis.module';\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\n\n\n@NgModule({\n  declarations: [\n    PlanoTrabalhoFormComponent,\n    PlanoTrabalhoListComponent,\n    PlanoTrabalhoListEntregaComponent,\n    PlanoTrabalhoFormTermoComponent,\n    PlanoTrabalhoConsolidacaoComponent,\n    PlanoTrabalhoConsolidacaoListComponent,\n    PlanoTrabalhoConsolidacaoFormComponent,\n    PlanoTrabalhoListAccordeonComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    PlanoTrabalhoRoutingModule,\n    UteisModule\n  ]\n})\nexport class PlanoTrabalhoModule { }\n"],"names":["DaoBaseService","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","constructor","injector","dataset","deeps","deepsFilter","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoTrabalhoConsolidacao","data","data_inicio","Date","data_fim","status","avaliacoes","status_historico","plano_trabalho_id","avaliacao_id","initialization","ChangeDetectorRef","EditableFormComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","Atividade","PlanoTrabalhoConsolidacaoOcorrencia","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","AtividadeDaoService","AtividadeService","CalendarService","ɵɵelement","ɵɵproperty","ctx_r33","entityService","getIcon","row_r32","tipo_atividade","nome","ɵɵelementStart","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_badge_2_Template","ɵɵelementEnd","ɵɵtext","ɵɵadvance","numero","ctx_r19","atividadeService","onIdClick","bind","ɵɵtextInterpolate","descricao","ɵɵlistener","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template_input_search_select_0_listener","$event","ɵɵrestoreView","_r37","ctx_r36","ɵɵnextContext","ɵɵresetView","onTipoAtividadeSelect","ctx_r21","lex","translate","formAtividade","controls","tipo_atividade_id","tipoAtividadeDao","auth","hasPermissionTo","undefined","tempo_r40","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_9_badge_1_Template","ctx_r23","temposAtividade","row_r38","ctx_r25","data_distribuicao","data_estipulada_entrega","data_entrega","etiqueta_r46","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_3_tr_1_i_2_Template","check_r48","checked","texto","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_3_tr_1_Template","row_r42","checklist","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_badge_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_separator_2_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_3_Template","progresso","etiquetas","length","ctx_r55","i_r57","check_r56","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_table_5_tr_1_Template","ctx_r54","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_Template_input_select_details_2_listener","_r59","ctx_r58","onEtiquetaConfigClick","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_separator_4_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_table_5_Template","ctx_r29","formEdit","addItemHandleEtiquetas","etiqueta","row_r51","status_r63","color","icon","label","row_r60","_r17","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_19_badge_2_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_19_comentarios_widget_3_Template","documento_requisicao","ctx_r31","getStatus","entity","editing","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_9_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_11_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_19_Template","row_r16","atividades","ctx_r4","disabled","addAtividade","entrega","loadAtividade","removeAtividade","saveAtividade","_r18","_r20","_r22","_r24","_r26","_r28","onColumnProgressoEtiquetasChecklistEdit","onColumnProgressoEtiquetasChecklistSave","_r30","atividadeOptionsMetadata","dynamicOptions","dynamicButtons","row_r65","badge","titulo","cor","ctx_r8","row_r66","row_r67","forca_trabalho","row_r68","tipo_motivo_afastamento","icone","ɵɵtextInterpolate1","observacao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","bindEntity","_disabled","cdRef","detectChanges","joinAtividade","itemsEntregas","itemsOcorrencias","itemsAfastamentos","validateAtividade","controlName","result","indexOf","includes","util","isDataValid","getTime","validateOcorrencia","formOcorrencia","get","dao","consolidacaoOcorrenciaDao","atividadeDao","calendar","ocorrenciaDao","planoTrabalhoService","planoEntregaService","fh","FormBuilder","default","comentarios","esforco","tempo_planejado","refreshId","atividadeRefreshId","removeId","atividadeRemoveId","refresh","loadData","form","_metadata","planoTrabalhoConsolidacaoFormComponent","id","atividade","forEach","foundIndex","findIndex","x","getById","then","splice","ngAfterViewInit","_this","_asyncToGenerator","loadConsolidacao","dados","entregas","map","plano_entrega_entrega","plano_entrega","planosEntregas","find","pe","plano_entrega_id","filter","y","plano_trabalho_entrega_id","tipoEntrega","planoTrabalho","programa","ocorrencias","afastamentos","unidade","plano_trabalho","_this2","gridEntregas","loading","dadosConsolidacao","_this3","efemerides","calculaDataTempoUnidade","carga_horaria","tempoPlanejado","horasUteis","dataInicio","setTime","dataFim","generateUuid","plano_trabalho_entrega","plano_trabalho_consolidacao","demandante","usuario","tempo_despendido","tempoUtil","plano_trabalho_consolidacao_id","demandante_id","usuario_id","unidade_id","metadados","atrasado","tempo_atraso","pausado","iniciado","concluido","avaliado","arquivado","produtividade","extra","_status","row","_this4","patchValue","_this5","confirm","dialog","delete","_this6","markAllAsTouched","valid","fillForm","save","atividadeDynamicButtons","push","Object","assign","BUTTON_EDIT","BUTTON_DELETE","_this7","setValue","merge","a","b","key","config","clone","_this8","saved","update","error","go","navigate","route","params","modal","modalClose","modalResult","selectedItem","item","textHash","validateLookupItem","loadTipoAtividade","tipoAtividade","buildEtiquetas","buildChecklist","comentarioAtividade","addOcorrencia","_this9","loadOcorrencia","_this10","removeOcorrencia","_this11","ocorrencia","saveOcorrencia","_this12","ocorrenciaDynamicButtons","addAfastamento","_this13","metadata","consolidacao","filterSnapshot","querySnapshot","afastamentoDynamicButtons","OPTION_INFORMACOES","onClick","doc","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_5_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_10_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_13_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_16_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_33_Template","_r1","_r3","_r5","_r7","_r9","_r13","GridComponent","isDisabled","row_r14","ctx_r6","getDateFormatted","row_r17","ctx_r12","lookup","getColor","CONSOLIDACAO_STATUS","row_r19","getValue","PlanoTrabalhoConsolidacaoListComponent","items","consolidacoes","validate","title","code","agora","v","asDate","grid","expand","addConsolidacao","removeConsolidacao","saveConsolidacao","concluir","submitting","response","consolidacaoForm","refreshExpanded","message","cancelarConclusao","avaliar","editarAvaliacao","fazerRecurso","cancelarAvaliacao","isUsuarioConsolidacao","isGestor","gestor","gestor_substituto","BOTAO_CONCLUIR","hint","BOTAO_CANCELAR_CONCLUSAO","BOTAO_AVALIAR","BOTAO_EDITAR_AVALIACAO","BOTAO_FAZER_RECURSO","BOTAO_CANCELAR_AVALIACAO","diasParaConcluirConsolidacao","PlanoTrabalhoConsolidacaoListComponent_Query","PlanoTrabalhoConsolidacaoListComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_18_Template","_r11","TabsComponent","UnidadeDaoService","data_r13","url_foto","apelido","data_r14","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_1_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_3_Template","usuario_r8","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_div_2_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_Template","ɵɵtextInterpolate2","ctx_r5","sigla","usuarios","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_Template","ctx_r1","_r4","ctx_r3","arquivados","PlanoTrabalhoConsolidacaoComponent","loadingUnidade","unidadeDao","tabs","active","queryParams","tab","unidadeGestor","lotados","PlanoTrabalhoConsolidacaoComponent_Query","PlanoTrabalhoConsolidacaoComponent_tab_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_4_Template","isModal","_r2","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","numero_processo","formValidation","tipoDocumento","selectedEntity","tipo_documento_id","titleEdit","join","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","tempo_total","tempo_proporcional","programa_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","Promise","all","loadSearch","tipoModalidade","tipo_modalidade","processo","id_processo","hora","initializeData","saveData","resolve","reject","codigo_tipo_documento","codigo","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","formDisabled","ganho_produtividade","DocumentoService","TemplateService","ctx_r10","horasTotais","ctx_r11","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_16_Template_input_workload_change_2_listener","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_16_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_16_separator_6_Template","ɵɵelementContainerEnd","onFormaContagemCargaHorariaChange","ctx_r7","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","ctx_r9","needSign","extraTags","editingId","datasource","template_tcr","PlanoTrabalhoFormComponent","joinPrograma","documentoService","templateService","modalWidth","unidade_texto_complementar","usuario_texto_complementar","ngOnInit","segment","url","path","action","atualizarTcr","loadEntity","textoUsuario","textoUnidade","documento","template","isTermos","onUnidadeSelect","selected","entidade","texto_complementar_plano","onProgramaSelect","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","di","df","diaI","setDate","getDate","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","feriados","urlParams","carga_horaria_padrao","plano","fill","requests","responses","onTabSelect","documentoDynamicButtons","signDocumento","html","conteudo","sign","unit","isVigente","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_search_select_9_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_12_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_13_listener","PlanoTrabalhoFormComponent_ng_container_16_Template","PlanoTrabalhoFormComponent_top_alert_18_Template","PlanoTrabalhoFormComponent_div_19_Template","PlanoTrabalhoFormComponent_tab_20_Template","PlanoTrabalhoFormComponent_tab_21_Template","ɵɵpureFunction0","_c11","plano_trabalho_calcula_horas","checkFilled","_c12","_c13","item_r5","ctx_r2","PLANO_TRABALHO_STATUS","item_r6","PlanoTrabalhoListAccordeonComponent","_arquivados","viewInit","selectedIndex","planos","accordion","getByUsuario","usuarioId","i","PlanoTrabalhoListAccordeonComponent_Query","PlanoTrabalhoListAccordeonComponent_ng_template_2_Template","PlanoTrabalhoListAccordeonComponent_ng_template_4_Template","PlanoTrabalhoEntrega","PlanoTrabalhoEntregaDaoService","PlanoEntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","ctx_r27","orgao","PlanoTrabalhoListEntregaComponent_ng_template_8_badge_3_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_badge_4_Template","plano_entrega_entrega_id","PlanoTrabalhoListEntregaComponent_ng_template_10_input_search_2_Template_input_search_change_0_listener","onPlanoEntregaChange","_c3","_r32","ɵɵpureFunction1","_c5","_c4","_c7","_c6","planoEntregaDao","PlanoTrabalhoListEntregaComponent_ng_template_10_Template_input_select_change_0_listener","restoredCtx","_r40","row_r31","ctx_r39","onOrigemChange","PlanoTrabalhoListEntregaComponent_ng_template_10_input_search_2_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_input_text_3_Template","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","_c8","ctx_r43","PlanoTrabalhoListEntregaComponent_ng_template_15_div_2_Template","tipo","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template_input_select_change_0_listener","_r50","ctx_r49","onEntregaChange","ctx_r46","ctx_r47","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_div_1_Template","ctx_r14","totalForcaTrabalho","row_r52","PlanoTrabalhoListEntregaComponent_ng_template_24_Template_input_text_change_0_listener","_r55","row_r53","onForcaTrabalhoChange","ctx_r18","row_r57","ctx_r24","PlanoTrabalhoListEntregaComponent","gridControl","options","e","planoTrabalhoDao","peeDao","validateEntregas","planoInterval","start","end","entregaPlano","entregaDataFim","entregaInterval","intersection","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","novaEntrega","addEntrega","loadEntrega","carregarEntregas","removeEntrega","isNoPersist","saveEntrega","toString","reduce","idPlanoOuPlano","planoEntrega","planoEntregaComUnidade","epe","query","where","asPromise","onSelectClick","Event","index","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_24_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","PlanoTrabalhoListEntregaComponent_ng_template_31_Template","groupBy","_r15","_r19","_r21","_r23","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","BadgeComponent","i16","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}