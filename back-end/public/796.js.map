{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-atividade.model.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\nimport { Atividade } from './atividade.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoAtividade extends Base {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public atividade?: Atividade;\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public atividade_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\n\r\nexport type PlanoTrabalhoConsolidacaoStatus = 'CONCLUIDO' | 'AVALIADO' | 'INCLUIDO';\r\n\r\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao, HasStatus {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public avaliacao?: Avaliacao;\r\n\r\n    public data_inicio: Date = new Date();\r\n    public data_fim: Date = new Date();\r\n    public status: PlanoTrabalhoConsolidacaoStatus | null = null; // Status atual da consolidação\r\n    public avaliacoes: Avaliacao[] = [];\r\n    public status_historico: StatusJustificativa[] = [];\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public avaliacao_id: string | null = null;\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\r\nimport { Afastamento } from 'src/app/models/afastamento.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\n\r\nexport type ConsolidacaoEntrega = {\r\n  id: string,\r\n  entrega: PlanoTrabalhoEntrega,\r\n  atividades: Atividade[]\r\n};\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-form',\r\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridEntregas', { static: false }) public gridEntregas?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() planoTrabalho?: PlanoTrabalho;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\r\n\r\n  public consolidacaoOcorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public formAtividade: FormGroup;\r\n  public formOcorrencia: FormGroup;\r\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public tipoAtividadeDao: TipoAtividadeDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\r\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\r\n  public itemsAfastamentos: Afastamento[] = [];\r\n  \r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.consolidacaoOcorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.formAtividade = this.fh.FormBuilder({\r\n      esforco: { default: 0 },\r\n      realizado: { default: null },\r\n      descricao: { default: \"\" },\r\n      tipo_atividade: {default: null}\r\n    }, this.cdRef, this.validateEntrega);\r\n    this.formOcorrencia = this.fh.FormBuilder({\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      descricao: { default: \"\" }\r\n    }, this.cdRef, this.validateOcorrencia);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public validateEntrega = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia?.controls.data_inicio.value.getTime()) {\r\n        result = \"Menor que início\";\r\n    } \r\n    return result;\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.gridEntregas!.loading = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      let dados = await this.dao!.dadosConsolidacao(entity.id);\r\n      this.itemsEntregas = dados.entregas.map(x => {\r\n        return {\r\n          id: x.id,\r\n          entrega: x,\r\n          atividades: dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id)\r\n        };\r\n      });\r\n      this.itemsOcorrencias = dados.ocorrencias;\r\n      this.itemsAfastamentos = dados.afastamentos;\r\n    } finally {\r\n      this.gridEntregas!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public get hasEsforco(): boolean {\r\n    return !!this.planoTrabalho?.tipo_modalidade?.atividade_esforco;\r\n  }\r\n  \r\n  public get hasRealizado(): boolean {\r\n    return false;\r\n  }\r\n  \r\n  /***************************************************************************************\r\n  * Atividades \r\n  ****************************************************************************************/\r\n  public async addAtividade(entrega: PlanoTrabalhoEntrega) {\r\n    return new Atividade({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_consolidacao_id: this.entity!.id,\r\n      plano_trabalho_entrega_id: entrega.id\r\n    });\r\n  }\r\n\r\n  public async loadAtividade(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      esforco: row.esforco,\r\n      realizado: row.realizado,\r\n      descricao: row.descricao\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeAtividade(atividades: Atividade[], row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let atividade = row as Atividade;\r\n        await this.atividadeDao?.delete(atividade);\r\n        atividades.splice(atividades.findIndex(x => x.id == atividade.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveAtividade(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formAtividade.markAllAsTouched();\r\n    if (this.formAtividade!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.esforco = form.controls.esforco.value;\r\n      row.realizado = form.controls.esforco.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.atividadeDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_EDIT, {}));\r\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_DELETE, {}));\r\n    return result;\r\n  }  \r\n\r\n  /***************************************************************************************\r\n  * Ocorrências \r\n  ****************************************************************************************/\r\n  public async addOcorrencia() {\r\n    return new PlanoTrabalhoConsolidacaoOcorrencia({\r\n      plano_trabalho_consolidacao_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadOcorrencia(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim,\r\n      descricao: row.descricao\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeOcorrencia(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let ocorrencia = row as PlanoTrabalhoConsolidacaoOcorrencia;\r\n        await this.consolidacaoOcorrenciaDao?.delete(ocorrencia);\r\n        this.itemsOcorrencias.splice(this.itemsOcorrencias.findIndex(x => x.id == ocorrencia.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveOcorrencia(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formOcorrencia.markAllAsTouched();\r\n    if (this.formOcorrencia!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.consolidacaoOcorrenciaDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n}\r\n","<separator [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\r\n    <grid [items]=\"itemsEntregas\" #gridEntregas [minHeight]=\"0\" expanded>\r\n        <columns>\r\n            <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n                <ng-template let-row=\"row\" #columnConsolidacao>\r\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n                </ng-template>\r\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                    <grid [items]=\"row.atividades\" [minHeight]=\"0\" #gridAtividade [form]=\"formAtividade\" [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                        [add]=\"addAtividade.bind(this, row.entrega)\" [load]=\"loadAtividade.bind(this)\" [remove]=\"removeAtividade.bind(this, row.atividades)\" [save]=\"saveAtividade.bind(this)\" editable>\r\n                        <columns>\r\n                            <column [title]=\"lex.translate('Atividade')\" [template]=\"columnAtividade\" [editTemplate]=\"columnAtividadeEdit\">\r\n                                <ng-template let-row=\"row\" #columnAtividade>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <small class=\"micro-text fw-ligh\">#{{row.numero}}</small><br>\r\n                                            <badge color=\"success\" label=\"TODO\"></badge>\r\n                                            <!-- TODO: Por status!-->\r\n                                            <!-- badge *ngFor=\"let status of atividadeService.getStatus(row)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\" [click]=\"status.data?.filter ? onStatusClick.bind(this) : undefined\"></badge//-->\r\n                                        </div>\r\n                                        <div class=\"col-md-3 one-per-line\">\r\n                                            <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n                                            <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n                                        </div>\r\n                                        <div class=\"col-md-2 one-per-line\">\r\n                                            <!-- TODO: Por tempos //-->\r\n                                            <badge color=\"primary\" label=\"TODO\"></badge>\r\n                                            <!-- badge *ngFor=\"let tempo of temposAtividade(row)\" [badge]=\"tempo\"></badge /-->\r\n                                            <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <small *ngIf=\"row.atividade\" class=\"atividade-atividade\"><strong>{{row.tipo_atividade.nome || \"\"}}</strong><br></small>\r\n                                            <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                                <ng-template let-row=\"row\" #columnAtividadeEdit>\r\n                                    <div class=\"row\">\r\n                                        <div *ngIf=\"hasEsforco || hasRealizado\" class=\"col-md-4\">\r\n                                            <input-timer *ngIf=\"hasEsforco\" onlyHours icon=\"bi bi-stopwatch\" [label]=\"lex.translate('Esforço')\" [control]=\"formAtividade.controls.esforco\" labelInfo=\"Tempo em horas da execução da atividade\"></input-timer>\r\n                                            <!--plano-entrega-indicador-valor [entrega]=\"row.entrega\" [size]=\"12\" [control]=\"formAtividade.controls.realizado\"></plano-entrega-indicador-valor/-->\r\n                                        </div>\r\n                                        <div [class]=\"(hasEsforco || hasRealizado ? 'col-md-8' : 'col-md-12') + ' row'\">\r\n                                            <input-search [label]=\"lex.translate('Tipo de Atividade')\" #tipoAtividade [emptyValue]=\"null\" [control]=\"formAtividade.controls.tipo_atividade_id\" [dao]=\"tipoAtividadeDao\"></input-search>\r\n                                            <input-textarea [rows]=\"5\" label=\"Descriçao\" [control]=\"formAtividade.controls.descricao\"></input-textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column type=\"options\" [dynamicButtons]=\"atividadeDynamicButtons.bind(this)\"></column>\r\n                        </columns>\r\n                    </grid>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Origem\" [template]=\"columnOrigem\" [width]=\"200\">\r\n                <ng-template let-row=\"row\" #columnOrigem>\r\n                    <badge [title]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row.entrega, planoTrabalho).cor\"></badge>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                <ng-template let-row=\"row\" #columnEntrega>\r\n                    <small>{{ planoTrabalhoService.tipoEntrega(row).nome }}</small>\r\n                </ng-template>\r\n            </column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Ocorrências')\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\">\r\n    <grid [items]=\"itemsOcorrencias\" [minHeight]=\"0\" #gridOcorrencia [form]=\"formOcorrencia\" [hasDelete]=\"true\" \r\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \r\n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\r\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Afastamentos')\" [icon]=\"entityService.getIcon('Afastamento')\">\r\n    <grid [items]=\"itemsAfastamentos\" [minHeight]=\"0\" #gridAfastamento>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\r\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\r\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\r\n                    {{row.observacao}}\r\n                </ng-template>\r\n            </column>\r\n            <!--column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column/-->\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-list',\r\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageFrameBase {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n\r\n  public get items(): PlanoTrabalhoConsolidacao[] {\r\n    return this.entity?.consolidacoes || [];\r\n  }\r\n\r\n  public dao?: PlanoTrabalhoConsolidacaoDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    /* Inicializações */\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.title = this.lex.translate(\"Consolidações\");\r\n    this.code = \"MOD_PTR_CSLD\";\r\n    this.form = this.fh.FormBuilder({\r\n      'data_inicio': {default: new Date()},\r\n      'data_fim': {default: new Date()}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    // TODO: Validar data\r\n    return result;\r\n  }\r\n\r\n  public async addConsolidacao() {\r\n    return new PlanoTrabalhoConsolidacao({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadConsolidacao(form: FormGroup, row: any) {\r\n    this.form!.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim\r\n    });    \r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeConsolidacao(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let consolidacao = row as PlanoTrabalhoConsolidacao;\r\n        await this.dao?.delete(consolidacao);\r\n        this.items.splice(this.items.findIndex(x => x.id == consolidacao.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveConsolidacao(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      result = await this.dao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n}\r\n","<grid [items]=\"items\" #grid [form]=\"form!\" [hasDelete]=\"true\" [minHeight]=\"0\"\r\n    [add]=\"addConsolidacao.bind(this)\" [hasAdd]=\"true\" [hasEdit]=\"false\" [hasDelete]=\"false\" editable>\r\n<!--\r\n    [load]=\"loadConsolidacao.bind(this)\" [remove]=\"removeConsolidacao.bind(this)\" [save]=\"saveConsolidacao.bind(this)\" \r\n-->\r\n    <columns>\r\n        <column type=\"expand\" icon=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n            <ng-template let-row=\"row\" #columnConsolidacao>\r\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                <plano-trabalho-consolidacao-form #consolidacao [entity]=\"row\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data início\" [template]=\"columnDataInicio\">\r\n            <ng-template let-row=\"row\" #columnDataInicio>\r\n                {{util.getDateFormatted(row.data_inicio)}}\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\r\n            <ng-template let-row=\"row\" #columnDataFim>\r\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\r\n            <ng-template let-row=\"row\" #columnEstatisticas>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status)\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicButtons]=\"dynamicButtons\"></column>\r\n    </columns>\r\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageBase } from 'src/app/modules/base/page-base';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-consolidacao',\r\n  templateUrl: './plano-trabalho-consolidacao.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoComponent extends PageFrameBase {\r\n  @ViewChild(TabsComponent, { static: false }) public tabs?: TabsComponent;\r\n\r\n  public usuarios: Usuario[] = [];\r\n  public unidade?: Unidade;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public loadingUnidade: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      arquivados: { default: false }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    this.tabs!.active = this.queryParams?.tab || \"USUARIO\";\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.unidade = this.auth.unidadeGestor();\r\n    if(this.unidade) {\r\n      this.usuarios = [];\r\n      this.loadingUnidade = true;\r\n      this.cdRef.detectChanges()\r\n      try {\r\n        this.usuarios = await this.unidadeDao.lotados(this.unidade.id);\r\n      } finally {\r\n        this.loadingUnidade = false;\r\n        this.cdRef.detectChanges()\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<tabs right #tabs [title]=\"isModal ? '' : title\">\r\n    <tab key=\"UNIDADE\" *ngIf=\"unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\r\n        <ng-template #tabUnidade>\r\n            <h5>{{unidade.sigla}} - {{unidade.nome}}</h5>\r\n            <div *ngIf=\"loading\" class=\"d-flex justify-content-center my-2\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\"></span>\r\n                </div>\r\n            </div>\r\n            <collapse-card *ngFor=\"let usuario of usuarios\" [data]=\"usuario\" [titleTemplate]=\"usuarioCardTitle\" [template]=\"usuarioCard\">\r\n                <ng-template let-data=\"data\" #usuarioCardTitle>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <profile-picture [url]=\"data.url_foto\" [size]=\"40\" [hint]=\"data.nome\"></profile-picture>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <strong>{{data.nome || \"\"}}</strong><br>\r\n                            <small>{{data.apelido || \"\"}}</small>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template let-data=\"data\" #usuarioCard>\r\n                    <plano-trabalho-list-accordeon [usuarioId]=\"data.id\"></plano-trabalho-list-accordeon>\r\n                </ng-template>\r\n            </collapse-card>\r\n        </ng-template>\r\n    </tab>\r\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\r\n        <ng-template #tabUsuario>\r\n            <separator [control]=\"this.form!.controls.arquivados\" [title]=\"'Mostrar ' + lex.translate('Planos de trabalho') + ' arquivados?'\"></separator>\r\n            <plano-trabalho-list-accordeon [usuarioId]=\"auth.usuario!.id\"></plano-trabalho-list-accordeon>\r\n        </ng-template>\r\n    </tab>\r\n</tabs>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form-termo',\r\n  templateUrl: './plano-trabalho-form-termo.component.html',\r\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public processo?: SeiKeys;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio: {default: new Date()},\r\n      data_fim: {default: new Date()},\r\n      programa_id: {default: \"\"},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      documento_id: {default: \"\"},\r\n      documentos: {default: []},\r\n      tipo_documento_id: {default: \"\"},\r\n      numero_processo: {default: \"\"},\r\n      vinculadas: {default: true},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(!this.tipoDocumento?.selectedEntity && form?.controls.tipo_documento_id.value?.length) {\r\n      return \"Aguarde o carregamento do tipo de documento\";\r\n    }\r\n    return undefined;\r\n  } \r\n\r\n  public onVinculadasChange(event: Event) {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    await Promise.all ([\r\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    if(this.processo) {\r\n      formValue.id_processo = this.processo.id_processo;\r\n      formValue.numero_processo = this.processo.numero_processo;\r\n    }\r\n    formValue.data_inicio = this.auth.hora;\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\r\n    this.processo = this.metadata?.processo;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\r\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\r\n      //if(this.processo) {\r\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\r\n        /* TODO Gerar documento do TCR\r\n        termo: this.termo!.conteudo,\r\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\r\n        codigo_tipo_documento: (this.tipoDocumento?.selectedEntity as TipoDocumento)?.codigo\r\n      })));\r\n      /*} else {\r\n        const documento = Object.assign(new Documento(), {\r\n          especie: \"TERMO_ADESAO\",\r\n          conteudo: this.termo!.conteudo,\r\n          plano_id: this.entity!.id,\r\n          status: \"GERADO\"\r\n        });\r\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\r\n        <div class=\"row\">\r\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\r\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\r\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\r\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\r\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\r\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\r\n        </div>\r\n    </separator>\r\n    <div class=\"row\">\r\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\r\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\r\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\"></input-search>\r\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\r\n    </div>\r\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\r\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\r\n    </separator/-->\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoAtividade } from 'src/app/models/plano-trabalho-atividade.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form',\r\n  templateUrl: './plano-trabalho-form.component.html',\r\n  styleUrls: ['./plano-trabalho-form.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\r\n\r\n  public formAtividades: FormGroup;\r\n  public formEntregas: FormGroup;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public templateService: TemplateService;\r\n  public allPages: ListenerAllPagesService;\r\n  public calendar: CalendarService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public horasTotais?: Efemerides;\r\n  public horasParciais?: Efemerides;\r\n  public planoDataset: TemplateDataset[];\r\n  public documentoId?: string;\r\n  public entregas: LookupItem[] = [];\r\n\r\n  private _datasource: any;\r\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"atividades.atividade\", \"entregas.plano_entrega_entrega.entrega\"];\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.templateService = injector.get<TemplateService>(TemplateService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.modalWidth = 1200;\r\n    this.planoDataset = this.dao!.dataset();\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio: {default: new Date()},\r\n      data_fim: {default: new Date()},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      programa_id: {default: \"\"},\r\n      documento_id: {default: null},\r\n      documentos: {default: []},\r\n      atividades: {default: []},\r\n      entregas: {default: []},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"},\r\n      editar_texto_complementar_unidade: {default: false},\r\n      editar_texto_complementar_usuario: {default: false},\r\n      unidade_texto_complementar: {default: \"\"},\r\n      usuario_texto_complementar: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    this.formAtividades = this.fh.FormBuilder({\r\n      atividade_id: {default: \"\"}\r\n    }, this.cdRef, this.validateAtividades);\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      entrega_id: {default: \"\"}\r\n    }, this.cdRef, this.validateEntregas);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\r\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\r\n  }\r\n\r\n  public get datasource(): any {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    let data = this.dao!.datasource(this._entityDocumentos);\r\n    let programa = this.programa?.selectedEntity as Programa;\r\n    /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\r\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\r\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\r\n      this._datasource = data;\r\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente */\r\n      this.documentoId = undefined;\r\n      if(programa?.termo_obrigatorio) {\r\n        this.documentoId = this.form!.controls.documento_id.value;\r\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\r\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\r\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          this.documentoId = this.dao?.generateUuid(),\r\n          documentos.push(new Documento({\r\n            id: this.documentoId, \r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(programa.template_tcr?.conteudo || \"\", this._datasource),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: programa.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: this._datasource,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: this.entity?.id,\r\n            template_id: programa.template_tcr_id\r\n          }));\r\n          this.form!.controls.documento_id.setValue(this.documentoId);\r\n          this.form!.controls.documentos.setValue(documentos);\r\n        }\r\n      }\r\n    }\r\n    return this._datasource;\r\n  }\r\n\r\n  public get template(): Template | undefined {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\r\n    return this.planoTrabalhoService.template(this._entityDocumentos);\r\n  }\r\n\r\n  public get isTermos(): boolean {\r\n    return this.action == \"termos\";\r\n  }\r\n\r\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'atividade_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'entrega_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['unidade_id', 'programa_id', 'usuario_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\r\n      result = \"Valor não pode ser zero.\";\r\n    } \r\n    if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(this.programa && controlName == 'data_inicio' && (control.value as Date).getTime() < this.programa!.selectedEntity?.data_inicio.getTime()) {\r\n      result = \"Menor que programa\";\r\n    } else if(this.programa && controlName == 'data_fim' && (control.value as Date).getTime() > this.programa!.selectedEntity?.data_fim.getTime()) {\r\n      result = \"Maior que programa\";\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    // Validar se as entregas pertencem ao plano de entregas da unidade\r\n    // Validar se o usuários está habilitado no programa\r\n    // Validar o período está dentro do plano de entregas\r\n\r\n\r\n    return undefined;\r\n  };\r\n\r\n  /*public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\r\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\r\n  }*/\r\n\r\n  public onUnidadeSelect(selected: SelectItem) {\r\n    let unidade = this.unidade?.selectedEntity as Unidade;\r\n    this.entity!.unidade = unidade;\r\n    this.entity!.unidade_id = unidade.id;\r\n  }\r\n\r\n  public onProgramaSelect(selected: SelectItem) {\r\n    let programa = selected.entity as Programa;\r\n    let unidade = this.unidade?.selectedEntity as Unidade;\r\n    //this.updateEntregas(planoEntrega);\r\n    this.entity!.programa_id = programa.id;\r\n    this.entity!.programa = programa;\r\n    this.form?.controls.data_inicio.updateValueAndValidity();\r\n    this.form?.controls.data_fim.updateValueAndValidity();\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\r\n    this.form!.controls.unidade_texto_complementar.setValue(unidade?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onUsuarioSelect(selected: SelectItem) {\r\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onDataInicioChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onDataFimChange(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onCargaHorariaChenge(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public calculaTempos() {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const carga = this.form?.controls.carga_horaria.value || 8;\r\n    const usuario = this.usuario?.selectedEntity as Usuario;\r\n    const unidade = this.unidade?.selectedEntity as Unidade;\r\n    if(usuario && unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\r\n      this.calendar.loadFeriadosCadastrados(unidade.id).then((feriados) => {\r\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], []);\r\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], usuario.afastamentos);\r\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\r\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    await Promise.all([\r\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\r\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.unidade?.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.programa?.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id),\r\n    ]);\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    let documento = entity.documentos.find(x => x.id == entity.documento_id);\r\n    if(documento) this._datasource = documento.datasource;\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    if(this.isTermos) {\r\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\r\n    } else {\r\n      this.entity = new PlanoTrabalho();\r\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\r\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    }\r\n    await this.loadData(this.entity, this.form!);\r\n  }\r\n\r\n  /* Atividades */  \r\n  public async addAtividades() {\r\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadAtividades(form: FormGroup, row: any) {\r\n    form.controls.atividade_id.setValue(row.atividade_id);\r\n  }\r\n\r\n  public async removeAtividades(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveAtividades(form: FormGroup, row: any) {\r\n    row.atividade_id = form.controls.atividade_id.value;\r\n    row.atividade = this.atividade?.selectedEntity as Atividade;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\r\n    try {\r\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\r\n    } finally {\r\n      this.dialog.closeSppinerOverlay();\r\n    }*/\r\n    return row;\r\n  }\r\n\r\n  /* Entregas */\r\n  public async addEntregas() {\r\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadEntregas(form: FormGroup, row: any) {\r\n    form.controls.entrega_id.setValue(row.entrega_id);\r\n    form.controls.nome.setValue(row.nome);\r\n  }\r\n\r\n  public async removeEntregas(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveEntregas(form: FormGroup, row: any) {\r\n    row.entrega_id = form.controls.entrega_id.value;\r\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\r\n    row.nome = form.controls.nome.value;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    return row;\r\n  }\r\n\r\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos */\r\n  public get entityDocumentos(): PlanoTrabalho {\r\n    let plano = this.loadEntity();\r\n    /* Remove campo de documentos para comparar */\r\n    plano.documentos = [];\r\n    this._entityDocumentos.documentos = [];\r\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\r\n      this._entityDocumentos = plano;  \r\n    }\r\n    /* Atribui novamente o campo de documentos */\r\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\r\n    return this._entityDocumentos;\r\n  }\r\n\r\n  /* Cria um objeto Plano baseado nos dados do formulário */\r\n  public loadEntity(): PlanoTrabalho {\r\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\r\n    plano = this.util.fillForm(plano, this.form!.value);\r\n    plano.usuario = this.usuario!.selectedEntity as Usuario;\r\n    plano.unidade = (this.entity?.unidade || this.unidade?.selectItem) as Unidade;\r\n    plano.programa = (this.entity?.programa || this.programa?.selectItem) as Programa;\r\n    plano.tipo_modalidade = this.tipoModalidade!.selectedEntity as TipoModalidade;\r\n    return plano;\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\r\n    let plano = this.loadEntity();\r\n    /* Confirma dados do documento */\r\n    this.documentos?.saveData();\r\n    plano.documentos = plano.documentos.filter((documento: Documento) => {\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\")\r\n    });\r\n    /* Salva separadamente as informações do plano */\r\n    this.submitting = true;\r\n    try {\r\n      this.entity = await this.dao!.save(plano);\r\n      if(this.form!.controls.editar_texto_complementar_unidade.value) {\r\n        await this.unidadeDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value});\r\n      }\r\n      if(this.form!.controls.editar_texto_complementar_usuario.value) {\r\n        await this.usuarioDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value});\r\n      }\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\r\n  }\r\n\r\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let documento: Documento = row as Documento;\r\n\r\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\r\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\r\n    }\r\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\r\n\r\n    return result;\r\n  }\r\n\r\n  /*public needSign(documento: Documento): boolean {\r\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.selectedEntity as TipoModalidade);\r\n    const usuario = this.entity!.usuario!; // (this.usuario?.selectedEntity as Usuario);\r\n    const unidade = this.entity!.unidade!; // (this.unidade?.selectedEntity as Unidade);\r\n    const entidade = unidade?.entidade;\r\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n    let ids: string[] = [];\r\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n  }*/\r\n\r\n  public async signDocumento(documento: Documento) {\r\n    await this.documentoService.sign([documento]);\r\n    this.cdRef.detectChanges();\r\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\r\n      if(response) {\r\n        this.loading = true;\r\n        this.documentoDao.assinar([documento.id]).then(response => {\r\n          if(response?.length) {\r\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n            let found = documentos.find(x => x.id == documento?.id);\r\n            if(found) found.assinaturas = response[0].assinaturas;\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.gridDocumentos?.reset();\r\n          }\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    //const forma = (this.unidade?.selectedEntity as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    //console.log(\"FORMA: \", (this.unidade?.selectedEntity as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\r\n  }\r\n\r\n  public async addDocumento() {\r\n    const documento = new Documento();\r\n    documento.id = this.dao!.generateUuid();\r\n    documento.plano_trabalho_id = this.entity!.id;\r\n    documento.especie = \"TCR\";\r\n    documento._status = \"ADD\";\r\n    this.go.navigate({route: ['gestao', 'plano-trabalho', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\r\n      if(modalResult) {\r\n        (async () => {\r\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n          if(this.isTermos) {\r\n            this.clearErros();\r\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n            try {\r\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\r\n                especie: \"TCR\",\r\n                conteudo: modalResult?.termo,\r\n                plano_trabalho_id: this.entity!.id,\r\n                status: \"GERADO\"\r\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\r\n            } catch (error: any) {\r\n              this.error(error.message ? error.message : error);\r\n              modalResult = undefined;\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          }\r\n          if(modalResult) {\r\n            documentos.push(modalResult);\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\r\n            await this.initializeData(this.form!);\r\n            this.dialog.closeSppinerOverlay();\r\n          }\r\n          this.cdRef.detectChanges();\r\n        })();\r\n      }\r\n    }});\r\n    return undefined;\r\n  }\r\n\r\n  public isVigente(documento: Documento): boolean {\r\n    return this.form!.controls.documento_id.value == documento.id;\r\n  }\r\n\r\n  public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"DADOS\" label=\"Dados\">\r\n            <div class=\"row\">\r\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de unidade, programa e usuario devem ficar desabilitados nas edições e habilitado apenas nas inclusões; -->\r\n                <input-search #unidade [size]=\"4\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (select)=\"onUnidadeSelect($event)\"></input-search>\r\n                <input-search #programa [size]=\"4\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"programa_id\" [dao]=\"programaDao\" (select)=\"onProgramaSelect($event)\"></input-search>\r\n                <input-search #usuario [size]=\"4\" controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"></input-datetime>\r\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            </div>\r\n            <ng-container *ngIf=\"tipoModalidade!.selectedEntity?.plano_trabalho_calcula_horas\">\r\n                <div class=\"row\">\r\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"></input-workload>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\r\n                </div>\r\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\r\n                </separator>\r\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\r\n                </separator>\r\n            </ng-container>\r\n            <separator [title]=\"lex.translate('Entregas') + lex.translate('do plano de trabalho')\">\r\n                <top-alert *ngIf=\"!form!.controls.programa_id.value?.length || !form!.controls.unidade_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar ' + lex.translate('a Unidade') + ' e ' + lex.translate('o Programa') + '!'\"></top-alert>\r\n                <div *ngIf=\"form!.controls.programa_id.value?.length && form!.controls.unidade_id.value?.length\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\"></plano-trabalho-list-entrega>\r\n                    <!-- Pra que esse form?\r\n                        editable-form [form]=\"formEntregas!\" noMargin [noButtons]=\"'true'\">\r\n                        <plano-trabalho-list-entrega noPersist [entity]=\"entity\"></plano-trabalho-list-entrega>\r\n                    </editable-form/-->\r\n                </div>\r\n            </separator>\r\n        </tab>\r\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\r\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                </editable-form>\r\n            </div>\r\n        </tab//-->\r\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\r\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\r\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\r\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n            <separator title=\"Texto complementar do usuario\">\r\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\r\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\r\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\r\n            <div clss=\"row\">\r\n                <documentos #documentos [entity]=\"entityDocumentos\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \r\n                    [editingId]=\"documentoId\" [datasource]=\"datasource\" [template]=\"template\"></documentos>\r\n                <!--grid [control]=\"form!.controls.documentos\" #gridDocumentos [disabled]=\"undefined\" #documentos [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"isTermos\" [add]=\"isTermos ? addDocumento.bind(this) : undefined\" editable>\r\n                    <columns>\r\n                        <column title=\"Data\" [template]=\"dataInicio\">\r\n                            <ng-template let-row=\"row\" #dataInicio>\r\n                                <span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data da inclusão\">\r\n                                    <i class=\"bi bi-calendar-plus\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_inicio)}}\r\n                                </span>\r\n                                <span *ngIf=\"row.data_fim\" class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data substituição\">\r\n                                    <i class=\"bi bi-calendar-x\"></i>\r\n                                    {{util.getDateTimeFormatted(row.data_fim)}}\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Documento Sei\" [template]=\"documento\">\r\n                            <ng-template let-row=\"row\" #documento>\r\n                                <span *ngIf=\"row.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.numero_processo, row.numero_documento)\">\r\n                                    <i [class]=\"'bi ' + (row.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                                    {{row.numero_processo?.length ? row.numero_processo : \"Não atribuído\"}}\r\n                                    <small *ngIf=\"row.numero_documento?.length\"><br>Sei nº {{row.numero_documento}}</small>\r\n                                </span>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column title=\"Status\" [template]=\"vigente\">\r\n                            <ng-template let-row=\"row\" #vigente>\r\n                                <badge [color]=\"lookup.getColor(lookup.DOCUMENTO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.DOCUMENTO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.DOCUMENTO_STATUS, row.status)\"></badge>\r\n                                <span *ngIf=\"isVigente(row)\" class=\"badge rounded-pill bg-info text-dark\">\r\n                                    <i class=\"bi bi-clipboard-check\"></i>\r\n                                    Vigente\r\n                                </span>\r\n                                <div class=\"d-block\">\r\n                                    <span *ngFor=\"let assinatura of row.assinaturas\" class=\"badge rounded-pill bg-primary\">\r\n                                        <i class=\"bi bi-pen\"></i>\r\n                                        {{util.apelidoOuNome(assinatura.usuario)}}\r\n                                    </span>\r\n                                </div>\r\n                            </ng-template>\r\n                        </column>\r\n                        <column type=\"options\" [dynamicButtons]=\"documentoDynamicButtons.bind(this)\"></column>\r\n                    </columns>\r\n                </grid//-->\r\n            </div>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-accordeon',\r\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\r\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\r\n})\r\nexport class PlanoTrabalhoListAccordeonComponent extends PageFrameBase {\r\n  @ViewChild('accordion', { static: false }) public accordion?: AccordionComponent;\r\n  @Input() usuarioId?: string;\r\n  @Input() arquivados: boolean = false;\r\n\r\n  public dao?: PlanoTrabalhoDaoService;\r\n  public planos: PlanoTrabalho[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.accordion!.loading = true;\r\n    try {\r\n      let dados = await this.dao!.getByUsuario(this.usuarioId!, this.arquivados);\r\n      this.planos = dados.planos;\r\n    } finally {\r\n      this.accordion!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","<accordion #accordion [items]=\"planos\" [titleTemplate]=\"planoTrabalhoSectionTitle\" [template]=\"planoTrabalhoSection\">\r\n    <ng-template let-item=\"item\" #planoTrabalhoSectionTitle>\r\n        <div class=\"row w-100\">\r\n            <div class=\"col-md-1\">{{'#' + item.numero}}</div>\r\n            <div class=\"col-md-5\">\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"item.unidade?.sigla\" color=\"light\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"item.programa?.nome\" color=\"light\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('TipoModalidade')\" [label]=\"item.tipo_modalidade?.nome\" color=\"light\"></badge>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                {{dao!.getDateFormatted(item.data_inicio)+\" até \"+dao!.getDateFormatted(item.data_fim)}}\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <badge color=\"danger\" label=\"STATUS\"></badge>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template let-item=\"item\" #planoTrabalhoSection>\r\n        <plano-trabalho-consolidacao-list [entity]=\"item\"></plano-trabalho-consolidacao-list>\r\n    </ng-template>\r\n</accordion>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-entrega',\r\n  templateUrl: './plano-trabalho-list-entrega.component.html',\r\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\r\n})\r\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() cdRef: ChangeDetectorRef;\r\n\r\n  public get items(): PlanoTrabalhoEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\r\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\r\n    return this.gridControl.value.entregas;\r\n  }\r\n  public options: ToolbarButton[] = [];\r\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\r\n  public planoEntregaDao?: PlanoEntregaDaoService;\r\n  public peeDao?: PlanoEntregaEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public totalForcaTrabalho: number = 0;\r\n  public entregas: LookupItem[] = [];\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\", \"plano_entrega_entrega.plano_entrega:id,unidade_id\", \"plano_entrega_entrega.plano_entrega.unidade:id,sigla\"];\r\n    this.form = this.fh.FormBuilder({\r\n      origem: { default: null },\r\n      orgao: { default: null },\r\n      descricao: { default: \"\" },\r\n      forca_trabalho: { default: 1 },\r\n      plano_trabalho_id: { default: null },\r\n      plano_entrega_id: { default: null },\r\n      plano_entrega_entrega_id: { default: null }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\r\n   * @param control \r\n   * @param controlName \r\n   * @returns \r\n   */\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\r\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\r\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\r\n      if (['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Obrigatório!\";\r\n      if (!!this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)) result = \"Esta entrega está em duplicidade!\"; /* (*2) */\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas(): string | undefined {\r\n    let planoInterval = {start: this.entity!.data_inicio, end: this.entity!.data_fim};\r\n    for(let entrega of this.items) {\r\n      let entregaPlano = entrega.plano_entrega_entrega;\r\n      // valida as datas das entregas quando vinculado a uma entrega do plano de entrega\r\n      if(entregaPlano) {\r\n        let entregaDataFim = entregaPlano!.data_fim ? entregaPlano!.data_fim : (entregaPlano!.data_inicio.getTime() <= this.entity!.data_fim.getTime() ? this.entity!.data_fim : undefined);\r\n        let entregaInterval = {start: entregaPlano!.data_inicio, end: entregaPlano!.data_fim || entregaPlano!.data_inicio};\r\n        if(!entregaDataFim || !this.util.intersection([entregaInterval, planoInterval])) {\r\n          return this.lex.translate(\"Entrega\") + \" \" + entregaPlano!.descricao + \" possui datas incompatíveis (início \" + \r\n            this.util.getDateFormatted(entregaPlano!.data_inicio) + (entregaPlano!.data_fim ? \"e fim \" + this.util.getDateFormatted(entregaPlano!.data_fim) : \"\") + \")\";\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\r\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\r\n   */\r\n  async ngOnInit() {\r\n    super.ngOnInit();\r\n    this.entity = this.metadata?.entity || this.entity;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.novaEntrega = undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\r\n   * @returns \r\n   */\r\n  public async addEntrega() {\r\n    return Object.assign(new PlanoTrabalhoEntrega(), {\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  /**\r\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\r\n   * @param form \r\n   * @param row \r\n   */\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    let entrega: PlanoTrabalhoEntrega = row;\r\n    form.controls.descricao.setValue(row.descricao);\r\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\r\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\r\n    form.controls.plano_entrega_entrega_id.setValue(null);\r\n    form.controls.orgao.setValue(null);\r\n    if (entrega._status == \"ADD\") { // É uma nova entrega\r\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\r\n    } else if (entrega.plano_entrega_entrega?.plano_entrega?.unidade_id == this.entity!.unidade_id) {\r\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\r\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\r\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\r\n    } else if (entrega.plano_entrega_entrega) {\r\n      form.controls.origem.setValue('OUTRA_UNIDADE');\r\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\r\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\r\n    } else if (!!entrega.orgao?.length) { \r\n      form.controls.origem.setValue('OUTRO_ORGAO');\r\n      form.controls.orgao.setValue(entrega.orgao);\r\n    } else {\r\n      form.controls.origem.setValue('SEM_ENTREGA');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async removeEntrega(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      this.loading = true;\r\n      try {\r\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\r\n      return this.isNoPersist ? false : true; // (*3)\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\r\n   * @param form \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\r\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\r\n    this.entity!._metadata.novaEntrega.orgao = this.form?.controls.orgao.value;\r\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\r\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.loading = true;\r\n    try {\r\n      if (!this.isNoPersist) {\r\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\r\n        // TODO: Verificar isso (Foi feito uma modificação no grid para isso não ser mais necessário)\r\n        // if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\r\n      }\r\n    } catch (e: any) {\r\n      this.error(e.message ? e.message : e.toString() || e);\r\n    } finally {\r\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entrega?.selectedItem?.data || null;\r\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\r\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n      this.loading = false;\r\n    }\r\n    return this.entity!._metadata.novaEntrega;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\r\n   * @param entregas Array de entregas do plano de trabalho\r\n   * @returns \r\n   */\r\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas da unidade\r\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\r\n   */\r\n  public async carregarEntregas(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\r\n    let planoEntrega = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega:id,nome\", \"unidade\"]) : idPlanoOuPlano;\r\n    let planoEntregaComUnidade = {id: planoEntrega?.id, unidade_id: planoEntrega?.unidade_id, unidade: planoEntrega?.unidade};\r\n    this.entregas = planoEntrega?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: Object.assign(epe, {plano_entrega: planoEntregaComUnidade}) })) || [];\r\n    if(!this.entregas.find(x => x.key == this.form!.controls.plano_entrega_entrega_id.value)) this.form!.controls.plano_entrega_entrega_id.setValue(null);\r\n  }\r\n\r\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\r\n\r\n  public async onOrigemChange(row: any) {\r\n    let value = this.form!.controls.origem.value;\r\n    this.cdRef.detectChanges();\r\n    if (value == 'OUTRO_ORGAO') {\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if(value == 'SEM_ENTREGA') {\r\n      this.form?.controls.orgao.setValue(null);\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    } if (value == 'PROPRIA_UNIDADE') {\r\n      this.form?.controls.orgao.setValue(null);\r\n      this.loading = true;\r\n      try {\r\n        let planosEntregas = await this.planoEntregaDao!.query({where: [[\"unidade_id\", \"==\", this.entity!.unidade_id], [\"status\", \"==\", \"ATIVO\"], [\"data_inicio\", \"<=\", this.entity!.data_fim], [\"data_fim\", \">=\", this.entity!.data_inicio]]}).asPromise();\r\n        if(planosEntregas.length == 1) {\r\n          this.form?.controls.plano_entrega_id.setValue(planosEntregas[0].id);\r\n        } else if(this.planoEntrega?.selectedEntity?.unidade_id != this.entity!.unidade_id) {\r\n          this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    } if (value == 'OUTRA_UNIDADE') {\r\n      this.form?.controls.orgao.setValue(null);\r\n      this.entrega?.onSearchClick(this.entrega?.searchRoute);\r\n    }\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event) {\r\n    let planoEntrega = this.planoEntrega?.selectedEntity as PlanoEntrega;\r\n    this.carregarEntregas(planoEntrega);\r\n  }\r\n\r\n  public onForcaTrabalhoChange(row: any) {\r\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\r\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\r\n  }\r\n}\r\n\r\n/*\r\nTESTES\r\n\r\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\r\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\r\nInclusão Entrega Catálogo                          \r\nInclusão Entrega Mesma Unidade                     \r\nInclusão Entrega Outra Unidade                     \r\nAlteração Entrega Catálogo                         \r\nAlteração Entrega Mesma Unidade                    \r\nAlteração Entrega Outra Unidade                    \r\nCancelamento Entrega Catálogo                      \r\nCancelamento Entrega Mesma Unidade                 \r\nCancelamento Entrega Outra Unidade                 \r\nExclusão Entrega Catálogo                          \r\nExclusão Entrega Mesma Unidade                     \r\nExclusão Entrega Outra Unidade                     \r\n\r\n*/\r\n\r\n/*\r\nOBSERVAÇÕES:\r\n\r\n(*2)  this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)\r\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\r\njá existe no grid.\r\n\r\n(*3)  return this.isNoPersist ? false : true;\r\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\r\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\r\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\r\n\r\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\r\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\r\n\r\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\r\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\r\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\r\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\r\n\r\n\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \r\nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\r\n                      |   (foi carregada junto com o Plano)  |                            |        |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\r\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\r\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\r\n                      |                                      |                            | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \r\n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n                      +--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\r\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\r\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\r\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\r\n                      |                                      | addEntrega loadEntrega     | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\r\n                      |   já está sendo editada              | loadEntrega                | três   |\r\n------------------------------------------------------------------------------------------+--------+------------------------------------\r\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\r\n\r\n*/","<editable-form noButtons noMargin [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row m-0 p-0\">\r\n        <grid [items]=\"items\" [form]=\"form!\" noMargin #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\r\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\r\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\r\n            <columns>\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnOrigem>\r\n                        <div class=\"one-per-line w-100\">\r\n                            <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\r\n                            <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\r\n                            <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editOrigem>\r\n                        <input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select>\r\n                        <input-search *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" label #planoEntrega [placeholder]=\"'Selecione o ' + lex.translate('Plano de entrega')\" [join]=\"['entregas.entrega:id,nome', 'unidade']\" [where]=\"origem?.value == 'PROPRIA_UNIDADE' ? [['unidade_id', '==', entity?.unidade_id]] : undefined\" [selectParams]=\"origem?.value == 'PROPRIA_UNIDADE' ? {filter: {unidade_id: entity?.unidade_id}} : undefined\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" (change)=\"onPlanoEntregaChange($event)\"></input-search>\r\n                        <input-text *ngIf=\"origem?.value == 'OUTRO_ORGAO'\" #orgao controlName=\"orgao\" placeholder=\"Órgão\"></input-text>\r\n                    </ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\r\n                    <ng-template let-row=\"row\" #columnEntrega>\r\n                        <small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small>\r\n                        <div *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(planoTrabalhoService.tipoEntrega(row, entity).tipo)\" class=\"text-nowrap\">\r\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_inicio)\" hint=\"Data de início\"></badge><br>\r\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_fim)\" hint=\"Data de término\"></badge>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editEntrega>\r\n                        <input-select *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" #entrega nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregas\"></input-select>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                        <div class=\"text-center\">\r\n                            <small><strong>% Força Trab.</strong></small><br>\r\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\r\n                </column>\r\n                <column type=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\r\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\r\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\r\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\" } },\r\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\r\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\r\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoTrabalhoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\r\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\r\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoTrabalhoFormComponent,\r\n    PlanoTrabalhoListComponent,\r\n    PlanoTrabalhoListEntregaComponent,\r\n    PlanoTrabalhoFormTermoComponent,\r\n    PlanoTrabalhoConsolidacaoComponent,\r\n    PlanoTrabalhoConsolidacaoListComponent,\r\n    PlanoTrabalhoConsolidacaoFormComponent,\r\n    PlanoTrabalhoListAccordeonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PlanoTrabalhoRoutingModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoTrabalhoModule { }\r\n"],"names":["DaoBaseService","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","constructor","injector","dataset","deeps","deepsFilter","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoTrabalhoAtividade","data","plano_trabalho_id","atividade_id","initialization","PlanoTrabalhoConsolidacao","data_inicio","Date","data_fim","status","avaliacoes","status_historico","avaliacao_id","ChangeDetectorRef","EditableFormComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","Atividade","PlanoTrabalhoConsolidacaoOcorrencia","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","AtividadeDaoService","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","row_r20","tipo_atividade","nome","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_small_13_Template","ɵɵtextInterpolate1","numero","ɵɵproperty","usuario","length","ctx_r17","util","apelidoOuNome","demandante","progresso","atividade","descricao","ctx_r26","lex","translate","formAtividade","controls","esforco","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_div_1_input_timer_1_Template","ctx_r24","hasEsforco","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_div_1_Template","ctx_r19","hasRealizado","ɵɵclassMap","tipo_atividade_id","tipoAtividadeDao","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template","row_r14","atividades","ctx_r4","addAtividade","bind","entrega","loadAtividade","removeAtividade","saveAtividade","_r16","_r18","atividadeDynamicButtons","ctx_r6","planoTrabalhoService","tipoEntrega","row_r27","planoTrabalho","titulo","cor","ctx_r8","row_r28","row_r29","tipo_motivo_afastamento","icone","observacao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","entity","itemsEntregas","itemsOcorrencias","itemsAfastamentos","validateEntrega","controlName","result","indexOf","validateOcorrencia","includes","isDataValid","getTime","formOcorrencia","cdRef","get","dao","consolidacaoOcorrenciaDao","atividadeDao","ocorrenciaDao","planoEntregaService","fh","FormBuilder","default","realizado","ngAfterViewInit","_this","_asyncToGenerator","loadData","form","_this2","gridEntregas","loading","detectChanges","dados","dadosConsolidacao","id","entregas","map","x","filter","y","plano_trabalho_entrega_id","ocorrencias","afastamentos","tipo_modalidade","atividade_esforco","_this3","generateUuid","plano_trabalho_consolidacao_id","row","_this4","patchValue","_this5","confirm","dialog","delete","splice","findIndex","_this6","undefined","markAllAsTouched","valid","save","push","Object","assign","BUTTON_EDIT","BUTTON_DELETE","addOcorrencia","_this7","loadOcorrencia","_this8","removeOcorrencia","_this9","ocorrencia","saveOcorrencia","_this10","ocorrenciaDynamicButtons","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_5_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_10_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_13_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_30_Template","entityService","getIcon","_r1","_r3","_r5","_r7","_r11","GridComponent","getDateFormatted","row_r16","row_r17","ctx_r12","lookup","getColor","CONSOLIDACAO_STATUS","row_r19","getValue","PlanoTrabalhoConsolidacaoListComponent","items","consolidacoes","validate","title","code","addConsolidacao","loadConsolidacao","removeConsolidacao","consolidacao","saveConsolidacao","dynamicButtons","PlanoTrabalhoConsolidacaoListComponent_Query","PlanoTrabalhoConsolidacaoListComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_18_Template","_r9","TabsComponent","UnidadeDaoService","data_r13","url_foto","apelido","data_r14","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_1_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_3_Template","usuario_r8","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_div_2_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_Template","ɵɵtextInterpolate2","ctx_r5","unidade","sigla","usuarios","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_Template","ctx_r1","_r4","ctx_r3","arquivados","auth","PlanoTrabalhoConsolidacaoComponent","loadingUnidade","unidadeDao","tabs","active","queryParams","tab","unidadeGestor","lotados","PlanoTrabalhoConsolidacaoComponent_Query","PlanoTrabalhoConsolidacaoComponent_tab_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_4_Template","isModal","_r2","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","numero_processo","formValidation","tipoDocumento","selectedEntity","tipo_documento_id","titleEdit","join","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","carga_horaria","tempo_total","tempo_proporcional","programa_id","usuario_id","unidade_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","fillForm","Promise","all","loadSearch","programa","tipoModalidade","processo","id_processo","hora","initializeData","getById","metadata","plano_trabalho","saveData","resolve","reject","codigo_tipo_documento","codigo","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","ɵɵlistener","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","$event","formDisabled","ganho_produtividade","PlanoEntregaDaoService","Documento","PlanoTrabalhoEntrega","DocumentoService","CalendarService","TemplateService","ctx_r10","horasTotais","ctx_r11","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_16_Template_input_workload_change_2_listener","ɵɵrestoreView","_r13","ɵɵnextContext","ɵɵresetView","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_16_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_16_separator_6_Template","ɵɵelementContainerEnd","onFormaContagemCargaHorariaChange","ctx_r7","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","ctx_r9","entityDocumentos","needSign","extraTags","documentoId","datasource","template","PlanoTrabalhoFormComponent","_entityDocumentos","validateAtividades","validateEntregas","planoEntregaDao","documentoService","templateService","calendar","modalWidth","unidade_texto_complementar","usuario_texto_complementar","formAtividades","formEntregas","entrega_id","ngOnInit","segment","url","path","action","texto_complementar_plano","JSON","stringify","_datasource","termo_obrigatorio","documento","find","assinaturas","tipo","especie","conteudo","renderTemplate","template_tcr","_status","entidade_id","entidade","template_id","template_tcr_id","setValue","isTermos","onUnidadeSelect","selected","onProgramaSelect","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","then","feriados","calculaDataTempoUnidade","tempoUtil","urlParams","carga_horaria_padrao","addAtividades","loadAtividades","removeAtividades","saveAtividades","addEntregas","loadEntregas","removeEntregas","saveEntregas","selectedItem","plano","loadEntity","fill","selectItem","submitting","update","documentoDynamicButtons","hint","icon","onClick","signDocumento","html","sign","unit","addDocumento","go","navigate","route","modalClose","modalResult","clearErros","showSppinerOverlay","termo","error","message","closeSppinerOverlay","isVigente","onProcessoClick","openDocumentoSei","id_documento","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_search_select_9_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_12_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_13_listener","PlanoTrabalhoFormComponent_ng_container_16_Template","PlanoTrabalhoFormComponent_top_alert_18_Template","PlanoTrabalhoFormComponent_div_19_Template","PlanoTrabalhoFormComponent_tab_20_Template","PlanoTrabalhoFormComponent_tab_21_Template","ɵɵpureFunction0","_c11","plano_trabalho_calcula_horas","checkFilled","_c12","_c13","item_r5","ctx_r2","item_r6","PlanoTrabalhoListAccordeonComponent","planos","accordion","getByUsuario","usuarioId","PlanoTrabalhoListAccordeonComponent_Query","PlanoTrabalhoListAccordeonComponent_ng_template_2_Template","PlanoTrabalhoListAccordeonComponent_ng_template_4_Template","PlanoTrabalhoEntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","plano_entrega_entrega","plano_entrega","ctx_r27","orgao","PlanoTrabalhoListEntregaComponent_ng_template_8_badge_2_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_badge_3_Template","plano_entrega_entrega_id","PlanoTrabalhoListEntregaComponent_ng_template_10_input_search_2_Template_input_search_change_0_listener","_r37","ctx_r36","onPlanoEntregaChange","ctx_r33","_c3","_r32","ɵɵpureFunction1","_c5","_c4","_c7","_c6","PlanoTrabalhoListEntregaComponent_ng_template_10_Template_input_select_change_0_listener","restoredCtx","_r40","row_r31","ctx_r39","onOrigemChange","PlanoTrabalhoListEntregaComponent_ng_template_10_input_search_2_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_input_text_3_Template","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","_c8","ctx_r43","row_r42","PlanoTrabalhoListEntregaComponent_ng_template_15_div_2_Template","ctx_r46","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template","ctx_r14","totalForcaTrabalho","row_r49","forca_trabalho","PlanoTrabalhoListEntregaComponent_ng_template_24_Template_input_text_change_0_listener","_r52","row_r50","ctx_r51","onForcaTrabalhoChange","ctx_r18","row_r54","PlanoTrabalhoListEntregaComponent","disabled","_disabled","gridControl","options","e","grid","editing","planoTrabalhoDao","peeDao","plano_entrega_id","planoInterval","start","end","entregaPlano","entregaDataFim","entregaInterval","intersection","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","_metadata","novaEntrega","addEntrega","loadEntrega","carregarEntregas","removeEntrega","isNoPersist","saveEntrega","toString","reduce","a","b","idPlanoOuPlano","planoEntrega","planoEntregaComUnidade","epe","key","planosEntregas","query","where","asPromise","onSelectClick","Event","onSearchClick","searchRoute","index","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_24_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","PlanoTrabalhoListEntregaComponent_ng_template_31_Template","groupBy","_r15","_r17","_r19","_r21","_r23","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","config","runGuardsAndResolvers","modal","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}