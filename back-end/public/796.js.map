{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\r\n  }\r\n\r\n  public dataset(deeps?: string[]): TemplateDataset[] {\r\n    return this.deepsFilter([], deeps);\r\n  }\r\n\r\n}\r\n\r\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\n\r\nexport type PlanoTrabalhoConsolidacaoStatus = 'CONCLUIDO' | 'AVALIADO' | 'INCLUIDO';\r\n\r\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao, HasStatus {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public avaliacao?: Avaliacao;\r\n\r\n    public data_inicio: Date = new Date();\r\n    public data_fim: Date = new Date();\r\n    public status: PlanoTrabalhoConsolidacaoStatus | null = null; // Status atual da consolidação\r\n    public avaliacoes: Avaliacao[] = [];\r\n    public status_historico: StatusJustificativa[] = [];\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public avaliacao_id: string | null = null;\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { ConsolidacaoDados, PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { Atividade, AtividadeChecklist } from 'src/app/models/atividade.model';\r\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\r\nimport { Afastamento } from 'src/app/models/afastamento.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { BadgeTrabalho, PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\r\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { AtividadeOptionsMetadata, AtividadeService } from '../../atividade/atividade.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { CalendarService } from 'src/app/services/calendar.service';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { TipoAtividade } from 'src/app/models/tipo-atividade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\n\r\nexport type ConsolidacaoEntrega = {\r\n  id: string,\r\n  entrega: PlanoTrabalhoEntrega,\r\n  badge: BadgeTrabalho,\r\n  atividades: Atividade[]\r\n};\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-form',\r\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridEntregas', { static: false }) public gridEntregas?: GridComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() planoTrabalho?: PlanoTrabalho;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; this.bindEntity(); } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) {\r\n    if(this._disabled != value || this.atividadeOptionsMetadata.disabled !== value) {\r\n      this._disabled = value;\r\n      this.atividadeOptionsMetadata.disabled = value;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  public consolidacaoOcorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\r\n  public formAtividade: FormGroup;\r\n  public formOcorrencia: FormGroup;\r\n  public formEdit: FormGroup;\r\n  public unidade?: Unidade;\r\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\r\n  public atividadeDao: AtividadeDaoService;\r\n  public atividadeService: AtividadeService;\r\n  public calendar: CalendarService;\r\n  public joinAtividade: string[] = ['demandante', 'usuario', 'tipo_atividade', 'comentarios.usuario:id,nome,apelido'];\r\n  public tipoAtividadeDao: TipoAtividadeDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\r\n  public etiquetas: LookupItem[] = [];\r\n  public checklist?: AtividadeChecklist[];\r\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\r\n  public itemsAfastamentos: Afastamento[] = [];\r\n  public atividadeOptionsMetadata: AtividadeOptionsMetadata;\r\n  public programa?: Programa;\r\n  \r\n  private _disabled: boolean = true;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.consolidacaoOcorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.atividadeService = injector.get<AtividadeService>(AtividadeService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\r\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.formAtividade = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      etiquetas: { default: [] },\r\n      checklist: { default: [] },\r\n      comentarios: { default: [] },\r\n      esforco: { default: 0 },\r\n      tempo_planejado: { default: 0 },\r\n      tipo_atividade_id: {default: null}\r\n    }, this.cdRef, this.validateEntrega);\r\n    this.formOcorrencia = this.fh.FormBuilder({\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      descricao: { default: \"\" }\r\n    }, this.cdRef, this.validateOcorrencia);\r\n    this.formEdit = this.fh.FormBuilder({\r\n      progresso: { default: 0 },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: null }\r\n    });\r\n    this.atividadeOptionsMetadata = {\r\n      refreshId: this.atividadeRefreshId.bind(this),\r\n      removeId: this.atividadeRemoveId.bind(this),\r\n      refresh: this.refresh.bind(this)\r\n    }\r\n  }\r\n\r\n  public refresh() {\r\n    this.loadData(this.entity!, this.form);\r\n  }\r\n\r\n  public bindEntity() {\r\n    if(this.entity) {\r\n      this.entity._metadata = this.entity._metadata || {};\r\n      this.entity._metadata.planoTrabalhoConsolidacaoFormComponent = this;\r\n    }\r\n  }\r\n\r\n  public atividadeRefreshId(id: string, atividade?: Atividade) {\r\n    this.itemsEntregas.forEach(entrega => {\r\n      let foundIndex = entrega.atividades.findIndex(x => x.id == id);\r\n      if(foundIndex >= 0) {\r\n        if(atividade) {\r\n          entrega.atividades[foundIndex] = atividade;\r\n        } else {\r\n          this.atividadeDao.getById(id, this.joinAtividade).then(atividade => { if(atividade) entrega.atividades[foundIndex] = atividade; });\r\n        }\r\n      }\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public atividadeRemoveId(id: string) {\r\n    this.itemsEntregas.forEach(entrega => {\r\n      let foundIndex = entrega.atividades.findIndex(x => x.id == id);\r\n      if(foundIndex >= 0) entrega.atividades.splice(foundIndex, 1);\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public validateEntrega = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia?.controls.data_inicio.value.getTime()) {\r\n        result = \"Menor que início\";\r\n    } \r\n    return result;\r\n  }\r\n\r\n  public loadConsolidacao(dados: ConsolidacaoDados) {\r\n    this.itemsEntregas = dados.entregas.map(x => {\r\n      x.plano_entrega_entrega!.plano_entrega = dados.planosEntregas.find(pe => pe.id == x.plano_entrega_entrega!.plano_entrega_id);\r\n      let result = {\r\n        id: x.id,\r\n        entrega: x,\r\n        atividades: dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id),\r\n        badge: this.planoTrabalhoService.tipoEntrega(x, dados.planoTrabalho)\r\n      };\r\n      return result;\r\n    });\r\n    this.programa = dados.programa;\r\n    this.planoTrabalho = dados.planoTrabalho;\r\n    this.itemsOcorrencias = dados.ocorrencias;\r\n    this.itemsAfastamentos = dados.afastamentos;\r\n    this.unidade = dados.planoTrabalho.unidade || this.entity!.plano_trabalho?.unidade;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.gridEntregas!.loading = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      let dados = await this.dao!.dadosConsolidacao(entity.id);\r\n      this.loadConsolidacao(dados);\r\n    } finally {\r\n      this.gridEntregas!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }  \r\n  \r\n  /***************************************************************************************\r\n  * Atividades \r\n  ****************************************************************************************/\r\n  public async addAtividade(entrega: PlanoTrabalhoEntrega) {\r\n    let planoTrabalho: PlanoTrabalho | undefined = entrega.plano_trabalho || this.entity!.plano_trabalho;\r\n    let efemerides = this.calendar.calculaDataTempoUnidade(this.entity!.data_inicio, this.entity!.data_fim, planoTrabalho!.carga_horaria, this.unidade!, \"ENTREGA\");\r\n    const tempoPlanejado = this.calendar.horasUteis(this.entity!.data_inicio, this.entity!.data_fim, planoTrabalho!.carga_horaria, this.unidade!, \"DISTRIBUICAO\");\r\n    const dataInicio = this.util.setTime(this.entity!.data_inicio, 0, 0, 0);\r\n    const dataFim = this.util.setTime(this.entity!.data_fim, 23, 59, 59);\r\n    return new Atividade({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho: planoTrabalho,\r\n      plano_trabalho_entrega: entrega,\r\n      plano_trabalho_consolidacao: this.entity,\r\n      demandante: this.auth.usuario,\r\n      usuario: this.auth.usuario,\r\n      unidade: this.unidade,\r\n      data_distribuicao: dataInicio,\r\n      carga_horaria: planoTrabalho!.carga_horaria,\r\n      data_estipulada_entrega: dataFim,\r\n      data_inicio: dataInicio,\r\n      data_entrega: dataFim,\r\n      tempo_planejado: tempoPlanejado,\r\n      tempo_despendido: efemerides?.tempoUtil || 0,\r\n      status: 'CONCLUIDO',\r\n      progresso: 100,\r\n      plano_trabalho_id: this.entity!.plano_trabalho_id,\r\n      plano_trabalho_entrega_id: entrega.id,\r\n      demandante_id: this.auth.usuario!.id,\r\n      usuario_id: this.auth.usuario!.id,\r\n      unidade_id: this.unidade!.id,\r\n      metadados: { // Simula os metadados enviados pelo servidor\r\n        atrasado: false,\r\n        tempo_despendido: 0,\r\n        tempo_atraso: 0,\r\n        pausado: false,\r\n        iniciado: true,\r\n        concluido: true,\r\n        avaliado: false,\r\n        arquivado: false,\r\n        produtividade: 0,\r\n        extra: undefined,\r\n        _status: []\r\n      }\r\n    });\r\n  }\r\n\r\n  public async loadAtividade(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue(row);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeAtividade(atividades: Atividade[], row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let atividade = row as Atividade;\r\n        await this.atividadeDao?.delete(atividade);\r\n        atividades.splice(atividades.findIndex(x => x.id == atividade.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveAtividade(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formAtividade.markAllAsTouched();\r\n    if (this.formAtividade!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      this.util.fillForm(row, this.formAtividade!.value);\r\n      result = await this.atividadeDao?.save(row, this.joinAtividade, ['etiquetas', 'checklist', 'comentarios', 'pausas', 'tarefas']);\r\n      this.atividadeRefreshId(row.id, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_EDIT, {}));\r\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_DELETE, {}));\r\n    return result;\r\n  }  \r\n\r\n  public async onColumnProgressoEtiquetasChecklistEdit(row: any) {\r\n    this.formEdit.controls.progresso.setValue(row.progresso);\r\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\r\n    this.formEdit.controls.etiqueta.setValue(null);\r\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n    this.checklist = this.util.clone(row.checklist);\r\n  }\r\n\r\n  public async onColumnProgressoEtiquetasChecklistSave(row: any) {\r\n    try {\r\n      const saved = await this.atividadeDao!.update(row.id, {\r\n        progresso: this.formEdit.controls.progresso.value,\r\n        etiquetas: this.formEdit.controls.etiquetas.value,\r\n        checklist: this.checklist\r\n      });\r\n      row.progresso = this.formEdit.controls.progresso.value;\r\n      row.checklist = this.checklist;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onEtiquetaConfigClick() {\r\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\r\n      modal: true, modalClose: (modalResult) => {\r\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.formEdit.controls.etiquetas.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.formEdit.controls.etiqueta.setValue(null);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public loadTipoAtividade(tipoAtividade: TipoAtividade | undefined) {\r\n    if(tipoAtividade) {\r\n      this.etiquetas = this.atividadeService.buildEtiquetas(this.unidade, tipoAtividade);\r\n      this.atividadeService.buildChecklist(tipoAtividade, this.formAtividade.controls.checklist);\r\n      this.formAtividade.controls.esforco.setValue(tipoAtividade?.esforco || 0);\r\n    } else {\r\n      this.etiquetas = [];\r\n      this.formAtividade.controls.esforco.setValue(0);\r\n    }\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onTipoAtividadeSelect(item: SelectItem) {\r\n    const tipoAtividade: TipoAtividade | undefined = item.entity as TipoAtividade;\r\n    this.loadTipoAtividade(tipoAtividade);\r\n    this.atividadeService.comentarioAtividade(tipoAtividade, this.formAtividade!.controls.comentarios);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /***************************************************************************************\r\n  * Ocorrências \r\n  ****************************************************************************************/\r\n  public async addOcorrencia() {\r\n    return new PlanoTrabalhoConsolidacaoOcorrencia({\r\n      plano_trabalho_consolidacao_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadOcorrencia(form: FormGroup, row: any) {\r\n    this.formAtividade.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim,\r\n      descricao: row.descricao\r\n    });\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeOcorrencia(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let ocorrencia = row as PlanoTrabalhoConsolidacaoOcorrencia;\r\n        await this.consolidacaoOcorrenciaDao?.delete(ocorrencia);\r\n        this.itemsOcorrencias.splice(this.itemsOcorrencias.findIndex(x => x.id == ocorrencia.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveOcorrencia(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.formOcorrencia.markAllAsTouched();\r\n    if (this.formOcorrencia!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      row.descricao = form.controls.descricao.value;\r\n      result = await this.consolidacaoOcorrenciaDao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n\r\n  /***************************************************************************************\r\n  * Afastamentos\r\n  ****************************************************************************************/\r\n  public async addAfastamento() {\r\n    this.go.navigate({route: ['cadastros', 'afastamento', 'new']}, {\r\n      metadata: { consolidacao: this.entity },\r\n      filterSnapshot: undefined,\r\n      querySnapshot: undefined,\r\n      modalClose: (modalResult) => {\r\n        if(modalResult) this.refresh();\r\n      }\r\n    });\r\n  }\r\n\r\n  public afastamentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push(Object.assign({}, this.OPTION_INFORMACOES, { onClick: (doc: Afastamento) => this.go.navigate({route: [\"cadastros\", \"afastamento\", doc.id, \"consult\"]}) }));\r\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\r\n    return result;\r\n  }  \r\n \r\n}\r\n","<separator [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\r\n    <grid [items]=\"itemsEntregas\" #gridEntregas [minHeight]=\"0\" expanded>\r\n        <columns>\r\n            <column type=\"expand\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n                <ng-template let-row=\"row\" #columnConsolidacao>\r\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n                </ng-template>\r\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                    <grid [items]=\"row.atividades\" [minHeight]=\"0\" #gridAtividade [form]=\"formAtividade\" [hasAdd]=\"!disabled\" [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                        [add]=\"addAtividade.bind(this, row.entrega)\" [load]=\"loadAtividade.bind(this)\" [remove]=\"removeAtividade.bind(this, row.atividades)\" [save]=\"saveAtividade.bind(this)\" editable>\r\n                        <columns>\r\n                            <column [title]=\"'#ID/' + lex.translate('Tipo de Atividade') + '\\nDescrição'\" [template]=\"columnAtividadeDescricao\" [editTemplate]=\"editAtividadeDescricao\">\r\n                                <ng-template let-row=\"row\" #columnAtividadeDescricao>\r\n                                    <span class=\"text-nowrap d-block\">\r\n                                        <badge icon=\"bi bi-hash\" [label]=\"row.numero\" color=\"light\" [data]=\"row.numero\" [click]=\"atividadeService.onIdClick.bind(this)\"></badge>\r\n                                        <badge *ngIf=\"row.tipo_atividade\" [icon]=\"entityService.getIcon('TipoAtividade')\" [label]=\"row.tipo_atividade.nome\" color=\"light\"></badge>\r\n                                    </span>\r\n                                    <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n                                </ng-template>\r\n                                <ng-template let-row=\"row\" #editAtividadeDescricao>\r\n                                    <input-search [label]=\"lex.translate('Tipo de atividade')\" [size]=\"12\" [emptyValue]=\"null\" controlName=\"tipo_atividade_id\" [control]=\"formAtividade!.controls.tipo_atividade_id\" [dao]=\"tipoAtividadeDao\" (select)=\"onTipoAtividadeSelect($event)\" [labelInfo]=\"lex.translate('Tipo de atividade') + ' utilizado para classificar a atividade'\" [required]=\"!auth.hasPermissionTo('MOD_ATV_TIPO_ATV_VAZIO') ? 'true' : undefined\"></input-search>\r\n                                    <input-textarea label=\"Descrição\" [size]=\"12\" [rows]=\"2\" controlName=\"descricao\" [control]=\"formAtividade!.controls.descricao\" required></input-textarea>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column [title]=\"'Tempos'\" [template]=\"columnTempos\" [editTemplate]=\"columnTempos\">\r\n                                <ng-template let-row=\"row\" #columnTempos>\r\n                                    <div class=\"one-per-line\">\r\n                                        <badge *ngFor=\"let tempo of atividadeService.temposAtividade(row)\" [badge]=\"tempo\"></badge>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column [title]=\"'Progresso\\nEtiquetas/Checklist'\" [width]=\"200\" [template]=\"columnProgressoEtiquetasChecklist\" [editTemplate]=\"columnProgressoEtiquetasChecklist\" [columnEditTemplate]=\"columnProgressoEtiquetasChecklistEdit\" [edit]=\"onColumnProgressoEtiquetasChecklistEdit.bind(this)\" [save]=\"onColumnProgressoEtiquetasChecklistSave.bind(this)\">\r\n                                <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\r\n                                    <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n                                    <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\r\n                                    <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                                    <table *ngIf=\"row.checklist?.length\">\r\n                                        <tr *ngFor=\"let check of row.checklist\">\r\n                                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\r\n                                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </ng-template>\r\n                                <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklistEdit>\r\n                                    <input-number [size]=\"12\" [decimals]=\"2\" label=\"Progresso\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso\" [control]=\"formEdit.controls.progresso\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                                    <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                                        <input-select [size]=\"12\" label=\"Etiqueta\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                                    </input-multiselect>\r\n                                    <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                                    <table *ngIf=\"row.checklist?.length\">\r\n                                        <tr *ngFor=\"let check of checklist; let i = index\">\r\n                                            <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\r\n                                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column [title]=\"'nº Processo/Status\\nComentários'\" [width]=\"400\" [template]=\"columnNumero\" [editTemplate]=\"columnNumero\">\r\n                                <ng-template let-row=\"row\" #columnNumero>\r\n                                    <documentos-badge [documento]=\"row.documento_requisicao\"></documentos-badge>\r\n                                    <span class=\"d-block\">\r\n                                        <badge *ngFor=\"let status of atividadeService.getStatus(row, entity)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\"></badge>\r\n                                    </span>\r\n                                    <comentarios-widget *ngIf=\"!gridAtividade.editing\" [entity]=\"row\" [selectable]=\"false\" origem=\"ATIVIDADE\" [grid]=\"gridAtividade\"></comentarios-widget>\r\n                                </ng-template>\r\n                            </column>\r\n                            <column type=\"options\" [metadata]=\"atividadeOptionsMetadata\" [dynamicOptions]=\"atividadeService.dynamicOptions.bind(this)\" [dynamicButtons]=\"atividadeService.dynamicButtons.bind(this)\"></column>\r\n                        </columns>\r\n                    </grid>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Origem\" [template]=\"columnOrigem\" [width]=\"200\">\r\n                <ng-template let-row=\"row\" #columnOrigem>\r\n                    <badge [label]=\"row.badge.titulo\" [color]=\"row.badge.cor\"></badge>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                <ng-template let-row=\"row\" #columnEntrega>\r\n                    <badge [icon]=\"entityService.getIcon('Entrega')\" [label]=\"row.badge.nome\" [textValue]=\"row.badge.descricao\"></badge>\r\n                </ng-template>\r\n            </column>\r\n            <column title=\"% Força Trab. Planejado\" [template]=\"columnForcaTrabalho\">\r\n                <ng-template let-row=\"row\" #columnForcaTrabalho>\r\n                    <badge color=\"light\" [label]=\"row.entrega.forca_trabalho + '%'\"></badge>\r\n                </ng-template>\r\n            </column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Ocorrências')\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\">\r\n    <grid [items]=\"itemsOcorrencias\" [minHeight]=\"0\" #gridOcorrencia [form]=\"formOcorrencia\" [hasDelete]=\"!disabled\" [hasAdd]=\"!disabled\" [hasEdit]=\"!disabled\"\r\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \r\n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\r\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n<separator [title]=\"lex.translate('Afastamentos')\" [icon]=\"entityService.getIcon('Afastamento')\">\r\n    <grid [items]=\"itemsAfastamentos\" [minHeight]=\"0\" #gridAfastamento [add]=\"addAfastamento.bind(this)\" [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"!disabled\" editable>\r\n        <columns>\r\n            <column title=\"Início\" type=\"datetime\" field=\"data_inicio\"></column>\r\n            <column title=\"Fim\" type=\"datetime\" field=\"data_fim\"></column>\r\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\r\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\r\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\r\n                    {{row.observacao}}\r\n                </ng-template>\r\n            </column>\r\n            <column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column>\r\n        </columns>\r\n    </grid>\r\n</separator>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\r\nimport { PlanoTrabalhoConsolidacao, PlanoTrabalhoConsolidacaoStatus } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { PlanoTrabalhoConsolidacaoFormComponent } from '../plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-consolidacao-list',\r\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageFrameBase {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n\r\n  public get items(): PlanoTrabalhoConsolidacao[] {\r\n    return this.entity?.consolidacoes || [];\r\n  }\r\n\r\n  public dao?: PlanoTrabalhoConsolidacaoDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    /* Inicializações */\r\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.title = this.lex.translate(\"Consolidações\");\r\n    this.code = \"MOD_PTR_CSLD\";\r\n    this.form = this.fh.FormBuilder({\r\n      'data_inicio': {default: new Date()},\r\n      'data_fim': {default: new Date()}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    let agora = (new Date()).getTime();\r\n    this.items.forEach(v => {\r\n      if(!v.plano_trabalho) v.plano_trabalho = this.entity;\r\n      if(this.util.asDate(v.data_inicio)!.getTime() <= agora && agora <= this.util.asDate(v.data_fim)!.getTime()) this.grid!.expand(v.id);\r\n    });\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    // TODO: Validar data\r\n    return result;\r\n  }\r\n\r\n  public async addConsolidacao() {\r\n    return new PlanoTrabalhoConsolidacao({\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity!.id\r\n    });\r\n  }\r\n\r\n  public async loadConsolidacao(form: FormGroup, row: any) {\r\n    this.form!.patchValue({\r\n      data_inicio: row.data_inicio,\r\n      data_fim: row.data_fim\r\n    });    \r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async removeConsolidacao(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\r\n    if (confirm) {\r\n      try {\r\n        let consolidacao = row as PlanoTrabalhoConsolidacao;\r\n        await this.dao?.delete(consolidacao);\r\n        this.items.splice(this.items.findIndex(x => x.id == consolidacao.id), 1);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async saveConsolidacao(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.data_inicio = form.controls.data_inicio.value;\r\n      row.data_fim = form.controls.data_fim.value;\r\n      result = await this.dao?.save(row);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async concluir(consolidacao: PlanoTrabalhoConsolidacao) {\r\n    this.submitting = true;\r\n    try {\r\n      let response = await this.dao!.concluir(consolidacao.id);\r\n      consolidacao.status = response.status as PlanoTrabalhoConsolidacaoStatus;\r\n      if(consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent) {\r\n        let consolidacaoForm = consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent as PlanoTrabalhoConsolidacaoFormComponent;\r\n        consolidacaoForm.loadConsolidacao(response);\r\n      } else {\r\n        this.grid!.refreshExpanded(consolidacao.id);\r\n      }\r\n    } catch (error: any) {\r\n      this.error(error.message || error);\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n  }\r\n\r\n  public async cancelarConclusao(consolidacao: PlanoTrabalhoConsolidacao) {\r\n    this.submitting = true;\r\n    try {\r\n      let response = await this.dao!.cancelarConclusao(consolidacao.id);\r\n      if(consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent) {\r\n        let consolidacaoForm = consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent as PlanoTrabalhoConsolidacaoFormComponent;\r\n        consolidacaoForm.loadConsolidacao(response);\r\n      } else {\r\n        this.grid!.refreshExpanded(consolidacao.id);\r\n      }\r\n    } catch (error: any) {\r\n      this.error(error.message || error);\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n  }\r\n\r\n  public isDisabled(row?: PlanoTrabalhoConsolidacao): boolean {\r\n    return (row && row.status != \"INCLUIDO\") || this.entity?.status != \"ATIVO\";\r\n  }\r\n\r\n  public avaliar(consolidacao: PlanoTrabalhoConsolidacao) {\r\n    //\r\n  }\r\n\r\n  public editarAvaliacao(consolidacao: PlanoTrabalhoConsolidacao) {\r\n    //\r\n  }\r\n\r\n  public fazerRecurso(consolidacao: PlanoTrabalhoConsolidacao) {\r\n    //\r\n  }\r\n\r\n  public cancelarAvaliacao(consolidacao: PlanoTrabalhoConsolidacao) {\r\n    //\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let consolidacao: PlanoTrabalhoConsolidacao = row as PlanoTrabalhoConsolidacao;\r\n    const isUsuarioConsolidacao = this.auth.usuario!.id == this.entity!.usuario_id;\r\n    const isGestor = [this.entity!.unidade!.gestor?.usuario_id, this.entity!.unidade!.gestor_substituto?.usuario_id].includes(this.auth.usuario?.id);\r\n    const BOTAO_CONCLUIR = { hint: \"Concluir\", icon: \"bi bi-check-circle\", color: \"btn-outline-success\", onClick: this.concluir.bind(this) };\r\n    const BOTAO_CANCELAR_CONCLUSAO = { hint: \"Cancelar conclusão\", icon: \"bi bi-backspace\", color: \"btn-outline-danger\", onClick: this.cancelarConclusao.bind(this) };\r\n    const BOTAO_AVALIAR = { hint: \"Avaliar\", icon: \"bi bi-star\", color: \"btn-outline-warning\", onClick: this.avaliar.bind(this) };\r\n    const BOTAO_EDITAR_AVALIACAO = { hint: \"Editar avaliação\", icon: \"bi bi-star-half\", color: \"btn-outline-warning\", onClick: this.editarAvaliacao.bind(this) };\r\n    const BOTAO_FAZER_RECURSO = { hint: \"Fazer recurso\", id: \"RECORRIDO\", icon: \"bi bi-journal-medical\", color: \"btn-outline-warning\", onClick: this.fazerRecurso.bind(this) };\r\n    const BOTAO_CANCELAR_AVALIACAO = { hint: \"Cancelar avaliação\", id: \"INCLUIDO\", icon: \"bi bi-backspace\", color: \"btn-outline-warning\", onClick: this.cancelarAvaliacao.bind(this) };\r\n    if(!this.isDisabled()) {\r\n      if(consolidacao.status == \"INCLUIDO\" && (isUsuarioConsolidacao || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_CONCL\"))) {\r\n        result.push(BOTAO_CONCLUIR);\r\n      }\r\n      if(consolidacao.status == \"CONCLUIDO\" && this.planoTrabalhoService.diasParaConcluirConsolidacao(row, this.entity!.programa) >= 0 && (isUsuarioConsolidacao || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_DES_CONCL\"))) {\r\n        result.push(BOTAO_CANCELAR_CONCLUSAO);\r\n      }\r\n      if(consolidacao.status == \"CONCLUIDO\" && (isGestor || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_AVALIAR\"))) {\r\n        result.push(BOTAO_AVALIAR);\r\n      }\r\n      if(consolidacao.status == \"AVALIADO\") {\r\n        /* TODO: Fazer as condições para avaliado */\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","<grid [items]=\"items\" #grid [form]=\"form!\" [hasDelete]=\"true\" [minHeight]=\"0\"\r\n    [add]=\"addConsolidacao.bind(this)\" [hasAdd]=\"!isDisabled()\" [hasEdit]=\"false\" [hasDelete]=\"false\" editable>\r\n    <columns>\r\n        <column type=\"expand\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\r\n            <ng-template let-row=\"row\" #columnConsolidacao>\r\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\r\n                <plano-trabalho-consolidacao-form #consolidacao [disabled]=\"isDisabled(row)\" [entity]=\"row\" [planoTrabalho]=\"entity\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data início\" [template]=\"columnDataInicio\">\r\n            <ng-template let-row=\"row\" #columnDataInicio>\r\n                {{util.getDateFormatted(row.data_inicio)}}\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\r\n            <ng-template let-row=\"row\" #columnDataFim>\r\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\r\n            <ng-template let-row=\"row\" #columnEstatisticas>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status)\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageBase } from 'src/app/modules/base/page-base';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-trabalho-consolidacao',\r\n  templateUrl: './plano-trabalho-consolidacao.component.html',\r\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\r\n})\r\nexport class PlanoTrabalhoConsolidacaoComponent extends PageFrameBase {\r\n  @ViewChild(TabsComponent, { static: false }) public tabs?: TabsComponent;\r\n\r\n  public usuarios: Usuario[] = [];\r\n  public unidade?: Unidade;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public loadingUnidade: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      arquivados: { default: false }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    this.tabs!.active = this.queryParams?.tab || \"USUARIO\";\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.unidade = this.auth.unidadeGestor();\r\n    if(this.unidade) {\r\n      this.usuarios = [];\r\n      this.loadingUnidade = true;\r\n      this.cdRef.detectChanges()\r\n      try {\r\n        this.usuarios = await this.unidadeDao.lotados(this.unidade.id);\r\n      } finally {\r\n        this.loadingUnidade = false;\r\n        this.cdRef.detectChanges()\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<tabs right #tabs [title]=\"isModal ? '' : title\">\r\n    <tab key=\"UNIDADE\" *ngIf=\"unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\r\n        <ng-template #tabUnidade>\r\n            <h5>{{unidade.sigla}} - {{unidade.nome}}</h5>\r\n            <div *ngIf=\"loading\" class=\"d-flex justify-content-center my-2\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"visually-hidden\"></span>\r\n                </div>\r\n            </div>\r\n            <collapse-card *ngFor=\"let usuario of usuarios\" [data]=\"usuario\" [titleTemplate]=\"usuarioCardTitle\" [template]=\"usuarioCard\">\r\n                <ng-template let-data=\"data\" #usuarioCardTitle>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <profile-picture [url]=\"data.url_foto\" [size]=\"40\" [hint]=\"data.nome\"></profile-picture>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <strong>{{data.nome || \"\"}}</strong><br>\r\n                            <small>{{data.apelido || \"\"}}</small>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template let-data=\"data\" #usuarioCard>\r\n                    <plano-trabalho-list-accordeon [usuarioId]=\"data.id\"></plano-trabalho-list-accordeon>\r\n                </ng-template>\r\n            </collapse-card>\r\n        </ng-template>\r\n    </tab>\r\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\r\n        <ng-template #tabUsuario>\r\n            <separator [control]=\"form!.controls.arquivados\" [title]=\"'Mostrar ' + lex.translate('Planos de trabalho') + ' arquivados?'\"></separator>\r\n            <plano-trabalho-list-accordeon [usuarioId]=\"auth.usuario!.id\" [arquivados]=\"form!.controls.arquivados.value\"></plano-trabalho-list-accordeon>\r\n        </ng-template>\r\n    </tab>\r\n</tabs>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form-termo',\r\n  templateUrl: './plano-trabalho-form-termo.component.html',\r\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public allPages: ListenerAllPagesService;\r\n  public processo?: SeiKeys;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio: {default: new Date()},\r\n      data_fim: {default: new Date()},\r\n      programa_id: {default: \"\"},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      documento_id: {default: \"\"},\r\n      documentos: {default: []},\r\n      tipo_documento_id: {default: \"\"},\r\n      numero_processo: {default: \"\"},\r\n      vinculadas: {default: true},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(!this.tipoDocumento?.selectedEntity && form?.controls.tipo_documento_id.value?.length) {\r\n      return \"Aguarde o carregamento do tipo de documento\";\r\n    }\r\n    return undefined;\r\n  } \r\n\r\n  public onVinculadasChange(event: Event) {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    formValue = this.util.fillForm(formValue, entity);\r\n    await Promise.all ([\r\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    if(this.processo) {\r\n      formValue.id_processo = this.processo.id_processo;\r\n      formValue.numero_processo = this.processo.numero_processo;\r\n    }\r\n    formValue.data_inicio = this.auth.hora;\r\n    form.patchValue(formValue);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\r\n    this.processo = this.metadata?.processo;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\r\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\r\n      //if(this.processo) {\r\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\r\n        /* TODO Gerar documento do TCR\r\n        termo: this.termo!.conteudo,\r\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\r\n        codigo_tipo_documento: (this.tipoDocumento?.selectedEntity as TipoDocumento)?.codigo\r\n      })));\r\n      /*} else {\r\n        const documento = Object.assign(new Documento(), {\r\n          especie: \"TERMO_ADESAO\",\r\n          conteudo: this.termo!.conteudo,\r\n          plano_id: this.entity!.id,\r\n          status: \"GERADO\"\r\n        });\r\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\r\n      }*/\r\n    });\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"programa_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\r\n        <div class=\"row\">\r\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\r\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\r\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\r\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\r\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\r\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\r\n        </div>\r\n    </separator>\r\n    <div class=\"row\">\r\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\r\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\r\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\" required></input-search>\r\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\r\n    </div>\r\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\r\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\r\n    </separator/-->\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\r\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\r\nimport { Template } from 'src/app/models/template.model';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-form',\r\n  templateUrl: './plano-trabalho-form.component.html',\r\n  styleUrls: ['./plano-trabalho-form.component.scss']\r\n})\r\n\r\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\r\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\r\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\r\n\r\n  //public formAtividades: FormGroup;\r\n  //public formEntregas: FormGroup;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  //public atividadeDao: AtividadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public templateService: TemplateService;\r\n  public allPages: ListenerAllPagesService;\r\n  public calendar: CalendarService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  //public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public horasTotais?: Efemerides;\r\n  public horasParciais?: Efemerides;\r\n  public planoDataset: TemplateDataset[];\r\n  public joinPrograma: string[];\r\n  public entregas: LookupItem[] = [];\r\n  public planoTrabalho?: PlanoTrabalho;\r\n  public datasource: any;\r\n  public template?: Template;\r\n  public editingId?: string;\r\n\r\n  /*private _datasource: any;\r\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();*/\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"entregas.plano_entrega_entrega.entrega\"];\r\n    this.joinPrograma = [\"template_tcr\"];\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.templateService = injector.get<TemplateService>(TemplateService);\r\n    this.calendar = injector.get<CalendarService>(CalendarService);\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.modalWidth = 1200;\r\n    this.planoDataset = this.dao!.dataset();\r\n    this.form = this.fh.FormBuilder({\r\n      carga_horaria: {default: \"\"},\r\n      tempo_total: {default: \"\"},\r\n      tempo_proporcional: {default: \"\"},\r\n      data_inicio: {default: new Date()},\r\n      data_fim: {default: new Date()},\r\n      usuario_id: {default: \"\"},\r\n      unidade_id: {default: \"\"},\r\n      programa_id: {default: \"\"},\r\n      documento_id: {default: null},\r\n      documentos: {default: []},\r\n      atividades: {default: []},\r\n      entregas: {default: []},\r\n      tipo_modalidade_id: {default: \"\"},\r\n      forma_contagem_carga_horaria: {default: \"DIA\"},\r\n      editar_texto_complementar_unidade: {default: false},\r\n      editar_texto_complementar_usuario: {default: false},\r\n      unidade_texto_complementar: {default: \"\"},\r\n      usuario_texto_complementar: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n    /*this.formAtividades = this.fh.FormBuilder({\r\n      atividade_id: {default: \"\"}\r\n    }, this.cdRef, this.validateAtividades);\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      entrega_id: {default: \"\"}\r\n    }, this.cdRef, this.validateEntregas);*/\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\r\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\r\n  }\r\n\r\n  public atualizarTcr() {\r\n    this.entity = this.loadEntity();\r\n    let textoUsuario = this.form!.controls.usuario_texto_complementar.value;\r\n    let textoUnidade = this.form!.controls.unidade_texto_complementar.value;\r\n    let documento = this.planoTrabalhoService.atualizarTcr(this.planoTrabalho!, this.entity!, textoUsuario, textoUnidade);\r\n    this.form?.controls.documento_id.setValue(documento?.id);\r\n    this.form?.controls.documentos.setValue(this.entity!.documentos);\r\n    this.datasource = documento?.datasource || {};\r\n    this.template = this.entity.programa?.template_tcr;\r\n    this.editingId = [\"ADD\", \"EDIT\"].includes(documento?._status || \"\") ? documento!.id : undefined;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /* SUBSTITUIDO pela proriedade public de mesmo nome\r\n  public get datasource(): any {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() * /\r\n    let data = this.dao!.datasource(this._entityDocumentos);\r\n    let programa = this.programa?.selectedEntity as Programa;\r\n    /* Atualiza os campos de texto complementar do usuário e da unidade * /\r\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\r\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\r\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\r\n      this._datasource = data;\r\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente * /\r\n      this.documentoId = undefined;\r\n      if(programa?.termo_obrigatorio) {\r\n        this.documentoId = this.form!.controls.documento_id.value;\r\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\r\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\r\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          this.documentoId = this.dao?.generateUuid(),\r\n          documentos.push(new Documento({\r\n            id: this.documentoId, \r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(programa.template_tcr?.conteudo || \"\", this._datasource),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: programa.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: this._datasource,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: this.entity?.id,\r\n            template_id: programa.template_tcr_id\r\n          }));\r\n          this.form!.controls.documento_id.setValue(this.documentoId);\r\n          this.form!.controls.documentos.setValue(documentos);\r\n        }\r\n      }\r\n    }\r\n    return this._datasource;\r\n  }*/\r\n\r\n  /*public get template(): Template | undefined {\r\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() * /\r\n    return this.planoTrabalhoService.template(this._entityDocumentos);\r\n  }*/\r\n\r\n  public get isTermos(): boolean {\r\n    return this.action == \"termos\";\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['unidade_id', 'programa_id', 'usuario_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\r\n      result = \"Valor não pode ser zero.\";\r\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(this.programa && controlName == 'data_inicio' && (control.value as Date).getTime() < this.programa!.selectedEntity?.data_inicio.getTime()) {\r\n      result = \"Menor que programa\";\r\n    } else if(this.programa && controlName == 'data_fim' && (control.value as Date).getTime() > this.programa!.selectedEntity?.data_fim.getTime()) {\r\n      result = \"Maior que programa\";\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    // TODO:\r\n    // Validar se as entregas pertencem ao plano de entregas da unidade\r\n    // Validar se o usuários está habilitado no programa\r\n    return undefined;\r\n  };\r\n\r\n  /*public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\r\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\r\n  }*/\r\n\r\n  public onUnidadeSelect(selected: SelectItem) {\r\n    let unidade = this.unidade?.selectedEntity as Unidade;\r\n    this.entity!.unidade = unidade;\r\n    this.entity!.unidade_id = unidade.id;\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\r\n    this.form!.controls.unidade_texto_complementar.setValue(unidade?.texto_complementar_plano || \"\");\r\n  }\r\n\r\n  public onProgramaSelect(selected: SelectItem) {\r\n    let programa = selected.entity as Programa;\r\n    this.entity!.programa_id = programa.id;\r\n    this.entity!.programa = programa;\r\n    this.form?.controls.data_inicio.updateValueAndValidity();\r\n    this.form?.controls.data_fim.updateValueAndValidity();\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onUsuarioSelect(selected: SelectItem) {\r\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\r\n    this.calculaTempos();\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public onDataInicioChange(event: Event) {\r\n         \r\n    const di = new Date(this.form!.controls.data_inicio.value).getTime();\r\n    const df = new Date(this.form!.controls.data_fim.value).getTime();\r\n\r\n    if(df < di){\r\n      let diaI = new Date(di);\r\n      diaI.setDate(diaI.getDate() + 1);\r\n      this.form!.controls.data_fim.setValue(diaI)   \r\n    }\r\n   \r\n   \r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onDataFimChange(event: Event) {\r\n\r\n    const di = new Date(this.form!.controls.data_inicio.value).getTime();\r\n    const df = new Date(this.form!.controls.data_fim.value).getTime();\r\n\r\n    if(df < di){\r\n      let diaI = new Date(di);\r\n      diaI.setDate(diaI.getDate() + 1);\r\n      this.form!.controls.data_fim.setValue(diaI)   \r\n    }\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public onCargaHorariaChenge(event: Event) {\r\n    this.calculaTempos();\r\n  }\r\n\r\n  public calculaTempos() {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const carga = this.form?.controls.carga_horaria.value || 8;\r\n    const usuario = this.usuario?.selectedEntity as Usuario;\r\n    const unidade = this.unidade?.selectedEntity as Unidade;\r\n    if(usuario && unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\r\n      this.calendar.loadFeriadosCadastrados(unidade.id).then((feriados) => {\r\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], []);\r\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], usuario.afastamentos);\r\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\r\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\r\n      });\r\n    }\r\n  }\r\n\r\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\r\n    this.planoTrabalho = new PlanoTrabalho(entity);\r\n    await Promise.all([\r\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\r\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\r\n      this.unidade?.loadSearch(entity.unidade || entity.unidade_id),\r\n      this.programa?.loadSearch(entity.programa || entity.programa_id),\r\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\r\n    ]);\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    /*let documento = entity.documentos.find(x => x.id == entity.documento_id);\r\n    if(documento) this._datasource = documento.datasource;*/\r\n    this.calculaTempos();\r\n    this.atualizarTcr();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    if(this.isTermos) {\r\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\r\n    } else {\r\n      this.entity = new PlanoTrabalho();\r\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\r\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    }\r\n    await this.loadData(this.entity, this.form!);\r\n  }\r\n\r\n  /* Atividades *\r\n  public async addAtividades() {\r\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadAtividades(form: FormGroup, row: any) {\r\n    form.controls.atividade_id.setValue(row.atividade_id);\r\n  }\r\n\r\n  public async removeAtividades(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveAtividades(form: FormGroup, row: any) {\r\n    row.atividade_id = form.controls.atividade_id.value;\r\n    row.atividade = this.atividade?.selectedEntity as Atividade;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\r\n    try {\r\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\r\n    } finally {\r\n      this.dialog.closeSppinerOverlay();\r\n    }* /\r\n    return row;\r\n  }\r\n\r\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'atividade_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }*/\r\n\r\n  /* Entregas * /\r\n  public async addEntregas() {\r\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\r\n  }\r\n\r\n  public async loadEntregas(form: FormGroup, row: any) {\r\n    form.controls.entrega_id.setValue(row.entrega_id);\r\n    form.controls.nome.setValue(row.nome);\r\n  }\r\n\r\n  public async removeEntregas(row: any) {\r\n    row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n \r\n  public async saveEntregas(form: FormGroup, row: any) {\r\n    row.entrega_id = form.controls.entrega_id.value;\r\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\r\n    row.nome = form.controls.nome.value;\r\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\r\n    return row;\r\n  }\r\n\r\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(controlName == 'entrega_id' && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }*/\r\n\r\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos * /\r\n  SUBSTITUIDO POR entity\r\n  public get entityDocumentos(): PlanoTrabalho {\r\n    let plano = this.loadEntity();\r\n    /* Remove campo de documentos para comparar * /\r\n    plano.documentos = [];\r\n    this._entityDocumentos.documentos = [];\r\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\r\n      this._entityDocumentos = plano;  \r\n    }\r\n    /* Atribui novamente o campo de documentos * /\r\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\r\n    return this._entityDocumentos;\r\n  }*/\r\n\r\n  /* Cria um objeto Plano baseado nos dados do formulário */\r\n  public loadEntity(): PlanoTrabalho {\r\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\r\n    plano = this.util.fillForm(plano, this.form!.value);\r\n    plano.usuario = (this.usuario!.selectedEntity || this.entity?.usuario) as Usuario;\r\n    plano.unidade = (this.unidade?.selectedEntity || this.entity?.unidade) as Unidade;\r\n    plano.programa = (this.programa?.selectedEntity || this.entity?.programa) as Programa;\r\n    plano.tipo_modalidade = (this.tipoModalidade!.selectedEntity || this.entity?.tipo_modalidade) as TipoModalidade;\r\n    return plano;\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\r\n    //let plano = this.loadEntity();\r\n    /* Atualiza o documento */\r\n    this.atualizarTcr();\r\n    /* Confirma dados do documento */\r\n    this.documentos?.saveData();\r\n    this.entity!.documentos = this.entity!.documentos.filter((documento: Documento) => {\r\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\");\r\n    });\r\n    /* Salva separadamente as informações do plano */\r\n    this.submitting = true;\r\n    try {\r\n      let requests: Promise<any>[] = [this.dao!.save(this.entity!, this.join)];\r\n      if(this.form!.controls.editar_texto_complementar_unidade.value) requests.push(this.unidadeDao.update(this.entity!.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value}));\r\n      if(this.form!.controls.editar_texto_complementar_usuario.value) requests.push(this.usuarioDao.update(this.entity!.usuario_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value}));\r\n      let responses = await Promise.all(requests);\r\n      this.entity = responses[0] as PlanoTrabalho;\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public onTabSelect(tab: LookupItem) {\r\n    if(tab.key == \"TERMO\") this.atualizarTcr();\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoTrabalho): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\r\n  }\r\n\r\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let documento: Documento = row as Documento;\r\n\r\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\r\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\r\n    }\r\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\r\n\r\n    return result;\r\n  }\r\n\r\n  /*public needSign(documento: Documento): boolean {\r\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.selectedEntity as TipoModalidade);\r\n    const usuario = this.entity!.usuario!; // (this.usuario?.selectedEntity as Usuario);\r\n    const unidade = this.entity!.unidade!; // (this.unidade?.selectedEntity as Unidade);\r\n    const entidade = unidade?.entidade;\r\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\r\n    let ids: string[] = [];\r\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\r\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\r\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n  }*/\r\n\r\n  public async signDocumento(documento: Documento) {\r\n    await this.documentoService.sign([documento]);\r\n    this.cdRef.detectChanges();\r\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\r\n      if(response) {\r\n        this.loading = true;\r\n        this.documentoDao.assinar([documento.id]).then(response => {\r\n          if(response?.length) {\r\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n            let found = documentos.find(x => x.id == documento?.id);\r\n            if(found) found.assinaturas = response[0].assinaturas;\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.gridDocumentos?.reset();\r\n          }\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public get formaContagemCargaHoraria(): UnitWorkload {\r\n    //const forma = (this.unidade?.selectedEntity as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\r\n    //console.log(\"FORMA: \", (this.unidade?.selectedEntity as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\r\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\r\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\r\n  }\r\n\r\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\r\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\r\n  }\r\n\r\n  /*public async addDocumento() {\r\n    const documento = new Documento();\r\n    documento.id = this.dao!.generateUuid();\r\n    documento.plano_trabalho_id = this.entity!.id;\r\n    documento.especie = \"TCR\";\r\n    documento._status = \"ADD\";\r\n    this.go.navigate({route: ['gestao', 'plano-trabalho', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\r\n      if(modalResult) {\r\n        (async () => {\r\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\r\n          if(this.isTermos) {\r\n            this.clearErros();\r\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n            try {\r\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\r\n                especie: \"TCR\",\r\n                conteudo: modalResult?.termo,\r\n                plano_trabalho_id: this.entity!.id,\r\n                status: \"GERADO\"\r\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\r\n            } catch (error: any) {\r\n              this.error(error.message ? error.message : error);\r\n              modalResult = undefined;\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          }\r\n          if(modalResult) {\r\n            documentos.push(modalResult);\r\n            this.form!.controls.documentos.setValue(documentos);\r\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\r\n            await this.initializeData(this.form!);\r\n            this.dialog.closeSppinerOverlay();\r\n          }\r\n          this.cdRef.detectChanges();\r\n        })();\r\n      }\r\n    }});\r\n    return undefined;\r\n  }*/\r\n\r\n  public isVigente(documento: Documento): boolean {\r\n    return this.form!.controls.documento_id.value == documento.id;\r\n  }\r\n\r\n  /*public onProcessoClick(row: any) {\r\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\r\n  }*/\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\" [select]=\"onTabSelect.bind(this)\">\r\n        <tab key=\"DADOS\" label=\"Dados\">\r\n            <div class=\"row\">\r\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de unidade, programa e usuario devem ficar desabilitados nas edições e habilitado apenas nas inclusões; -->\r\n                <input-search #unidade [size]=\"4\" required [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (select)=\"onUnidadeSelect($event)\"></input-search>\r\n                <input-search #programa [size]=\"4\" required [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"programa_id\" [join]=\"joinPrograma\" [dao]=\"programaDao\" (select)=\"onProgramaSelect($event)\"></input-search>\r\n                <input-search #usuario [size]=\"4\" required controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"  required></input-datetime>\r\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"  required></input-datetime>\r\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"  required></input-search>\r\n            </div>\r\n            <ng-container *ngIf=\"tipoModalidade!.selectedEntity?.plano_trabalho_calcula_horas\">\r\n                <div class=\"row\">\r\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"  required></input-workload>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\r\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\r\n                </div>\r\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\r\n                </separator>\r\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\r\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\r\n                </separator>\r\n            </ng-container>\r\n            <separator [title]=\"lex.translate('Entregas') + lex.translate(' do plano de trabalho')\">\r\n                <top-alert *ngIf=\"!form!.controls.programa_id.value?.length || !form!.controls.unidade_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar ' + lex.translate('a Unidade') + ' e ' + lex.translate('o Programa') + '!'\"></top-alert>\r\n                <div *ngIf=\"form!.controls.programa_id.value?.length && form!.controls.unidade_id.value?.length\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\"></plano-trabalho-list-entrega>\r\n                </div>\r\n            </separator>\r\n        </tab>\r\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\r\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\r\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\r\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\r\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\r\n                </editable-form>\r\n            </div>\r\n        </tab//-->\r\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\r\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\r\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\r\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n            <separator title=\"Texto complementar do usuario\">\r\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\r\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\r\n            </separator>\r\n        </tab>\r\n        <tab *ngIf=\"checkFilled(['usuario_id', 'programa_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\r\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\r\n            <div clss=\"row\">\r\n                <documentos #documentos [entity]=\"entity\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \r\n                    [editingId]=\"editingId\" [datasource]=\"datasource\" [template]=\"programa?.selectedEntity?.template_tcr\"></documentos>\r\n            </div>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-accordeon',\r\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\r\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\r\n})\r\nexport class PlanoTrabalhoListAccordeonComponent extends PageFrameBase {\r\n  @ViewChild('accordion', { static: false }) public accordion?: AccordionComponent;\r\n  @Input() usuarioId?: string;\r\n  @Input() set arquivados(value: boolean) {\r\n    if(this._arquivados != value) {\r\n      this._arquivados = value;\r\n      if(this.viewInit) this.loadData(this.entity!, this.form);\r\n    }\r\n  }\r\n  get arquivados(): boolean {\r\n    return this._arquivados;\r\n  }\r\n\r\n  public selectedIndex: number = -1;\r\n  public dao?: PlanoTrabalhoDaoService;\r\n  public planos: PlanoTrabalho[] = [];\r\n\r\n  private _arquivados: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.loadData(this.entity!, this.form);\r\n    })();\r\n  }\r\n\r\n  public async loadData(entity: IIndexable, form?: FormGroup) {\r\n    this.accordion!.loading = true;\r\n    try {\r\n      let dados = await this.dao!.getByUsuario(this.usuarioId!, this.arquivados);\r\n      let agora = (new Date()).getTime();\r\n      this.planos = dados.planos;\r\n      for(var i = 0; i < this.planos.length; i++) {\r\n        if(this.util.asDate(this.planos[i].data_inicio)!.getTime() <= agora && agora <= this.util.asDate(this.planos[i].data_fim)!.getTime() && [\"ATIVO\", \"CONCLUIDO\"].includes(this.planos[i].status)) {\r\n          this.selectedIndex = i;\r\n        }\r\n      }\r\n    } finally {\r\n      this.accordion!.loading = false;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","<accordion #accordion [items]=\"planos\" [selectedIndex]=\"selectedIndex\" [titleTemplate]=\"planoTrabalhoSectionTitle\" [template]=\"planoTrabalhoSection\">\r\n    <ng-template let-item=\"item\" #planoTrabalhoSectionTitle>\r\n        <div class=\"row w-100\">\r\n            <div class=\"col-md-1\">{{'#' + item.numero}}</div>\r\n            <div class=\"col-md-5\">\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"item.unidade?.sigla\" color=\"light\" [hint]=\"lex.translate('Unidade') + ': ' + item.unidade?.nome\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"item.programa?.nome\" color=\"light\" [hint]=\"lex.translate('Programa')\"></badge>\r\n                <badge [icon]=\"entityService.getIcon('TipoModalidade')\" [label]=\"item.tipo_modalidade?.nome\" color=\"light\" [hint]=\"lex.translate('Tipo de modalidade')\"></badge>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                {{dao!.getDateFormatted(item.data_inicio)+\" até \"+dao!.getDateFormatted(item.data_fim)}}\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <badge [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, item.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, item.status)\" [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, item.status)\"></badge>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template let-item=\"item\" #planoTrabalhoSection>\r\n        <plano-trabalho-consolidacao-list [entity]=\"item\"></plano-trabalho-consolidacao-list>\r\n    </ng-template>\r\n</accordion>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list-entrega',\r\n  templateUrl: './plano-trabalho-list-entrega.component.html',\r\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\r\n})\r\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\r\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\r\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() cdRef: ChangeDetectorRef;\r\n\r\n  public get items(): PlanoTrabalhoEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\r\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\r\n    return this.gridControl.value.entregas;\r\n  }\r\n  public options: ToolbarButton[] = [];\r\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\r\n  public planoEntregaDao?: PlanoEntregaDaoService;\r\n  public peeDao?: PlanoEntregaEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public totalForcaTrabalho: number = 0;\r\n  public entregas: LookupItem[] = [];\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\", \"plano_entrega_entrega.plano_entrega:id,unidade_id\", \"plano_entrega_entrega.plano_entrega.unidade:id,sigla\"];\r\n    this.form = this.fh.FormBuilder({\r\n      origem: { default: null },\r\n      orgao: { default: null },\r\n      descricao: { default: \"\" },\r\n      forca_trabalho: { default: 1 },\r\n      plano_trabalho_id: { default: null },\r\n      plano_entrega_id: { default: null },\r\n      plano_entrega_entrega_id: { default: null }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\r\n   * @param control \r\n   * @param controlName \r\n   * @returns \r\n   */\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\r\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\r\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\r\n      if (['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Obrigatório!\";\r\n      if (!!this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)) result = \"Esta entrega está em duplicidade!\"; /* (*2) */\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public validateEntregas(): string | undefined {\r\n    let planoInterval = {start: this.entity!.data_inicio, end: this.entity!.data_fim};\r\n    for(let entrega of this.items) {\r\n      let entregaPlano = entrega.plano_entrega_entrega;\r\n      // valida as datas das entregas quando vinculado a uma entrega do plano de entrega\r\n      if(entregaPlano) {\r\n        let entregaDataFim = entregaPlano!.data_fim ? entregaPlano!.data_fim : (entregaPlano!.data_inicio.getTime() <= this.entity!.data_fim.getTime() ? this.entity!.data_fim : undefined);\r\n        let entregaInterval = {start: entregaPlano!.data_inicio, end: entregaPlano!.data_fim || entregaPlano!.data_inicio};\r\n        if(!entregaDataFim || !this.util.intersection([entregaInterval, planoInterval])) {\r\n          return this.lex.translate(\"Entrega\") + \" \" + entregaPlano!.descricao + \" possui datas incompatíveis (início \" + \r\n            this.util.getDateFormatted(entregaPlano!.data_inicio) + (entregaPlano!.data_fim ? \"e fim \" + this.util.getDateFormatted(entregaPlano!.data_fim) : \"\") + \")\";\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\r\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\r\n   */\r\n  async ngOnInit() {\r\n    super.ngOnInit();\r\n    this.entity = this.metadata?.entity || this.entity;\r\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.novaEntrega = undefined;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\r\n   * @returns \r\n   */\r\n  public async addEntrega() {\r\n    return Object.assign(new PlanoTrabalhoEntrega(), {\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_trabalho_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  /**\r\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\r\n   * @param form \r\n   * @param row \r\n   */\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    let entrega: PlanoTrabalhoEntrega = row;\r\n    form.controls.descricao.setValue(row.descricao);\r\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\r\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\r\n    form.controls.plano_entrega_entrega_id.setValue(null);\r\n    form.controls.orgao.setValue(null);\r\n    if (entrega._status == \"ADD\") { // É uma nova entrega\r\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\r\n    } else if (entrega.plano_entrega_entrega?.plano_entrega?.unidade_id == this.entity!.unidade_id) {\r\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\r\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\r\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\r\n    } else if (entrega.plano_entrega_entrega) {\r\n      form.controls.origem.setValue('OUTRA_UNIDADE');\r\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\r\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\r\n    } else if (!!entrega.orgao?.length) { \r\n      form.controls.origem.setValue('OUTRO_ORGAO');\r\n      form.controls.orgao.setValue(entrega.orgao);\r\n    } else {\r\n      form.controls.origem.setValue('SEM_ENTREGA');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async removeEntrega(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      this.loading = true;\r\n      try {\r\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\r\n      return this.isNoPersist ? false : true; // (*3)\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\r\n   * @param form \r\n   * @param row \r\n   * @returns \r\n   */\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n\r\n    this.entity!._metadata = this.entity!._metadata || {};\r\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\r\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\r\n    this.entity!._metadata.novaEntrega.orgao = this.form?.controls.orgao.value;\r\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\r\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\r\n    this.loading = true;\r\n    try {\r\n      if (!this.isNoPersist) {\r\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\r\n        // TODO: Verificar isso (Foi feito uma modificação no grid para isso não ser mais necessário)\r\n        // if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\r\n      }\r\n    } catch (e: any) {\r\n      this.error(e.message ? e.message : e.toString() || e);\r\n    } finally {\r\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entrega?.selectedItem?.data || null;\r\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\r\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\r\n      this.loading = false;\r\n    }\r\n    return this.entity!._metadata.novaEntrega;\r\n  }\r\n\r\n  /**\r\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\r\n   * @param entregas Array de entregas do plano de trabalho\r\n   * @returns \r\n   */\r\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  /**\r\n   * Método chamado para carregar as entregas da unidade\r\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\r\n   */\r\n  public async carregarEntregas(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\r\n    let planoEntrega = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega:id,nome\", \"unidade\"]) : idPlanoOuPlano;\r\n    let planoEntregaComUnidade = {id: planoEntrega?.id, unidade_id: planoEntrega?.unidade_id, unidade: planoEntrega?.unidade};\r\n    this.entregas = planoEntrega?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: Object.assign(epe, {plano_entrega: planoEntregaComUnidade}) })) || [];\r\n    if(!this.entregas.find(x => x.key == this.form!.controls.plano_entrega_entrega_id.value)) this.form!.controls.plano_entrega_entrega_id.setValue(null);\r\n  }\r\n\r\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\r\n\r\n  public async onOrigemChange(row: any) {\r\n    let value = this.form!.controls.origem.value;\r\n    this.cdRef.detectChanges();\r\n    if (value == 'OUTRO_ORGAO') {\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    } else if(value == 'SEM_ENTREGA') {\r\n      this.form?.controls.orgao.setValue(null);\r\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\r\n    } if (value == 'PROPRIA_UNIDADE') {\r\n      this.form?.controls.orgao.setValue(null);\r\n      this.loading = true;\r\n      try {\r\n        let planosEntregas = await this.planoEntregaDao!.query({where: [[\"unidade_id\", \"==\", this.entity!.unidade_id], [\"status\", \"==\", \"ATIVO\"], [\"data_inicio\", \"<=\", this.entity!.data_fim], [\"data_fim\", \">=\", this.entity!.data_inicio]]}).asPromise();\r\n        if(planosEntregas.length == 1) {\r\n          this.form?.controls.plano_entrega_id.setValue(planosEntregas[0].id);\r\n        } else if(this.planoEntrega?.selectedEntity?.unidade_id != this.entity!.unidade_id) {\r\n          this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    } if (value == 'OUTRA_UNIDADE') {\r\n      this.form?.controls.orgao.setValue(null);\r\n      this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\r\n    }\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event) {\r\n    let planoEntrega = this.planoEntrega?.selectedEntity as PlanoEntrega;\r\n    this.carregarEntregas(planoEntrega);\r\n  }\r\n\r\n  public onEntregaChange(event: Event) {\r\n    let entrega = this.entrega!.selectedItem?.data as PlanoEntregaEntrega;\r\n    if(!this.form!.controls.descricao.value?.length) {\r\n      this.form!.controls.descricao.setValue(entrega?.descricao || \"\");\r\n    }\r\n  }\r\n\r\n  public onForcaTrabalhoChange(row: any) {\r\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\r\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\r\n  }\r\n}\r\n\r\n/*\r\nTESTES\r\n\r\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\r\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\r\nInclusão Entrega Catálogo                          \r\nInclusão Entrega Mesma Unidade                     \r\nInclusão Entrega Outra Unidade                     \r\nAlteração Entrega Catálogo                         \r\nAlteração Entrega Mesma Unidade                    \r\nAlteração Entrega Outra Unidade                    \r\nCancelamento Entrega Catálogo                      \r\nCancelamento Entrega Mesma Unidade                 \r\nCancelamento Entrega Outra Unidade                 \r\nExclusão Entrega Catálogo                          \r\nExclusão Entrega Mesma Unidade                     \r\nExclusão Entrega Outra Unidade                     \r\n\r\n*/\r\n\r\n/*\r\nOBSERVAÇÕES:\r\n\r\n(*2)  this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)\r\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\r\njá existe no grid.\r\n\r\n(*3)  return this.isNoPersist ? false : true;\r\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\r\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\r\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\r\n\r\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\r\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\r\n\r\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\r\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\r\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\r\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\r\n\r\n\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \r\nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\r\n                      |   (foi carregada junto com o Plano)  |                            |        |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\r\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\r\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\r\n                      |                                      |                            | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \r\n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n                      +--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\r\n                      |   editada agora                      |                            | três   |\r\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\r\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\r\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\r\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\r\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\r\n                      |                                      | addEntrega loadEntrega     | três   |\r\n                      |--------------------------------------+----------------------------+--------+------------------------------------\r\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\r\n                      |   já está sendo editada              | loadEntrega                | três   |\r\n------------------------------------------------------------------------------------------+--------+------------------------------------\r\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\r\n\r\n*/","<editable-form noButtons noMargin [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row m-0 p-0\">\r\n        <grid [items]=\"items\" [form]=\"form!\" noMargin #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\r\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\r\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\r\n            <columns>\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnOrigem>\r\n                        <div class=\"w-100 d-flex justify-content-center\">\r\n                            <div class=\"one-per-line\">\r\n                                <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\r\n                                <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\r\n                                <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editOrigem>\r\n                        <input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select>\r\n                        <input-search *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" label #planoEntrega [placeholder]=\"'Selecione o ' + lex.translate('Plano de entrega')\" [join]=\"['entregas.entrega:id,nome', 'unidade']\" [where]=\"origem?.value == 'PROPRIA_UNIDADE' ? [['unidade_id', '==', entity?.unidade_id]] : undefined\" [selectParams]=\"origem?.value == 'PROPRIA_UNIDADE' ? {filter: {unidade_id: entity?.unidade_id}} : undefined\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" (change)=\"onPlanoEntregaChange($event)\"></input-search>\r\n                        <input-text *ngIf=\"origem?.value == 'OUTRO_ORGAO'\" #orgao controlName=\"orgao\" placeholder=\"Órgão\"></input-text>\r\n                    </ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\r\n                    <ng-template let-row=\"row\" #columnEntrega>\r\n                        <small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small>\r\n                        <div *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(planoTrabalhoService.tipoEntrega(row, entity).tipo)\" class=\"w-100\">\r\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_inicio)\" hint=\"Data de início\"></badge>\r\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_fim)\" hint=\"Data de término\"></badge>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editEntrega>\r\n                        <input-select *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" #entrega nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregas\" (change)=\"onEntregaChange($event)\"></input-select>\r\n                        <div *ngIf=\"entrega?.selectedItem\" class=\"w-100\">\r\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(entrega!.selectedItem!.data!.data_inicio)\" hint=\"Data de início\"></badge>\r\n                            <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(entrega!.selectedItem!.data!.data_fim)\" hint=\"Data de término\"></badge>\r\n                        </div>\r\n                    </ng-template>\r\n                </column>\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\r\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                        <div class=\"text-center\">\r\n                            <small><strong>% Força Trab.</strong></small><br>\r\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\r\n                </column>\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\r\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\r\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\r\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\r\n                </column>\r\n                <column type=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\r\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\r\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\r\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\" } },\r\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\r\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\r\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoTrabalhoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\r\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\r\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\r\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\r\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\r\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\r\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\r\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoTrabalhoFormComponent,\r\n    PlanoTrabalhoListComponent,\r\n    PlanoTrabalhoListEntregaComponent,\r\n    PlanoTrabalhoFormTermoComponent,\r\n    PlanoTrabalhoConsolidacaoComponent,\r\n    PlanoTrabalhoConsolidacaoListComponent,\r\n    PlanoTrabalhoConsolidacaoFormComponent,\r\n    PlanoTrabalhoListAccordeonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PlanoTrabalhoRoutingModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoTrabalhoModule { }\r\n"],"names":["DaoBaseService","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","constructor","injector","dataset","deeps","deepsFilter","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoTrabalhoConsolidacao","data","data_inicio","Date","data_fim","status","avaliacoes","status_historico","plano_trabalho_id","avaliacao_id","initialization","ChangeDetectorRef","EditableFormComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","Atividade","PlanoTrabalhoConsolidacaoOcorrencia","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","AtividadeDaoService","AtividadeService","CalendarService","ɵɵelement","ɵɵproperty","ctx_r31","entityService","getIcon","row_r30","tipo_atividade","nome","ɵɵelementStart","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_badge_2_Template","ɵɵelementEnd","ɵɵtext","ɵɵadvance","numero","ctx_r19","atividadeService","onIdClick","bind","ɵɵtextInterpolate","descricao","ɵɵlistener","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template_input_search_select_0_listener","$event","ɵɵrestoreView","_r35","ctx_r34","ɵɵnextContext","ɵɵresetView","onTipoAtividadeSelect","ctx_r21","lex","translate","formAtividade","controls","tipo_atividade_id","tipoAtividadeDao","auth","hasPermissionTo","undefined","tempo_r38","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_9_badge_1_Template","ctx_r23","temposAtividade","row_r36","etiqueta_r43","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_12_table_3_tr_1_i_2_Template","check_r45","checked","texto","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_12_table_3_tr_1_Template","row_r39","checklist","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_12_badge_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_12_separator_2_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_12_table_3_Template","progresso","etiquetas","length","ctx_r52","i_r54","check_r53","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_5_tr_1_Template","ctx_r51","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_Template_input_select_details_2_listener","_r56","ctx_r55","onEtiquetaConfigClick","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_separator_4_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_5_Template","ctx_r27","formEdit","addItemHandleEtiquetas","etiqueta","row_r48","status_r60","color","icon","label","row_r57","_r17","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_17_badge_2_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_17_comentarios_widget_3_Template","documento_requisicao","ctx_r29","getStatus","entity","editing","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_9_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_12_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_17_Template","row_r16","atividades","ctx_r4","disabled","addAtividade","entrega","loadAtividade","removeAtividade","saveAtividade","_r18","_r20","_r22","_r24","_r26","onColumnProgressoEtiquetasChecklistEdit","onColumnProgressoEtiquetasChecklistSave","_r28","atividadeOptionsMetadata","dynamicOptions","dynamicButtons","row_r62","badge","titulo","cor","ctx_r8","row_r63","row_r64","forca_trabalho","row_r65","tipo_motivo_afastamento","icone","ɵɵtextInterpolate1","observacao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","bindEntity","_disabled","cdRef","detectChanges","joinAtividade","itemsEntregas","itemsOcorrencias","itemsAfastamentos","validateEntrega","controlName","result","indexOf","validateOcorrencia","includes","util","isDataValid","getTime","formOcorrencia","get","dao","consolidacaoOcorrenciaDao","atividadeDao","calendar","ocorrenciaDao","planoTrabalhoService","planoEntregaService","fh","FormBuilder","default","comentarios","esforco","tempo_planejado","refreshId","atividadeRefreshId","removeId","atividadeRemoveId","refresh","loadData","form","_metadata","planoTrabalhoConsolidacaoFormComponent","id","atividade","forEach","foundIndex","findIndex","x","getById","then","splice","ngAfterViewInit","_this","_asyncToGenerator","loadConsolidacao","dados","entregas","map","plano_entrega_entrega","plano_entrega","planosEntregas","find","pe","plano_entrega_id","filter","y","plano_trabalho_entrega_id","tipoEntrega","planoTrabalho","programa","ocorrencias","afastamentos","unidade","plano_trabalho","_this2","gridEntregas","loading","dadosConsolidacao","_this3","efemerides","calculaDataTempoUnidade","carga_horaria","tempoPlanejado","horasUteis","dataInicio","setTime","dataFim","generateUuid","plano_trabalho_entrega","plano_trabalho_consolidacao","demandante","usuario","data_distribuicao","data_estipulada_entrega","data_entrega","tempo_despendido","tempoUtil","demandante_id","usuario_id","unidade_id","metadados","atrasado","tempo_atraso","pausado","iniciado","concluido","avaliado","arquivado","produtividade","extra","_status","row","_this4","patchValue","_this5","confirm","dialog","delete","_this6","markAllAsTouched","valid","fillForm","save","atividadeDynamicButtons","push","Object","assign","BUTTON_EDIT","BUTTON_DELETE","_this7","setValue","merge","a","b","key","config","clone","_this8","saved","update","error","go","navigate","route","params","modal","modalClose","modalResult","selectedItem","item","textHash","validateLookupItem","loadTipoAtividade","tipoAtividade","buildEtiquetas","buildChecklist","comentarioAtividade","addOcorrencia","_this9","plano_trabalho_consolidacao_id","loadOcorrencia","_this10","removeOcorrencia","_this11","ocorrencia","saveOcorrencia","_this12","ocorrenciaDynamicButtons","addAfastamento","_this13","metadata","consolidacao","filterSnapshot","querySnapshot","afastamentoDynamicButtons","OPTION_INFORMACOES","onClick","doc","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_5_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_10_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_13_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_16_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_33_Template","_r1","_r3","_r5","_r7","_r9","_r13","GridComponent","isDisabled","row_r14","ctx_r6","getDateFormatted","row_r17","ctx_r12","lookup","getColor","CONSOLIDACAO_STATUS","row_r19","getValue","PlanoTrabalhoConsolidacaoListComponent","items","consolidacoes","validate","title","code","agora","v","asDate","grid","expand","addConsolidacao","removeConsolidacao","saveConsolidacao","concluir","submitting","response","consolidacaoForm","refreshExpanded","message","cancelarConclusao","avaliar","editarAvaliacao","fazerRecurso","cancelarAvaliacao","isUsuarioConsolidacao","isGestor","gestor","gestor_substituto","BOTAO_CONCLUIR","hint","BOTAO_CANCELAR_CONCLUSAO","BOTAO_AVALIAR","BOTAO_EDITAR_AVALIACAO","BOTAO_FAZER_RECURSO","BOTAO_CANCELAR_AVALIACAO","diasParaConcluirConsolidacao","PlanoTrabalhoConsolidacaoListComponent_Query","PlanoTrabalhoConsolidacaoListComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_18_Template","_r11","TabsComponent","UnidadeDaoService","data_r13","url_foto","apelido","data_r14","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_1_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_3_Template","usuario_r8","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_div_2_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_Template","ɵɵtextInterpolate2","ctx_r5","sigla","usuarios","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_Template","ctx_r1","_r4","ctx_r3","arquivados","PlanoTrabalhoConsolidacaoComponent","loadingUnidade","unidadeDao","tabs","active","queryParams","tab","unidadeGestor","lotados","PlanoTrabalhoConsolidacaoComponent_Query","PlanoTrabalhoConsolidacaoComponent_tab_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_4_Template","isModal","_r2","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","numero_processo","formValidation","tipoDocumento","selectedEntity","tipo_documento_id","titleEdit","join","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","tempo_total","tempo_proporcional","programa_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","Promise","all","loadSearch","tipoModalidade","tipo_modalidade","processo","id_processo","hora","initializeData","saveData","resolve","reject","codigo_tipo_documento","codigo","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","formDisabled","ganho_produtividade","DocumentoService","TemplateService","ctx_r10","horasTotais","ctx_r11","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_16_Template_input_workload_change_2_listener","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_16_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_16_separator_6_Template","ɵɵelementContainerEnd","onFormaContagemCargaHorariaChange","ctx_r7","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","ctx_r9","needSign","extraTags","editingId","datasource","template_tcr","PlanoTrabalhoFormComponent","joinPrograma","documentoService","templateService","modalWidth","unidade_texto_complementar","usuario_texto_complementar","ngOnInit","segment","url","path","action","atualizarTcr","loadEntity","textoUsuario","textoUnidade","documento","template","isTermos","onUnidadeSelect","selected","entidade","texto_complementar_plano","onProgramaSelect","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","di","df","diaI","setDate","getDate","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","feriados","urlParams","carga_horaria_padrao","plano","fill","requests","responses","onTabSelect","documentoDynamicButtons","signDocumento","html","conteudo","sign","unit","isVigente","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_search_select_9_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_12_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_13_listener","PlanoTrabalhoFormComponent_ng_container_16_Template","PlanoTrabalhoFormComponent_top_alert_18_Template","PlanoTrabalhoFormComponent_div_19_Template","PlanoTrabalhoFormComponent_tab_20_Template","PlanoTrabalhoFormComponent_tab_21_Template","ɵɵpureFunction0","_c11","plano_trabalho_calcula_horas","checkFilled","_c12","_c13","item_r5","ctx_r2","PLANO_TRABALHO_STATUS","item_r6","PlanoTrabalhoListAccordeonComponent","_arquivados","viewInit","selectedIndex","planos","accordion","getByUsuario","usuarioId","i","PlanoTrabalhoListAccordeonComponent_Query","PlanoTrabalhoListAccordeonComponent_ng_template_2_Template","PlanoTrabalhoListAccordeonComponent_ng_template_4_Template","PlanoTrabalhoEntrega","PlanoTrabalhoEntregaDaoService","PlanoEntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","orgao","PlanoTrabalhoListEntregaComponent_ng_template_8_badge_3_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_badge_4_Template","plano_entrega_entrega_id","PlanoTrabalhoListEntregaComponent_ng_template_10_input_search_2_Template_input_search_change_0_listener","_r37","ctx_r36","onPlanoEntregaChange","ctx_r33","_c3","_r32","ɵɵpureFunction1","_c5","_c4","_c7","_c6","planoEntregaDao","PlanoTrabalhoListEntregaComponent_ng_template_10_Template_input_select_change_0_listener","restoredCtx","_r40","row_r31","ctx_r39","onOrigemChange","PlanoTrabalhoListEntregaComponent_ng_template_10_input_search_2_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_input_text_3_Template","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","_c8","ctx_r43","row_r42","PlanoTrabalhoListEntregaComponent_ng_template_15_div_2_Template","tipo","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template_input_select_change_0_listener","_r50","ctx_r49","onEntregaChange","ctx_r46","ctx_r47","PlanoTrabalhoListEntregaComponent_ng_template_17_input_select_0_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_div_1_Template","ctx_r14","totalForcaTrabalho","row_r52","PlanoTrabalhoListEntregaComponent_ng_template_24_Template_input_text_change_0_listener","_r55","row_r53","ctx_r54","onForcaTrabalhoChange","ctx_r18","ctx_r24","PlanoTrabalhoListEntregaComponent","gridControl","options","e","planoTrabalhoDao","peeDao","validateEntregas","planoInterval","start","end","entregaPlano","entregaDataFim","entregaInterval","intersection","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","novaEntrega","addEntrega","loadEntrega","carregarEntregas","removeEntrega","isNoPersist","saveEntrega","toString","reduce","idPlanoOuPlano","planoEntrega","planoEntregaComUnidade","epe","query","where","asPromise","onSelectClick","Event","index","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_10_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_17_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_24_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","PlanoTrabalhoListEntregaComponent_ng_template_31_Template","groupBy","_r15","_r19","_r21","_r23","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","BadgeComponent","i16","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}