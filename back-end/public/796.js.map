{"version":3,"file":"796.js","mappings":"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","sources":["./src/app/dao/comparecimento-dao.service.ts","./src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service.ts","./src/app/models/plano-trabalho-consolidacao.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-consolidacao/plano-trabalho-consolidacao.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { Comparecimento } from '../models/comparecimento.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComparecimentoDaoService extends DaoBaseService<Comparecimento> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"Comparecimento\", injector);\r\n    this.searchFields = [\"data_comparecimento\"];\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\nimport { DaoBaseService } from './dao-base.service';\nimport { TemplateDataset } from '../modules/uteis/templates/template.service';\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from '../models/plano-trabalho-consolidacao-ocorrencia.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoTrabalhoConsolidacaoOcorrenciaDaoService extends DaoBaseService<PlanoTrabalhoConsolidacaoOcorrencia> {\n\n  constructor(protected injector: Injector) {\n    super(\"PlanoTrabalhoConsolidacaoOcorrencia\", injector);\n  }\n\n  public dataset(deeps?: string[]): TemplateDataset[] {\n    return this.deepsFilter([], deeps);\n  }\n\n}\n\n","import { Avaliacao, HasAvaliacao } from './avaliacao.model';\nimport { Base } from './base.model';\nimport { PlanoTrabalho } from './plano-trabalho.model';\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\n\nexport type PlanoTrabalhoConsolidacaoStatus = 'CONCLUIDO' | 'AVALIADO' | 'INCLUIDO';\n\nexport class PlanoTrabalhoConsolidacao extends Base implements HasAvaliacao, HasStatus {\n    public plano_trabalho?: PlanoTrabalho;\n    public avaliacao?: Avaliacao;\n\n    public data_inicio: Date = new Date();\n    public data_fim: Date = new Date();\n    public status: PlanoTrabalhoConsolidacaoStatus = \"INCLUIDO\"; // Status atual da consolidação\n    public avaliacoes: Avaliacao[] = [];\n    public status_historico: StatusJustificativa[] = [];\n\n    public plano_trabalho_id: string = \"\";\n    public avaliacao_id: string | null = null;\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { ConsolidacaoDados, PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\nimport { PlanoTrabalhoConsolidacaoOcorrenciaDaoService } from 'src/app/dao/plano-trabalho-consolidacao-ocorrencia-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { Atividade, AtividadeChecklist } from 'src/app/models/atividade.model';\nimport { PlanoTrabalhoConsolidacaoOcorrencia } from 'src/app/models/plano-trabalho-consolidacao-ocorrencia.model';\nimport { Afastamento } from 'src/app/models/afastamento.model';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { BadgeTrabalho, PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { TipoAtividadeDaoService } from 'src/app/dao/tipo-atividade-dao.service';\nimport { PlanoEntregaService } from '../../plano-entrega/plano-entrega.service';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { AtividadeOptionsMetadata, AtividadeService } from '../../atividade/atividade.service';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { CalendarService } from 'src/app/services/calendar.service';\nimport { SelectItem } from 'src/app/components/input/input-base';\nimport { TipoAtividade } from 'src/app/models/tipo-atividade.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { Comparecimento } from 'src/app/models/comparecimento.model';\nimport { ComparecimentoDaoService } from 'src/app/dao/comparecimento-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\n\nexport type ConsolidacaoEntrega = {\n  id: string,\n  entrega: PlanoTrabalhoEntrega,\n  badge: BadgeTrabalho,\n  atividades: Atividade[]\n};\n\n@Component({\n  selector: 'plano-trabalho-consolidacao-form',\n  templateUrl: './plano-trabalho-consolidacao-form.component.html',\n  styleUrls: ['./plano-trabalho-consolidacao-form.component.scss']\n})\nexport class PlanoTrabalhoConsolidacaoFormComponent extends PageFrameBase {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridEntregas', { static: false }) public gridEntregas?: GridComponent;\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\n  @Input() cdRef: ChangeDetectorRef;\n  @Input() planoTrabalho?: PlanoTrabalho;\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\n  @Input() set entity(value: PlanoTrabalhoConsolidacao | undefined) { super.entity = value; this.bindEntity(); } get entity(): PlanoTrabalhoConsolidacao | undefined { return super.entity; }\n  @Input() set disabled(value: boolean) {\n    if(this._disabled != value || this.atividadeOptionsMetadata.disabled !== value) {\n      this._disabled = value;\n      this.atividadeOptionsMetadata.disabled = value;\n      this.cdRef.detectChanges();\n    }\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  public consolidacaoOcorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\n  public ocorrenciaDao: PlanoTrabalhoConsolidacaoOcorrenciaDaoService;\n  public comparecimentoDao: ComparecimentoDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public formAtividade: FormGroup;\n  public formOcorrencia: FormGroup;\n  public formComparecimento: FormGroup;\n  public formEdit: FormGroup;\n  public unidade?: Unidade;\n  public dao: PlanoTrabalhoConsolidacaoDaoService;\n  public atividadeDao: AtividadeDaoService;\n  public atividadeService: AtividadeService;\n  public calendar: CalendarService;\n  public joinAtividade: string[] = ['demandante', 'usuario', 'tipo_atividade', 'comentarios.usuario:id,nome,apelido'];\n  public tipoAtividadeDao: TipoAtividadeDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public planoEntregaService: PlanoEntregaService;\n  public itemsEntregas: ConsolidacaoEntrega[] = [];\n  public etiquetas: LookupItem[] = [];\n  public checklist?: AtividadeChecklist[];\n  public itemsOcorrencias: PlanoTrabalhoConsolidacaoOcorrencia[] = [];\n  public itemsComparecimentos: Comparecimento[] = [];\n  public itemsAfastamentos: Afastamento[] = [];\n  public atividadeOptionsMetadata: AtividadeOptionsMetadata;\n  public programa?: Programa;\n  \n  private _disabled: boolean = true;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\n    this.consolidacaoOcorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.comparecimentoDao = injector.get<ComparecimentoDaoService>(ComparecimentoDaoService);\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\n    this.atividadeService = injector.get<AtividadeService>(AtividadeService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.ocorrenciaDao = injector.get<PlanoTrabalhoConsolidacaoOcorrenciaDaoService>(PlanoTrabalhoConsolidacaoOcorrenciaDaoService);\n    this.tipoAtividadeDao = injector.get<TipoAtividadeDaoService>(TipoAtividadeDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.formAtividade = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      etiquetas: { default: [] },\n      checklist: { default: [] },\n      comentarios: { default: [] },\n      esforco: { default: 0 },\n      tempo_planejado: { default: 0 },\n      data_distribuicao: {default: new Date()},\n      data_estipulada_entrega: {default: new Date()},\n      data_entrega: {default: new Date()},\n      tipo_atividade_id: {default: null}\n    }, this.cdRef, this.validateAtividade);\n    this.formOcorrencia = this.fh.FormBuilder({\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      descricao: { default: \"\" }\n    }, this.cdRef, this.validateOcorrencia);\n    this.formComparecimento = this.fh.FormBuilder({\n      data_comparecimento: { default: new Date() },\n      unidade_id: { default: \"\" },\n      detalhamento: { default: \"\" }\n    }, this.cdRef, this.validateComparecimento);\n    this.formEdit = this.fh.FormBuilder({\n      progresso: { default: 0 },\n      etiquetas: { default: [] },\n      etiqueta: { default: null }\n    });\n    this.atividadeOptionsMetadata = {\n      refreshId: this.atividadeRefreshId.bind(this),\n      removeId: this.atividadeRemoveId.bind(this),\n      refresh: this.refresh.bind(this)\n    }\n  }\n\n  public refresh() {\n    this.loadData(this.entity!, this.form);\n  }\n\n  public bindEntity() {\n    if(this.entity) {\n      this.entity._metadata = this.entity._metadata || {};\n      this.entity._metadata.planoTrabalhoConsolidacaoFormComponent = this;\n    }\n  }\n\n  public atividadeRefreshId(id: string, atividade?: Atividade) {\n    this.itemsEntregas.forEach(entrega => {\n      let foundIndex = entrega.atividades.findIndex(x => x.id == id);\n      if(foundIndex >= 0) {\n        if(atividade) {\n          entrega.atividades[foundIndex] = atividade;\n        } else {\n          this.atividadeDao.getById(id, this.joinAtividade).then(atividade => { if(atividade) entrega.atividades[foundIndex] = atividade; });\n        }\n      }\n    });\n    this.cdRef.detectChanges();\n  }\n\n  public atividadeRemoveId(id: string) {\n    this.itemsEntregas.forEach(entrega => {\n      let foundIndex = entrega.atividades.findIndex(x => x.id == id);\n      if(foundIndex >= 0) entrega.atividades.splice(foundIndex, 1);\n    });\n    this.cdRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    (async () => {\n      await this.loadData(this.entity!, this.form);\n    })();\n  }\n\n  public validateAtividade = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if(['data_distribuicao', 'data_estipulada_entrega', 'data_entrega'].includes(controlName) && !this.util.isDataValid(control.value)) {\n      result = \"Inválido\";\n    } else if(controlName == 'data_estipulada_entrega' && control.value.getTime() < this.formAtividade?.controls.data_distribuicao.value.getTime()) {\n      result = \"Menor que distribuição\";\n    } else if(controlName == 'data_entrega' && control.value.getTime() < this.formAtividade?.controls.data_distribuicao.value.getTime()) {\n      result = \"Menor que distribuição\";\n    }\n    return result;\n  }\n\n  public validateOcorrencia = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if(['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\n      result = \"Inválido\";\n    } else if(controlName == 'data_fim' && control.value.getTime() < this.formOcorrencia?.controls.data_inicio.value.getTime()) {\n      result = \"Menor que início\";\n    } \n    return result;\n  }\n\n  public validateComparecimento = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['detalhamento', 'unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if(controlName == 'data_comparecimento' && this.entity && !this.util.between(control.value, {start: this.entity!.data_inicio, end: this.entity!.data_fim})) {\n      result = \"Inválido\";\n    } \n    return result;\n  }\n\n  public loadConsolidacao(dados: ConsolidacaoDados) {\n    this.itemsEntregas = dados.entregas.map(x => {\n      if(x.plano_entrega_entrega) x.plano_entrega_entrega.plano_entrega = dados.planosEntregas.find(pe => pe.id == x.plano_entrega_entrega?.plano_entrega_id);\n      let result = {\n        id: x.id,\n        entrega: x,\n        atividades: dados.atividades.filter(y => y.plano_trabalho_entrega_id == x.id),\n        badge: this.planoTrabalhoService.tipoEntrega(x, dados.planoTrabalho)\n      };\n      return result;\n    });\n    this.programa = dados.programa;\n    this.planoTrabalho = dados.planoTrabalho;\n    this.itemsOcorrencias = dados.ocorrencias;\n    this.itemsComparecimentos = dados.comparecimentos;\n    this.itemsAfastamentos = dados.afastamentos;\n    this.unidade = dados.planoTrabalho.unidade || this.entity!.plano_trabalho?.unidade;\n    this.cdRef.detectChanges();\n  }\n\n  public async loadData(entity: IIndexable, form?: FormGroup) {\n    this.gridEntregas!.loading = true;\n    this.cdRef.detectChanges();\n    try {\n      let dados = await this.dao!.dadosConsolidacao(entity.id);\n      this.loadConsolidacao(dados);\n    } finally {\n      this.gridEntregas!.loading = false;\n      this.cdRef.detectChanges();\n    }\n  }  \n  \n  /***************************************************************************************\n  * Atividades \n  ****************************************************************************************/\n  public async addAtividade(entrega: PlanoTrabalhoEntrega) {\n    let planoTrabalho: PlanoTrabalho | undefined = entrega.plano_trabalho || this.entity!.plano_trabalho;\n    let efemerides = this.calendar.calculaDataTempoUnidade(this.entity!.data_inicio, this.entity!.data_fim, planoTrabalho!.carga_horaria, this.unidade!, \"ENTREGA\");\n    const tempoPlanejado = this.calendar.horasUteis(this.entity!.data_inicio, this.entity!.data_fim, planoTrabalho!.carga_horaria, this.unidade!, \"DISTRIBUICAO\");\n    const dataInicio = this.util.setTime(this.entity!.data_inicio, 0, 0, 0);\n    const dataFim = this.util.setTime(this.entity!.data_fim, 23, 59, 59);\n    return new Atividade({\n      id: this.dao!.generateUuid(),\n      plano_trabalho: planoTrabalho,\n      plano_trabalho_entrega: entrega,\n      plano_trabalho_consolidacao: this.entity,\n      demandante: this.auth.usuario,\n      usuario: this.auth.usuario,\n      unidade: this.unidade,\n      data_distribuicao: dataInicio,\n      carga_horaria: planoTrabalho!.carga_horaria,\n      data_estipulada_entrega: dataFim,\n      data_inicio: dataInicio,\n      data_entrega: dataFim,\n      tempo_planejado: tempoPlanejado,\n      tempo_despendido: efemerides?.tempoUtil || 0,\n      status: 'CONCLUIDO',\n      progresso: 100,\n      plano_trabalho_id: this.entity!.plano_trabalho_id,\n      plano_trabalho_entrega_id: entrega.id,\n      plano_trabalho_consolidacao_id: this.entity!.id,\n      demandante_id: this.auth.usuario!.id,\n      usuario_id: this.auth.usuario!.id,\n      unidade_id: this.unidade!.id,\n      metadados: { // Simula os metadados enviados pelo servidor\n        atrasado: false,\n        tempo_despendido: 0,\n        tempo_atraso: 0,\n        pausado: false,\n        iniciado: true,\n        concluido: true,\n        avaliado: false,\n        arquivado: false,\n        produtividade: 0,\n        extra: undefined,\n        _status: []\n      }\n    });\n  }\n\n  public async loadAtividade(form: FormGroup, row: any) {\n    this.formAtividade.patchValue(row);\n    this.cdRef.detectChanges();\n  }\n\n  public async removeAtividade(atividades: Atividade[], row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let atividade = row as Atividade;\n        await this.atividadeDao?.delete(atividade);\n        atividades.splice(atividades.findIndex(x => x.id == atividade.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveAtividade(form: FormGroup, row: any) {\n    let result = undefined;\n    this.formAtividade.markAllAsTouched();\n    if (this.formAtividade!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      this.util.fillForm(row, this.formAtividade!.value);\n      this.submitting = true;\n      try {\n        result = await this.atividadeDao?.save(row, this.joinAtividade, ['etiquetas', 'checklist', 'comentarios', 'pausas', 'tarefas']);\n      } finally {\n        this.submitting = false;\n      }\n      this.atividadeRefreshId(row.id, result);\n    }\n    return result;\n  }\n\n  public atividadeDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_EDIT, {}));\n    result.push(Object.assign({}, this.gridEntregas!.BUTTON_DELETE, {}));\n    return result;\n  }  \n\n  public async onColumnProgressoEtiquetasChecklistEdit(row: any) {\n    this.formEdit.controls.progresso.setValue(row.progresso);\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\n    this.formEdit.controls.etiqueta.setValue(null);\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n    this.checklist = this.util.clone(row.checklist);\n  }\n\n  public async onColumnProgressoEtiquetasChecklistSave(row: any) {\n    try {\n      const saved = await this.atividadeDao!.update(row.id, {\n        progresso: this.formEdit.controls.progresso.value,\n        etiquetas: this.formEdit.controls.etiquetas.value,\n        checklist: this.checklist\n      });\n      row.progresso = this.formEdit.controls.progresso.value;\n      row.checklist = this.checklist;\n      return !!saved;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public onEtiquetaConfigClick() {\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\n      modal: true, modalClose: (modalResult) => {\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\n        this.cdRef.detectChanges();\n      }\n    });\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    if (this.etiqueta && this.etiqueta.selectedItem) {\n      const item = this.etiqueta.selectedItem;\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\n      if (this.util.validateLookupItem(this.formEdit.controls.etiquetas.value, key)) {\n        result = {\n          key: key,\n          value: item.value,\n          color: item.color,\n          icon: item.icon\n        };\n        this.formEdit.controls.etiqueta.setValue(null);\n      }\n    }\n    return result;\n  };\n\n  public loadTipoAtividade(tipoAtividade: TipoAtividade | undefined) {\n    if(tipoAtividade) {\n      this.etiquetas = this.atividadeService.buildEtiquetas(this.unidade, tipoAtividade);\n      this.atividadeService.buildChecklist(tipoAtividade, this.formAtividade.controls.checklist);\n      this.formAtividade.controls.esforco.setValue(tipoAtividade?.esforco || 0);\n    } else {\n      this.etiquetas = [];\n      this.formAtividade.controls.esforco.setValue(0);\n    }\n    this.cdRef.detectChanges();\n  }\n\n  public onTipoAtividadeSelect(item: SelectItem) {\n    const tipoAtividade: TipoAtividade | undefined = item.entity as TipoAtividade;\n    this.loadTipoAtividade(tipoAtividade);\n    this.atividadeService.comentarioAtividade(tipoAtividade, this.formAtividade!.controls.comentarios);\n    this.cdRef.detectChanges();\n  }\n\n  /***************************************************************************************\n  * Ocorrências \n  ****************************************************************************************/\n  public async addOcorrencia() {\n    return new PlanoTrabalhoConsolidacaoOcorrencia({\n      plano_trabalho_consolidacao_id: this.entity!.id\n    });\n  }\n\n  public async loadOcorrencia(form: FormGroup, row: any) {\n    this.formAtividade.patchValue({\n      data_inicio: row.data_inicio,\n      data_fim: row.data_fim,\n      descricao: row.descricao\n    });\n    this.cdRef.detectChanges();\n  }\n\n  public async removeOcorrencia(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let ocorrencia = row as PlanoTrabalhoConsolidacaoOcorrencia;\n        await this.consolidacaoOcorrenciaDao?.delete(ocorrencia);\n        this.itemsOcorrencias.splice(this.itemsOcorrencias.findIndex(x => x.id == ocorrencia.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveOcorrencia(form: FormGroup, row: any) {\n    let result = undefined;\n    this.formOcorrencia.markAllAsTouched();\n    if (this.formOcorrencia!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      row.data_inicio = form.controls.data_inicio.value;\n      row.data_fim = form.controls.data_fim.value;\n      row.descricao = form.controls.descricao.value;\n      this.submitting = true;\n      try {\n        result = await this.consolidacaoOcorrenciaDao?.save(row);\n      } finally {\n        this.submitting = false;\n      }\n    }\n    return result;\n  }\n\n  public ocorrenciaDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\n    return result;\n  }  \n\n  /***************************************************************************************\n  * Comparecimento \n  ****************************************************************************************/\n  public async addComparecimento() {\n    return new Comparecimento({\n      unidade_id: this.unidade?.id,\n      unidade: this.unidade,\n      plano_trabalho_consolidacao_id: this.entity!.id\n    });\n  }\n\n  public async loadComparecimento(form: FormGroup, row: any) {\n    this.formComparecimento.patchValue({\n      data_comparecimento: row.data_comparecimento,\n      unidade_id: row.unidade_id,\n      detalhamento: row.detalhamento\n    });\n    this.cdRef.detectChanges();\n  }\n\n  public async removeComparecimento(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let comparecimento = row as Comparecimento;\n        await this.comparecimentoDao?.delete(comparecimento);\n        this.itemsComparecimentos.splice(this.itemsComparecimentos.findIndex(x => x.id == comparecimento.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveComparecimento(form: FormGroup, row: any) {\n    let result = undefined;\n    this.formComparecimento.markAllAsTouched();\n    if (this.formComparecimento!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      row.data_comparecimento = form.controls.data_comparecimento.value;\n      row.detalhamento = form.controls.detalhamento.value;\n      row.plano_trabalho_consolidacao_id = this.entity!.id;\n      row.unidade_id = form.controls.unidade_id.value;\n      this.submitting = true;\n      try {\n        result = await this.comparecimentoDao?.save(row);\n      } finally {\n        this.submitting = false;\n      }\n    }\n    return result;\n  }\n\n  public comparecimentoDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\n    return result;\n  }  \n\n  /***************************************************************************************\n  * Afastamentos\n  ****************************************************************************************/\n  public async addAfastamento() {\n    this.go.navigate({route: ['cadastros', 'afastamento', 'new']}, {\n      metadata: { consolidacao: this.entity },\n      filterSnapshot: undefined,\n      querySnapshot: undefined,\n      modalClose: (modalResult) => {\n        if(modalResult) this.refresh();\n      }\n    });\n  }\n\n  public afastamentoDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push(Object.assign({}, this.OPTION_INFORMACOES, { onClick: (doc: Afastamento) => this.go.navigate({route: [\"cadastros\", \"afastamento\", doc.id, \"consult\"]}) }));\n    //result.push({ hint: \"Adicionar filho\", icon: \"bi bi-plus-circle\", onClick: this.addChildProcesso.bind(this) });\n    return result;\n  }  \n \n}\n","<separator collapse [collapsed]=\"false\" [title]=\"lex.translate('Atividades')\" [icon]=\"entityService.getIcon('Atividade')\">\n    <grid [items]=\"itemsEntregas\" #gridEntregas [minHeight]=\"0\" expanded>\n        <columns>\n            <column type=\"expand\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\n                <ng-template let-row=\"row\" #columnConsolidacao>\n                    <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\n                </ng-template>\n                <ng-template let-row=\"row\" #columnExpandedConsolidacao>\n                    <grid [items]=\"row.atividades\" [minHeight]=\"0\" #gridAtividade [form]=\"formAtividade\" [hasAdd]=\"!disabled\" [hasDelete]=\"false\" [hasEdit]=\"false\"\n                        [add]=\"addAtividade.bind(this, row.entrega)\" [load]=\"loadAtividade.bind(this)\" [remove]=\"removeAtividade.bind(this, row.atividades)\" [save]=\"saveAtividade.bind(this)\" editable>\n                        <columns>\n                            <column [title]=\"'#ID/' + lex.translate('Tipo de Atividade') + '\\nDescrição'\" [template]=\"columnAtividadeDescricao\" [editTemplate]=\"editAtividadeDescricao\">\n                                <ng-template let-row=\"row\" #columnAtividadeDescricao>\n                                    <span class=\"text-nowrap d-block\">\n                                        <badge icon=\"bi bi-hash\" [label]=\"row.numero\" color=\"light\" [data]=\"row.numero\" [click]=\"atividadeService.onIdClick.bind(this)\"></badge>\n                                        <badge *ngIf=\"row.tipo_atividade\" [icon]=\"entityService.getIcon('TipoAtividade')\" [label]=\"row.tipo_atividade.nome\" color=\"light\"></badge>\n                                    </span>\n                                    <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n                                </ng-template>\n                                <ng-template let-row=\"row\" #editAtividadeDescricao>\n                                    <input-search [label]=\"lex.translate('Tipo de atividade')\" [size]=\"12\" [emptyValue]=\"null\" controlName=\"tipo_atividade_id\" [control]=\"formAtividade!.controls.tipo_atividade_id\" [dao]=\"tipoAtividadeDao\" (select)=\"onTipoAtividadeSelect($event)\" [labelInfo]=\"lex.translate('Tipo de atividade') + ' utilizado para classificar a atividade'\" [required]=\"!auth.hasPermissionTo('MOD_ATV_TIPO_ATV_VAZIO') ? 'true' : undefined\"></input-search>\n                                    <input-textarea label=\"Descrição\" [size]=\"12\" [rows]=\"2\" controlName=\"descricao\" [control]=\"formAtividade!.controls.descricao\" required></input-textarea>\n                                </ng-template>\n                            </column>\n                            <column [title]=\"'Tempos'\" [width]=\"300\" [template]=\"columnTempos\" [editTemplate]=\"editTempos\">\n                                <ng-template let-row=\"row\" #columnTempos>\n                                    <div class=\"one-per-line\">\n                                        <badge *ngFor=\"let tempo of atividadeService.temposAtividade(row)\" [badge]=\"tempo\"></badge>\n                                    </div>\n                                </ng-template>\n                                <ng-template let-row=\"row\" #editTempos>\n                                    <input-datetime icon=\"bi bi-file-earmark-plus\" [label]=\"lex.translate('Data de distribuição')\" controlName=\"data_distribuicao\" [control]=\"formAtividade!.controls.data_distribuicao\" labelInfo=\"Data de inclusão/distribuição/lançamento\"></input-datetime>\n                                    <input-datetime icon=\"bi bi-calendar-check\" [label]=\"lex.translate('Prazo de entrega')\" controlName=\"data_estipulada_entrega\" [control]=\"formAtividade!.controls.data_estipulada_entrega\" labelInfo=\"Data estipulada para entrega da atividade\"></input-datetime>\n                                    <input-datetime icon=\"bi bi-check-circle\" label=\"Conclusão\" controlName=\"data_entrega\" [control]=\"formAtividade!.controls.data_entrega\" labelInfo=\"Data da conclusão da atividade\"></input-datetime>\n                                </ng-template>\n                            </column>\n                            <column [title]=\"'Progresso\\nEtiquetas/Checklist'\" [width]=\"200\" [template]=\"columnProgressoEtiquetasChecklist\" [editTemplate]=\"columnProgressoEtiquetasChecklist\" [columnEditTemplate]=\"columnProgressoEtiquetasChecklistEdit\" [edit]=\"onColumnProgressoEtiquetasChecklistEdit.bind(this)\" [save]=\"onColumnProgressoEtiquetasChecklistSave.bind(this)\">\n                                <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n                                    <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n                                    <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\n                                    <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                                    <table *ngIf=\"row.checklist?.length\">\n                                        <tr *ngFor=\"let check of row.checklist\">\n                                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\n                                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                                        </tr>\n                                    </table>\n                                </ng-template>\n                                <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklistEdit>\n                                    <input-number [size]=\"12\" [decimals]=\"2\" label=\"Progresso\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso\" [control]=\"formEdit.controls.progresso\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\n                                    <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                                        <input-select [size]=\"12\" label=\"Etiqueta\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\n                                    </input-multiselect>\n                                    <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\n                                    <table *ngIf=\"row.checklist?.length\">\n                                        <tr *ngFor=\"let check of checklist; let i = index\">\n                                            <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\n                                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\n                                        </tr>\n                                    </table>\n                                </ng-template>\n                            </column>\n                            <column [title]=\"'nº Processo/Status\\nComentários'\" [width]=\"400\" [template]=\"columnNumero\" [editTemplate]=\"columnNumero\">\n                                <ng-template let-row=\"row\" #columnNumero>\n                                    <documentos-badge [documento]=\"row.documento_requisicao\"></documentos-badge>\n                                    <span class=\"d-block\">\n                                        <badge *ngFor=\"let status of atividadeService.getStatus(row, entity)\" [data]=\"status\" [color]=\"status.color\" [icon]=\"status.icon\" [label]=\"status.label\"></badge>\n                                    </span>\n                                    <comentarios-widget *ngIf=\"!gridAtividade.editing\" [entity]=\"row\" [selectable]=\"false\" origem=\"ATIVIDADE\" [grid]=\"gridAtividade\"></comentarios-widget>\n                                </ng-template>\n                            </column>\n                            <column type=\"options\" [metadata]=\"atividadeOptionsMetadata\" [dynamicOptions]=\"atividadeService.dynamicOptions.bind(this)\" [dynamicButtons]=\"atividadeService.dynamicButtons.bind(this)\"></column>\n                        </columns>\n                    </grid>\n                </ng-template>\n            </column>\n            <column title=\"Origem\" [template]=\"columnOrigem\" [width]=\"200\">\n                <ng-template let-row=\"row\" #columnOrigem>\n                    <badge [label]=\"row.badge.titulo\" [color]=\"row.badge.cor\"></badge>\n                </ng-template>\n            </column>\n            <column title=\"Entrega\" [template]=\"columnEntrega\">\n                <ng-template let-row=\"row\" #columnEntrega>\n                    <b>{{row.badge.descricao}}</b>\n                </ng-template>\n            </column>\n            <column title=\"% Força Trab. Planejado\" [template]=\"columnForcaTrabalho\">\n                <ng-template let-row=\"row\" #columnForcaTrabalho>\n                    <badge color=\"light\" [label]=\"row.entrega.forca_trabalho + '%'\"></badge>\n                </ng-template>\n            </column>\n        </columns>\n    </grid>\n</separator>\n<separator collapse [collapsed]=\"false\" [title]=\"lex.translate('Ocorrências')\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\">\n    <grid [items]=\"itemsOcorrencias\" [minHeight]=\"0\" #gridOcorrencia [form]=\"formOcorrencia\" \n        [hasDelete]=\"!disabled\" [hasAdd]=\"!disabled\" [hasEdit]=\"!disabled\"\n        [add]=\"addOcorrencia.bind(this)\" [load]=\"loadOcorrencia.bind(this)\" \n        [remove]=\"removeOcorrencia.bind(this)\" [save]=\"saveOcorrencia.bind(this)\" editable>\n        <columns>\n            <column title=\"Início\" [width]=\"300\" type=\"datetime\" field=\"data_inicio\"></column>\n            <column title=\"Fim\" [width]=\"300\" type=\"datetime\" field=\"data_fim\"></column>\n            <column title=\"Descrição\" type=\"textarea\" field=\"descricao\"></column>\n            <column type=\"options\" [dynamicButtons]=\"ocorrenciaDynamicButtons.bind(this)\"></column>\n        </columns>\n    </grid>\n</separator>\n<separator collapse [collapsed]=\"false\" [title]=\"lex.translate('Afastamentos')\" [icon]=\"entityService.getIcon('Afastamento')\">\n    <grid [items]=\"itemsAfastamentos\" [minHeight]=\"0\" #gridAfastamento [add]=\"addAfastamento.bind(this)\" [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"!disabled\" editable>\n        <columns>\n            <column title=\"Início\" [width]=\"300\" type=\"datetime\" field=\"data_inicio\"></column>\n            <column title=\"Fim\" [width]=\"300\" type=\"datetime\" field=\"data_fim\"></column>\n            <column title=\"Motivo/Observação\" [template]=\"columnMotivoObservacao\">\n                <ng-template let-row=\"row\" #columnMotivoObservacao>\n                    <badge [color]=\"row.tipo_motivo_afastamento.cor\" [icon]=\"row.tipo_motivo_afastamento.icone\" [label]=\"row.tipo_motivo_afastamento.nome\"></badge>\n                    {{row.observacao}}\n                </ng-template>\n            </column>\n            <column type=\"options\" [dynamicButtons]=\"afastamentoDynamicButtons.bind(this)\"></column>\n        </columns>\n    </grid>\n</separator>\n<separator collapse [collapsed]=\"false\" [title]=\"lex.translate('Comparecimentos')\" [icon]=\"entityService.getIcon('Comparecimento')\">\n    <grid [items]=\"itemsComparecimentos\" [minHeight]=\"0\" #gridComparecimento [form]=\"formComparecimento\" \n        [hasDelete]=\"!disabled\" [hasAdd]=\"!disabled\" [hasEdit]=\"!disabled\"\n        [add]=\"addComparecimento.bind(this)\" [load]=\"loadComparecimento.bind(this)\" \n        [remove]=\"removeComparecimento.bind(this)\" [save]=\"saveComparecimento.bind(this)\" editable>\n        <columns>\n            <column title=\"Data\" [width]=\"300\" type=\"date\" field=\"data_comparecimento\"></column>\n            <column title=\"Unidade\" [template]=\"columnUnidade\" [editTemplate]=\"editUnidade\">\n                <ng-template let-row=\"row\" #columnUnidade>\n                    <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\" [textValue]=\"row.unidade.nome\" color=\"success\"></badge>\n                </ng-template>\n                <ng-template let-row=\"row\" #editUnidade>\n                    <input-search label icon [size]=\"6\" #unidade controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n                </ng-template>\n            </column>\n            <column title=\"Detalhamento\" type=\"text\" field=\"detalhamento\"></column>\n            <column type=\"options\" [dynamicButtons]=\"comparecimentoDynamicButtons.bind(this)\"></column>\n        </columns>\n    </grid>\n</separator>\n\n\n\n\n\n\n\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoTrabalhoConsolidacaoDaoService } from 'src/app/dao/plano-trabalho-consolidacao-dao.service';\nimport { PlanoTrabalhoConsolidacao, PlanoTrabalhoConsolidacaoStatus } from 'src/app/models/plano-trabalho-consolidacao.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { PlanoTrabalhoConsolidacaoFormComponent } from '../plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\n\n@Component({\n  selector: 'plano-trabalho-consolidacao-list',\n  templateUrl: './plano-trabalho-consolidacao-list.component.html',\n  styleUrls: ['./plano-trabalho-consolidacao-list.component.scss']\n})\nexport class PlanoTrabalhoConsolidacaoListComponent extends PageFrameBase {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\n\n  public get items(): PlanoTrabalhoConsolidacao[] {\n    return this.entity?.consolidacoes || [];\n  }\n\n  public dao?: PlanoTrabalhoConsolidacaoDaoService;\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    /* Inicializações */\n    this.dao = injector.get<PlanoTrabalhoConsolidacaoDaoService>(PlanoTrabalhoConsolidacaoDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.title = this.lex.translate(\"Consolidações\");\n    this.code = \"MOD_PTR_CSLD\";\n    this.modalWidth = 1200;\n    this.form = this.fh.FormBuilder({\n      'data_inicio': {default: new Date()},\n      'data_fim': {default: new Date()}\n    }, this.cdRef, this.validate);\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    (async () => {\n      if (this.urlParams?.has(\"usuarioId\") && this.urlParams?.has(\"planoTrabalhoId\")) {\n        let dados = await this.planoTrabalhoDao!.getByUsuario(this.urlParams!.get(\"usuarioId\")!, true, this.urlParams!.get(\"planoTrabalhoId\")!);\n        if (dados.planos.length == 1) this.entity = dados.planos[0];\n      }\n      let agora = (new Date()).getTime();\n      this.items.forEach(v => {\n        if(!v.plano_trabalho) v.plano_trabalho = this.entity;\n        if(this.util.asTimestamp(v.data_inicio) <= agora && agora <= this.util.asTimestamp(v.data_fim)) this.grid!.expand(v.id);\n      });\n    })();\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    // TODO: Validar data\n    return result;\n  }\n\n  public async addConsolidacao() {\n    return new PlanoTrabalhoConsolidacao({\n      id: this.dao!.generateUuid(),\n      plano_trabalho_id: this.entity!.id\n    });\n  }\n\n  public async loadConsolidacao(form: FormGroup, row: any) {\n    this.form!.patchValue({\n      data_inicio: row.data_inicio,\n      data_fim: row.data_fim\n    });    \n    this.cdRef.detectChanges();\n  }\n\n  public async removeConsolidacao(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir o item ?\");\n    if (confirm) {\n      try {\n        let consolidacao = row as PlanoTrabalhoConsolidacao;\n        await this.dao?.delete(consolidacao);\n        this.items.splice(this.items.findIndex(x => x.id == consolidacao.id), 1);\n        return true;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public async saveConsolidacao(form: FormGroup, row: any) {\n    let result = undefined;\n    this.form!.markAllAsTouched();\n    if (this.form!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      row.data_inicio = form.controls.data_inicio.value;\n      row.data_fim = form.controls.data_fim.value;\n      result = await this.dao?.save(row);\n    }\n    return result;\n  }\n\n  public async concluir(consolidacao: PlanoTrabalhoConsolidacao) {\n    this.submitting = true;\n    try {\n      let response = await this.dao!.concluir(consolidacao.id);\n      consolidacao.status = response.status as PlanoTrabalhoConsolidacaoStatus;\n      if(consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent) {\n        let consolidacaoForm = consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent as PlanoTrabalhoConsolidacaoFormComponent;\n        consolidacaoForm.loadConsolidacao(response);\n      } else {\n        this.grid!.refreshExpanded(consolidacao.id);\n      }\n    } catch (error: any) {\n      this.error(error.message || error);\n    } finally {\n      this.submitting = false;\n    }\n  }\n\n  public async cancelarConclusao(consolidacao: PlanoTrabalhoConsolidacao) {\n    this.submitting = true;\n    try {\n      let response = await this.dao!.cancelarConclusao(consolidacao.id);\n      consolidacao.status = response.status as PlanoTrabalhoConsolidacaoStatus;\n      if(consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent) {\n        let consolidacaoForm = consolidacao._metadata?.planoTrabalhoConsolidacaoFormComponent as PlanoTrabalhoConsolidacaoFormComponent;\n        consolidacaoForm.loadConsolidacao(response);\n      } else {\n        this.grid!.refreshExpanded(consolidacao.id);\n      }\n    } catch (error: any) {\n      this.error(error.message || error);\n    } finally {\n      this.submitting = false;\n    }\n  }\n\n  public anterior(consolidacao: PlanoTrabalhoConsolidacao): PlanoTrabalhoConsolidacao | undefined {\n    return this.entity!.consolidacoes.reduce((a: PlanoTrabalhoConsolidacao | undefined, v: PlanoTrabalhoConsolidacao) => this.util.asTimestamp(v.data_inicio) < this.util.asTimestamp(consolidacao.data_inicio) && (!a || this.util.asTimestamp(a.data_inicio) < this.util.asTimestamp(v.data_inicio)) ? v : a, undefined);\n  }\n\n  public proximo(consolidacao: PlanoTrabalhoConsolidacao): PlanoTrabalhoConsolidacao | undefined {\n    return this.entity!.consolidacoes.reduce((a: PlanoTrabalhoConsolidacao | undefined, v: PlanoTrabalhoConsolidacao) => this.util.asTimestamp(v.data_fim) > this.util.asTimestamp(consolidacao.data_fim) && (!a || this.util.asTimestamp(a.data_fim) > this.util.asTimestamp(v.data_fim)) ? v : a, undefined);\n  }\n\n  public isDisabled(row?: PlanoTrabalhoConsolidacao): boolean {\n    return (row && row.status != \"INCLUIDO\") || this.entity?.status != \"ATIVO\";\n  }\n\n  public avaliar(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public editarAvaliacao(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public fazerRecurso(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public cancelarAvaliacao(consolidacao: PlanoTrabalhoConsolidacao) {\n    //\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let consolidacao: PlanoTrabalhoConsolidacao = row as PlanoTrabalhoConsolidacao;\n    const anterior = this.anterior(row as PlanoTrabalhoConsolidacao);\n    const proximo = this.proximo(row as PlanoTrabalhoConsolidacao);\n    const isUsuarioConsolidacao = this.auth.usuario!.id == this.entity!.usuario_id;\n    const isGestor = [this.entity!.unidade!.gestor?.usuario_id, this.entity!.unidade!.gestor_substituto?.usuario_id, this.entity!.unidade!.gestor_delegado?.usuario_id].includes(this.auth.usuario?.id);\n    const BOTAO_CONCLUIR = { hint: \"Concluir\", icon: \"bi bi-check-circle\", color: \"btn-outline-success\", onClick: this.concluir.bind(this) };\n    const BOTAO_CANCELAR_CONCLUSAO = { hint: \"Cancelar conclusão\", icon: \"bi bi-backspace\", color: \"btn-outline-danger\", onClick: this.cancelarConclusao.bind(this) };\n    const BOTAO_AVALIAR = { hint: \"Avaliar\", icon: \"bi bi-star\", color: \"btn-outline-warning\", onClick: this.avaliar.bind(this) };\n    const BOTAO_EDITAR_AVALIACAO = { hint: \"Editar avaliação\", icon: \"bi bi-star-half\", color: \"btn-outline-warning\", onClick: this.editarAvaliacao.bind(this) };\n    const BOTAO_FAZER_RECURSO = { hint: \"Fazer recurso\", id: \"RECORRIDO\", icon: \"bi bi-journal-medical\", color: \"btn-outline-warning\", onClick: this.fazerRecurso.bind(this) };\n    const BOTAO_CANCELAR_AVALIACAO = { hint: \"Cancelar avaliação\", id: \"INCLUIDO\", icon: \"bi bi-backspace\", color: \"btn-outline-warning\", onClick: this.cancelarAvaliacao.bind(this) };\n    /* (RN_CSLD_11) Não pode concluir a consolidação antes que a anterior não esteja concluida, e não pode retornar status da consolidação se a posterior estiver a frente (em status); */\n    const canConcluir = !anterior || [\"CONCLUIDO\", \"AVALIADO\"].includes(anterior!.status);\n    const canCancelarConclusao = !proximo || [\"INCLUIDO\"].includes(proximo!.status);\n    const canAvaliar = !anterior || [\"AVALIADO\"].includes(anterior!.status);\n    const canCancelarAvaliacao = !proximo || [\"INCLUIDO\", \"CONCLUIDO\"].includes(proximo!.status);\n    if(!this.isDisabled()) {\n      if(consolidacao.status == \"INCLUIDO\" && canConcluir && (isUsuarioConsolidacao || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_CONCL\"))) {\n        result.push(BOTAO_CONCLUIR);\n      }\n      if(consolidacao.status == \"CONCLUIDO\" && canCancelarConclusao && this.planoTrabalhoService.diasParaConcluirConsolidacao(row, this.entity!.programa) >= 0 && (isUsuarioConsolidacao || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_DES_CONCL\"))) {\n        result.push(BOTAO_CANCELAR_CONCLUSAO);\n      }\n      if(consolidacao.status == \"CONCLUIDO\" && canAvaliar && (isGestor || this.auth.hasPermissionTo(\"MOD_PTR_CSLD_AVALIAR\"))) {\n        result.push(BOTAO_AVALIAR);\n      }\n      if(consolidacao.status == \"AVALIADO\") {\n        /* TODO: Fazer as condições para avaliado\n          - Se for o usuário do plano, opção de recurso\n          - Se for o chefe, opção de cancelar avaliacao ou Reavaliar caso tenha tido recurso\n         */\n        //if(canCancelarAvaliacao) result.push(BOTAO_CANCELAR_AVALIACAO);\n      }\n    }\n    return result;\n  }\n\n}\n","<grid [items]=\"items\" #grid [form]=\"form!\" [hasDelete]=\"true\" [minHeight]=\"0\"\n    [add]=\"addConsolidacao.bind(this)\" [hasAdd]=\"!isDisabled()\" [hasEdit]=\"false\" [hasDelete]=\"false\" editable>\n    <columns>\n        <column type=\"expand\" [icon]=\"entityService.getIcon('PlanoTrabalhoConsolidacao')\" [align]=\"'center'\" [hint]=\"lex.translate('Consolidação')\" [template]=\"columnConsolidacao\" [expandTemplate]=\"columnExpandedConsolidacao\">\n            <ng-template let-row=\"row\" #columnConsolidacao>\n                <!--span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span//-->\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedConsolidacao>\n                <plano-trabalho-consolidacao-form #consolidacao [disabled]=\"isDisabled(row)\" [entity]=\"row\" [planoTrabalho]=\"entity\" [cdRef]=\"cdRef\"></plano-trabalho-consolidacao-form>\n            </ng-template>\n        </column>\n        <column title=\"Data início\" [template]=\"columnDataInicio\">\n            <ng-template let-row=\"row\" #columnDataInicio>\n                {{util.getDateFormatted(row.data_inicio)}}\n            </ng-template>\n        </column>\n        <column title=\"Data fim\" [template]=\"columnDataFim\">\n            <ng-template let-row=\"row\" #columnDataFim>\n                <strong>{{util.getDateFormatted(row.data_fim)}}</strong>\n            </ng-template>\n        </column>\n        <column title=\"Estatísticas\" [template]=\"columnEstatisticas\">\n            <ng-template let-row=\"row\" #columnEstatisticas>\n            </ng-template>\n        </column>\n        <column title=\"Status\" [template]=\"columnStatus\">\n            <ng-template let-row=\"row\" #columnStatus>\n                <badge [color]=\"lookup.getColor(lookup.CONSOLIDACAO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.CONSOLIDACAO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.CONSOLIDACAO_STATUS, row.status)\"></badge>\n            </ng-template>\n        </column>\n        <column type=\"options\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\n    </columns>\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageBase } from 'src/app/modules/base/page-base';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'app-plano-trabalho-consolidacao',\n  templateUrl: './plano-trabalho-consolidacao.component.html',\n  styleUrls: ['./plano-trabalho-consolidacao.component.scss']\n})\nexport class PlanoTrabalhoConsolidacaoComponent extends PageFrameBase {\n  @ViewChild(TabsComponent, { static: false }) public tabs?: TabsComponent;\n\n  public usuarios: Usuario[] = [];\n  public unidade?: Unidade;\n  public unidadeDao: UnidadeDaoService;\n  public loadingUnidade: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.form = this.fh.FormBuilder({\n      arquivados: { default: false }\n    });\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.tabs!.active = this.queryParams?.tab || \"USUARIO\";\n    (async () => {\n      await this.loadData(this.entity!, this.form);\n    })();\n  }\n\n  public async loadData(entity: IIndexable, form?: FormGroup) {\n    this.unidade = this.auth.unidadeGestor();\n    if(this.unidade) {\n      this.usuarios = [];\n      this.loadingUnidade = true;\n      this.cdRef.detectChanges()\n      try {\n        this.usuarios = await this.unidadeDao.lotados(this.unidade.id);\n      } finally {\n        this.loadingUnidade = false;\n        this.cdRef.detectChanges()\n      }\n    }\n  }\n\n}\n","<tabs right #tabs [title]=\"isModal ? '' : title\">\n    <tab key=\"UNIDADE\" *ngIf=\"unidade\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"lex.translate('Unidade')\" [template]=\"tabUnidade\">\n        <ng-template #tabUnidade>\n            <h5>{{unidade.sigla}} - {{unidade.nome}}</h5>\n            <div *ngIf=\"loading\" class=\"d-flex justify-content-center my-2\">\n                <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"visually-hidden\"></span>\n                </div>\n            </div>\n            <collapse-card *ngFor=\"let usuario of usuarios\" [data]=\"usuario\" [titleTemplate]=\"usuarioCardTitle\" [template]=\"usuarioCard\">\n                <ng-template let-data=\"data\" #usuarioCardTitle>\n                    <div class=\"row\">\n                        <div class=\"col-2\">\n                            <profile-picture [url]=\"data.url_foto\" [size]=\"40\" [hint]=\"data.nome\"></profile-picture>\n                        </div>\n                        <div class=\"col-10\">\n                            <strong>{{data.nome || \"\"}}</strong><br>\n                            <small>{{data.apelido || \"\"}}</small>\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template let-data=\"data\" #usuarioCard>\n                    <plano-trabalho-list-accordeon [usuarioId]=\"data.id\"></plano-trabalho-list-accordeon>\n                </ng-template>\n            </collapse-card>\n        </ng-template>\n    </tab>\n    <tab key=\"USUARIO\" [icon]=\"entityService.getIcon('Usuario')\" [label]=\"lex.translate('Usuário')\" [template]=\"tabUsuario\">\n        <ng-template #tabUsuario>\n            <separator [control]=\"form!.controls.arquivados\" [title]=\"'Mostrar ' + lex.translate('Planos de trabalho') + ' arquivados?'\"></separator>\n            <plano-trabalho-list-accordeon [usuarioId]=\"auth.usuario!.id\" [arquivados]=\"form!.controls.arquivados.value\"></plano-trabalho-list-accordeon>\n        </ng-template>\n    </tab>\n</tabs>\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { NavigateResult } from 'src/app/services/navigate.service';\n\n@Component({\n  selector: 'plano-trabalho-form-termo',\n  templateUrl: './plano-trabalho-form-termo.component.html',\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\n})\n\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public documentoDao: DocumentoDaoService;\n  public tipoDocumentoDao: TipoDocumentoDaoService;\n  public allPages: ListenerAllPagesService;\n  public processo?: SeiKeys;\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n\n    this.form = this.fh.FormBuilder({\n      carga_horaria: {default: \"\"},\n      tempo_total: {default: \"\"},\n      tempo_proporcional: {default: \"\"},\n      data_inicio: {default: new Date()},\n      data_fim: {default: new Date()},\n      programa_id: {default: \"\"},\n      usuario_id: {default: \"\"},\n      unidade_id: {default: \"\"},\n      documento_id: {default: \"\"},\n      documentos: {default: []},\n      tipo_documento_id: {default: \"\"},\n      numero_processo: {default: \"\"},\n      vinculadas: {default: true},\n      tipo_modalidade_id: {default: \"\"},\n      forma_contagem_carga_horaria: {default: \"DIA\"}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    if(!this.tipoDocumento?.selectedEntity && form?.controls.tipo_documento_id.value?.length) {\n      return \"Aguarde o carregamento do tipo de documento\";\n    }\n    return undefined;\n  } \n\n  public onVinculadasChange(event: Event) {\n    this.cdRef.detectChanges();\n  }\n\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    formValue = this.util.fillForm(formValue, entity);\n    await Promise.all ([\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\n    ]);\n    if(this.processo) {\n      formValue.id_processo = this.processo.id_processo;\n      formValue.numero_processo = this.processo.numero_processo;\n    }\n    formValue.data_inicio = this.auth.hora;\n    form.patchValue(formValue);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\n    this.processo = this.metadata?.processo;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\n      //if(this.processo) {\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\n        /* TODO Gerar documento do TCR\n        termo: this.termo!.conteudo,\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\n        codigo_tipo_documento: (this.tipoDocumento?.selectedEntity as TipoDocumento)?.codigo\n      })));\n      /*} else {\n        const documento = Object.assign(new Documento(), {\n          especie: \"TERMO_ADESAO\",\n          conteudo: this.termo!.conteudo,\n          plano_id: this.entity!.id,\n          status: \"GERADO\"\n        });\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\n      }*/\n    });\n  }\n\n  public get formaContagemCargaHoraria(): UnitWorkload {\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\n  }\n\n  public titleEdit = (entity: PlanoTrabalho): string => {\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"programa_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\n        <div class=\"row\">\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\n        </div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\" [attr.maxlength]=250></input-text>\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\n        </div>\n    </separator>\n    <div class=\"row\">\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\" [attr.maxlength]=250></input-text>\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\" required></input-search>\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\n    </div>\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\n    </separator/-->\n</editable-form>\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { SelectItem } from 'src/app/components/input/input-base';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Documento } from 'src/app/models/documento.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\nimport { Template } from 'src/app/models/template.model';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'plano-trabalho-form',\n  templateUrl: './plano-trabalho-form.component.html',\n  styleUrls: ['./plano-trabalho-form.component.scss']\n})\n\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\n\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public documentoDao: DocumentoDaoService;\n  public documentoService: DocumentoService;\n  public templateService: TemplateService;\n  public utilService: UtilService;\n  public allPages: ListenerAllPagesService;\n  public calendar: CalendarService;\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public horasTotais?: Efemerides;\n  public horasParciais?: Efemerides;\n  public planoDataset: TemplateDataset[];\n  public joinPrograma: string[];\n  public entregas: LookupItem[] = [];\n  public planoTrabalho?: PlanoTrabalho;\n  public datasource: any;\n  public template?: Template;\n  public editingId?: string;\n  public gestoresUnidadeExecutora: string[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.join = [\n      \"unidade.entidade\", \n      \"entregas.entrega\", \n      \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \n      \"usuario\", \n      \"programa.template_tcr\", \n      \"tipo_modalidade\", \n      \"documento\", \n      \"documentos.assinaturas.usuario:id,nome,apelido\", \n      \"entregas.plano_entrega_entrega.entrega\",\n      \"entregas.plano_entrega_entrega.plano_entrega.unidade:id,nome,sigla\"\n    ];\n    this.joinPrograma = [\"template_tcr\"];\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\n    this.templateService = injector.get<TemplateService>(TemplateService);\n    this.utilService = injector.get<UtilService>(UtilService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.modalWidth = 1300;\n    this.planoDataset = this.dao!.dataset();\n    this.form = this.fh.FormBuilder({\n      carga_horaria: { default: \"\" },\n      tempo_total: { default: \"\" },\n      tempo_proporcional: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      usuario_id: { default: \"\" },\n      unidade_id: { default: \"\" },\n      programa_id: { default: \"\" },\n      documento_id: { default: null },\n      documentos: { default: [] },\n      atividades: { default: [] },\n      entregas: { default: [] },\n      tipo_modalidade_id: { default: \"\" },\n      forma_contagem_carga_horaria: { default: \"DIA\" },\n      editar_texto_complementar_unidade: { default: false },\n      editar_texto_complementar_usuario: { default: false },\n      unidade_texto_complementar: { default: \"\" },\n      usuario_texto_complementar: { default: \"\" }\n    }, this.cdRef, this.validate);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    const segment = (this.url ? this.url[this.url.length - 1]?.path : \"\") || \"\";\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\n    this.buscaGestoresUnidadeExecutora(this.entity?.unidade ?? null);\n  }\n\n  public atualizarTcr() {\n    this.entity = this.loadEntity();\n    let textoUsuario = this.form!.controls.usuario_texto_complementar.value;\n    let textoUnidade = this.form!.controls.unidade_texto_complementar.value;\n    let documento = this.planoTrabalhoService.atualizarTcr(this.planoTrabalho!, this.entity!, textoUsuario, textoUnidade);\n    this.form?.controls.documento_id.setValue(documento?.id);\n    this.form?.controls.documentos.setValue(this.entity!.documentos);\n    this.datasource = documento?.datasource || {};\n    this.template = this.entity.programa?.template_tcr;\n    this.editingId = [\"ADD\", \"EDIT\"].includes(documento?._status || \"\") ? documento!.id : undefined;\n    this.cdRef.detectChanges();\n  }\n\n  public get isTermos(): boolean {\n    return this.action == \"termos\";\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['unidade_id', 'programa_id', 'usuario_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    } else if (['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\n      result = \"Valor não pode ser zero.\";\n    } else if (['data_inicio', 'data_fim'].includes(controlName) && !this.util.isDataValid(control.value)) {\n      result = \"Inválido\";\n    } else if (controlName == 'data_fim' && this.util.isDataValid(this.form?.controls.data_inicio.value) && this.util.asTimestamp(control.value) < this.util.asTimestamp(this.form!.controls.data_inicio.value)) {\n      result = \"Menor que o início\";\n    } else if (this.programa && controlName == 'data_inicio' && (control.value as Date).getTime() < this.programa!.selectedEntity?.data_inicio.getTime()) {\n      result = \"Menor que programa\";\n    } else if (this.programa && controlName == 'data_fim' && (control.value as Date).getTime() > this.programa!.selectedEntity?.data_fim.getTime()) {\n      result = \"Maior que programa\";\n    }\n    return result;\n  }\n\n  public formValidation = async (form?: FormGroup) => {\n    let result = \"\";\n    return result;\n    // TODO:\n    // Validar se as entregas pertencem ao plano de entregas da unidade\n  };\n\n  public onUnidadeSelect(selected: SelectItem) {\n    let unidade = this.unidade?.selectedEntity as Unidade;\n    this.entity!.unidade = unidade;\n    this.entity!.unidade_id = unidade.id;\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\n    this.form!.controls.unidade_texto_complementar.setValue(unidade?.texto_complementar_plano || \"\");\n    this.unidadeDao.getById(unidade.id, ['gestor:id,usuario_id','gestor_substituto:id,usuario_id','gestor_delegado:id,usuario_id']).then( unidade => {\n      this.buscaGestoresUnidadeExecutora(unidade);\n    });\n  }\n\n  public onProgramaSelect(selected: SelectItem) {\n    let programa = selected.entity as Programa;\n    this.entity!.programa_id = programa.id;\n    this.entity!.programa = programa;\n    this.form?.controls.data_inicio.updateValueAndValidity();\n    this.form?.controls.data_fim.updateValueAndValidity();\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public onUsuarioSelect(selected: SelectItem) {\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public onDataInicioChange(event: Event) {\n    this.calculaTempos();\n  }\n\n  public onDataFimChange(event: Event) {\n    this.calculaTempos();\n  }\n\n  public onCargaHorariaChenge(event: Event) {\n    this.calculaTempos();\n  }\n\n  public calculaTempos() {\n    const inicio = this.form?.controls.data_inicio.value;\n    const fim = this.form?.controls.data_fim.value;\n    const carga = this.form?.controls.carga_horaria.value || 8;\n    const usuario = this.usuario?.selectedEntity as Usuario;\n    const unidade = this.unidade?.selectedEntity as Unidade;\n    if (usuario && unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim) && this.util.asTimestamp(inicio) < this.util.asTimestamp(fim)) {\n      this.calendar.loadFeriadosCadastrados(unidade.id).then((feriados) => {\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], []);\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, unidade, \"ENTREGA\", [], usuario.afastamentos);\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\n      });\n    }\n  }\n\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\n    this.planoTrabalho = new PlanoTrabalho(entity);\n    await Promise.all([\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\n      this.unidade?.loadSearch(entity.unidade || entity.unidade_id),\n      this.programa?.loadSearch(entity.programa || entity.programa_id),\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\n    ]);\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    /*let documento = entity.documentos.find(x => x.id == entity.documento_id);\n    if(documento) this._datasource = documento.datasource;*/\n    this.calculaTempos();\n    this.atualizarTcr();\n  }\n\n  public async initializeData(form: FormGroup) {\n    if (this.isTermos) {\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\n    } else {\n      this.entity = new PlanoTrabalho();\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\n    }\n    await this.loadData(this.entity, this.form!);\n  }\n\n  /* Cria um objeto Plano baseado nos dados do formulário */\n  public loadEntity(): PlanoTrabalho {\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\n    plano = this.util.fillForm(plano, this.form!.value);\n    plano.usuario = (this.usuario!.selectedEntity || this.entity?.usuario) as Usuario;\n    plano.unidade = (this.unidade?.selectedEntity || this.entity?.unidade) as Unidade;\n    plano.programa = (this.programa?.selectedEntity || this.entity?.programa) as Programa;\n    plano.tipo_modalidade = (this.tipoModalidade!.selectedEntity || this.entity?.tipo_modalidade) as TipoModalidade;\n    return plano;\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\n    //let plano = this.loadEntity();\n    /* Atualiza o documento */\n    this.atualizarTcr();\n    /* Confirma dados do documento */\n    this.documentos?.saveData();\n    this.entity!.documentos = this.entity!.documentos.filter((documento: Documento) => {\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\");\n    });\n    /* Salva separadamente as informações do plano */\n    this.submitting = true;\n    try {\n      let requests: Promise<any>[] = [this.dao!.save(this.entity!, this.join)];\n      if (this.form!.controls.editar_texto_complementar_unidade.value) requests.push(this.unidadeDao.update(this.entity!.unidade_id, { texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value }));\n      if (this.form!.controls.editar_texto_complementar_usuario.value) requests.push(this.usuarioDao.update(this.entity!.usuario_id, { texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value }));\n      let responses = await Promise.all(requests);\n      this.entity = responses[0] as PlanoTrabalho;\n    } finally {\n      this.submitting = false;\n    }\n    return true;\n  }\n\n  public onTabSelect(tab: LookupItem) {\n    if (tab.key == \"TERMO\") this.atualizarTcr();\n  }\n\n  public titleEdit = (entity: PlanoTrabalho): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\n  }\n\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let documento: Documento = row as Documento;\n\n    if (this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\n      result.push({ hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\n    }\n    result.push({ hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({ title: \"Termo de adesão\", modalWidth: 1000 }, documento.conteudo || \"\"); }).bind(this) });\n\n    return result;\n  }\n\n  public async signDocumento(documento: Documento) {\n    await this.documentoService.sign([documento]);\n    this.cdRef.detectChanges();\n  }\n\n  public get formaContagemCargaHoraria(): UnitWorkload {\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\n  }\n\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\n  }\n\n  public isVigente(documento: Documento): boolean {\n    return this.form!.controls.documento_id.value == documento.id;\n  }\n\n  public buscaGestoresUnidadeExecutora(unidade: Unidade | null){\n    if (unidade) [unidade.gestor?.usuario_id, unidade.gestor_substituto?.usuario_id, unidade!.gestor_delegado?.usuario_id].forEach(gestor => {\n      if (gestor) this.gestoresUnidadeExecutora.push(gestor);\n    });\n    return this.gestoresUnidadeExecutora;\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\" [select]=\"onTabSelect.bind(this)\">\n        <tab key=\"DADOS\" label=\"Dados\">\n            <div class=\"row\">\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de unidade, programa e usuario devem ficar desabilitados nas edições e habilitado apenas nas inclusões; -->\n                <input-search #unidade [size]=\"4\" required [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (select)=\"onUnidadeSelect($event)\"></input-search>\n                <input-search #programa [size]=\"4\" required [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"programa_id\" [join]=\"joinPrograma\" [dao]=\"programaDao\" (select)=\"onProgramaSelect($event)\"></input-search>\n                <input-search #usuario [size]=\"4\" required controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\n            </div>\n            <div class=\"row\">\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"  required></input-datetime>\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim\" [control]=\"form!.controls.data_fim\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"  required></input-datetime>\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"  required></input-search>\n            </div>\n            <ng-container *ngIf=\"tipoModalidade!.selectedEntity?.plano_trabalho_calcula_horas\">\n                <div class=\"row\">\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"  required></input-workload>\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\n                </div>\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\n                </separator>\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\n                </separator>\n            </ng-container>\n            <separator [title]=\"lex.translate('Entregas') + lex.translate(' do plano de trabalho')\">\n                <top-alert *ngIf=\"!form!.controls.programa_id.value?.length || !form!.controls.unidade_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar ' + lex.translate('a Unidade') + ' e ' + lex.translate('o Programa') + '!'\"></top-alert>\n                <div *ngIf=\"form!.controls.programa_id.value?.length && form!.controls.unidade_id.value?.length\">\n                    <plano-trabalho-list-entrega noPersist [disabled]=\"formDisabled\" [entity]=\"entity\"></plano-trabalho-list-entrega>\n                </div>\n            </separator>\n        </tab>\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\n                </editable-form>\n            </div>\n        </tab//-->\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\n            </separator>\n            <separator title=\"Texto complementar do usuario\">\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\n            </separator>\n        </tab>\n        <tab *ngIf=\"checkFilled(['usuario_id', 'programa_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\n            <div clss=\"row\">\n                <documentos #documentos [entity]=\"entity\" [disabled]=\"formDisabled\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \n                    [editingId]=\"formDisabled ? undefined : editingId\" [datasource]=\"datasource\" [template]=\"programa?.selectedEntity?.template_tcr\"></documentos>\n            </div>\n        </tab>\n    </tabs>\n</editable-form>\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\nimport { BadgeButton } from 'src/app/components/badge/badge.component';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'plano-trabalho-list-accordeon',\n  templateUrl: './plano-trabalho-list-accordeon.component.html',\n  styleUrls: ['./plano-trabalho-list-accordeon.component.scss']\n})\nexport class PlanoTrabalhoListAccordeonComponent extends PageFrameBase {\n  @ViewChild('accordion', { static: false }) public accordion?: AccordionComponent;\n  @Input() usuarioId?: string;\n  @Input() set arquivados(value: boolean) {\n    if(this._arquivados != value) {\n      this._arquivados = value;\n      if(this.viewInit) this.loadData(this.entity!, this.form);\n    }\n  }\n  get arquivados(): boolean {\n    return this._arquivados;\n  }\n\n  public selectedIndex: number = -1;\n  public dao?: PlanoTrabalhoDaoService;\n  public planos: PlanoTrabalho[] = [];\n\n  private _arquivados: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.dao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    (async () => {\n      await this.loadData(this.entity!, this.form);\n    })();\n  }\n\n  public async loadData(entity: IIndexable, form?: FormGroup) {\n    this.accordion!.loading = true;\n    try {\n      let dados = await this.dao!.getByUsuario(this.usuarioId!, this.arquivados);\n      let agora = (new Date()).getTime();\n      let self = this;\n      this.planos = dados.planos;\n      for(var i = 0; i < this.planos.length; i++) {\n        if(this.util.asTimestamp(this.planos[i].data_inicio) <= agora && agora <= this.util.asTimestamp(this.planos[i].data_fim) && [\"ATIVO\", \"CONCLUIDO\"].includes(this.planos[i].status)) {\n          this.selectedIndex = i;\n        }\n      }\n    } finally {\n      this.accordion!.loading = false;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public getPlanoBadges(plano: PlanoTrabalho): BadgeButton[] {\n    let result: BadgeButton[] = [];\n    let concluidos = plano.consolidacoes.filter(x => x.status == \"CONCLUIDO\");\n    let avaliados = plano.consolidacoes.filter(x => x.status == \"AVALIADO\");\n    if(concluidos.length) {\n      const concluido = this.lookup.getLookup(this.lookup.CONSOLIDACAO_STATUS, \"CONCLUIDO\");\n      result.push({\n        icon: concluido?.icon,\n        label: concluido?.value,\n        color: concluido?.color,\n        textValue: concluidos.length.toString()\n      });\n    }\n    if(avaliados.length) {\n      const avaliado = this.lookup.getLookup(this.lookup.CONSOLIDACAO_STATUS, \"AVALIADO\");\n      result.push({\n        icon: avaliado?.icon,\n        label: avaliado?.value,\n        color: avaliado?.color,\n        textValue: avaliados.length.toString()\n      });\n    }\n    if(JSON.stringify(plano._metadata?.badges) != this.JSON.stringify(result)) {\n      plano._metadata = Object.assign(plano._metadata || {}, { badges: result });\n    }\n    return plano._metadata.badges;\n  }\n\n}\n","<accordion #accordion [items]=\"planos\" [selectedIndex]=\"selectedIndex\" [titleTemplate]=\"planoTrabalhoSectionTitle\" [template]=\"planoTrabalhoSection\">\n    <ng-template let-item=\"item\" #planoTrabalhoSectionTitle>\n        <div class=\"row w-100\">\n            <div class=\"col-md-1\">{{'#' + item.numero}}</div>\n            <div class=\"col-md-4\">\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"item.unidade?.sigla\" color=\"light\" [hint]=\"lex.translate('Unidade') + ': ' + item.unidade?.nome\"></badge>\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"item.programa?.nome\" color=\"light\" [hint]=\"lex.translate('Programa')\"></badge>\n                <badge [icon]=\"entityService.getIcon('TipoModalidade')\" [label]=\"item.tipo_modalidade?.nome\" color=\"light\" [hint]=\"lex.translate('Tipo de modalidade')\"></badge>\n            </div>\n            <div class=\"col-md-3\">\n                {{dao!.getDateFormatted(item.data_inicio)+\" até \"+dao!.getDateFormatted(item.data_fim)}}\n            </div>\n            <div class=\"col-md-2\">\n                <badge *ngFor=\"let badge of getPlanoBadges(item)\" [badge]=\"badge\"></badge>\n            </div>\n            <div class=\"col-md-2\">\n                <badge [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, item.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, item.status)\" [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, item.status)\"></badge>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template let-item=\"item\" #planoTrabalhoSection>\n        <plano-trabalho-consolidacao-list [entity]=\"item\"></plano-trabalho-consolidacao-list>\n    </ng-template>\n</accordion>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\n\n@Component({\n  selector: 'plano-trabalho-list-entrega',\n  templateUrl: './plano-trabalho-list-entrega.component.html',\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\n})\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\n  @Input() cdRef: ChangeDetectorRef;\n\n  public get items(): PlanoTrabalhoEntrega[] {\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\n    return this.gridControl.value.entregas;\n  }\n  public options: ToolbarButton[] = [];\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\n  public planoEntregaDao?: PlanoEntregaDaoService;\n  public peeDao?: PlanoEntregaEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public totalForcaTrabalho: number = 0;\n  public entregas: LookupItem[] = [];\n\n  private _disabled: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\", \"plano_entrega_entrega.plano_entrega:id,unidade_id\", \"plano_entrega_entrega.plano_entrega.unidade:id,sigla\"];\n    this.form = this.fh.FormBuilder({\n      origem: { default: null },\n      orgao: { default: null },\n      descricao: { default: \"\" },\n      forca_trabalho: { default: 1 },\n      plano_trabalho_id: { default: null },\n      plano_entrega_id: { default: null },\n      plano_entrega_entrega_id: { default: null }\n    }, this.cdRef, this.validate);\n  }\n\n  /**\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\n   * @param control \n   * @param controlName \n   * @returns \n   */\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && control.value == 1) return result;\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\n      if (['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Obrigatório!\";\n      if (!!this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)) result = \"Esta entrega está em duplicidade!\"; /* (*2) */\n    }\n    return result;\n  }\n\n  public validateEntregas(): string | undefined {\n    let planoInterval = {start: this.entity!.data_inicio, end: this.entity!.data_fim};\n    for(let entrega of this.items) {\n      let entregaPlano = entrega.plano_entrega_entrega;\n      // valida as datas das entregas quando vinculado a uma entrega do plano de entrega\n      if(entregaPlano) {\n        let entregaDataFim = entregaPlano!.data_fim ? entregaPlano!.data_fim : (entregaPlano!.data_inicio.getTime() <= this.entity!.data_fim.getTime() ? this.entity!.data_fim : undefined);\n        let entregaInterval = {start: entregaPlano!.data_inicio, end: entregaPlano!.data_fim || entregaPlano!.data_inicio};\n        if(!entregaDataFim || !this.util.intersection([entregaInterval, planoInterval])) {\n          return this.lex.translate(\"Entrega\") + \" \" + entregaPlano!.descricao + \" possui datas incompatíveis (início \" + \n            this.util.getDateFormatted(entregaPlano!.data_inicio) + (entregaPlano!.data_fim ? \"e fim \" + this.util.getDateFormatted(entregaPlano!.data_fim) : \"\") + \")\";\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\n   */\n  async ngOnInit() {\n    super.ngOnInit();\n    this.entity = this.metadata?.entity || this.entity;\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\n    this.entity!._metadata = this.entity!._metadata || {};\n    this.entity!._metadata.novaEntrega = undefined;\n  }\n\n  /**\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este componente persistente ou não.\n   * @returns \n   */\n  public async addEntrega() {\n    return Object.assign(new PlanoTrabalhoEntrega(), {\n      _status: \"ADD\",\n      id: this.dao!.generateUuid(),\n      plano_trabalho_id: this.entity?.id\n    }) as IIndexable;\n  }\n\n  /**\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja este componente persistente ou não\n   * @param form \n   * @param row \n   */\n  public async loadEntrega(form: FormGroup, row: any) {\n    let entrega: PlanoTrabalhoEntrega = row;\n    form.controls.descricao.setValue(row.descricao);\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\n    form.controls.plano_entrega_entrega_id.setValue(null);\n    form.controls.orgao.setValue(null);\n    if (entrega._status == \"ADD\") { // É uma nova entrega\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\n    } else if (entrega.plano_entrega_entrega?.plano_entrega?.unidade_id == this.entity!.unidade_id) {\n      form.controls.origem.setValue('PROPRIA_UNIDADE');\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\n    } else if (entrega.plano_entrega_entrega) {\n      form.controls.origem.setValue('OUTRA_UNIDADE');\n      await this.carregarEntregas(entrega.plano_entrega_entrega.plano_entrega_id!);\n      form.controls.plano_entrega_entrega_id.setValue(entrega.plano_entrega_entrega_id);\n    } else if (!!entrega.orgao?.length) { \n      form.controls.origem.setValue('OUTRO_ORGAO');\n      form.controls.orgao.setValue(entrega.orgao);\n    } else {\n      form.controls.origem.setValue('SEM_ENTREGA');\n    }\n  }\n\n  /**\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este componente persistente ou não. \n   * @param row \n   * @returns \n   */\n  public async removeEntrega(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) {\n      this.loading = true;\n      try {\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\n      } finally {\n        this.loading = false;\n      }\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\n      return this.isNoPersist ? false : true; // (*3)\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este componente persistente ou não.\n   * @param form \n   * @param row \n   * @returns \n   */\n  public async saveEntrega(form: FormGroup, row: any) {\n\n    this.entity!._metadata = this.entity!._metadata || {};\n    this.entity!._metadata.novaEntrega = row as PlanoTrabalhoEntrega;\n    this.entity!._metadata.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\n    this.entity!._metadata.novaEntrega.orgao = this.form?.controls.orgao.value;\n    this.entity!._metadata.novaEntrega.descricao = this.form?.controls.descricao.value;\n    this.entity!._metadata.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\n    this.loading = true;\n    try {\n      if (!this.isNoPersist) {\n        this.entity!._metadata.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.entity!._metadata.novaEntrega, this.join);\n        // TODO: Verificar isso (Foi feito uma modificação no grid para isso não ser mais necessário)\n        // if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\n      }\n    } catch (e: any) {\n      this.error(e.message ? e.message : e.toString() || e);\n    } finally {\n      this.entity!._metadata.novaEntrega.plano_entrega_entrega = this.entrega?.selectedItem?.data || null;\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\n      this.loading = false;\n    }\n    return this.entity!._metadata.novaEntrega;\n  }\n\n  /**\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\n   * @param entregas Array de entregas do plano de trabalho\n   * @returns \n   */\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\n  }\n\n  /**\n   * Método chamado para carregar as entregas da unidade\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\n   */\n  public async carregarEntregas(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\n    let planoEntrega = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega:id,nome\", \"unidade\"]) : idPlanoOuPlano;\n    let planoEntregaComUnidade = {id: planoEntrega?.id, unidade_id: planoEntrega?.unidade_id, unidade: planoEntrega?.unidade};\n    this.entregas = planoEntrega?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.descricao || epe.entrega?.nome || \"Deconhecido\", data: Object.assign(epe, {plano_entrega: planoEntregaComUnidade}) })) || [];\n    if(!this.entregas.find(x => x.key == this.form!.controls.plano_entrega_entrega_id.value)) this.form!.controls.plano_entrega_entrega_id.setValue(null);\n  }\n\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\n\n  public async onOrigemChange(row: any) {\n    let value = this.form!.controls.origem.value;\n    this.cdRef.detectChanges();\n    if (value == 'OUTRO_ORGAO') {\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\n    } else if(value == 'SEM_ENTREGA') {\n      this.form?.controls.orgao.setValue(null);\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\n    } if (value == 'PROPRIA_UNIDADE') {\n      this.form?.controls.orgao.setValue(null);\n      this.loading = true;\n      try {\n        let planosEntregas = await this.planoEntregaDao!.query({where: [[\"unidade_id\", \"==\", this.entity!.unidade_id], [\"status\", \"==\", \"ATIVO\"], [\"data_inicio\", \"<=\", this.entity!.data_fim], [\"data_fim\", \">=\", this.entity!.data_inicio]]}).asPromise();\n        if(planosEntregas.length == 1) {\n          this.form?.controls.plano_entrega_id.setValue(planosEntregas[0].id);\n        } else if(this.planoEntrega?.selectedEntity?.unidade_id != this.entity!.unidade_id) {\n          this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\n        }\n      } finally {\n        this.loading = false;\n      }\n    } if (value == 'OUTRA_UNIDADE') {\n      this.form?.controls.orgao.setValue(null);\n      this.planoEntrega?.onSelectClick(new Event(\"SELECT\"));\n    }\n  }\n\n  public onPlanoEntregaChange(event: Event) {\n    let planoEntrega = this.planoEntrega?.selectedEntity as PlanoEntrega;\n    this.carregarEntregas(planoEntrega);\n  }\n\n  public onEntregaChange(event: Event) {\n    let entrega = this.entrega!.selectedItem?.data as PlanoEntregaEntrega;\n    if(!this.form!.controls.descricao.value?.length) {\n      this.form!.controls.descricao.setValue(entrega?.descricao || \"\");\n    }\n  }\n\n  public onForcaTrabalhoChange(row: any) {\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\n  }\n}\n\n/*\nTESTES\n\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\nInclusão Entrega Catálogo                          \nInclusão Entrega Mesma Unidade                     \nInclusão Entrega Outra Unidade                     \nAlteração Entrega Catálogo                         \nAlteração Entrega Mesma Unidade                    \nAlteração Entrega Outra Unidade                    \nCancelamento Entrega Catálogo                      \nCancelamento Entrega Mesma Unidade                 \nCancelamento Entrega Outra Unidade                 \nExclusão Entrega Catálogo                          \nExclusão Entrega Mesma Unidade                     \nExclusão Entrega Outra Unidade                     \n\n*/\n\n/*\nOBSERVAÇÕES:\n\n(*2)  this.entity?.entregas?.filter(e => !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).find(x => x.plano_entrega_entrega_id == control.value)\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\njá existe no grid.\n\n(*3)  return this.isNoPersist ? false : true;\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\n\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\nNo caso de o componente ser 'persistente', essa linha apaga o ID que foi criado pelo banco de dados permitindo ao método saveItem do grid.component localizá-lo na sua lista de items para atualizar suas informações na tela.\n\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\n\n\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\nID do Plano           |       Pode ser que a 'row'           |  Características           | inputs | entrega_id \nde Trabalho           |                                      |                            | search | plano_entrega_entrega_id\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Já tenha vindo do banco (TIPO I)   |                            | nenhum | um dos dois\n                      |   (foi carregada junto com o Plano)  |                            |        |\n                      |--------------------------------------+----------------------------+--------+------------------------------------\n  EXISTE              | - Tenho sido salva agora no banco    |                            | um dos | um dos dois\n  - Então o Grid é    |   (TIPO II)                          |                            | três   |\n    Persistente       |--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     | um dos | nenhum\n                      |                                      |                            | três   |\n                      |--------------------------------------+----------------------------+--------+------------------------------------     \n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                | um dos | um dos dois\n                      |   editada agora                      |                            | três   |\n                      +--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                | um dos | um dos dois\n                      |   editada agora                      |                            | três   |\n----------------------+--------------------------------------+----------------------------+--------+------------------------------------\n  NÃO                 | - Já exista nos itens do grid        |                            | nenhum | um dos dois\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+------------------------------------\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    | um dos | nenhum\n                      |                                      | addEntrega loadEntrega     | três   |\n                      |--------------------------------------+----------------------------+--------+------------------------------------\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    | um dos | um dos dois\n                      |   já está sendo editada              | loadEntrega                | três   |\n------------------------------------------------------------------------------------------+--------+------------------------------------\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\n\n*/","<grid [items]=\"items\" [form]=\"form!\" noMargin #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\n    [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\n    [hasDelete]=\"!disabled\" [hasEdit]=\"!disabled\" [hasAdd]=\"!disabled\">\n    <columns>\n        <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\n            <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\n            <ng-template let-row=\"row\" #columnOrigem>\n                <div class=\"w-100 d-flex justify-content-center\">\n                    <div class=\"one-per-line\">\n                        <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\n                        <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\n                        <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template let-row=\"row\" #editOrigem>\n                <input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select>\n                <input-search *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" label #planoEntrega [placeholder]=\"'Selecione o ' + lex.translate('Plano de entrega')\" [join]=\"['entregas.entrega:id,nome', 'unidade']\" [where]=\"origem?.value == 'PROPRIA_UNIDADE' ? [['unidade_id', '==', entity?.unidade_id]] : undefined\" [selectParams]=\"origem?.value == 'PROPRIA_UNIDADE' ? {filter: {unidade_id: entity?.unidade_id}} : undefined\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" (change)=\"onPlanoEntregaChange($event)\"></input-search>\n                <input-text *ngIf=\"origem?.value == 'OUTRO_ORGAO'\" #orgao controlName=\"orgao\" placeholder=\"Órgão\" [attr.maxlength]=250></input-text>\n            </ng-template>\n        </column>\n        <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\n            <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\n            <ng-template let-row=\"row\" #columnEntrega>\n                <small>{{ planoTrabalhoService.tipoEntrega(row, entity).nome }}</small>\n                <div *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(planoTrabalhoService.tipoEntrega(row, entity).tipo)\" class=\"w-100\">\n                    <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_inicio)\" hint=\"Data de início\"></badge>\n                    <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(row.plano_entrega_entrega?.data_fim)\" hint=\"Data de término\"></badge>\n                </div>\n            </ng-template>\n            <ng-template let-row=\"row\" #editEntrega>\n                <input-select *ngIf=\"['PROPRIA_UNIDADE', 'OUTRA_UNIDADE'].includes(origem?.value)\" #entrega nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregas\" (change)=\"onEntregaChange($event)\"></input-select>\n                <div *ngIf=\"entrega?.selectedItem\" class=\"w-100\">\n                    <badge color=\"light\" icon=\"bi bi-box-arrow-in-right\" [label]=\"util.getDateFormatted(entrega!.selectedItem!.data!.data_inicio)\" hint=\"Data de início\"></badge>\n                    <badge color=\"light\" icon=\"bi bi-box-arrow-right\" [label]=\"util.getDateFormatted(entrega!.selectedItem!.data!.data_fim)\" hint=\"Data de término\"></badge>\n                </div>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\n            <ng-template let-header=\"header\" #titleForcaTrabalho>\n                <div class=\"text-center\">\n                    <small><strong>% Força Trab.</strong></small><br>\n                    <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\n                </div>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\n            <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\" [attr.maxlength]=250></input-text></ng-template>\n        </column>\n        <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\n            <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\n            <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\n            <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\" [attr.maxlength]=250></input-text></ng-template>\n        </column>\n        <column type=\"options\"></column>\n    </columns>\n</grid>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\n\nconst routes: Routes = [\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\n  { path: 'consolidacao/:usuarioId/:planoTrabalhoId', component: PlanoTrabalhoConsolidacaoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações do Plano de Trabalho\" } },\n  { path: 'consolidacao', component: PlanoTrabalhoConsolidacaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consolidações\" } },\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlanoTrabalhoRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UteisModule } from '../../uteis/uteis.module';\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\nimport { PlanoTrabalhoConsolidacaoComponent } from './plano-trabalho-consolidacao/plano-trabalho-consolidacao.component';\nimport { PlanoTrabalhoConsolidacaoListComponent } from './plano-trabalho-consolidacao-list/plano-trabalho-consolidacao-list.component';\nimport { PlanoTrabalhoListAccordeonComponent } from './plano-trabalho-list-accordeon/plano-trabalho-list-accordeon.component';\nimport { PlanoTrabalhoConsolidacaoFormComponent } from './plano-trabalho-consolidacao-form/plano-trabalho-consolidacao-form.component';\n\n\n@NgModule({\n  declarations: [\n    PlanoTrabalhoFormComponent,\n    PlanoTrabalhoListComponent,\n    PlanoTrabalhoListEntregaComponent,\n    PlanoTrabalhoFormTermoComponent,\n    PlanoTrabalhoConsolidacaoComponent,\n    PlanoTrabalhoConsolidacaoListComponent,\n    PlanoTrabalhoConsolidacaoFormComponent,\n    PlanoTrabalhoListAccordeonComponent    \n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    PlanoTrabalhoRoutingModule,\n    UteisModule\n  ]\n})\nexport class PlanoTrabalhoModule { }\n"],"names":["DaoBaseService","ComparecimentoDaoService","constructor","injector","searchFields","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","PlanoTrabalhoConsolidacaoOcorrenciaDaoService","dataset","deeps","deepsFilter","Base","PlanoTrabalhoConsolidacao","data","data_inicio","Date","data_fim","status","avaliacoes","status_historico","plano_trabalho_id","avaliacao_id","initialization","ChangeDetectorRef","EditableFormComponent","PlanoTrabalhoConsolidacaoDaoService","PageFrameBase","Atividade","PlanoTrabalhoConsolidacaoOcorrencia","PlanoTrabalhoService","TipoAtividadeDaoService","PlanoEntregaService","AtividadeDaoService","AtividadeService","CalendarService","Comparecimento","UnidadeDaoService","ɵɵelement","ɵɵproperty","ctx_r38","entityService","getIcon","row_r37","tipo_atividade","nome","ɵɵelementStart","ɵɵtemplate","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_badge_2_Template","ɵɵelementEnd","ɵɵtext","ɵɵadvance","numero","ctx_r24","atividadeService","onIdClick","bind","ɵɵtextInterpolate","descricao","ɵɵlistener","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template_input_search_select_0_listener","$event","ɵɵrestoreView","_r42","ctx_r41","ɵɵnextContext","ɵɵresetView","onTipoAtividadeSelect","ctx_r26","lex","translate","formAtividade","controls","tipo_atividade_id","tipoAtividadeDao","auth","hasPermissionTo","undefined","tempo_r45","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_9_badge_1_Template","ctx_r28","temposAtividade","row_r43","ctx_r30","data_distribuicao","data_estipulada_entrega","data_entrega","etiqueta_r51","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_3_tr_1_i_2_Template","check_r53","checked","texto","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_3_tr_1_Template","row_r47","checklist","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_badge_1_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_separator_2_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_table_3_Template","progresso","etiquetas","length","ctx_r60","i_r62","check_r61","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_table_5_tr_1_Template","ctx_r59","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_Template_input_select_details_2_listener","_r64","ctx_r63","onEtiquetaConfigClick","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_separator_4_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_table_5_Template","ctx_r34","formEdit","addItemHandleEtiquetas","etiqueta","row_r56","status_r68","color","icon","label","row_r65","_r22","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_19_badge_2_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_19_comentarios_widget_3_Template","documento_requisicao","ctx_r36","getStatus","entity","editing","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_4_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_6_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_9_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_11_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_14_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_16_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_ng_template_19_Template","row_r21","atividades","ctx_r4","disabled","addAtividade","entrega","loadAtividade","removeAtividade","saveAtividade","_r23","_r25","_r27","_r29","_r31","_r33","onColumnProgressoEtiquetasChecklistEdit","onColumnProgressoEtiquetasChecklistSave","_r35","atividadeOptionsMetadata","dynamicOptions","dynamicButtons","row_r70","badge","titulo","cor","row_r71","row_r72","forca_trabalho","row_r73","tipo_motivo_afastamento","icone","ɵɵtextInterpolate1","observacao","ctx_r17","row_r74","unidade","sigla","ctx_r19","unidadeDao","PlanoTrabalhoConsolidacaoFormComponent","noPersist","value","control","bindEntity","_disabled","cdRef","detectChanges","joinAtividade","itemsEntregas","itemsOcorrencias","itemsComparecimentos","itemsAfastamentos","validateAtividade","controlName","result","indexOf","includes","util","isDataValid","getTime","validateOcorrencia","formOcorrencia","validateComparecimento","between","start","end","get","dao","consolidacaoOcorrenciaDao","comparecimentoDao","atividadeDao","calendar","ocorrenciaDao","planoTrabalhoService","planoEntregaService","fh","FormBuilder","default","comentarios","esforco","tempo_planejado","formComparecimento","data_comparecimento","unidade_id","detalhamento","refreshId","atividadeRefreshId","removeId","atividadeRemoveId","refresh","loadData","form","_metadata","planoTrabalhoConsolidacaoFormComponent","id","atividade","forEach","foundIndex","findIndex","x","getById","then","splice","ngAfterViewInit","_this","_asyncToGenerator","loadConsolidacao","dados","entregas","map","plano_entrega_entrega","plano_entrega","planosEntregas","find","pe","plano_entrega_id","filter","y","plano_trabalho_entrega_id","tipoEntrega","planoTrabalho","programa","ocorrencias","comparecimentos","afastamentos","plano_trabalho","_this2","gridEntregas","loading","dadosConsolidacao","_this3","efemerides","calculaDataTempoUnidade","carga_horaria","tempoPlanejado","horasUteis","dataInicio","setTime","dataFim","generateUuid","plano_trabalho_entrega","plano_trabalho_consolidacao","demandante","usuario","tempo_despendido","tempoUtil","plano_trabalho_consolidacao_id","demandante_id","usuario_id","metadados","atrasado","tempo_atraso","pausado","iniciado","concluido","avaliado","arquivado","produtividade","extra","_status","row","_this4","patchValue","_this5","confirm","dialog","delete","_this6","markAllAsTouched","valid","fillForm","submitting","save","atividadeDynamicButtons","push","Object","assign","BUTTON_EDIT","BUTTON_DELETE","_this7","setValue","merge","a","b","key","config","clone","_this8","saved","update","error","go","navigate","route","params","modal","modalClose","modalResult","selectedItem","item","textHash","validateLookupItem","loadTipoAtividade","tipoAtividade","buildEtiquetas","buildChecklist","comentarioAtividade","addOcorrencia","_this9","loadOcorrencia","_this10","removeOcorrencia","_this11","ocorrencia","saveOcorrencia","_this12","ocorrenciaDynamicButtons","addComparecimento","_this13","loadComparecimento","_this14","removeComparecimento","_this15","comparecimento","saveComparecimento","_this16","comparecimentoDynamicButtons","addAfastamento","_this17","metadata","consolidacao","filterSnapshot","querySnapshot","afastamentoDynamicButtons","OPTION_INFORMACOES","onClick","doc","ɵɵdirectiveInject","selectors","viewQuery","PlanoTrabalhoConsolidacaoFormComponent_Query","rf","ctx","PlanoTrabalhoConsolidacaoFormComponent_ng_template_5_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_7_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_10_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_13_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_16_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_33_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_42_Template","PlanoTrabalhoConsolidacaoFormComponent_ng_template_44_Template","_r1","_r3","_r5","_r7","_r9","_r13","_r16","_r18","GridComponent","PlanoTrabalhoDaoService","isDisabled","row_r14","ctx_r6","getDateFormatted","row_r16","ctx_r8","row_r17","ctx_r12","lookup","getColor","CONSOLIDACAO_STATUS","row_r19","getValue","PlanoTrabalhoConsolidacaoListComponent","items","consolidacoes","validate","planoTrabalhoDao","title","code","modalWidth","urlParams","has","getByUsuario","planos","agora","v","asTimestamp","grid","expand","addConsolidacao","removeConsolidacao","saveConsolidacao","concluir","response","consolidacaoForm","refreshExpanded","message","cancelarConclusao","anterior","reduce","proximo","avaliar","editarAvaliacao","fazerRecurso","cancelarAvaliacao","isUsuarioConsolidacao","isGestor","gestor","gestor_substituto","gestor_delegado","BOTAO_CONCLUIR","hint","BOTAO_CANCELAR_CONCLUSAO","BOTAO_AVALIAR","BOTAO_EDITAR_AVALIACAO","BOTAO_FAZER_RECURSO","BOTAO_CANCELAR_AVALIACAO","canConcluir","canCancelarConclusao","canAvaliar","canCancelarAvaliacao","diasParaConcluirConsolidacao","PlanoTrabalhoConsolidacaoListComponent_Query","PlanoTrabalhoConsolidacaoListComponent_ng_template_4_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_6_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_9_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_12_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_15_Template","PlanoTrabalhoConsolidacaoListComponent_ng_template_18_Template","_r11","TabsComponent","data_r13","url_foto","apelido","data_r14","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_1_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_ng_template_3_Template","usuario_r8","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_div_2_Template","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_collapse_card_3_Template","ɵɵtextInterpolate2","ctx_r5","usuarios","PlanoTrabalhoConsolidacaoComponent_tab_2_ng_template_1_Template","ctx_r1","_r4","ctx_r3","arquivados","PlanoTrabalhoConsolidacaoComponent","loadingUnidade","tabs","active","queryParams","tab","unidadeGestor","lotados","PlanoTrabalhoConsolidacaoComponent_Query","PlanoTrabalhoConsolidacaoComponent_tab_2_Template","PlanoTrabalhoConsolidacaoComponent_ng_template_4_Template","isModal","_r2","DocumentoDaoService","ProgramaDaoService","TipoDocumentoDaoService","TipoModalidadeDaoService","UsuarioDaoService","ListenerAllPagesService","PlanoTrabalho","PageFormBase","NavigateResult","PlanoTrabalhoFormTermoComponent","numero_processo","formValidation","tipoDocumento","selectedEntity","tipo_documento_id","titleEdit","join","programaDao","usuarioDao","tipoDocumentoDao","allPages","tipoModalidadeDao","documentoDao","tempo_total","tempo_proporcional","programa_id","documento_id","documentos","vinculadas","tipo_modalidade_id","forma_contagem_carga_horaria","onVinculadasChange","event","formValue","Promise","all","loadSearch","tipoModalidade","tipo_modalidade","processo","id_processo","hora","initializeData","saveData","resolve","reject","codigo_tipo_documento","codigo","formaContagemCargaHoraria","forma","PlanoTrabalhoFormTermoComponent_Query","PlanoTrabalhoFormTermoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoTrabalhoFormTermoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoTrabalhoFormTermoComponent_Template_input_switch_change_24_listener","formDisabled","ganho_produtividade","ɵɵattribute","DocumentoService","TemplateService","UtilService","ctx_r10","horasTotais","ctx_r11","horasParciais","ɵɵelementContainerStart","PlanoTrabalhoFormComponent_ng_container_16_Template_input_workload_change_2_listener","onCargaHorariaChenge","PlanoTrabalhoFormComponent_ng_container_16_separator_5_Template","PlanoTrabalhoFormComponent_ng_container_16_separator_6_Template","ɵɵelementContainerEnd","onFormaContagemCargaHorariaChange","ctx_r7","editar_texto_complementar_unidade","planoDataset","editar_texto_complementar_usuario","ctx_r9","needSign","extraTags","editingId","datasource","template_tcr","PlanoTrabalhoFormComponent","gestoresUnidadeExecutora","_ref","_x","apply","arguments","joinPrograma","documentoService","templateService","utilService","unidade_texto_complementar","usuario_texto_complementar","ngOnInit","segment","url","path","action","buscaGestoresUnidadeExecutora","atualizarTcr","loadEntity","textoUsuario","textoUnidade","documento","template","isTermos","onUnidadeSelect","selected","entidade","texto_complementar_plano","onProgramaSelect","updateValueAndValidity","calculaTempos","onUsuarioSelect","onDataInicioChange","onDataFimChange","inicio","fim","carga","loadFeriadosCadastrados","feriados","carga_horaria_padrao","plano","fill","requests","responses","onTabSelect","documentoDynamicButtons","signDocumento","html","conteudo","sign","unit","isVigente","PlanoTrabalhoFormComponent_Query","PlanoTrabalhoFormComponent_Template_editable_form_submit_0_listener","PlanoTrabalhoFormComponent_Template_editable_form_cancel_0_listener","PlanoTrabalhoFormComponent_Template_input_search_select_5_listener","PlanoTrabalhoFormComponent_Template_input_search_select_7_listener","PlanoTrabalhoFormComponent_Template_input_search_select_9_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_12_listener","PlanoTrabalhoFormComponent_Template_input_datetime_change_13_listener","PlanoTrabalhoFormComponent_ng_container_16_Template","PlanoTrabalhoFormComponent_top_alert_18_Template","PlanoTrabalhoFormComponent_div_19_Template","PlanoTrabalhoFormComponent_tab_20_Template","PlanoTrabalhoFormComponent_tab_21_Template","ɵɵpureFunction0","_c11","plano_trabalho_calcula_horas","checkFilled","_c12","_c13","badge_r7","PlanoTrabalhoListAccordeonComponent_ng_template_2_badge_10_Template","item_r5","ctx_r2","getPlanoBadges","PLANO_TRABALHO_STATUS","item_r8","PlanoTrabalhoListAccordeonComponent","_arquivados","viewInit","selectedIndex","accordion","usuarioId","self","i","concluidos","avaliados","getLookup","textValue","toString","JSON","stringify","badges","PlanoTrabalhoListAccordeonComponent_Query","PlanoTrabalhoListAccordeonComponent_ng_template_2_Template","PlanoTrabalhoListAccordeonComponent_ng_template_4_Template","PlanoTrabalhoEntrega","PlanoTrabalhoEntregaDaoService","PlanoEntregaDaoService","PlanoEntregaEntregaDaoService","row_r26","ctx_r27","orgao","PlanoTrabalhoListEntregaComponent_ng_template_6_badge_3_Template","PlanoTrabalhoListEntregaComponent_ng_template_6_badge_4_Template","plano_entrega_entrega_id","PlanoTrabalhoListEntregaComponent_ng_template_8_input_search_2_Template_input_search_change_0_listener","_r37","onPlanoEntregaChange","ctx_r33","_c3","_r32","ɵɵpureFunction1","_c5","_c4","_c7","_c6","planoEntregaDao","PlanoTrabalhoListEntregaComponent_ng_template_8_Template_input_select_change_0_listener","restoredCtx","_r40","row_r31","ctx_r39","onOrigemChange","PlanoTrabalhoListEntregaComponent_ng_template_8_input_search_2_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_input_text_3_Template","origem","ORIGENS_ENTREGAS_PLANO_TRABALHO","_c8","ctx_r43","row_r42","PlanoTrabalhoListEntregaComponent_ng_template_13_div_2_Template","tipo","PlanoTrabalhoListEntregaComponent_ng_template_15_input_select_0_Template_input_select_change_0_listener","_r50","ctx_r49","onEntregaChange","ctx_r46","ctx_r47","PlanoTrabalhoListEntregaComponent_ng_template_15_input_select_0_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_div_1_Template","ctx_r14","totalForcaTrabalho","row_r52","PlanoTrabalhoListEntregaComponent_ng_template_22_Template_input_text_change_0_listener","_r55","row_r53","ctx_r54","onForcaTrabalhoChange","ctx_r18","row_r57","PlanoTrabalhoListEntregaComponent","gridControl","options","e","peeDao","validateEntregas","planoInterval","entregaPlano","entregaDataFim","entregaInterval","intersection","_superprop_getNgOnInit","call","Math","round","somaForcaTrabalho","novaEntrega","addEntrega","loadEntrega","carregarEntregas","removeEntrega","isNoPersist","saveEntrega","idPlanoOuPlano","planoEntrega","planoEntregaComUnidade","epe","query","where","asPromise","onSelectClick","Event","index","PlanoTrabalhoListEntregaComponent_Query","PlanoTrabalhoListEntregaComponent_ng_template_4_Template","PlanoTrabalhoListEntregaComponent_ng_template_6_Template","PlanoTrabalhoListEntregaComponent_ng_template_8_Template","PlanoTrabalhoListEntregaComponent_ng_template_11_Template","PlanoTrabalhoListEntregaComponent_ng_template_13_Template","PlanoTrabalhoListEntregaComponent_ng_template_15_Template","PlanoTrabalhoListEntregaComponent_ng_template_18_Template","PlanoTrabalhoListEntregaComponent_ng_template_20_Template","PlanoTrabalhoListEntregaComponent_ng_template_22_Template","PlanoTrabalhoListEntregaComponent_ng_template_25_Template","PlanoTrabalhoListEntregaComponent_ng_template_27_Template","PlanoTrabalhoListEntregaComponent_ng_template_29_Template","groupBy","_r15","_r17","_r19","_r21","RouterModule","AuthGuard","ConfigResolver","PlanoTrabalhoListComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoTrabalhoRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","UteisModule","PlanoTrabalhoModule","declarations","NgIf","i2","i3","ColumnsComponent","i4","ColumnComponent","i5","FilterComponent","i6","ToolbarComponent","i7","PaginationComponent","i8","InputSwitchComponent","i9","InputSearchComponent","i10","InputTextComponent","i11","InputDatetimeComponent","i12","InputSelectComponent","i13","ReportComponent","i14","OrderComponent","i15","BadgeComponent","i16","DocumentosBadgeComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}