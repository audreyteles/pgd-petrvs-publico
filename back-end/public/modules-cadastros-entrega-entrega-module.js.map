{"version":3,"sources":["./src/app/modules/cadastros/entrega/entrega-routing.module.ts","./src/app/dao/entrega-dao.service.ts","./src/app/modules/cadastros/entrega/entrega.module.ts","./src/app/modules/cadastros/entrega/entrega-list/entrega-list.component.ts","./src/app/modules/cadastros/entrega/entrega-list/entrega-list.component.html","./src/app/models/entrega.model.ts","./src/app/modules/cadastros/entrega/entrega-form/entrega-form.component.ts","./src/app/modules/cadastros/entrega/entrega-form/entrega-form.component.html"],"names":[],"mappings":"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","file":"modules-cadastros-entrega-entrega-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { EntregaFormComponent } from './entrega-form/entrega-form.component';\nimport { EntregaListComponent } from './entrega-list/entrega-list.component';\n\nconst routes: Routes = [\n  { path: '', component: EntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entrega\" } },\n  { path: 'new', component: EntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\n  { path: ':id/edit', component: EntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\n  { path: ':id/consult', component: EntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EntregaRoutingModule { }\n","import { Injectable, Injector } from '@angular/core';\nimport { Entrega } from '../models/entrega.model';\nimport { DaoBaseService } from './dao-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntregaDaoService extends DaoBaseService<Entrega> {\n\n  constructor(protected injector: Injector) { \n    super(\"Entrega\", injector);\n    this.searchFields = [\"nome\"];\n  }  \n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EntregaRoutingModule } from './entrega-routing.module';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { EntregaFormComponent } from './entrega-form/entrega-form.component';\nimport { EntregaListComponent } from './entrega-list/entrega-list.component';\n\n@NgModule({\n  declarations: [\n    EntregaFormComponent,\n    EntregaListComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    EntregaRoutingModule\n  ]\n})\nexport class EntregaModule { }\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\n\n@Component({\n  selector: 'app-entrega-list',\n  templateUrl: './entrega-list.component.html',\n  styleUrls: ['./entrega-list.component.scss']\n})\nexport class EntregaListComponent extends PageListBase<Entrega, EntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  constructor(public injector: Injector) {\n    super(injector, Entrega, EntregaDaoService);\n    /* Inicializações */\n    this.title = 'Entregas';\n    this.filter = this.fh.FormBuilder({\n      nome: {default: \"\"}\n     });\n    // Testa se o usuário possui permissão para exibir dados de entrega\n    if (this.auth.hasPermissionTo(\"MOD_ENTRG_CONS\")) {\n      this.options.push({\n        icon: \"bi bi-info-circle\",\n        label: \"Informações\",\n        onClick: this.consult.bind(this)\n      });\n    }\n    // Testa se o usuário possui permissão para excluir a entrega\n    if (this.auth.hasPermissionTo(\"MOD_ENTRG_EXCL\")) {\n      this.options.push({\n        icon: \"bi bi-trash\",\n        label: \"Excluir\",\n        onClick: this.delete.bind(this)\n      });\n    }\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    if(form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\n    }\n\n    return result;\n  }\n}\n\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"auth.hasPermissionTo('MOD_ENTRG_INCL')\"\n    [hasEdit]=\"auth.hasPermissionTo('MOD_ENTRG_EDT')\">\n    <toolbar *ngIf=\"!selectable\"></toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Entrega\" controlName=\"nome\"\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome da entrega...\"></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\n        <column title=\"Tipo do indicador\" type=\"select\" field=\"tipo_indicador\" [items]=\"lookup.TIPO_INDICADOR\"></column>\n        <column title=\"Qualitativos\" field=\"lista_qualitativos\"></column>\n        <column *ngIf=\"!selectable\" type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n","import { Base } from './base.model';\n\nexport class Entrega extends Base {\n    public nome: string = \"\"; //Nome da entrega;\n    public tipo_indicador: string = \"\"; //Tipo_indicador: \"QUANTIDADE\", \"VALOR\", \"PORCENTAGEM\", \"QUALITATIVO\");\n    public lista_qualitativos: string[] = [];\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'app-entrega-form',\n  templateUrl: './entrega-form.component.html',\n  styleUrls: ['./entrega-form.component.scss']\n})\nexport class EntregaFormComponent extends PageFormBase<Entrega, EntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('itemQualitativo', { static: false }) public itemQualitativo?: InputTextComponent;\n\n  public listaQualitativos: string[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector, Entrega, EntregaDaoService);\n    this.form = this.fh.FormBuilder({\n      nome: {default: \"\"},\n      tipo_indicador: {default: \"\"},\n      qualitativo: {default: \"\"},\n      lista_qualitativos: {default: []}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n/*     if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }; */\n    return result;\n  }\n\n  public async loadData(entity: Entrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.loadListaQualitativos();\n  }\n\n  public async initializeData(form: FormGroup) {\n    form.patchValue(new Entrega());\n    await this.loadData(this.entity!, form);\n  }\n\n  public async saveData(form: IIndexable): Promise<Entrega> {\n    return new Promise<Entrega>((resolve, reject) => {\n      const entrega = this.util.fill(new Entrega(), this.entity!);\n      resolve(this.util.fillForm(entrega, this.form!.value));\n    });\n  }\n\n  public onSelect(){\n\n  }\n\n  public titleEdit = (entity: Entrega): string => {\n    return \"Editando \"+ (entity?.nome || \"\");\n  }\n\n  public incluirQualitativo(qualitativo: string) {\n    let listaQualitativos: string[] = this.form!.controls.lista_qualitativos.value;\n    //let item = this.form?.controls.itemQualitativo!.value;\n    if(!listaQualitativos.find(x => x == qualitativo)){\n      listaQualitativos.push(qualitativo);//melhorar, limpando as strings e camelcase\n      this.form!.controls.lista_qualitativos.setValue(listaQualitativos);\n      this.form?.controls.qualitativo.setValue('');\n      this.loadListaQualitativos();\n    }\n  }\n\n  public excluirQualitativo(qualitativo: string) {\n    let listaQualitativos: string[] = this.form!.controls.lista_qualitativos.value;\n    if(listaQualitativos.find(x => x == qualitativo)){\n      this.form!.controls.lista_qualitativos.setValue(listaQualitativos.filter(x => x != qualitativo));\n      this.loadListaQualitativos();\n    }\n  }\n\n  public loadListaQualitativos() {\n    this.listaQualitativos = this.form!.controls.lista_qualitativos.value || [];\n  }\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div class=\"row\">\n        <div class=\"row\">\n            <input-text [size]=\"9\" label=\"Nome\" icon=\"bi bi-textarea-t\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\n            <input-select [size]=\"3\" label=\"Tipo de indicador\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo_indicador\" [control]=\"form!.controls.tipo_indicador\" [items]=\"lookup.TIPO_INDICADOR\" (select)=\"onSelect()\"></input-select>\n        </div>\n        <separator title=\"Lista de qualitativos\"></separator>\n        <div class=\"row\">\n            <div class=\"form-group col-12\">\n                <div class=\"row mb-3\">\n                    <input-text #itemQualitativo [size]=\"10\" label=\"Qualitativo\" controlName=\"qualitativo\" [control]=\"form!.controls.qualitativo\"></input-text>\n                    <div class=\"form-group col-2\">\n                        <label for=\"itensQualitativos\" class=\"radio control-label\">&nbsp;</label>\n                        <div class=\"btn-group full-container-button-group\" id=\"itensQualitativos\" role=\"group\" aria-label=\"itensQualitativos\">\n                            <button type=\"button\" class=\"btn btn-success d-flex justify-content-center\" (click)=\"incluirQualitativo(itemQualitativo.formControl.value)\" [disabled]=\"!itemQualitativo.formControl.value\">\n                                <i class=\"bi-plus-circle\"></i>\n                                <span class=\"d-none d-md-inline-block\">&nbsp;INCLUIR</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div *ngFor=\"let item of listaQualitativos\" class=\"row\">\n                    <input-display [size]=\"10\" [value]=\"item\"></input-display>\n                    <div class=\"form-group col-2 mb-1\">\n                        <div class=\"btn-group full-container-button-group\" role=\"group\" aria-label=\"itensQualitativos\">\n                            <button type=\"button\" class=\"btn btn-danger d-flex justify-content-center\" (click)=\"excluirQualitativo(item)\">\n                                <i class=\"bi-trash\"></i>\n                                <span class=\"d-none d-md-inline-block\">&nbsp;EXCLUIR</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</editable-form>\n"],"sourceRoot":"webpack:///"}