{"version":3,"file":"997.js","mappings":"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","sources":["./src/app/models/plano-trabalho.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho.service.ts"],"sourcesContent":["import { Base } from './base.model';\r\nimport { TipoModalidade } from './tipo-modalidade.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\nimport { Programa } from './programa.model';\r\nimport { TipoCargaHoraria } from './entidade.model';\r\nimport { PlanoEntrega } from './plano-entrega.model';\r\nimport { PlanoTrabalhoEntrega } from './plano-trabalho-entrega.model';\r\nimport { Documento, HasDocumentos } from './documento.model';\r\nimport { Atividade } from './atividade.model';\r\nimport { Status } from './status.model';\r\n\r\nexport type PlanoMetadados = {\r\n  concluido: boolean\r\n}\r\n\r\nexport class PlanoTrabalho extends Base implements HasDocumentos {\r\n    public tipo_modalidade?: TipoModalidade;\r\n    public plano_entrega?: PlanoEntrega;\r\n    public unidade?: Unidade;\r\n    public usuario?: Usuario;\r\n    public programa?: Programa;\r\n    public documento?: Documento;\r\n    public statusAtual?: Status;\r\n\r\n    public carga_horaria: number = 0; //Carga horária diária do usuário\r\n    public tempo_total: number = 0; //Horas úteis de trabalho no período de data_inicio_vigencia à data_fim_vigencia considerando carga_horaria, feriados, fins de semana\r\n    public tempo_proporcional: number = 0; //tempo_total menos os afastamentos\r\n    public data_inicio_vigencia: Date = new Date(); //Inicio do plano\r\n    public data_fim_vigencia: Date = new Date(); //Fim do plano\r\n    public forma_contagem_carga_horaria: TipoCargaHoraria = \"DIA\"; // Forma de contagem padrão da carga horária\r\n    public metadados: PlanoMetadados | undefined = undefined; /* Campo virtual contendo informações calculadas pelo servidor */\r\n    public entregas: PlanoTrabalhoEntrega[] = []; /* Entregas vinculadas ao Plano de Trabalho*/\r\n    public documentos: Documento[] = [];\r\n    public atividades: Atividade[] = [];\r\n    public statusHistorico: Status[] = [];  // Mudanças de status sofridas pelo plano de trabalho (histórico)\r\n    \r\n    public programa_id: string = \"\";\r\n    public usuario_id: string = \"\";\r\n    public unidade_id: string = \"\";\r\n    public tipo_modalidade_id: string = \"\";\r\n    public plano_entrega_id: string = \"\";\r\n    public documento_id: string = \"\";\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { LookupItem } from '../../../../services/lookup.service';\r\nimport { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list',\r\n  templateUrl: './plano-trabalho-list.component.html',\r\n  styleUrls: ['./plano-trabalho-list.component.scss'] \r\n})\r\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public static selectRoute?: FullRoute = {route: [\"gestao\", \"plano-trabalho\"]};\r\n  public unidadeDao: UnidadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public planoService: PlanoTrabalhoService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    {key: \"VIGENTE\", value: \"Vigente\"},\r\n    {key: \"NAOVIGENTE\", value: \"Não vigente\"},\r\n    {key: \"INICIAM\", value: \"Iniciam\"},\r\n    {key: \"FINALIZAM\", value: \"Finalizam\"}\r\n  ];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.planoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Planos de Trabalho\");\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: {default: true},\r\n      usuario: {default: \"\"},\r\n      unidade_id: {default: null},\r\n      tipo_modalidade_id: {default: null},\r\n      data_filtro: {default: null},\r\n      data_filtro_inicio: {default: new Date()},\r\n      data_filtro_fim: {default: new Date()}\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\"unidade.entidade\", \"usuario\", \"programa\", \"documento.assinaturas.usuario:id,nome,url_foto\", \"tipo_modalidade\", \r\n                \"entregas.plano_entrega_entrega.entrega\", \"entregas.entrega\", \"plano_entrega.entregas.entrega\"];\r\n    this.groupBy = [{field: \"unidade.sigla\", label: \"Unidade\"}];\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let plano: PlanoTrabalho = row as PlanoTrabalho;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    const BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    const BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\r\n    const BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id ] }, { modalClose: (modalResult) => console.log(modalResult?.conteudo), metadata: this.planoService.metadados(row) })).bind(this) };\r\n    if(this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    if(this.auth.hasPermissionTo('MOD_PTR_EDT')) result.push(BOTAO_ALTERAR);\r\n    if(this.auth.hasPermissionTo(\"MOD_PTR_EXCL\")) result.push(BOTAO_EXCLUIR);\r\n    if(this.planoService.needSign(plano)) result.push(BOTAO_ASSINAR);\r\n    result.push(BOTAO_TERMOS);\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let plano: PlanoTrabalho = row as PlanoTrabalho;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    const BOTAO_ASSINAR = { hint: \"Assinar\", icon: \"bi bi-pen\", color: \"btn-outline-dark\", onClick: this.assinar.bind(this) };\r\n    if(this.planoService.needSign(plano)) result.push(BOTAO_ASSINAR);\r\n    else if(this.auth.hasPermissionTo('MOD_PTR_EDT')) result.push(BOTAO_ALTERAR);\r\n    else if(this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    return result;\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if(controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.usuario.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.tipo_modalidade_id.setValue(null);\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    if(form.tipo_modalidade_id?.length) {\r\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\r\n    }\r\n    if(form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if(form.usuario?.length) {\r\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario + \"%\"]);\r\n    }\r\n    if(form.unidade_id?.length) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{field: \"unidade.sigla\", label: \"Unidade\"}] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\r\n    let assinar = !!Object.keys(multiselected).length;\r\n    let menu = [];\r\n    Object.entries(multiselected).forEach(([key, value]) => {\r\n      if(!this.planoService.needSign(value)) assinar = false;\r\n    });\r\n    if(assinar) menu.push({label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\r\n    return menu;\r\n  }\r\n\r\n  public assinar(row?: PlanoTrabalho) {\r\n    const planosIds = row ? [row.id] : Object.keys(this.grid!.multiselected || {});\r\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\r\n    if(!documentos.length) {\r\n      this.dialog.alert(\"Selecione\", \"Nenhum plano seleciono\");\r\n    } else {\r\n      this.documentoService.sign(documentos).then(() => this.grid!.reset());\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PTR_INCL')\"\r\n    [hasEdit]=\"false\"\r\n    [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\"\r\n    [multiselectAllFields]=\"multiselectAllFields\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\"></input-text>\r\n            <input-search [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n          <input-search [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n      </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\r\n            <ng-template let-header=\"header\" #titleNumero>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ '#' + row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\r\n            <ng-template let-header=\"header\" #titleUsuario>\r\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\r\n            <ng-template let-header=\"header\" #titleVigencia>\r\n              Vigência de<br><order by=\"data_inicio_vigencia\" [header]=\"header\">Início</order>a<order by=\"data_fim_vigencia\" [header]=\"header\">Fim</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio_vigencia)+\" até \"+dao!.getDateFormatted(row.data_fim_vigencia)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\r\n                <!--badge *ngIf=\"row.documento\" color=\"light\" icon=\"bi bi-file-earmark-check\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.preview.bind(documentoService)\">\r\n                    <span [style.max-width.px]=\"200\" class=\"text-wrap\"><small><strong>#{{row.documento.numero}}</strong> - {{row.documento.titulo_documento}}</small></span>\r\n                    <separator *ngIf=\"row.documento?.assinaturas?.length\" transparent>\r\n                        <profile-picture *ngFor=\"let assinatura of row.documento!.assinaturas\" [url]=\"assinatura.usuario.url_foto\" [hint]=\"assinatura.usuario.nome\"></profile-picture>\r\n                    </separator>\r\n                </badge>\r\n                <badge *ngIf=\"row.documento?.numero_processo?.length\" [class]=\"'d-block'\" color=\"warning\" icon=\"bi bi-folder-symlink\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.onDocumentoClick.bind(documentoService)\" [hint]=\"documentoService.documentoHint(row)\">\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </badge>\r\n                < !--span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-warning text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\r\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </span//-->\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <report>\r\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\r\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\r\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio_vigencia)}}</ng-template></column>\r\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim_vigencia)}}</ng-template></column>\r\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\r\n    </report>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { Documento, HasDocumentos } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\nexport type badgeEntrega = {\r\n  titulo: string,\r\n  cor: string,\r\n  nome: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoService {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public planoTrabalhoDao: PlanoTrabalhoDaoService\r\n  ) { }\r\n\r\n  public template(plano: PlanoTrabalho): Template | undefined {\r\n    return plano.programa?.template_tcr;\r\n  }\r\n\r\n  public metadados(plano: PlanoTrabalho) {\r\n    return {\r\n      needSign: this.needSign.bind(this),\r\n      extraTags: this.extraTags.bind(this),\r\n      especie: \"TCR\",\r\n      titulo: \"Termo de Ciência e Responsabilidade\",\r\n      dataset: this.planoTrabalhoDao.dataset(),\r\n      datasource: this.planoTrabalhoDao.datasource(plano),\r\n      template: plano.programa?.template_tcr,\r\n      template_id: plano.programa?.template_tcr_id\r\n    };\r\n  }\r\n\r\n  public needSign(parent?: HasDocumentos, item?: Documento): boolean {\r\n    const plano = parent as PlanoTrabalho;\r\n    const documento = item || (plano?.documentos || []).find(x => plano?.documento_id?.length && x.id == plano?.documento_id) || plano?.documento;\r\n    if (parent && documento && !documento.assinaturas?.find(x => x.usuario_id == this.auth.usuario!.id)) {\r\n      const tipoModalidade = plano.tipo_modalidade;\r\n      const entidade = this.auth.entidade!;\r\n      let ids: string[] = [];\r\n      if (tipoModalidade?.plano_trabalho_assinatura_participante) ids.push(plano.usuario_id);\r\n      if (tipoModalidade?.plano_trabalho_assinatura_gestor_unidade) ids.push(plano.unidade?.gestor?.id || \"\", plano.unidade?.gestor_substituto?.id || \"\");\r\n      if (tipoModalidade?.plano_trabalho_assinatura_gestor_entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n      return !!tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public extraTags(parent: HasDocumentos, documento: Documento, metadado: any): LookupItem[] {\r\n    const plano = parent as PlanoTrabalho;\r\n    let tags: LookupItem[] = [];\r\n    if (plano?.documento_id == documento.id) tags.push({ key: documento.id, value: \"Vigente\", icon: \"bi bi-check-all\", color: \"primary\" })\r\n    if (JSON.stringify(metadado.tags) != JSON.stringify(tags)) metadado.tags = tags;\r\n    return metadado.tags;\r\n  }\r\n\r\n  /**\r\n   * Método retorna um badge de acordo com o tipo de entrega recebida no parâmetro 'planoTrabalhoEntrega': entrega associada a uma entrega do catálogo, entrega associada a uma entrega \r\n   * da mesma unidade, ou entrega associada a uma entrega de outra unidade.\r\n   * @param planoTrabalhoEntrega  Entrega do Plano de Trabalho cujo tipo será analisado.\r\n   * @param planoTrabalho         Plano de Trabalho ao qual pertence a entrega a ser analisada.\r\n   * @returns \r\n   */\r\n  public tipoEntrega(planoTrabalhoEntrega: PlanoTrabalhoEntrega, planoTrabalho?: PlanoTrabalho): badgeEntrega {\r\n    /* Se row for uma entrega vinda do banco de dados, ela já deve trazer consigo um dos seus relacionamentos: 'entrega' ou 'plano_entrega_entrega', que serão lidos diretamente de row quando necessário. \r\n        Se row não vier do banco, ela passou pelo método saveEntrega() e lá um desses objetos, escolhido em um dos 3 inputSearch, foi anexado à variável this.novaEntrega, que originalmente é vazia. Sendo assim,\r\n        quando necessário, os dados serão lidos em this.novaEntrega.entrega ou em this.novaEntrega.plano_entrega_entrega. */\r\n    let plano = planoTrabalho || planoTrabalhoEntrega.plano_trabalho;\r\n    if (!!planoTrabalhoEntrega.entrega_id?.length) return { titulo: 'Catálogo', cor: 'secondary', nome: !!plano?._metadata.novaEntrega?.entrega?.id?.length ? plano._metadata.novaEntrega?.entrega?.nome || \"Desconhecido\" : planoTrabalhoEntrega.entrega?.nome || \"Desconhecido1\" };\r\n    let IdDoPlanoEntregaDoPlanoTrabalho: string, IdDoPlanoEntregaDaEntrega: string, badge: string, nome: string, cor: string;\r\n    IdDoPlanoEntregaDoPlanoTrabalho = plano?.plano_entrega_id || plano?._metadata.idPlanoEntregas || 'Desconhecido2';\r\n    IdDoPlanoEntregaDaEntrega = !!plano?._metadata.novaEntrega?.plano_entrega_entrega?.id.length ? plano?._metadata.novaEntrega?.plano_entrega_entrega?.plano_entrega_id || \"Desconhecido3\" : planoTrabalhoEntrega.plano_entrega_entrega?.plano_entrega_id || \"Desconhecido4\";\r\n    [badge, cor] = IdDoPlanoEntregaDoPlanoTrabalho == IdDoPlanoEntregaDaEntrega ? ['Mesma unidade', 'success'] : ['Outra unidade', 'primary'];\r\n    nome = !!plano?._metadata.novaEntrega?.plano_entrega_entrega?.id.length ? plano?._metadata.novaEntrega?.plano_entrega_entrega?.entrega?.nome || \"Desconhecido5\" : planoTrabalhoEntrega.plano_entrega_entrega?.entrega?.nome || \"Desconhecido6\";\r\n    return { titulo: badge, cor: cor, nome: nome };\r\n  }\r\n\r\n}\r\n"],"names":["Base","PlanoTrabalho","constructor","data","carga_horaria","tempo_total","tempo_proporcional","data_inicio_vigencia","Date","data_fim_vigencia","forma_contagem_carga_horaria","metadados","undefined","entregas","documentos","atividades","statusHistorico","programa_id","usuario_id","unidade_id","tipo_modalidade_id","plano_entrega_id","documento_id","initialization","GridComponent","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","PageListBase","PlanoTrabalhoService","DocumentoService","i0","ɵɵelementStart","ɵɵlistener","PlanoTrabalhoListComponent_toolbar_1_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r39","ctx_r38","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","filter","controls","agrupar","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","row_r44","length","ɵɵtemplate","PlanoTrabalhoListComponent_column_12_ng_template_1_span_0_Template","row_r47","PlanoTrabalhoListComponent_column_12_ng_template_1_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoListComponent_column_12_ng_template_3_Template","ctx_r1","lex","translate","_r40","_r42","header_r48","row_r49","numero","header_r50","row_r51","usuario","nome","row_r52","programa","row_r53","unidade","row_r54","tipo_modalidade","header_r55","ctx_r19","dao","getDateFormatted","row_r56","row_r57","documento","ɵɵtextInterpolate","row_r58","row_r59","matricula","row_r60","row_r61","row_r62","ctx_r33","util","getDateTimeFormatted","row_r63","ctx_r35","row_r64","row_r65","numero_processo","PlanoTrabalhoListComponent","injector","multiselectAllFields","DATAS_FILTRO","key","value","filterValidate","control","controlName","result","data_filtro_fim","data_filtro_inicio","filterWhere","form","push","data_filtro","dynamicMultiselectMenu","multiselected","assinar","Object","keys","menu","entries","forEach","planoService","needSign","label","icon","onClick","bind","unidadeDao","get","programaDao","documentoDao","documentoService","usuarioDao","tipoModalidadeDao","title","code","fh","FormBuilder","default","cdRef","join","groupBy","field","dynamicOptions","row","plano","BOTAO_INFORMACOES","consult","BOTAO_ALTERAR","color","edit","BOTAO_EXCLUIR","delete","BOTAO_ASSINAR","BOTAO_TERMOS","go","navigate","route","id","modalClose","modalResult","console","log","conteudo","metadata","auth","hasPermissionTo","dynamicButtons","hint","filterClear","setValue","event","grid","reloadFilter","planosIds","items","x","includes","map","dialog","alert","sign","then","reset","_class","selectRoute","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoTrabalhoListComponent_Query","rf","ctx","PlanoTrabalhoListComponent_Template_grid_select_0_listener","onSelect","PlanoTrabalhoListComponent_toolbar_1_Template","PlanoTrabalhoListComponent_column_12_Template","PlanoTrabalhoListComponent_ng_template_14_Template","PlanoTrabalhoListComponent_ng_template_16_Template","PlanoTrabalhoListComponent_ng_template_19_Template","PlanoTrabalhoListComponent_ng_template_21_Template","PlanoTrabalhoListComponent_ng_template_24_Template","PlanoTrabalhoListComponent_ng_template_27_Template","PlanoTrabalhoListComponent_ng_template_30_Template","PlanoTrabalhoListComponent_ng_template_33_Template","PlanoTrabalhoListComponent_ng_template_35_Template","PlanoTrabalhoListComponent_ng_template_38_Template","PlanoTrabalhoListComponent_ng_template_43_Template","PlanoTrabalhoListComponent_ng_template_46_Template","PlanoTrabalhoListComponent_ng_template_49_Template","PlanoTrabalhoListComponent_ng_template_52_Template","PlanoTrabalhoListComponent_ng_template_55_Template","PlanoTrabalhoListComponent_ng_template_58_Template","PlanoTrabalhoListComponent_ng_template_61_Template","PlanoTrabalhoListComponent_ng_template_64_Template","add","isModal","orderBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","_r8","_r10","_r12","_r14","_r16","_r18","_r20","_r22","_r24","_r26","_r28","_r30","_r32","_r34","_r36","rowsLimit","planoTrabalhoDao","template","template_tcr","extraTags","especie","titulo","dataset","datasource","template_id","template_tcr_id","parent","item","find","assinaturas","tipoModalidade","entidade","ids","plano_trabalho_assinatura_participante","plano_trabalho_assinatura_gestor_unidade","gestor","gestor_substituto","plano_trabalho_assinatura_gestor_entidade","gestor_id","gestor_substituto_id","metadado","tags","JSON","stringify","tipoEntrega","planoTrabalhoEntrega","planoTrabalho","plano_trabalho","entrega_id","cor","_metadata","novaEntrega","entrega","IdDoPlanoEntregaDoPlanoTrabalho","IdDoPlanoEntregaDaEntrega","badge","idPlanoEntregas","plano_entrega_entrega","ɵɵinject","i1","AuthService","i2","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}