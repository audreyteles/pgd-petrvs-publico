{"version":3,"file":"997.js","mappings":"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","sources":["./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho.service.ts"],"sourcesContent":["import { LookupItem } from '../../../../services/lookup.service';\r\nimport { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list',\r\n  templateUrl: './plano-trabalho-list.component.html',\r\n  styleUrls: ['./plano-trabalho-list.component.scss'] \r\n})\r\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public static selectRoute?: FullRoute = {route: [\"gestao\", \"plano-trabalho\"]};\r\n  public unidadeDao: UnidadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public planoService: PlanoTrabalhoService;\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    {key: \"VIGENTE\", value: \"Vigente\"},\r\n    {key: \"NAOVIGENTE\", value: \"Não vigente\"},\r\n    {key: \"INICIAM\", value: \"Iniciam\"},\r\n    {key: \"FINALIZAM\", value: \"Finalizam\"}\r\n  ];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.planoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Planos de Trabalho\");\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: {default: true},\r\n      usuario: {default: \"\"},\r\n      unidade_id: {default: null},\r\n      tipo_modalidade_id: {default: null},\r\n      data_filtro: {default: null},\r\n      data_filtro_inicio: {default: new Date()},\r\n      data_filtro_fim: {default: new Date()}\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\"unidade.entidade\", \"usuario\", \"programa\", \"documento.assinaturas.usuario:id,nome,url_foto\", \"tipo_modalidade\", \r\n                \"entregas.plano_entrega_entrega.entrega\", \"entregas.plano_entrega_entrega.plano_entrega:id,unidade_id\", \"entregas.plano_entrega_entrega.plano_entrega.unidade\", \"entregas.entrega\"];\r\n    this.groupBy = [{field: \"unidade.sigla\", label: \"Unidade\"}];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    if(this.metadata?.minha_unidade){\r\n      this.filter?.controls.unidade_id.setValue(this.auth.unidade?.id);\r\n    }\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let plano: PlanoTrabalho = row as PlanoTrabalho;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    const BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    const BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\r\n    const BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id ] }, { modalClose: (modalResult) => console.log(modalResult?.conteudo), metadata: this.planoService.metadados(row) })).bind(this) };\r\n    if(this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    if(this.auth.hasPermissionTo('MOD_PTR_EDT')) result.push(BOTAO_ALTERAR);\r\n    if(this.auth.hasPermissionTo(\"MOD_PTR_EXCL\")) result.push(BOTAO_EXCLUIR);\r\n    if(this.planoService.needSign(plano)) result.push(BOTAO_ASSINAR);\r\n    result.push(BOTAO_TERMOS);\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let plano: PlanoTrabalho = row as PlanoTrabalho;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    const BOTAO_ASSINAR = { hint: \"Assinar\", icon: \"bi bi-pen\", color: \"btn-outline-secondary\", onClick: this.assinar.bind(this) };\r\n    if(this.planoService.needSign(plano)) result.push(BOTAO_ASSINAR);\r\n    else if(this.auth.hasPermissionTo('MOD_PTR_EDT')) result.push(BOTAO_ALTERAR);\r\n    else if(this.auth.hasPermissionTo(\"MOD_PTR_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    return result;\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if(controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.usuario.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.tipo_modalidade_id.setValue(null);\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    if(form.tipo_modalidade_id?.length) {\r\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\r\n    }\r\n    if(form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if(form.usuario?.length) {\r\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario + \"%\"]);\r\n    }\r\n    if(form.unidade_id?.length) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{field: \"unidade.sigla\", label: \"Unidade\"}] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\r\n    let assinar = !!Object.keys(multiselected).length;\r\n    let menu = [];\r\n    Object.entries(multiselected).forEach(([key, value]) => {\r\n      if(!this.planoService.needSign(value)) assinar = false;\r\n    });\r\n    if(assinar) menu.push({label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\r\n    return menu;\r\n  }\r\n\r\n  public assinar(row?: PlanoTrabalho) {\r\n    const planosIds = row ? [row.id] : Object.keys(this.grid!.multiselected || {});\r\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\r\n    if(!documentos.length) {\r\n      this.dialog.alert(\"Selecione\", \"Nenhum plano seleciono\");\r\n    } else {\r\n      this.documentoService.sign(documentos).then(() => this.grid!.reset());\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PTR_INCL')\"\r\n    [hasEdit]=\"false\"\r\n    [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\"\r\n    [multiselectAllFields]=\"multiselectAllFields\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\"></input-text>\r\n            <input-search [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n          <input-search [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n      </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\r\n            <ng-template let-header=\"header\" #titleNumero>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ '#' + row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\r\n            <ng-template let-header=\"header\" #titleUsuario>\r\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\r\n            <ng-template let-header=\"header\" #titleVigencia>\r\n              Vigência de<br><order by=\"data_inicio\" [header]=\"header\">Início</order>a<order by=\"data_fim\" [header]=\"header\">Fim</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)+\" até \"+dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\r\n                <!--badge *ngIf=\"row.documento\" color=\"light\" icon=\"bi bi-file-earmark-check\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.preview.bind(documentoService)\">\r\n                    <span [style.max-width.px]=\"200\" class=\"text-wrap\"><small><strong>#{{row.documento.numero}}</strong> - {{row.documento.titulo_documento}}</small></span>\r\n                    <separator *ngIf=\"row.documento?.assinaturas?.length\" transparent>\r\n                        <profile-picture *ngFor=\"let assinatura of row.documento!.assinaturas\" [url]=\"assinatura.usuario.url_foto\" [hint]=\"assinatura.usuario.nome\"></profile-picture>\r\n                    </separator>\r\n                </badge>\r\n                <badge *ngIf=\"row.documento?.numero_processo?.length\" [class]=\"'d-block'\" color=\"warning\" icon=\"bi bi-folder-symlink\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.onDocumentoClick.bind(documentoService)\" [hint]=\"documentoService.documentoHint(row)\">\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </badge>\r\n                < !--span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-warning text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\r\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </span//-->\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <report>\r\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\r\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\r\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio)}}</ng-template></column>\r\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim)}}</ng-template></column>\r\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\r\n    </report>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { Documento, HasDocumentos } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoEntrega, PlanoTrabalhoEntregaTipo } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { LookupItem, LookupService } from 'src/app/services/lookup.service';\r\nimport { TemplateService } from '../../uteis/templates/template.service';\r\n\r\nexport type BadgeEntrega = {\r\n  titulo: string,\r\n  cor: string,\r\n  nome: string,\r\n  tipo: PlanoTrabalhoEntregaTipo\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoService {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public lookup: LookupService,\r\n    public dao: PlanoTrabalhoDaoService,\r\n    public templateService: TemplateService,\r\n    public planoTrabalhoDao: PlanoTrabalhoDaoService\r\n  ) { }\r\n\r\n  public template(plano: PlanoTrabalho): Template | undefined {\r\n    return plano.programa?.template_tcr;\r\n  }\r\n\r\n  public metadados(plano: PlanoTrabalho) {\r\n    return {\r\n      needSign: this.needSign.bind(this),\r\n      extraTags: this.extraTags.bind(this),\r\n      especie: \"TCR\",\r\n      titulo: \"Termo de Ciência e Responsabilidade\",\r\n      dataset: this.planoTrabalhoDao.dataset(),\r\n      datasource: this.planoTrabalhoDao.datasource(plano),\r\n      template: plano.programa?.template_tcr,\r\n      template_id: plano.programa?.template_tcr_id\r\n    };\r\n  }\r\n\r\n  public needSign(parent?: HasDocumentos, item?: Documento): boolean {\r\n    const plano = parent as PlanoTrabalho;\r\n    const documento = item || (plano?.documentos || []).find(x => plano?.documento_id?.length && x.id == plano?.documento_id) || plano?.documento;\r\n    if (parent && documento && !documento.assinaturas?.find(x => x.usuario_id == this.auth.usuario!.id)) {\r\n      const tipoModalidade = plano.tipo_modalidade;\r\n      const programa = plano.programa;\r\n      const entidade = this.auth.entidade!;\r\n      let ids: string[] = [];\r\n      if (programa?.plano_trabalho_assinatura_participante) ids.push(plano.usuario_id);\r\n      if (programa?.plano_trabalho_assinatura_gestor_lotacao) ids.push(...this.auth.gestoresLotacao.map(x => x.id));\r\n      if (programa?.plano_trabalho_assinatura_gestor_unidade) ids.push(plano.unidade?.gestor?.id || \"\", plano.unidade?.gestor_substituto?.id || \"\");\r\n      if (programa?.plano_trabalho_assinatura_gestor_entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n      return !!tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public extraTags(parent: HasDocumentos, documento: Documento, metadado: any): LookupItem[] {\r\n    const plano = parent as PlanoTrabalho;\r\n    let tags: LookupItem[] = [];\r\n    if (plano?.documento_id == documento.id) tags.push({ key: documento.id, value: \"Vigente\", icon: \"bi bi-check-all\", color: \"primary\" })\r\n    if (JSON.stringify(metadado.tags) != JSON.stringify(tags)) metadado.tags = tags;\r\n    return metadado.tags;\r\n  }\r\n\r\n  /**\r\n   * Método retorna um badge de acordo com o tipo de entrega recebida no parâmetro 'planoTrabalhoEntrega': entrega associada a uma entrega do catálogo, entrega associada a uma entrega \r\n   * da mesma unidade, ou entrega associada a uma entrega de outra unidade.\r\n   * @param planoTrabalhoEntrega  Entrega do Plano de Trabalho cujo tipo será analisado.\r\n   * @param planoTrabalho         Plano de Trabalho ao qual pertence a entrega a ser analisada. Se não for informado, o método tentará obtê-lo diretamente da própria entrega recebida.\r\n   * @returns \r\n   */\r\n  public tipoEntrega(planoTrabalhoEntrega: PlanoTrabalhoEntrega, planoTrabalho?: PlanoTrabalho): BadgeEntrega {\r\n    /* Se row for uma entrega vinda do banco de dados, ela já deve trazer consigo um dos seus relacionamentos: 'entrega' ou 'plano_entrega_entrega', que serão lidos diretamente de row quando necessário. \r\n        Se row não vier do banco, ela passou pelo método saveEntrega() e lá um desses objetos, escolhido em um dos 3 inputSearch, foi anexado à variável this.novaEntrega, que originalmente é vazia. Sendo assim,\r\n        quando necessário, os dados serão lidos em this.novaEntrega.entrega ou em this.novaEntrega.plano_entrega_entrega. */\r\n    let plano = planoTrabalho || planoTrabalhoEntrega.plano_trabalho;\r\n    let key: PlanoTrabalhoEntregaTipo = planoTrabalhoEntrega.plano_entrega_entrega?.plano_entrega?.unidade_id == plano!.unidade_id ? \"PROPRIA_UNIDADE\" :\r\n      (planoTrabalhoEntrega.plano_entrega_entrega ? \"OUTRA_UNIDADE\" : \r\n      (!!planoTrabalhoEntrega.orgao?.length ? \"OUTRO_ORGAO\" : \"SEM_ENTREGA\"));\r\n    let result = this.lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO.find(x => x.key == key) || {key: \"\", value: \"Desconhecido\"};\r\n    let nome = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.entrega?.nome || planoTrabalhoEntrega.plano_entrega_entrega?.entrega?.nome || \"Desconhecido\";\r\n    return { titulo: result.value, cor: result.color || \"danger\", nome: nome, tipo: key};\r\n  }\r\n\r\n  /**\r\n   * Método atualiza o TCR caso ele exista (possivelmente obrigatório pelo programa), e caso ele não esteja assinado. \r\n   * Em caso de estar assinado ou ser obrigatório e não exista ainda, será gerado um novo documento.\r\n   * @param planoReferencia  Plano de trabalho para comparação (contendo as entregas)\r\n   * @param planoNovo        Plano de trabalho modificado, com as novas informações (contendo as entregas, programa.template_tcr e documentos)\r\n   * @param ?textUsuario     Texto complementar do usuário, caso não seja informado, irá utilizar o do planoNovo.usuario.texto_complementar_plano\r\n   * @param ?textUnidade     Texto complementar da unidade, caso não seja informado, irá utilizar o do planoNovo.unidade.texto_complementar_plano\r\n   * @returns                Documento gerado ou modificado (observar o _status)\r\n   */\r\n  public atualizarTcr(planoReferencia: PlanoTrabalho, planoNovo: PlanoTrabalho, textUsuario?: string, textUnidade?: string) {\r\n    if(planoNovo.usuario && planoNovo.unidade) {\r\n      let dsReferencia = this.dao!.datasource(planoReferencia);\r\n      let dsNovo = this.dao!.datasource(planoNovo);\r\n      let programa = planoNovo.programa;\r\n      /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n      dsNovo.usuario.texto_complementar_plano = textUsuario || planoNovo.usuario?.texto_complementar_plano || \"\";\r\n      dsNovo.unidade.texto_complementar_plano = textUnidade || planoNovo.unidade?.texto_complementar_plano || \"\";\r\n      /* Se tiver modificações e o termo for obrigatório ou já exista um documento */\r\n      if((programa?.termo_obrigatorio || planoNovo.documento_id?.length) && JSON.stringify(dsNovo) != JSON.stringify(dsReferencia) && programa?.template_tcr) {\r\n        let documento = planoNovo.documentos?.find((x: Documento) => x.id == planoNovo.documento_id);\r\n        if(!planoNovo.documento_id?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          documento = new Documento({\r\n            id: this.dao?.generateUuid(), \r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: programa?.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: dsNovo,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: planoNovo.id,\r\n            template_id: programa?.template_tcr_id\r\n          });\r\n          planoNovo.documentos.push(documento);\r\n        } else {\r\n          documento.conteudo = this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo);\r\n          documento.dataset = this.dao!.dataset();\r\n          documento.datasource = dsNovo;\r\n          documento._status = documento._status == \"ADD\" ? \"ADD\" : \"EDIT\"; \r\n        }\r\n        planoNovo.documento = documento;\r\n        planoNovo.documento_id = documento?.id || null;\r\n      }\r\n    }\r\n    return planoNovo.documento;\r\n  }\r\n}\r\n"],"names":["GridComponent","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","PlanoTrabalho","PageListBase","PlanoTrabalhoService","DocumentoService","i0","ɵɵelementStart","ɵɵlistener","PlanoTrabalhoListComponent_toolbar_1_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r39","ctx_r38","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","filter","controls","agrupar","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","row_r44","entregas","length","ɵɵtemplate","PlanoTrabalhoListComponent_column_12_ng_template_1_span_0_Template","row_r47","PlanoTrabalhoListComponent_column_12_ng_template_1_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoListComponent_column_12_ng_template_3_Template","ctx_r1","lex","translate","_r40","_r42","header_r48","row_r49","numero","header_r50","row_r51","usuario","nome","row_r52","programa","row_r53","unidade","row_r54","tipo_modalidade","header_r55","ctx_r19","dao","getDateFormatted","row_r56","data_inicio","data_fim","row_r57","documento","ɵɵtextInterpolate","row_r58","row_r59","matricula","row_r60","row_r61","row_r62","ctx_r33","util","getDateTimeFormatted","row_r63","ctx_r35","row_r64","row_r65","numero_processo","PlanoTrabalhoListComponent","constructor","injector","multiselectAllFields","DATAS_FILTRO","key","value","filterValidate","control","controlName","result","data_filtro_fim","data_filtro_inicio","filterWhere","form","tipo_modalidade_id","push","data_filtro","unidade_id","dynamicMultiselectMenu","multiselected","assinar","Object","keys","menu","entries","forEach","planoService","needSign","label","icon","onClick","bind","unidadeDao","get","programaDao","documentoDao","documentoService","usuarioDao","tipoModalidadeDao","title","code","fh","FormBuilder","default","Date","cdRef","join","groupBy","field","ngOnInit","metadata","minha_unidade","setValue","auth","id","dynamicOptions","row","plano","BOTAO_INFORMACOES","consult","BOTAO_ALTERAR","color","edit","BOTAO_EXCLUIR","delete","BOTAO_ASSINAR","BOTAO_TERMOS","go","navigate","route","modalClose","modalResult","console","log","conteudo","metadados","hasPermissionTo","dynamicButtons","hint","filterClear","event","grid","reloadFilter","planosIds","documentos","items","x","includes","documento_id","map","dialog","alert","sign","then","reset","_class","selectRoute","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoTrabalhoListComponent_Query","rf","ctx","PlanoTrabalhoListComponent_Template_grid_select_0_listener","onSelect","PlanoTrabalhoListComponent_toolbar_1_Template","PlanoTrabalhoListComponent_column_12_Template","PlanoTrabalhoListComponent_ng_template_14_Template","PlanoTrabalhoListComponent_ng_template_16_Template","PlanoTrabalhoListComponent_ng_template_19_Template","PlanoTrabalhoListComponent_ng_template_21_Template","PlanoTrabalhoListComponent_ng_template_24_Template","PlanoTrabalhoListComponent_ng_template_27_Template","PlanoTrabalhoListComponent_ng_template_30_Template","PlanoTrabalhoListComponent_ng_template_33_Template","PlanoTrabalhoListComponent_ng_template_35_Template","PlanoTrabalhoListComponent_ng_template_38_Template","PlanoTrabalhoListComponent_ng_template_43_Template","PlanoTrabalhoListComponent_ng_template_46_Template","PlanoTrabalhoListComponent_ng_template_49_Template","PlanoTrabalhoListComponent_ng_template_52_Template","PlanoTrabalhoListComponent_ng_template_55_Template","PlanoTrabalhoListComponent_ng_template_58_Template","PlanoTrabalhoListComponent_ng_template_61_Template","PlanoTrabalhoListComponent_ng_template_64_Template","add","isModal","orderBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","undefined","_r2","_r4","_r6","_r8","_r10","_r12","_r14","_r16","_r18","_r20","_r22","_r24","_r26","_r28","_r30","_r32","_r34","_r36","rowsLimit","Documento","lookup","templateService","planoTrabalhoDao","template","template_tcr","extraTags","especie","titulo","dataset","datasource","template_id","template_tcr_id","parent","item","find","assinaturas","usuario_id","tipoModalidade","entidade","ids","plano_trabalho_assinatura_participante","plano_trabalho_assinatura_gestor_lotacao","gestoresLotacao","plano_trabalho_assinatura_gestor_unidade","gestor","gestor_substituto","plano_trabalho_assinatura_gestor_entidade","gestor_id","gestor_substituto_id","metadado","tags","JSON","stringify","tipoEntrega","planoTrabalhoEntrega","planoTrabalho","plano_trabalho","plano_entrega_entrega","plano_entrega","orgao","ORIGENS_ENTREGAS_PLANO_TRABALHO","_metadata","novaEntrega","entrega","cor","tipo","atualizarTcr","planoReferencia","planoNovo","textUsuario","textUnidade","dsReferencia","dsNovo","texto_complementar_plano","termo_obrigatorio","generateUuid","renderTemplate","status","_status","entidade_id","plano_trabalho_id","ɵɵinject","i1","AuthService","i2","LookupService","i3","i4","TemplateService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}