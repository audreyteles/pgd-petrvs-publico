{"version":3,"file":"997.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAGuE;AAEC;AACS;AACX;AACa;AACf;AACA;AAEA;AACD;AAEF;AACqB;;;;;ICVlFW,6DAAA,cAA6B;IACsGA,yDAAA,oBAAAG,6EAAAC,MAAA;MAAAJ,4DAAA,CAAAM,IAAA;MAAA,MAAAC,OAAA,GAAAP,4DAAA;MAAA,OAAUA,0DAAA,CAAAO,OAAA,CAAAG,eAAA,CAAAN,MAAA,CAAuB;IAAA,EAAC;IAACJ,2DAAA,EAAe;;;;IAArKA,wDAAA,GAAU;IAAVA,yDAAA,WAAU,YAAAc,MAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,OAAA;;;;;IAiBdjB,6DAAA,eAAiF;IAAAA,wDAAA,YAAgC;IAACA,qDAAA,GAAwB;IAAAA,2DAAA,EAAO;;;;IAA/BA,wDAAA,GAAwB;IAAxBA,iEAAA,MAAAqB,OAAA,CAAAC,QAAA,kBAAAD,OAAA,CAAAC,QAAA,CAAAC,MAAA,KAAwB;;;;;IAA1IvB,yDAAA,IAAAyB,kEAAA,mBAAiJ;;;;IAA1IzB,yDAAA,SAAAqB,OAAA,CAAAC,QAAA,kBAAAD,OAAA,CAAAC,QAAA,CAAAC,MAAA,CAA0B;;;;;IAGjCvB,wDAAA,sCAA0E;;;;IAA7CA,yDAAA,WAAA0B,OAAA,CAAc;;;;;IALnD1B,6DAAA,iBAA6L;IACzLA,yDAAA,IAAA2B,2DAAA,iCAAA3B,qEAAA,CAEc;IACdA,yDAAA,IAAA6B,2DAAA,iCAAA7B,qEAAA,CAEc;IAClBA,2DAAA,EAAS;;;;;;IAPyDA,yDAAA,mBAAkB,SAAA8B,MAAA,CAAAC,GAAA,CAAAC,SAAA,yBAAAC,IAAA,oBAAAC,IAAA;;;;;IAU5ElC,6DAAA,gBAAqC;IAAAA,qDAAA,UAAG;IAAAA,2DAAA,EAAQ;;;;IAA7BA,yDAAA,WAAAmC,UAAA,CAAiB;;;;;IAGpCnC,6DAAA,WAAM;IAACA,qDAAA,GAAqB;IAAAA,2DAAA,EAAO;;;;IAA5BA,wDAAA,GAAqB;IAArBA,iEAAA,YAAAoC,OAAA,CAAAC,MAAA,KAAqB;;;;;IAK5BrC,6DAAA,gBAA2C;IAAAA,qDAAA,mBAAO;IAAAA,2DAAA,EAAQ;;;;IAAjCA,yDAAA,WAAAsC,UAAA,CAAiB;;;;;IAG1CtC,6DAAA,WAAM;IAACA,qDAAA,GAA2B;IAAAA,2DAAA,EAAO;;;;IAAlCA,wDAAA,GAA2B;IAA3BA,iEAAA,OAAAuC,OAAA,CAAAC,OAAA,kBAAAD,OAAA,CAAAC,OAAA,CAAAC,IAAA,YAA2B;;;;;IAKlCzC,6DAAA,WAAM;IAACA,qDAAA,GAA4B;IAAAA,2DAAA,EAAO;;;;IAAnCA,wDAAA,GAA4B;IAA5BA,iEAAA,OAAA0C,OAAA,CAAAC,QAAA,kBAAAD,OAAA,CAAAC,QAAA,CAAAF,IAAA,YAA4B;;;;;IAKnCzC,6DAAA,WAAM;IAACA,qDAAA,GAA4B;IAAAA,2DAAA,EAAO;;;;IAAnCA,wDAAA,GAA4B;IAA5BA,iEAAA,OAAA4C,OAAA,CAAAC,OAAA,kBAAAD,OAAA,CAAAC,OAAA,CAAAC,KAAA,YAA4B;;;;;IAKnC9C,6DAAA,WAAM;IAACA,qDAAA,GAAmC;IAAAA,2DAAA,EAAO;;;;IAA1CA,wDAAA,GAAmC;IAAnCA,iEAAA,OAAA+C,OAAA,CAAAC,eAAA,kBAAAD,OAAA,CAAAC,eAAA,CAAAP,IAAA,YAAmC;;;;;IAK5CzC,qDAAA,wBAAW;IAAAA,wDAAA,SAAI;IAAAA,6DAAA,gBAA0C;IAAAA,qDAAA,kBAAM;IAAAA,2DAAA,EAAQ;IAAAA,qDAAA,QAAC;IAAAA,6DAAA,gBAAuC;IAAAA,qDAAA,UAAG;IAAAA,2DAAA,EAAQ;;;;IAAnFA,wDAAA,GAAiB;IAAjBA,yDAAA,WAAAiD,UAAA,CAAiB;IAAqCjD,wDAAA,GAAiB;IAAjBA,yDAAA,WAAAiD,UAAA,CAAiB;;;;;IAG5GjD,6DAAA,WAAM;IAACA,qDAAA,GAA2C;IAAAA,wDAAA,SAAI;IAACA,qDAAA,GAAgD;IAAAA,2DAAA,EAAO;;;;;IAAvGA,wDAAA,GAA2C;IAA3CA,iEAAA,MAAAkD,OAAA,CAAAC,GAAA,CAAAC,gBAAA,CAAAC,OAAA,CAAAC,WAAA,OAA2C;IAAKtD,wDAAA,GAAgD;IAAhDA,iEAAA,qBAAAkD,OAAA,CAAAC,GAAA,CAAAC,gBAAA,CAAAC,OAAA,CAAAE,QAAA,MAAgD;;;;;IAKvGvD,wDAAA,2BAAgH;;;;IAAhEA,yDAAA,cAAAwD,OAAA,CAAAC,SAAA,CAA2B;;;;;IAoB3EzD,wDAAA,gBAAyN;;;;;IAAlNA,yDAAA,UAAA0D,OAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAF,OAAA,CAAAC,MAAA,CAAAE,qBAAA,EAAAC,OAAA,CAAAC,MAAA,EAAmE,SAAAL,OAAA,CAAAC,MAAA,CAAAK,OAAA,CAAAN,OAAA,CAAAC,MAAA,CAAAE,qBAAA,EAAAC,OAAA,CAAAC,MAAA,YAAAL,OAAA,CAAAC,MAAA,CAAAM,QAAA,CAAAP,OAAA,CAAAC,MAAA,CAAAE,qBAAA,EAAAC,OAAA,CAAAC,MAAA;;;;;IAOM/D,qDAAA,GAAc;;;;IAAdA,gEAAA,CAAAmE,OAAA,CAAA9B,MAAA,CAAc;;;;;IACGrC,qDAAA,GAAgC;;;;IAAhCA,gEAAA,EAAAoE,OAAA,CAAA5B,OAAA,kBAAA4B,OAAA,CAAA5B,OAAA,CAAA6B,SAAA,QAAgC;;;;;IAC3CrE,qDAAA,GAA4B;;;;IAA5BA,gEAAA,EAAAsE,OAAA,CAAA3B,QAAA,kBAAA2B,OAAA,CAAA3B,QAAA,CAAAF,IAAA,QAA4B;;;;;IAC/BzC,qDAAA,GAA2B;;;;IAA3BA,gEAAA,EAAAuE,OAAA,CAAA1B,OAAA,kBAAA0B,OAAA,CAAA1B,OAAA,CAAAJ,IAAA,QAA2B;;;;;IAClBzC,qDAAA,GAAmC;;;;IAAnCA,gEAAA,EAAAwE,OAAA,CAAAxB,eAAA,kBAAAwB,OAAA,CAAAxB,eAAA,CAAAP,IAAA,QAAmC;;;;;IACtBzC,qDAAA,GAA8C;;;;;IAA9CA,gEAAA,CAAAyE,OAAA,CAAAC,IAAA,CAAAC,oBAAA,CAAAC,OAAA,CAAAtB,WAAA,EAA8C;;;;;IACvDtD,qDAAA,GAA2C;;;;;IAA3CA,gEAAA,CAAA6E,OAAA,CAAAH,IAAA,CAAAC,oBAAA,CAAAG,OAAA,CAAAvB,QAAA,EAA2C;;;;;IACxCvD,qDAAA,GAA6F;;;;IAA7FA,gEAAA,EAAA+E,OAAA,CAAAtB,SAAA,kBAAAsB,OAAA,CAAAtB,SAAA,CAAAuB,eAAA,kBAAAD,OAAA,CAAAtB,SAAA,CAAAuB,eAAA,CAAAzD,MAAA,IAAAwD,OAAA,CAAAtB,SAAA,kBAAAsB,OAAA,CAAAtB,SAAA,CAAAuB,eAAA,6BAA6F;;;ADlF1M,MAAOC,0BAA2B,SAAQpF,6EAAoD;EAiClGqF,YAAmBC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEvF,8EAAa,EAAEL,2FAAuB,CAAC;IADtC,KAAA4F,QAAQ,GAARA,QAAQ;IAvBpB,KAAAC,WAAW,GAAc;MAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ;IAAC,CAAE;IAEvD,KAAAC,oBAAoB,GAAa,CAAC,oBAAoB,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC;IACnG,KAAAC,MAAM,GAAoB,EAAE;IAa5B,KAAAC,YAAY,GAAiB,CAClC;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAS,CAAE,EACpC;MAAED,GAAG,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAa,CAAE,EAC3C;MAAED,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAS,CAAE,EACpC;MAAED,GAAG,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAW,CAAE,CACzC;IAsHM,KAAAC,cAAc,GAAG,CAACC,OAAwB,EAAEC,WAAmB,KAAI;MACxE,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAID,WAAW,IAAI,oBAAoB,IAAID,OAAO,CAACF,KAAK,GAAG,IAAI,CAAC3E,MAAM,EAAEC,QAAQ,CAAC+E,eAAe,CAACL,KAAK,EAAE;QACtGI,MAAM,GAAG,eAAe;OACzB,MAAM,IAAID,WAAW,IAAI,iBAAiB,IAAID,OAAO,CAACF,KAAK,GAAG,IAAI,CAAC3E,MAAM,EAAEC,QAAQ,CAACgF,kBAAkB,CAACN,KAAK,EAAE;QAC7GI,MAAM,GAAG,kBAAkB;;MAE7B,OAAOA,MAAM;IACf,CAAC;IAYM,KAAAG,WAAW,GAAIlF,MAAiB,IAAI;MACzC,IAAI+E,MAAM,GAAU,EAAE;MACtB,IAAII,IAAI,GAAQnF,MAAM,CAAC2E,KAAK;MAC5B,IAAIQ,IAAI,CAACC,kBAAkB,EAAE5E,MAAM,EAAE;QACnCuE,MAAM,CAACM,IAAI,CAAC,CAAC,oBAAoB,EAAE,IAAI,EAAEF,IAAI,CAACC,kBAAkB,CAAC,CAAC;;MAEpE,IAAID,IAAI,CAACG,WAAW,EAAE;QACpBP,MAAM,CAACM,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,EAAEF,IAAI,CAACG,WAAW,CAAC,CAAC;QACpDP,MAAM,CAACM,IAAI,CAAC,CAAC,oBAAoB,EAAE,IAAI,EAAEF,IAAI,CAACF,kBAAkB,CAAC,CAAC;QAClEF,MAAM,CAACM,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAEF,IAAI,CAACH,eAAe,CAAC,CAAC;;MAE9D,IAAIG,IAAI,CAAC1D,OAAO,EAAEjB,MAAM,EAAE;QACxBuE,MAAM,CAACM,IAAI,CAAC,CAAC,cAAc,EAAE,MAAM,EAAE,GAAG,GAAGF,IAAI,CAAC1D,OAAO,CAAC8D,IAAI,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;MAE1F,IAAIL,IAAI,CAACM,UAAU,EAAEjF,MAAM,EAAE;QAC3BuE,MAAM,CAACM,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAEF,IAAI,CAACM,UAAU,CAAC,CAAC;;MAGpD,OAAOV,MAAM;IACf,CAAC;IAUM,KAAAW,sBAAsB,GAAIC,aAAyB,IAAqB;MAC7E,IAAIC,OAAO,GAAG,CAAC,CAACC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAACnF,MAAM;MACjD,IAAIuF,IAAI,GAAG,EAAE;MACbF,MAAM,CAACG,OAAO,CAACL,aAAa,CAAC,CAACM,OAAO,CAAC,CAAC,CAACvB,GAAG,EAAEC,KAAK,CAAC,KAAI;QACrD,IAAI,CAAC,IAAI,CAACuB,oBAAoB,CAACC,QAAQ,CAACxB,KAAK,CAAC,EAAEiB,OAAO,GAAG,KAAK;MACjE,CAAC,CAAC;MACF,IAAIA,OAAO,EAAEG,IAAI,CAACV,IAAI,CAAC;QAAEe,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAE,IAAI,CAACV,OAAO,CAACW,IAAI,CAAC,IAAI;MAAC,CAAE,CAAC;MACjG,OAAOR,IAAI;IACb,CAAC;IA5KC,IAAI,CAACS,UAAU,GAAGpC,QAAQ,CAACqC,GAAG,CAAoB9H,8EAAiB,CAAC;IACpE,IAAI,CAAC+H,WAAW,GAAGtC,QAAQ,CAACqC,GAAG,CAAqBhI,gFAAkB,CAAC;IACvE,IAAI,CAACkI,YAAY,GAAGvC,QAAQ,CAACqC,GAAG,CAAsBlI,kFAAmB,CAAC;IAC1E,IAAI,CAACqI,gBAAgB,GAAGxC,QAAQ,CAACqC,GAAG,CAAmBzH,iGAAgB,CAAC;IACxE,IAAI,CAAC6H,UAAU,GAAGzC,QAAQ,CAACqC,GAAG,CAAoB7H,8EAAiB,CAAC;IACpE,IAAI,CAACsH,oBAAoB,GAAG9B,QAAQ,CAACqC,GAAG,CAAuB1H,yEAAoB,CAAC;IACpF,IAAI,CAAC+H,iBAAiB,GAAG1C,QAAQ,CAACqC,GAAG,CAA2B/H,6FAAwB,CAAC;IACzF;IACA,IAAI,CAACqI,KAAK,GAAG,IAAI,CAAC/F,GAAG,CAACC,SAAS,CAAC,oBAAoB,CAAC;IACrD,IAAI,CAAC+F,IAAI,GAAG,SAAS;IACrB,IAAI,CAAChH,MAAM,GAAG,IAAI,CAACiH,EAAE,CAACC,WAAW,CAAC;MAChChH,OAAO,EAAE;QAAEiH,OAAO,EAAE;MAAI,CAAE;MAC1B1F,OAAO,EAAE;QAAE0F,OAAO,EAAE;MAAE,CAAE;MACxB1B,UAAU,EAAE;QAAE0B,OAAO,EAAE;MAAI,CAAE;MAC7B/B,kBAAkB,EAAE;QAAE+B,OAAO,EAAE;MAAI,CAAE;MACrC7B,WAAW,EAAE;QAAE6B,OAAO,EAAE;MAAI,CAAE;MAC9BlC,kBAAkB,EAAE;QAAEkC,OAAO,EAAE,IAAIC,IAAI;MAAE,CAAE;MAC3CpC,eAAe,EAAE;QAAEmC,OAAO,EAAE,IAAIC,IAAI;MAAE;KACvC,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACzC,cAAc,CAAC;IACnC,IAAI,CAAC0C,IAAI,GAAG,CAAC,kBAAkB,EAAE,2BAA2B,EAAE,SAAS,EAAE,UAAU,EAAE,gDAAgD,EAAE,iBAAiB,EAC5I,wCAAwC,EAAE,4DAA4D,EAAE,sDAAsD,EAAE,kBAAkB,CAAC;IAC/L,IAAI,CAACC,OAAO,GAAG,CAAC;MAAEC,KAAK,EAAE,eAAe;MAAEpB,KAAK,EAAE;IAAS,CAAE,CAAC;IAC7D,IAAI,CAACqB,aAAa,GAAG;MAAErB,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,qBAAqB;MAAEqB,KAAK,EAAE,kBAAkB;MAAEpB,OAAO,EAAE,IAAI,CAACqB,IAAI,CAACpB,IAAI,CAAC,IAAI;IAAC,CAAE;IAChI,IAAI,CAACqB,cAAc,GAAG;MAAExB,KAAK,EAAE,UAAU;MAAEC,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAE,IAAI,CAACuB,QAAQ,CAACtB,IAAI,CAAC,IAAI;IAAC,CAAE;IACrG,IAAI,CAACuB,aAAa,GAAG;MAAE1B,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE,IAAI,CAACV,OAAO,CAACW,IAAI,CAAC,IAAI;IAAC,CAAE;IAC9F,IAAI,CAACwB,YAAY,GAAG;MAAE3B,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,IAAI,CAACzD,MAAM,CAACK,OAAO,CAAC,IAAI,CAACL,MAAM,CAACE,qBAAqB,EAAE,OAAO,CAAC;MAAE4E,KAAK,EAAE,IAAI,CAAC9E,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACE,qBAAqB,EAAE,OAAO,CAAC;MAAEwD,OAAO,EAAE,IAAI,CAAC0B,MAAM,CAACzB,IAAI,CAAC,IAAI;IAAC,CAAE;IACxN,IAAI,CAAC0B,yBAAyB,GAAG;MAAE7B,KAAK,EAAE,qBAAqB;MAAEC,IAAI,EAAE,IAAI,CAACzD,MAAM,CAACK,OAAO,CAAC,IAAI,CAACL,MAAM,CAACE,qBAAqB,EAAE,mCAAmC,CAAC;MAAE4E,KAAK,EAAE,IAAI,CAAC9E,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACE,qBAAqB,EAAE,mCAAmC,CAAC;MAAEwD,OAAO,EAAE,IAAI,CAAC4B,kBAAkB,CAAC3B,IAAI,CAAC,IAAI;IAAC,CAAE;IACtT,IAAI,CAAC4B,oBAAoB,GAAG;MAAE/B,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE,IAAI,CAACzD,MAAM,CAACK,OAAO,CAAC,IAAI,CAACL,MAAM,CAACE,qBAAqB,EAAE,WAAW,CAAC;MAAE4E,KAAK,EAAE,IAAI,CAAC9E,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACE,qBAAqB,EAAE,WAAW,CAAC;MAAEwD,OAAO,EAAE,IAAI,CAAC8B,aAAa,CAAC7B,IAAI,CAAC,IAAI;IAAC,CAAE;IACvP,IAAI,CAAC8B,iBAAiB,GAAG;MAAEjC,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAE,IAAI,CAACgC,WAAW,CAAC/B,IAAI,CAAC,IAAI;IAAC,CAAE;IAC5G,IAAI,CAACgC,uBAAuB,GAAG;MAAEnC,KAAK,EAAE,wBAAwB;MAAEC,IAAI,EAAE,IAAI,CAACzD,MAAM,CAACK,OAAO,CAAC,IAAI,CAACL,MAAM,CAACE,qBAAqB,EAAE,uBAAuB,CAAC;MAAE4E,KAAK,EAAE,IAAI,CAAC9E,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACE,qBAAqB,EAAE,uBAAuB,CAAC;MAAEwD,OAAO,EAAE,IAAI,CAACkC,oBAAoB,CAACjC,IAAI,CAAC,IAAI;IAAC,CAAE;IACjS,IAAI,CAACkC,iBAAiB,GAAG;MAAErC,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAE,IAAI,CAACoC,OAAO,CAACnC,IAAI,CAAC,IAAI;IAAC,CAAE;IAC9G,IAAI,CAACoC,YAAY,GAAG;MAAEvC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,0BAA0B;MAAEC,OAAO,EAAE,CAAEsC,GAAkB,IAAK,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC;QAAExE,KAAK,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAEsE,GAAG,CAACG,EAAE;MAAC,CAAE,EAAE;QAAEC,UAAU,EAAGC,WAAW,IAAKC,OAAO,CAACC,GAAG,CAACF,WAAW,EAAEG,QAAQ,CAAC;QAAEC,QAAQ,EAAE,IAAI,CAACnD,oBAAoB,CAACoD,SAAS,CAACV,GAAG;MAAC,CAAE,CAAC,EAAErC,IAAI,CAAC,IAAI;IAAC,CAAE;IACrT,IAAI,CAACgD,cAAc,GAAG;MAAEnD,KAAK,EAAE,UAAU;MAAEC,IAAI,EAAE,IAAI,CAACzD,MAAM,CAACK,OAAO,CAAC,IAAI,CAACL,MAAM,CAACE,qBAAqB,EAAE,OAAO,CAAC;MAAE4E,KAAK,EAAE,IAAI,CAAC9E,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACE,qBAAqB,EAAE,OAAO,CAAC;MAAEwD,OAAO,EAAE,IAAI,CAACkD,QAAQ,CAACjD,IAAI,CAAC,IAAI;IAAC,CAAE;IAC9N,IAAI,CAACkD,eAAe,GAAG;MAAErD,KAAK,EAAE,WAAW;MAAEC,IAAI,EAAE,IAAI,CAACzD,MAAM,CAACK,OAAO,CAAC,IAAI,CAACL,MAAM,CAACE,qBAAqB,EAAE,UAAU,CAAC;MAAE4E,KAAK,EAAE,IAAI,CAAC9E,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACE,qBAAqB,EAAE,UAAU,CAAC;MAAEwD,OAAO,EAAE,IAAI,CAACoD,SAAS,CAACnD,IAAI,CAAC,IAAI;IAAC,CAAE;IACvO,IAAI,CAAC/B,MAAM,GAAG,CAAC,IAAI,CAACiD,aAAa,EAAE,IAAI,CAACG,cAAc,EAAE,IAAI,CAACE,aAAa,EAAE,IAAI,CAACC,YAAY,EAAE,IAAI,CAACE,yBAAyB,EAAE,IAAI,CAACE,oBAAoB,EACtJ,IAAI,CAACE,iBAAiB,EAAE,IAAI,CAACE,uBAAuB,EAAE,IAAI,CAACE,iBAAiB,EAAE,IAAI,CAACE,YAAY,EAAE,IAAI,CAACY,cAAc,EAAE,IAAI,CAACE,eAAe,CAAC;EAC/I;EAEAE,QAAQA,CAAA;IACN,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,IAAI,CAACN,QAAQ,EAAEO,aAAa,EAAE;MAChC,IAAI,CAAC5J,MAAM,EAAEC,QAAQ,CAACwF,UAAU,CAACoE,QAAQ,CAAC,IAAI,CAACC,IAAI,CAAChI,OAAO,EAAEiH,EAAE,CAAC;;EAEpE;EAEOgB,cAAcA,CAACnB,GAAQ;IAC5B,IAAI7D,MAAM,GAAoB,EAAE;IAChC,IAAI,CAACP,MAAM,CAACyB,OAAO,CAAC+D,KAAK,IAAG;MAC1B,IAAI,IAAI,CAACC,oBAAoB,CAACD,KAAK,EAAEpB,GAAG,CAAC,EAAE7D,MAAM,CAACM,IAAI,CAAC2E,KAAK,CAAC;IAC/D,CAAC,CAAC;IACF,OAAOjF,MAAM;EACf;EAEOmF,cAAcA,CAACtB,GAAQ;IAC5B,IAAI7D,MAAM,GAAoB,EAAE;IAChC,IAAIoF,aAAa,GAAkBvB,GAAoB;IACvD,QAAQ,IAAI,CAAC1C,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC;MAC5D,KAAK,UAAU;QACb,IAAG,IAAI,CAACF,oBAAoB,CAAC,IAAI,CAACnC,aAAa,EAAEc,GAAG,CAAC,EAAE7D,MAAM,CAACM,IAAI,CAAC,IAAI,CAACyC,aAAa,CAAC,MACjF,IAAG,IAAI,CAACmC,oBAAoB,CAAC,IAAI,CAAClC,YAAY,EAAEa,GAAG,CAAC,EAAE7D,MAAM,CAACM,IAAI,CAAC,IAAI,CAAC0C,YAAY,CAAC,MACpF,IAAG,IAAI,CAACkC,oBAAoB,CAAC,IAAI,CAAC1B,uBAAuB,EAAEK,GAAG,CAAC,EAAE7D,MAAM,CAACM,IAAI,CAAC,IAAI,CAACkD,uBAAuB,CAAC;QAC/G;;;;;;;QAOA;MACF,KAAK,uBAAuB;QAC1B,IAAG,IAAI,CAAC0B,oBAAoB,CAAC,IAAI,CAACnC,aAAa,EAAEc,GAAG,CAAC,EAAE7D,MAAM,CAACM,IAAI,CAAC,IAAI,CAACyC,aAAa,CAAC;QACtF;;;;;QAKA;MACF,KAAK,OAAO;QACV;;;;QAIA;MACF,KAAK,WAAW;QACd,IAAG,IAAI,CAACmC,oBAAoB,CAAC,IAAI,CAACrC,cAAc,EAAEgB,GAAG,CAAC,EAAE7D,MAAM,CAACM,IAAI,CAAC,IAAI,CAACuC,cAAc,CAAC;QACxF;;;;;QAKA;MACF,KAAK,UAAU;QACb;;;;QAIA;MACF,KAAK,WAAW;QACd;;;;QAIA;MACF,KAAK,WAAW;QACd;;;;QAIA;;IAEJ,IAAI,CAAC7C,MAAM,CAACvE,MAAM,EAAEuE,MAAM,CAACM,IAAI,CAAC,IAAI,CAACoD,iBAAiB,CAAC;IACvD,OAAO1D,MAAM;EACf;EAaOsF,WAAWA,CAACrK,MAAiB;IAClCA,MAAM,CAACC,QAAQ,CAACwB,OAAO,CAACoI,QAAQ,CAAC,EAAE,CAAC;IACpC7J,MAAM,CAACC,QAAQ,CAACwF,UAAU,CAACoE,QAAQ,CAAC,IAAI,CAAC;IACzC7J,MAAM,CAACC,QAAQ,CAACmF,kBAAkB,CAACyE,QAAQ,CAAC,IAAI,CAAC;IACjD7J,MAAM,CAACC,QAAQ,CAACqF,WAAW,CAACuE,QAAQ,CAAC,IAAI,CAAC;IAC1C7J,MAAM,CAACC,QAAQ,CAACgF,kBAAkB,CAAC4E,QAAQ,CAAC,IAAIzC,IAAI,EAAE,CAAC;IACvDpH,MAAM,CAACC,QAAQ,CAAC+E,eAAe,CAAC6E,QAAQ,CAAC,IAAIzC,IAAI,EAAE,CAAC;IACpD,KAAK,CAACiD,WAAW,CAACrK,MAAM,CAAC;EAC3B;EAuBOL,eAAeA,CAAC2K,KAAY;IACjC,MAAMpK,OAAO,GAAG,IAAI,CAACF,MAAO,CAACC,QAAQ,CAACC,OAAO,CAACyE,KAAK;IACnD,IAAKzE,OAAO,IAAI,CAAC,IAAI,CAACqH,OAAO,EAAE/G,MAAM,IAAM,CAACN,OAAO,IAAI,IAAI,CAACqH,OAAO,EAAE/G,MAAO,EAAE;MAC5E,IAAI,CAAC+G,OAAO,GAAGrH,OAAO,GAAG,CAAC;QAAEsH,KAAK,EAAE,eAAe;QAAEpB,KAAK,EAAE;MAAS,CAAE,CAAC,GAAG,EAAE;MAC5E,IAAI,CAACmE,IAAK,CAACC,YAAY,EAAE;;EAE7B;EAYOP,oBAAoBA,CAACD,KAAoB,EAAEG,aAA4B;IAC5E,IAAIM,mBAAmB,GAAaN,aAAa,CAACM,mBAAmB;IACrE,IAAIC,+BAA+B,GAAY,IAAI,CAACZ,IAAI,CAACrI,OAAO,EAAEsH,EAAE,IAAIoB,aAAa,CAACrI,OAAO,EAAE6I,MAAM,EAAElJ,OAAO,EAAEsH,EAAE;IAClH,IAAI6B,mBAAmB,GAAYT,aAAa,CAACU,cAAc,CAACC,QAAQ,CAAC,IAAI,CAAChB,IAAI,CAACrI,OAAO,EAAEsH,EAAG,CAAC;IAChG,IAAIgC,0BAA0B,GAAYZ,aAAa,CAACM,mBAAmB,CAACK,QAAQ,CAAC,IAAI,CAAChB,IAAI,CAACrI,OAAO,EAAEsH,EAAG,CAAC;IAC5G,IAAIiC,aAAa,GAAG,IAAI,CAAC9E,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC,IAAI,UAAU;IACxF,IAAIc,qBAAqB,GAAG,IAAI,CAACnB,IAAI,CAACrI,OAAO,EAAEsH,EAAE,IAAIoB,aAAa,CAACe,UAAU;IAC7E,IAAIC,yBAAyB,GAAG,IAAI,CAACjF,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC,IAAI,uBAAuB;IACjH,IAAIiB,UAAU,GAAG,IAAI,CAAClF,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC,IAAI,OAAO;IAClF,IAAIkB,cAAc,GAAG,IAAI,CAACnF,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC,IAAI,WAAW;IAC1F,IAAImB,cAAc,GAAG,IAAI,CAACpF,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC,IAAI,WAAW;IAC1F,IAAIoB,8BAA8B,GAAG,CAAC,CAACd,mBAAmB,CAACzK,MAAM,CAACwL,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC1B,IAAI,CAACrI,OAAO,EAAEsH,EAAE,CAAC,CAACvI,MAAM;IACzG,IAAIiL,aAAa,GAAG,IAAI,CAACvF,oBAAoB,CAACkE,aAAa,CAACD,aAAa,CAAC,IAAI,UAAU;IACxF,QAAQH,KAAK;MACX,KAAK,IAAI,CAACvC,aAAa;QACrB;;;;;;;QAOA,OAAO,IAAI,CAACqC,IAAI,CAAC4B,eAAe,CAAC,aAAa,CAAC,IAAI,IAAI,CAACxF,oBAAoB,CAACyF,QAAQ,CAACxB,aAAa,CAAC,KAC3Fa,aAAa,IAAIC,qBAAqB,IAAIP,+BAA+B,IAAMS,yBAAyB,IAAIP,mBAAoB,IAAKQ,UAAU,IAAIV,+BAA+B,IAAI,IAAI,CAACZ,IAAI,CAAC4B,eAAe,CAAC,iBAAiB,CAAE,CAAC;MAC/O,KAAK,IAAI,CAAC9D,cAAc;QACtB;;;;;QAKA,OAAOyD,cAAc,IAAI,CAACC,cAAc,KAAKL,qBAAqB,IAAIP,+BAA+B,CAAC;MACxG,KAAK,IAAI,CAAC5C,aAAa;QACrB;;;;;;;;QAQA,OAAQkD,aAAa,KAAKC,qBAAqB,IAAIP,+BAA+B,CAAC,IAAIK,0BAA0B,IAAI,CAACH,mBAAmB,IAAMO,yBAAyB,IAAIJ,0BAA0B,IAAI,CAACH,mBAAoB;MACjO,KAAK,IAAI,CAAC7C,YAAY;QACpB;;;;;;QAMA,OAAOiD,aAAa,KAAKC,qBAAqB,IAAIP,+BAA+B,CAAC,IAAI,CAACD,mBAAmB,CAACjK,MAAM;MACnH,KAAK,IAAI,CAACyH,yBAAyB;QACjC;;;;;QAKA,OAAOkD,yBAAyB,IAAIP,mBAAmB;MACzD,KAAK,IAAI,CAACzC,oBAAoB;QAC5B;;;;;;QAMA,OAAO,IAAI,CAAC2B,IAAI,CAAC4B,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,uBAAuB,EAAE,OAAO,EAAE,WAAW,CAAC,CAACZ,QAAQ,CAACX,aAAa,CAACnH,MAAM,CAAC;MAC/I,KAAK,IAAI,CAACyF,iBAAiB;QACzB;;;;QAIA,OAAO,IAAI,CAACqB,IAAI,CAAC4B,eAAe,CAAC,SAAS,CAAC;MAC7C,KAAK,IAAI,CAACrD,iBAAiB;QACzB;;;;;QAKA,OAAOiD,cAAc,KAAKL,qBAAqB,IAAIP,+BAA+B,CAAC;MACrF,KAAK,IAAI,CAACnC,uBAAuB;QAC/B;;;;;;QAMA,OAAOyC,aAAa,KAAKC,qBAAqB,IAAIP,+BAA+B,CAAC,IAAIa,8BAA8B;MACtH,KAAK,IAAI,CAAChC,cAAc;QACtB;;;;;QAKA,OAAOkC,aAAa,IAAIf,+BAA+B;MACzD,KAAK,IAAI,CAACjB,eAAe;QACvB;;;;;QAKA,OAAO2B,UAAU,IAAIV,+BAA+B;MACtD,KAAK,IAAI,CAAC/B,YAAY;QACpB,OAAO,IAAI,CAACmB,IAAI,CAAC4B,eAAe,CAAC,SAAS,CAAC;;IAE/C,OAAO,KAAK;EACd;EAEO7D,QAAQA,CAACsC,aAA4B;IAC1C,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE3B,aAAa,CAACnH,MAAM;QAAEsD,OAAO,EAAE,IAAI,CAAClE,GAAI,CAACyF,QAAQ,CAACtB,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MACxI2E,KAAK,EAAE,4BAA4B;MACnCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEOnD,OAAOA,CAACuE,aAA6B;IAC1C,MAAM8B,SAAS,GAAG9B,aAAa,GAAG,CAACA,aAAa,CAACpB,EAAE,CAAC,GAAGlD,MAAM,CAACC,IAAI,CAAC,IAAI,CAACyE,IAAK,CAAC5E,aAAa,IAAI,EAAE,CAAC;IAClG,MAAMuG,UAAU,GAAG,IAAI,CAAC3B,IAAK,CAAC4B,KAAK,CAACnM,MAAM,CAACoM,CAAC,IAAIH,SAAS,CAACnB,QAAQ,CAACsB,CAAC,CAACrD,EAAE,CAAC,IAAIqD,CAAC,CAACC,YAAY,EAAE7L,MAAM,CAAC,CAAC8L,GAAG,CAACF,CAAC,IAAIA,CAAC,CAAC1J,SAAS,CAAC;IACzH,IAAI,CAACwJ,UAAU,CAAC1L,MAAM,EAAE;MACtB,IAAI,CAAC+L,MAAM,CAACC,KAAK,CAAC,WAAW,EAAE,2BAA2B,CAAC;KAC5D,MAAM;MACL,IAAI,CAAC5F,gBAAgB,CAAC6F,IAAI,CAACP,UAAU,CAAC,CAACQ,IAAI,CAAC,MAAM,IAAI,CAACnC,IAAK,CAACoC,KAAK,EAAE,CAAC;;EAEzE;EAEO3E,MAAMA,CAACmC,aAA4B;IACxC,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE,OAAO;QAAExF,OAAO,EAAE,IAAI,CAAClE,GAAI,CAAC4F,MAAM,CAACzB,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MACzH2E,KAAK,EAAE,0BAA0B;MACjCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEA;EACOb,kBAAkBA,CAACiC,aAA4B;IACpD,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE,uBAAuB;QAAExF,OAAO,EAAE,IAAI,CAAClE,GAAI,CAAC8F,kBAAkB,CAAC3B,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MACrJ2E,KAAK,EAAE,4BAA4B;MACnCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEOX,aAAaA,CAAC+B,aAA4B;IAC/C,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE,WAAW;QAAExF,OAAO,EAAE,IAAI,CAAClE,GAAI,CAACgG,aAAa,CAAC7B,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MACpI2E,KAAK,EAAE,4BAA4B;MACnCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEOT,WAAWA,CAAC6B,aAA4B;IAC7C,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE3B,aAAa,CAACnH,MAAM;QAAEsD,OAAO,EAAE,IAAI,CAAClE,GAAI,CAACkG,WAAW,CAAC/B,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MAC3I2E,KAAK,EAAE,+BAA+B;MACtCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEOP,oBAAoBA,CAAC2B,aAA4B;IACtD,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE,uBAAuB;QAAExF,OAAO,EAAE,IAAI,CAAClE,GAAI,CAACoG,oBAAoB,CAACjC,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MACvJ2E,KAAK,EAAE,kDAAkD;MACzDiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEOS,QAAQA,CAACW,aAA4B;IAC1C,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE,OAAO;QAAExF,OAAO,EAAE,IAAI,CAAClE,GAAI,CAACoH,QAAQ,CAACjD,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MAC3H2E,KAAK,EAAE,4BAA4B;MACnCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEOW,SAASA,CAACS,aAA4B;IAC3C,IAAI,CAACtB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACzE,WAAW,EAAE;MACjCgF,QAAQ,EAAE;QAAEuC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE1B,aAAa;QAAE2B,UAAU,EAAE,UAAU;QAAExF,OAAO,EAAE,IAAI,CAAClE,GAAI,CAACsH,SAAS,CAACnD,IAAI,CAAC,IAAI,CAACnE,GAAG;MAAC,CAAE;MAC/H2E,KAAK,EAAE,6BAA6B;MACpCiC,UAAU,EAAGC,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAACsB,IAAI,EAAEwB,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAAC7B,aAAa,CAACpB,EAAE,CAAC;;QAC9D;MACH;KACD,CAAC;EACJ;EAEO6D,MAAMA,CAAA;IACX,OAAO,IAAI,CAAC9C,IAAI,CAAC4B,eAAe,CAAC,cAAc,CAAC;IAChD;IACA;;;;;;;;EAQF;;SAhbWxH,0BAA2B;AAGxB2I,MAAA,CAAAC,WAAW,GAAe;EAAExI,KAAK,EAAE,CAAC,QAAQ,EAAE,gBAAgB;AAAC,CAAE;;mBAHpEJ,MAA0B,EAAAjF,gEAAA,CAAAA,oDAAA;AAAA;;QAA1BiF,MAA0B;EAAA+I,SAAA;EAAAC,SAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAC1B9O,iFAAa;;;;;;;;;;;;;MCxB1BW,6DAAA,cAKkD;MAJpBA,yDAAA,oBAAAqO,2DAAAjO,MAAA;QAAA,OAAUgO,GAAA,CAAAE,QAAA,CAAAlO,MAAA,CAAgB;MAAA,EAAC;MAKrDJ,yDAAA,IAAAuO,6CAAA,qBAEU;MACVvO,6DAAA,gBAAkN;MAE1MA,wDAAA,oBAA6K;MAEjLA,2DAAA,EAAM;MACNA,6DAAA,aAAiB;MACfA,wDAAA,sBAAmG;MAIvGA,2DAAA,EAAM;MAERA,6DAAA,eAAS;MACLA,yDAAA,KAAAwO,6CAAA,qBAOS;MACTxO,6DAAA,kBAAgF;MAC5EA,yDAAA,KAAAyO,kDAAA,iCAAAzO,qEAAA,CAEc;MACdA,yDAAA,KAAA0O,kDAAA,iCAAA1O,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAkE;MAC9DA,yDAAA,KAAA2O,kDAAA,iCAAA3O,qEAAA,CAEc;MACdA,yDAAA,KAAA4O,kDAAA,iCAAA5O,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAqD;MACjDA,yDAAA,KAAA6O,kDAAA,iCAAA7O,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAmD;MAC/CA,yDAAA,KAAA8O,kDAAA,iCAAA9O,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAyD;MACrDA,yDAAA,KAAA+O,kDAAA,iCAAA/O,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAA0E;MACtEA,yDAAA,KAAAgP,kDAAA,iCAAAhP,qEAAA,CAEc;MACdA,yDAAA,KAAAiP,kDAAA,iCAAAjP,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAA8D;MAC1DA,yDAAA,KAAAkP,kDAAA,iCAAAlP,qEAAA,CAiBc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAiD;MAC7CA,yDAAA,KAAAmP,kDAAA,iCAAAnP,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,wDAAA,kBAA0H;MAC9HA,2DAAA,EAAU;MACVA,6DAAA,cAAQ;MAC2CA,yDAAA,KAAAoP,kDAAA,iCAAApP,qEAAA,CAAqE;MAAAA,2DAAA,EAAS;MAC/HA,6DAAA,kBAA+D;MAAAA,yDAAA,KAAAqP,kDAAA,iCAAArP,qEAAA,CAA0F;MAAAA,2DAAA,EAAS;MAClKA,6DAAA,kBAAqD;MAAAA,yDAAA,KAAAsP,kDAAA,iCAAAtP,qEAAA,CAAqF;MAAAA,2DAAA,EAAS;MACnJA,6DAAA,kBAAmD;MAAAA,yDAAA,KAAAuP,kDAAA,iCAAAvP,qEAAA,CAAmF;MAAAA,2DAAA,EAAS;MAC/IA,6DAAA,kBAAyD;MAAAA,yDAAA,KAAAwP,kDAAA,iCAAAxP,qEAAA,CAA8F;MAAAA,2DAAA,EAAS;MAChKA,6DAAA,kBAAkE;MAAAA,yDAAA,KAAAyP,kDAAA,iCAAAzP,qEAAA,CAA6G;MAAAA,2DAAA,EAAS;MACxLA,6DAAA,kBAA4D;MAAAA,yDAAA,KAAA0P,kDAAA,iCAAA1P,qEAAA,CAAuG;MAAAA,2DAAA,EAAS;MAC5KA,6DAAA,kBAA+D;MAAAA,yDAAA,KAAA2P,kDAAA,iCAAA3P,qEAAA,CAAyJ;MAAAA,2DAAA,EAAS;MAEnOA,wDAAA,sBAA4C;MAChDA,2DAAA,EAAO;;;;;;;;;;;;;;;;;;;;;;MA5GWA,yDAAA,QAAAoO,GAAA,CAAAjL,GAAA,CAAW,QAAAiL,GAAA,CAAAwB,GAAA,WAAAxB,GAAA,CAAAyB,OAAA,QAAAzB,GAAA,CAAAtG,KAAA,aAAAsG,GAAA,CAAA0B,OAAA,aAAA1B,GAAA,CAAA9F,OAAA,UAAA8F,GAAA,CAAA/F,IAAA,gBAAA+F,GAAA,CAAA2B,UAAA,YAAA3B,GAAA,CAAAT,MAAA,gDAAAS,GAAA,CAAA3H,sBAAA,CAAAa,IAAA,CAAA8G,GAAA,2BAAAA,GAAA,CAAA9I,oBAAA;MAMftF,wDAAA,GAAiB;MAAjBA,yDAAA,UAAAoO,GAAA,CAAA2B,UAAA,CAAiB;MAGnB/P,wDAAA,GAAe;MAAfA,yDAAA,SAAAoO,GAAA,CAAArN,MAAA,CAAe,UAAAqN,GAAA,CAAAnI,WAAA,YAAAmI,GAAA,CAAA4B,YAAA,CAAA1I,IAAA,CAAA8G,GAAA,YAAAA,GAAA,CAAAhD,WAAA,CAAA9D,IAAA,CAAA8G,GAAA,qBAAAA,GAAA,CAAA6B,oBAAA,CAAA3I,IAAA,CAAA8G,GAAA,iBAAAA,GAAA,CAAA2B,UAAA,IAAA3B,GAAA,CAAA8B,eAAA;MAEHlQ,wDAAA,GAAU;MAAVA,yDAAA,WAAU,UAAAoO,GAAA,CAAArM,GAAA,CAAAC,SAAA,6BAAAoM,GAAA,CAAArN,MAAA,CAAAC,QAAA,CAAAwB,OAAA;MAAqHxC,0DAAA,kBAAoB;MACjJA,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAoO,GAAA,CAAA7G,UAAA;MAGZvH,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAoO,GAAA,CAAAvG,iBAAA;MACV7H,wDAAA,GAAU;MAAVA,yDAAA,WAAU,gCAAAoO,GAAA,CAAArN,MAAA,CAAAC,QAAA,CAAAqF,WAAA,WAAA+H,GAAA,CAAA5I,YAAA;MACRxF,wDAAA,GAAU;MAAVA,yDAAA,WAAU,aAAAoO,GAAA,CAAArN,MAAA,CAAAC,QAAA,CAAAqF,WAAA,CAAAX,KAAA,oBAAA0K,SAAA,aAAAhC,GAAA,CAAArN,MAAA,CAAAC,QAAA,CAAAgF,kBAAA;MACVhG,wDAAA,GAAU;MAAVA,yDAAA,WAAU,aAAAoO,GAAA,CAAArN,MAAA,CAAAC,QAAA,CAAAqF,WAAA,CAAAX,KAAA,oBAAA0K,SAAA,aAAAhC,GAAA,CAAArN,MAAA,CAAAC,QAAA,CAAA+E,eAAA;MAInB/F,wDAAA,GAAiB;MAAjBA,yDAAA,UAAAoO,GAAA,CAAA2B,UAAA,CAAiB;MAQlB/P,wDAAA,GAA6B;MAA7BA,yDAAA,kBAAAqQ,GAAA,CAA6B,aAAAC,GAAA;MAQ7BtQ,wDAAA,GAA8B;MAA9BA,yDAAA,kBAAAuQ,GAAA,CAA8B,aAAAC,GAAA;MAQbxQ,wDAAA,GAA2B;MAA3BA,yDAAA,aAAAyQ,IAAA,CAA2B;MAK5BzQ,wDAAA,GAA0B;MAA1BA,yDAAA,aAAA0Q,IAAA,CAA0B;MAKvB1Q,wDAAA,GAA6B;MAA7BA,yDAAA,aAAA2Q,IAAA,CAA6B;MAKhD3Q,wDAAA,GAA+B;MAA/BA,yDAAA,kBAAA4Q,IAAA,CAA+B,aAAAC,IAAA;MAQ/B7Q,wDAAA,GAA8B;MAA9BA,yDAAA,+BAA8B,aAAA8Q,IAAA;MAoBf9Q,wDAAA,GAAyB;MAAzBA,yDAAA,aAAA+Q,IAAA,CAAyB;MAMzB/Q,wDAAA,GAA4C;MAA5CA,yDAAA,mBAAAoO,GAAA,CAAAtD,cAAA,CAAAxD,IAAA,CAAA8G,GAAA,EAA4C,mBAAAA,GAAA,CAAAnD,cAAA,CAAA3D,IAAA,CAAA8G,GAAA;MAG9CpO,wDAAA,GAAyB;MAAzBA,yDAAA,aAAAgR,IAAA,CAAyB;MACdhR,wDAAA,GAA4B;MAA5BA,yDAAA,aAAAiR,IAAA,CAA4B;MACrCjR,wDAAA,GAA2B;MAA3BA,yDAAA,aAAAkR,IAAA,CAA2B;MAC5BlR,wDAAA,GAA0B;MAA1BA,yDAAA,aAAAmR,IAAA,CAA0B;MACvBnR,wDAAA,GAA6B;MAA7BA,yDAAA,aAAAoR,IAAA,CAA6B;MACxBpR,wDAAA,GAAiC;MAAjCA,yDAAA,aAAAqR,IAAA,CAAiC;MACpCrR,wDAAA,GAA8B;MAA9BA,yDAAA,aAAAsR,IAAA,CAA8B;MAC3BtR,wDAAA,GAA8B;MAA9BA,yDAAA,aAAAuR,IAAA,CAA8B;MAEpDvR,wDAAA,GAAkB;MAAlBA,yDAAA,SAAAoO,GAAA,CAAAoD,SAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGwC;;;;;;;AAsBpE,MAAO1R,oBAAoB;EAE/BoF,YACS2F,IAAiB,EACjBnG,IAAiB,EACjBf,MAAqB,EACrBR,GAA4B,EAC5BuO,eAAgC,EAChCC,gBAAyC;IALzC,KAAA9G,IAAI,GAAJA,IAAI;IACJ,KAAAnG,IAAI,GAAJA,IAAI;IACJ,KAAAf,MAAM,GAANA,MAAM;IACN,KAAAR,GAAG,GAAHA,GAAG;IACH,KAAAuO,eAAe,GAAfA,eAAe;IACf,KAAAC,gBAAgB,GAAhBA,gBAAgB;EACrB;EAEGC,QAAQA,CAACC,KAAoB;IAClC,OAAOA,KAAK,CAAClP,QAAQ,EAAEmP,YAAY;EACrC;EAEOzH,SAASA,CAACwH,KAAoB;IACnC,OAAO;MACL3K,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACI,IAAI,CAAC,IAAI,CAAC;MAClCyK,SAAS,EAAE,IAAI,CAACA,SAAS,CAACzK,IAAI,CAAC,IAAI,CAAC;MACpC0K,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,qCAAqC;MAC7CC,OAAO,EAAE,IAAI,CAACP,gBAAgB,CAACO,OAAO,EAAE;MACxCC,UAAU,EAAE,IAAI,CAACR,gBAAgB,CAACQ,UAAU,CAACN,KAAK,CAAC;MACnDD,QAAQ,EAAEC,KAAK,CAAClP,QAAQ,EAAEmP,YAAY;MACtCM,WAAW,EAAEP,KAAK,CAAClP,QAAQ,EAAE0P;KAC9B;EACH;EAEOnL,QAAQA,CAACoL,MAAsB,EAAEC,IAAgB;IACtD,MAAMV,KAAK,GAAGS,MAAuB;IACrC,MAAM7O,SAAS,GAAG8O,IAAI,IAAI,CAACV,KAAK,EAAE5E,UAAU,IAAI,EAAE,EAAEuF,IAAI,CAACrF,CAAC,IAAI0E,KAAK,EAAEzE,YAAY,EAAE7L,MAAM,IAAI4L,CAAC,CAACrD,EAAE,IAAI+H,KAAK,EAAEzE,YAAY,CAAC,IAAIyE,KAAK,EAAEpO,SAAS;IAC7I,IAAI6O,MAAM,IAAI7O,SAAS,IAAI,CAACA,SAAS,CAACgP,WAAW,EAAED,IAAI,CAACrF,CAAC,IAAIA,CAAC,CAAClB,UAAU,IAAI,IAAI,CAACpB,IAAI,CAACrI,OAAQ,CAACsH,EAAE,CAAC,EAAE;MACnG,MAAM4I,cAAc,GAAGb,KAAK,CAAC7O,eAAe;MAC5C,MAAML,QAAQ,GAAGkP,KAAK,CAAClP,QAAQ;MAC/B,MAAMgQ,QAAQ,GAAG,IAAI,CAAC9H,IAAI,CAAC8H,QAAS;MACpC,IAAIC,GAAG,GAAa,EAAE;MACtB,IAAIjQ,QAAQ,EAAEkQ,sCAAsC,EAAED,GAAG,CAACxM,IAAI,CAACyL,KAAK,CAAC5F,UAAU,CAAC;MAChF,IAAItJ,QAAQ,EAAEmQ,wCAAwC,EAAEF,GAAG,CAACxM,IAAI,CAAC,GAAG,IAAI,CAACyE,IAAI,CAACkI,eAAe,CAAC1F,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACrD,EAAE,CAAC,CAAC;MAC7G,IAAInH,QAAQ,EAAEqQ,wCAAwC,EAAEJ,GAAG,CAACxM,IAAI,CAACyL,KAAK,CAAChP,OAAO,EAAE6I,MAAM,EAAE5B,EAAE,IAAI,EAAE,EAAE+H,KAAK,CAAChP,OAAO,EAAEoQ,iBAAiB,EAAEnJ,EAAE,IAAI,EAAE,CAAC;MAC7I,IAAInH,QAAQ,EAAEuQ,yCAAyC,EAAEN,GAAG,CAACxM,IAAI,CAACuM,QAAQ,CAACQ,SAAS,IAAI,EAAE,EAAER,QAAQ,CAACS,oBAAoB,IAAI,EAAE,CAAC;MAChI,OAAO,CAAC,CAACV,cAAc,IAAIE,GAAG,CAAC/G,QAAQ,CAAC,IAAI,CAAChB,IAAI,CAACrI,OAAQ,CAACsH,EAAE,CAAC;;IAEhE,OAAO,KAAK;EACd;EAEOiI,SAASA,CAACO,MAAqB,EAAE7O,SAAoB,EAAE4P,QAAa;IACzE,MAAMxB,KAAK,GAAGS,MAAuB;IACrC,IAAIgB,IAAI,GAAiB,EAAE;IAC3B,IAAIzB,KAAK,EAAEzE,YAAY,IAAI3J,SAAS,CAACqG,EAAE,EAAEwJ,IAAI,CAAClN,IAAI,CAAC;MAAEX,GAAG,EAAEhC,SAAS,CAACqG,EAAE;MAAEpE,KAAK,EAAE,SAAS;MAAE0B,IAAI,EAAE,iBAAiB;MAAEqB,KAAK,EAAE;IAAS,CAAE,CAAC;IACtI,IAAI8K,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACC,IAAI,CAAC,IAAIC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,EAAED,QAAQ,CAACC,IAAI,GAAGA,IAAI;IAC/E,OAAOD,QAAQ,CAACC,IAAI;EACtB;EAEA;;;;;;;EAOOG,WAAWA,CAACC,oBAA0C,EAAExI,aAA6B;IAC1F;;;IAGA,IAAI2G,KAAK,GAAG3G,aAAa,IAAIwI,oBAAoB,CAACC,cAAc;IAChE,IAAIlO,GAAG,GAA6BiO,oBAAoB,CAACE,qBAAqB,EAAEC,aAAa,EAAErN,UAAU,IAAIqL,KAAM,CAACrL,UAAU,GAAG,iBAAiB,GAC/IkN,oBAAoB,CAACE,qBAAqB,GAAG,eAAe,GAC5D,CAAC,CAACF,oBAAoB,CAACI,KAAK,EAAEvS,MAAM,GAAG,aAAa,GAAG,aAAe;IACzE,IAAIuE,MAAM,GAAG,IAAI,CAACnC,MAAM,CAACoQ,+BAA+B,CAACvB,IAAI,CAACrF,CAAC,IAAIA,CAAC,CAAC1H,GAAG,IAAIA,GAAG,CAAC,IAAI;MAACA,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAc,CAAC;IACpH,IAAIjD,IAAI,GAAGoP,KAAK,EAAEmC,SAAS,EAAEC,WAAW,EAAEL,qBAAqB,EAAEM,OAAO,EAAEzR,IAAI,IAAIiR,oBAAoB,CAACE,qBAAqB,EAAEM,OAAO,EAAEzR,IAAI,IAAI,cAAc;IAC7J,IAAI0R,SAAS,GAAGtC,KAAK,EAAEmC,SAAS,EAAEC,WAAW,EAAEL,qBAAqB,EAAEO,SAAS,IAAIT,oBAAoB,CAACE,qBAAqB,EAAEO,SAAS,IAAI,EAAE;IAC9I,OAAO;MAAElC,MAAM,EAAEnM,MAAM,CAACJ,KAAK;MAAE0O,GAAG,EAAEtO,MAAM,CAAC2C,KAAK,IAAI,QAAQ;MAAEhG,IAAI,EAAEA,IAAI;MAAEkK,IAAI,EAAElH,GAAG;MAAE0O,SAAS,EAAEA;IAAS,CAAC;EAC5G;EAEA;;;;;;;;;EASOE,YAAYA,CAACC,eAA8B,EAAEC,SAAwB,EAAEC,WAAoB,EAAEC,WAAoB;IACtH,IAAIF,SAAS,CAAC/R,OAAO,IAAI+R,SAAS,CAAC1R,OAAO,EAAE;MAC1C,IAAI6R,YAAY,GAAG,IAAI,CAACvR,GAAI,CAACgP,UAAU,CAACmC,eAAe,CAAC;MACxD,IAAIK,MAAM,GAAG,IAAI,CAACxR,GAAI,CAACgP,UAAU,CAACoC,SAAS,CAAC;MAC5C,IAAI5R,QAAQ,GAAG4R,SAAS,CAAC5R,QAAQ;MACjC;MACAgS,MAAM,CAACnS,OAAO,CAACoS,wBAAwB,GAAGJ,WAAW,IAAID,SAAS,CAAC/R,OAAO,EAAEoS,wBAAwB,IAAI,EAAE;MAC1GD,MAAM,CAAC9R,OAAO,CAAC+R,wBAAwB,GAAGH,WAAW,IAAIF,SAAS,CAAC1R,OAAO,EAAE+R,wBAAwB,IAAI,EAAE;MAC1G;MACA,IAAI,CAACjS,QAAQ,EAAEkS,iBAAiB,IAAIN,SAAS,CAACnH,YAAY,EAAE7L,MAAM,KAAKgS,IAAI,CAACC,SAAS,CAACmB,MAAM,CAAC,IAAIpB,IAAI,CAACC,SAAS,CAACkB,YAAY,CAAC,IAAI/R,QAAQ,EAAEmP,YAAY,EAAE;QACvJ,IAAIrO,SAAS,GAAG8Q,SAAS,CAACtH,UAAU,EAAEuF,IAAI,CAAErF,CAAY,IAAKA,CAAC,CAACrD,EAAE,IAAIyK,SAAS,CAACnH,YAAY,CAAC;QAC5F,IAAI,CAACmH,SAAS,CAACnH,YAAY,EAAE7L,MAAM,IAAI,CAACkC,SAAS,IAAIA,SAAS,CAACgP,WAAW,EAAElR,MAAM,IAAIkC,SAAS,CAACkJ,IAAI,IAAI,MAAM,EAAE;UAC9GlJ,SAAS,GAAG,IAAIgO,qEAAS,CAAC;YACxB3H,EAAE,EAAE,IAAI,CAAC3G,GAAG,EAAE2R,YAAY,EAAE;YAC5BnI,IAAI,EAAE,MAAM;YACZqF,OAAO,EAAE,KAAK;YACdC,MAAM,EAAE,qCAAqC;YAC7C9H,QAAQ,EAAE,IAAI,CAACuH,eAAe,CAACqD,cAAc,CAACpS,QAAQ,EAAEmP,YAAY,EAAE3H,QAAQ,IAAI,EAAE,EAAEwK,MAAM,CAAC;YAC7F5Q,MAAM,EAAE,QAAQ;YAChBiR,OAAO,EAAE,KAAK;YACdpD,QAAQ,EAAEjP,QAAQ,EAAEmP,YAAY,EAAE3H,QAAQ;YAC1C+H,OAAO,EAAE,IAAI,CAAC/O,GAAI,CAAC+O,OAAO,EAAE;YAC5BC,UAAU,EAAEwC,MAAM;YAClBM,WAAW,EAAE,IAAI,CAACpK,IAAI,CAAC8H,QAAQ,EAAE7I,EAAE;YACnCoL,iBAAiB,EAAEX,SAAS,CAACzK,EAAE;YAC/BsI,WAAW,EAAEzP,QAAQ,EAAE0P;WACxB,CAAC;UACFkC,SAAS,CAACtH,UAAU,CAAC7G,IAAI,CAAC3C,SAAS,CAAC;SACrC,MAAM;UACLA,SAAS,CAAC0G,QAAQ,GAAG,IAAI,CAACuH,eAAe,CAACqD,cAAc,CAACpS,QAAQ,EAAEmP,YAAY,EAAE3H,QAAQ,IAAI,EAAE,EAAEwK,MAAM,CAAC;UACxGlR,SAAS,CAACyO,OAAO,GAAG,IAAI,CAAC/O,GAAI,CAAC+O,OAAO,EAAE;UACvCzO,SAAS,CAAC0O,UAAU,GAAGwC,MAAM;UAC7BlR,SAAS,CAACuR,OAAO,GAAGvR,SAAS,CAACuR,OAAO,IAAI,KAAK,GAAG,KAAK,GAAG,MAAM;;QAEjET,SAAS,CAAC9Q,SAAS,GAAGA,SAAS;QAC/B8Q,SAAS,CAACnH,YAAY,GAAG3J,SAAS,EAAEqG,EAAE,IAAI,IAAI;;;IAGlD,OAAOyK,SAAS,CAAC9Q,SAAS;EAC5B;EAEA;;;;;EAKO0H,aAAaA,CAACD,aAA4B;IAC/C,IAAIA,aAAa,CAACiK,UAAU,EAAE,OAAO,UAAU,CAAC,KAC3C,IAAIjK,aAAa,CAACkK,iBAAiB,EAAE,OAAO,WAAW,CAAC,KACxD,OAAOlK,aAAa,CAACnH,MAAO;EACnC;EAEA;;;;;EAKS2I,QAAQA,CAACxB,aAA4B;IAC1C,OAAO,CAACA,aAAa,CAACiK,UAAU,IAAIjK,aAAa,CAACnH,MAAM,IAAI,WAAW,IAAI,CAACmH,aAAa,CAACkK,iBAAiB;EAC7G;EAEF;;;;;;EAMOC,4BAA4BA,CAACC,YAAwC,EAAE3S,QAAmB;IAC/F,OAAO,CAAC2S,YAAY,IAAI,CAAC3S,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC+B,IAAI,CAAC6Q,QAAQ,CAACD,YAAY,CAAC/R,QAAQ,CAAC,GAAGZ,QAAQ,CAAC6S,yBAAyB,GAAG,IAAI,CAAC9Q,IAAI,CAAC6Q,QAAQ,CAAC,IAAI,CAAC1K,IAAI,CAAC4K,IAAI,CAAC;EAC9J;;SAxJW3V,oBAAoB;;mBAApBA,MAAoB,EAAAE,sDAAA,CAAA2V,sEAAA,GAAA3V,sDAAA,CAAA6V,sEAAA,GAAA7V,sDAAA,CAAA+V,0EAAA,GAAA/V,sDAAA,CAAAiW,2FAAA,GAAAjW,sDAAA,CAAAkW,8EAAA,GAAAlW,sDAAA,CAAAiW,2FAAA;AAAA;;SAApBnW,MAAoB;EAAAsW,OAAA,EAApBtW,MAAoB,CAAAuW,IAAA;EAAAC,UAAA,EAFnB;AAAM","sources":["./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho.service.ts"],"sourcesContent":["import { LookupItem } from '../../../../services/lookup.service';\r\nimport { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list',\r\n  templateUrl: './plano-trabalho-list.component.html',\r\n  styleUrls: ['./plano-trabalho-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public static selectRoute?: FullRoute = { route: [\"gestao\", \"plano-trabalho\"] };\r\n  public unidadeDao: UnidadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\r\n  public botoes: ToolbarButton[] = [];\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_ASSINAR: ToolbarButton;\r\n  public BOTAO_ATIVAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_ASSINATURA: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_ENVIAR_ASSINATURA: ToolbarButton;\r\n  public BOTAO_INFORMACOES: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n  public BOTAO_TERMOS: ToolbarButton;\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    { key: \"VIGENTE\", value: \"Vigente\" },\r\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\r\n    { key: \"INICIAM\", value: \"Iniciam\" },\r\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\r\n  ];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Planos de Trabalho\");\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      usuario: { default: \"\" },\r\n      unidade_id: { default: null },\r\n      tipo_modalidade_id: { default: null },\r\n      data_filtro: { default: null },\r\n      data_filtro_inicio: { default: new Date() },\r\n      data_filtro_fim: { default: new Date() }\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\"unidade.entidade\", \"unidade.gestor.usuario:id\", \"usuario\", \"programa\", \"documento.assinaturas.usuario:id,nome,url_foto\", \"tipo_modalidade\", \r\n                \"entregas.plano_entrega_entrega.entrega\", \"entregas.plano_entrega_entrega.plano_entrega:id,unidade_id\", \"entregas.plano_entrega_entrega.plano_entrega.unidade\", \"entregas.entrega\"];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\r\n    this.BOTAO_ATIVAR = { label: \"Ativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.ativar.bind(this) };\r\n    this.BOTAO_CANCELAR_ASSINATURA = { label: \"Cancelar assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), onClick: this.cancelarAssinatura.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_ENVIAR_ASSINATURA = { label: \"Enviar para assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), onClick: this.enviarParaAssinatura.bind(this) };\r\n    this.BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    this.BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id] }, { modalClose: (modalResult) => console.log(modalResult?.conteudo), metadata: this.planoTrabalhoService.metadados(row) })).bind(this) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_ASSINAR, this.BOTAO_ATIVAR, this.BOTAO_CANCELAR_ASSINATURA, this.BOTAO_CANCELAR_PLANO,\r\n      this.BOTAO_DESARQUIVAR, this.BOTAO_ENVIAR_ASSINATURA, this.BOTAO_INFORMACOES, this.BOTAO_TERMOS, this.BOTAO_REATIVAR, this.BOTAO_SUSPENDER];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    if (this.metadata?.minha_unidade) {\r\n      this.filter?.controls.unidade_id.setValue(this.auth.unidade?.id);\r\n    }\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.botoes.forEach(botao => {\r\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;    \r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoTrabalho: PlanoTrabalho = row as PlanoTrabalho;\r\n    switch (this.planoTrabalhoService.situacaoPlano(planoTrabalho)) {\r\n      case 'INCLUIDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR)\r\n        else if(this.botaoAtendeCondicoes(this.BOTAO_ATIVAR, row)) result.push(this.BOTAO_ATIVAR)\r\n        else if(this.botaoAtendeCondicoes(this.BOTAO_ENVIAR_ASSINATURA, row)) result.push(this.BOTAO_ENVIAR_ASSINATURA);\r\n        /*         \r\n          - botões-padrão:\r\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;                  (quando for exigida apenas a assinatura do usuário logado no TCR)\r\n            - 'Ativar'. Condições para ser exibido: vide RN_PTR_P;                   (quando não for exigida nenhuma assinatura no TCR)\r\n            - 'Enviar para Assinatura'. Condições para ser exibido: vide RN_PTR_U;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \r\n        */        \r\n        break;\r\n      case 'AGUARDANDO_ASSINATURA':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR);\r\n        /**\r\n          - botões-padrão:\r\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'ATIVO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        /**\r\n          - botões-padrão:\r\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \r\n        */\r\n        break;\r\n      case 'SUSPENSO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'ARQUIVADO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'CANCELADO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n    }\r\n    if (!result.length) result.push(this.BOTAO_INFORMACOES);\r\n    return result;\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.usuario.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.tipo_modalidade_id.setValue(null);\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    if (form.tipo_modalidade_id?.length) {\r\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\r\n    }\r\n    if (form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if (form.usuario?.length) {\r\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.unidade_id?.length) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\r\n    let assinar = !!Object.keys(multiselected).length;\r\n    let menu = [];\r\n    Object.entries(multiselected).forEach(([key, value]) => {\r\n      if (!this.planoTrabalhoService.needSign(value)) assinar = false;\r\n    });\r\n    if (assinar) menu.push({ label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\r\n    return menu;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoTrabalho: PlanoTrabalho): boolean {\r\n    let assinaturasExigidas: string[] = planoTrabalho.assinaturasExigidas;\r\n    let usuarioEhGestorUnidadeExecutora: boolean = this.auth.usuario?.id == planoTrabalho.unidade?.gestor?.usuario?.id;\r\n    let usuarioJaAssinouTCR: boolean = planoTrabalho.jaAssinaramTCR.includes(this.auth.usuario?.id!);\r\n    let assinaturaUsuarioEhExigida: boolean = planoTrabalho.assinaturasExigidas.includes(this.auth.usuario?.id!);\r\n    let planoIncluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'INCLUIDO'; \r\n    let usuarioEhParticipante = this.auth.usuario?.id == planoTrabalho.usuario_id; \r\n    let planoAguardandoAssinatura = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'AGUARDANDO_ASSINATURA'; \r\n    let planoAtivo = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ATIVO'; \r\n    let planoConcluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CONCLUIDO'; \r\n    let planoArquivado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ARQUIVADO'; \r\n    let programaExigeOutrasAssinaturas = !!assinaturasExigidas.filter(a => a != this.auth.usuario?.id).length;\r\n    let planoSuspenso = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'SUSPENSO'; \r\n    switch (botao) {\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PTR_M) Condições para que um Plano de Trabalho possa ser alterado:\r\n          O usuário logado precisa possuir a capacidade \"MOD_PTR_EDT\", o Plano de Trabalho precisa ser válido (ou seja, nem deletado, nem arquivado, nem estar no status CANCELADO), e:\r\n              - estando com o status 'INCLUIDO', o usuário logado precisa ser o participante do plano ou o gestor da Unidade Executora;\r\n              - estando com o status 'AGUARDANDO_ASSINATURA', o usuário logado precisa ser um dos que já assinaram o TCR e todas as assinaturas tornam-se sem efeito;\r\n              - estando com o status 'ATIVO', o usuário precisa ser gestor da Unidade Executora e possuir a capacidade MOD_PTR_EDT_ATV. Após alterado, o Plano de Trabalho precisa ser repactuado (novo TCR), e o plano retorna ao status 'AGUARDANDO_ASSINATURA';\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PTR_EDT\") && this.planoTrabalhoService.isValido(planoTrabalho) && \r\n               ((planoIncluido && usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) || (planoAguardandoAssinatura && usuarioJaAssinouTCR) || (planoAtivo && usuarioEhGestorUnidadeExecutora && this.auth.hasPermissionTo(\"MOD_PTR_EDT_ATV\")));\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PTR_N) ARQUIVAR\r\n          O plano precisa estar com o status CONCLUIDO, não ter sido arquivado, e:\r\n            - o usuário logado precisa ser o participante ou o gestor da Unidade Executora;\r\n        */\r\n        return planoConcluido && !planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\r\n      case this.BOTAO_ASSINAR:\r\n        /*\r\n          (RN_PTR_O) ASSINAR\r\n            - o plano precisa estar com o status INCLUIDO, e:\r\n              - o usuário logado precisa ser o participante do plano ou o gestor da sua Unidade Executora, e\r\n              - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\r\n            - ou o plano precisa estar com o status AGUARDANDO_ASSINATURA, e:\r\n              - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\r\n        */\r\n        return (planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && assinaturaUsuarioEhExigida && !usuarioJaAssinouTCR) || (planoAguardandoAssinatura && assinaturaUsuarioEhExigida && !usuarioJaAssinouTCR);\r\n      case this.BOTAO_ATIVAR:\r\n        /*\r\n          (RN_PTR_P) ATIVAR\r\n          O plano precisa estar no status 'INCLUIDO', e\r\n              - o usuário logado precisa ser o participante do plano ou gestor da Unidade Executora, e\r\n              - nenhuma assinatura no TCR ser exigida pelo programa;        \r\n        */\r\n        return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && !assinaturasExigidas.length;\r\n      case this.BOTAO_CANCELAR_ASSINATURA:\r\n        /*\r\n          (RN_PTR_Q) CANCELAR ASSINATURA\r\n          O plano precisa estar no status 'AGUARDANDO_ASSINATURA'; e\r\n            - o usuário logado precisa já ter assinado o TCR;\r\n        */\r\n        return planoAguardandoAssinatura && usuarioJaAssinouTCR;\r\n      case this.BOTAO_CANCELAR_PLANO:\r\n        /*\r\n          (RN_PTR_R) CANCELAR \r\n          O usuário logado precisa possuir a capacidade \"MOD_PTR_CNC\", e\r\n            - o plano precisa estar em um dos seguintes status: INCLUIDO, AGUARDANDO_ASSINATURA, ATIVO ou CONCLUIDO; e\r\n            - o usuário logado precisa ser gestor da Unidade Executora;\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PTR_CNC\") && ['INCLUIDO', 'AGUARDANDO_ASSINATURA', 'ATIVO', 'CONCLUIDO'].includes(planoTrabalho.status);\r\n      case this.BOTAO_INFORMACOES:\r\n        /*\r\n          (RN_PTR_S) CONSULTAR\r\n          Todos os participantes podem visualizar todos os planos de trabalho, desde que possuam a capacidade \"MOD_PTR\";\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PTR\");\r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n          (RN_PTR_T) DESARQUIVAR\r\n          O plano precisa estar arquivado, e:\r\n              - o usuário logado precisa ser o participante ou gestor da Unidade Executora;\r\n        */\r\n        return planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\r\n      case this.BOTAO_ENVIAR_ASSINATURA:\r\n        /*\r\n          (RN_PTR_U) ENVIAR PARA ASSINATURA\r\n          O plano precisa estar com o status INCLUIDO; e\r\n            - o usuário logado precisa ser o participante do plano ou gestor da sua Unidade Executora; e\r\n            - o programa de gestão precisa exigir não só a assinatura do usuário logado;\r\n        */\r\n        return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && programaExigeOutrasAssinaturas;\r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PTR_W) REATIVAR\r\n          O plano precisa estar com o status SUSPENSO, e\r\n            - o usuário logado precisa ser gestor da Unidade Executora;\r\n        */\r\n        return planoSuspenso && usuarioEhGestorUnidadeExecutora;\r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PTR_X) SUSPENDER\r\n          O plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade Executora;\r\n        */\r\n        return planoAtivo && usuarioEhGestorUnidadeExecutora;\r\n      case this.BOTAO_TERMOS:\r\n        return this.auth.hasPermissionTo(\"MOD_PTR\");\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Arquivar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public assinar(planoTrabalho?: PlanoTrabalho) {\r\n    const planosIds = planoTrabalho ? [planoTrabalho.id] : Object.keys(this.grid!.multiselected || {});\r\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\r\n    if (!documentos.length) {\r\n      this.dialog.alert(\"Selecione\", \"Nenhum plano selecionado!\");\r\n    } else {\r\n      this.documentoService.sign(documentos).then(() => this.grid!.reset());\r\n    }\r\n  }\r\n\r\n  public ativar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.ativar.bind(this.dao) },\r\n      title: \"Ativar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  // COMPLEMENTAR A IMPLEMENTAÇÃO DO MÉTODO\r\n  public cancelarAssinatura(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.cancelarAssinatura.bind(this.dao) },\r\n      title: \"Cancelar Assinatura do TCR\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarPlano(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\r\n      title: \"Cancelar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: planoTrabalho.status, onClick: this.dao!.desarquivar.bind(this.dao) },\r\n      title: \"Desarquivar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public enviarParaAssinatura(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.enviarParaAssinatura.bind(this.dao) },\r\n      title: \"Disponibilizar Plano de Trabalho para assinatura\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public reativar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\r\n      title: \"Reativar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public suspender(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\r\n      title: \"Suspender Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public canAdd() {\r\n    return this.auth.hasPermissionTo('MOD_PTR_INCL');\r\n    //IMPLEMENTAR AS DEMAIS CONDIÇÕES NA VALIDAÇÃO DO FORM *******************\r\n    /*\r\n    (RN_PTR_V) INCLUIR/INSERIR\r\n    O usuário logado precisa possuir a capacidade \"MOD_PTR_INCL\", e:\r\n        - o usuário logado precisa ser um participante do PGD, habilitado, ou ser gestor da Unidade Executora do plano; (RN_PTR_B); e\r\n        - o participante do plano precisa estar lotado em uma das áreas de trabalho do usuário logado, ou este deve possuir a capacidade MOD_PTR_USERS_INCL; e\r\n        - o participante do plano precisa estar lotado na Unidade Executora, ou o usuário logado possuir a capacidade MOD_PTR_INCL_SEM_LOT; e\r\n        - o novo Plano de Trabalho não pode apresentar período conflitante com outro plano já existente para a mesma Unidade Executora e mesmo participante, ou o usuário logado possuir a capacidade MOD_PTR_INTSC_DATA\r\n    */\r\n  }\r\n\r\n}\r\n\r\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\"\r\n    [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\"\r\n    [multiselectAllFields]=\"multiselectAllFields\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\" [attr.maxlength]=250></input-text>\r\n            <input-search [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n          <input-search [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n      </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\r\n            <ng-template let-header=\"header\" #titleNumero>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ '#' + row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\r\n            <ng-template let-header=\"header\" #titleUsuario>\r\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.sigla || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\r\n            <ng-template let-header=\"header\" #titleVigencia>\r\n              Vigência de<br><order by=\"data_inicio\" [header]=\"header\">Início</order>a<order by=\"data_fim\" [header]=\"header\">Fim</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}} <br> {{ \" até \"+dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\r\n                <!--badge *ngIf=\"row.documento\" color=\"light\" icon=\"bi bi-file-earmark-check\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.preview.bind(documentoService)\">\r\n                    <span [style.max-width.px]=\"200\" class=\"text-wrap\"><small><strong>#{{row.documento.numero}}</strong> - {{row.documento.titulo_documento}}</small></span>\r\n                    <separator *ngIf=\"row.documento?.assinaturas?.length\" transparent>\r\n                        <profile-picture *ngFor=\"let assinatura of row.documento!.assinaturas\" [url]=\"assinatura.usuario.url_foto\" [hint]=\"assinatura.usuario.nome\"></profile-picture>\r\n                    </separator>\r\n                </badge>\r\n                <badge *ngIf=\"row.documento?.numero_processo?.length\" [class]=\"'d-block'\" color=\"warning\" icon=\"bi bi-folder-symlink\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.onDocumentoClick.bind(documentoService)\" [hint]=\"documentoService.documentoHint(row)\">\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </badge>\r\n                < !--span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-warning text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\r\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\r\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\r\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\r\n                </span//-->\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, row.status)\"></badge>\r\n                <!-- <badge *ngIf=\"row.data_cancelamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Cancelado\"></badge> -->\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <report>\r\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\r\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\r\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio)}}</ng-template></column>\r\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim)}}</ng-template></column>\r\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\r\n    </report>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { Documento, HasDocumentos } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoEntrega, PlanoTrabalhoEntregaTipo } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { LookupItem, LookupService } from 'src/app/services/lookup.service';\r\nimport { TemplateService } from '../../uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { UtilService } from 'src/app/services/util.service';\r\n\r\nexport type BadgeTrabalho = {\r\n  titulo: string,\r\n  cor: string,\r\n  nome: string,\r\n  descricao: string,\r\n  tipo: PlanoTrabalhoEntregaTipo\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoService {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public util: UtilService,\r\n    public lookup: LookupService,\r\n    public dao: PlanoTrabalhoDaoService,\r\n    public templateService: TemplateService,\r\n    public planoTrabalhoDao: PlanoTrabalhoDaoService\r\n  ) { }\r\n\r\n  public template(plano: PlanoTrabalho): Template | undefined {\r\n    return plano.programa?.template_tcr;\r\n  }\r\n\r\n  public metadados(plano: PlanoTrabalho) {\r\n    return {\r\n      needSign: this.needSign.bind(this),\r\n      extraTags: this.extraTags.bind(this),\r\n      especie: \"TCR\",\r\n      titulo: \"Termo de Ciência e Responsabilidade\",\r\n      dataset: this.planoTrabalhoDao.dataset(),\r\n      datasource: this.planoTrabalhoDao.datasource(plano),\r\n      template: plano.programa?.template_tcr,\r\n      template_id: plano.programa?.template_tcr_id\r\n    };\r\n  }\r\n\r\n  public needSign(parent?: HasDocumentos, item?: Documento): boolean {\r\n    const plano = parent as PlanoTrabalho;\r\n    const documento = item || (plano?.documentos || []).find(x => plano?.documento_id?.length && x.id == plano?.documento_id) || plano?.documento;\r\n    if (parent && documento && !documento.assinaturas?.find(x => x.usuario_id == this.auth.usuario!.id)) {\r\n      const tipoModalidade = plano.tipo_modalidade;\r\n      const programa = plano.programa;\r\n      const entidade = this.auth.entidade!;\r\n      let ids: string[] = [];\r\n      if (programa?.plano_trabalho_assinatura_participante) ids.push(plano.usuario_id);\r\n      if (programa?.plano_trabalho_assinatura_gestor_lotacao) ids.push(...this.auth.gestoresLotacao.map(x => x.id));\r\n      if (programa?.plano_trabalho_assinatura_gestor_unidade) ids.push(plano.unidade?.gestor?.id || \"\", plano.unidade?.gestor_substituto?.id || \"\");\r\n      if (programa?.plano_trabalho_assinatura_gestor_entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n      return !!tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public extraTags(parent: HasDocumentos, documento: Documento, metadado: any): LookupItem[] {\r\n    const plano = parent as PlanoTrabalho;\r\n    let tags: LookupItem[] = [];\r\n    if (plano?.documento_id == documento.id) tags.push({ key: documento.id, value: \"Vigente\", icon: \"bi bi-check-all\", color: \"primary\" })\r\n    if (JSON.stringify(metadado.tags) != JSON.stringify(tags)) metadado.tags = tags;\r\n    return metadado.tags;\r\n  }\r\n\r\n  /**\r\n   * Método retorna um badge de acordo com o tipo de entrega recebida no parâmetro 'planoTrabalhoTrabalho': entrega associada a uma entrega do catálogo, entrega associada a uma entrega \r\n   * da mesma unidade, ou entrega associada a uma entrega de outra unidade.\r\n   * @param planoTrabalhoTrabalho  Trabalho do Plano de Trabalho cujo tipo será analisado.\r\n   * @param planoTrabalho         Plano de Trabalho ao qual pertence a entrega a ser analisada. Se não for informado, o método tentará obtê-lo diretamente da própria entrega recebida.\r\n   * @returns \r\n   */\r\n  public tipoEntrega(planoTrabalhoEntrega: PlanoTrabalhoEntrega, planoTrabalho?: PlanoTrabalho): BadgeTrabalho {\r\n    /* Se row for uma entrega vinda do banco de dados, ela já deve trazer consigo um dos seus relacionamentos: 'entrega' ou 'plano_entrega_entrega', que serão lidos diretamente de row quando necessário. \r\n       Se row não vier do banco, ela passou pelo método saveEntrega() e lá um desses objetos, escolhido em um dos 3 inputSearch, foi anexado à variável this.novaEntrega, que originalmente é vazia. Sendo assim,\r\n       quando necessário, os dados serão lidos em this.novaEntrega.entrega ou em this.novaEntrega.plano_entrega_entrega. */\r\n    let plano = planoTrabalho || planoTrabalhoEntrega.plano_trabalho;\r\n    let key: PlanoTrabalhoEntregaTipo = planoTrabalhoEntrega.plano_entrega_entrega?.plano_entrega?.unidade_id == plano!.unidade_id ? \"PROPRIA_UNIDADE\" :\r\n      (planoTrabalhoEntrega.plano_entrega_entrega ? \"OUTRA_UNIDADE\" : \r\n      (!!planoTrabalhoEntrega.orgao?.length ? \"OUTRO_ORGAO\" : \"SEM_ENTREGA\"));\r\n    let result = this.lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO.find(x => x.key == key) || {key: \"\", value: \"Desconhecido\"};\r\n    let nome = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.entrega?.nome || planoTrabalhoEntrega.plano_entrega_entrega?.entrega?.nome || \"Desconhecido\";\r\n    let descricao = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.descricao || planoTrabalhoEntrega.plano_entrega_entrega?.descricao || \"\";\r\n    return { titulo: result.value, cor: result.color || \"danger\", nome: nome, tipo: key, descricao: descricao};\r\n  }\r\n\r\n  /**\r\n   * Método atualiza o TCR caso ele exista (possivelmente obrigatório pelo programa), e caso ele não esteja assinado. \r\n   * Em caso de estar assinado ou ser obrigatório e não exista ainda, será gerado um novo documento.\r\n   * @param planoReferencia  Plano de trabalho para comparação (contendo as entregas)\r\n   * @param planoNovo        Plano de trabalho modificado, com as novas informações (contendo as entregas, programa.template_tcr e documentos)\r\n   * @param ?textUsuario     Texto complementar do usuário, caso não seja informado, irá utilizar o do planoNovo.usuario.texto_complementar_plano\r\n   * @param ?textUnidade     Texto complementar da unidade, caso não seja informado, irá utilizar o do planoNovo.unidade.texto_complementar_plano\r\n   * @returns                Documento gerado ou modificado (observar o _status)\r\n   */\r\n  public atualizarTcr(planoReferencia: PlanoTrabalho, planoNovo: PlanoTrabalho, textUsuario?: string, textUnidade?: string) {\r\n    if (planoNovo.usuario && planoNovo.unidade) {\r\n      let dsReferencia = this.dao!.datasource(planoReferencia);\r\n      let dsNovo = this.dao!.datasource(planoNovo);\r\n      let programa = planoNovo.programa;\r\n      /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n      dsNovo.usuario.texto_complementar_plano = textUsuario || planoNovo.usuario?.texto_complementar_plano || \"\";\r\n      dsNovo.unidade.texto_complementar_plano = textUnidade || planoNovo.unidade?.texto_complementar_plano || \"\";\r\n      /* Se tiver modificações e o termo for obrigatório ou já exista um documento */\r\n      if ((programa?.termo_obrigatorio || planoNovo.documento_id?.length) && JSON.stringify(dsNovo) != JSON.stringify(dsReferencia) && programa?.template_tcr) {\r\n        let documento = planoNovo.documentos?.find((x: Documento) => x.id == planoNovo.documento_id);\r\n        if (!planoNovo.documento_id?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          documento = new Documento({\r\n            id: this.dao?.generateUuid(),\r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: programa?.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: dsNovo,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: planoNovo.id,\r\n            template_id: programa?.template_tcr_id\r\n          });\r\n          planoNovo.documentos.push(documento);\r\n        } else {\r\n          documento.conteudo = this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo);\r\n          documento.dataset = this.dao!.dataset();\r\n          documento.datasource = dsNovo;\r\n          documento._status = documento._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n        }\r\n        planoNovo.documento = documento;\r\n        planoNovo.documento_id = documento?.id || null;\r\n      }\r\n    }\r\n    return planoNovo.documento;\r\n  }\r\n\r\n  /**\r\n   * Informa a situação do plano de trabalho recebido como parâmetro, ou seja, se foi EXCLUIDO ou ARQUIVADO, ou, caso contrário, o seu status atual.\r\n   * @param planoTrabalho \r\n   * @returns \r\n   */\r\n  public situacaoPlano(planoTrabalho: PlanoTrabalho): string {\r\n    if (planoTrabalho.deleted_at) return \"EXCLUIDO\";\r\n    else if (planoTrabalho.data_arquivamento) return \"ARQUIVADO\";\r\n    else return planoTrabalho.status!;\r\n  }\r\n\r\n  /**\r\n   * Informa se o plano de trabalho recebido como parâmetro é válido, ou seja, não foi deletado, não foi cancelado nem foi arquivado.\r\n   * @param planoTrabalho \r\n   * @returns \r\n   */\r\n    public isValido(planoTrabalho: PlanoTrabalho): boolean {\r\n      return !planoTrabalho.deleted_at && planoTrabalho.status != 'CANCELADO' && !planoTrabalho.data_arquivamento;\r\n    }\r\n\r\n  /**\r\n   * Calcula a quantidade de dias para concluir a consolidação considerando a tolerância configurada no programa.\r\n   * @param consolidacao  Consolidacao do plano de trabalho\r\n   * @param programa      Programa\r\n   * @returns             Quantidade de dias para conclusão (Retorna números negativos caso tenha passado o prazo)\r\n   */\r\n  public diasParaConcluirConsolidacao(consolidacao?: PlanoTrabalhoConsolidacao, programa?: Programa): number {\r\n    return !consolidacao || !programa ? -1 : this.util.daystamp(consolidacao.data_fim) + programa.dias_tolerancia_avaliacao - this.util.daystamp(this.auth.hora);\r\n  }\r\n}\r\n"],"names":["GridComponent","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","PlanoTrabalho","PageListBase","PlanoTrabalhoService","DocumentoService","i0","ɵɵelementStart","ɵɵlistener","PlanoTrabalhoListComponent_toolbar_1_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r41","ctx_r40","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","filter","controls","agrupar","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","row_r46","entregas","length","ɵɵtemplate","PlanoTrabalhoListComponent_column_12_ng_template_1_span_0_Template","row_r49","PlanoTrabalhoListComponent_column_12_ng_template_1_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoListComponent_column_12_ng_template_3_Template","ctx_r1","lex","translate","_r42","_r44","header_r50","row_r51","numero","header_r52","row_r53","usuario","nome","row_r54","programa","row_r55","unidade","sigla","row_r56","tipo_modalidade","header_r57","ctx_r19","dao","getDateFormatted","row_r58","data_inicio","data_fim","row_r59","documento","ctx_r23","lookup","getColor","PLANO_TRABALHO_STATUS","row_r60","status","getIcon","getValue","ɵɵtextInterpolate","row_r61","row_r62","matricula","row_r63","row_r64","row_r65","ctx_r35","util","getDateTimeFormatted","row_r66","ctx_r37","row_r67","row_r68","numero_processo","PlanoTrabalhoListComponent","constructor","injector","routeStatus","route","multiselectAllFields","botoes","DATAS_FILTRO","key","value","filterValidate","control","controlName","result","data_filtro_fim","data_filtro_inicio","filterWhere","form","tipo_modalidade_id","push","data_filtro","trim","replace","unidade_id","dynamicMultiselectMenu","multiselected","assinar","Object","keys","menu","entries","forEach","planoTrabalhoService","needSign","label","icon","onClick","bind","unidadeDao","get","programaDao","documentoDao","documentoService","usuarioDao","tipoModalidadeDao","title","code","fh","FormBuilder","default","Date","cdRef","join","groupBy","field","BOTAO_ALTERAR","color","edit","BOTAO_ARQUIVAR","arquivar","BOTAO_ASSINAR","BOTAO_ATIVAR","ativar","BOTAO_CANCELAR_ASSINATURA","cancelarAssinatura","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_DESARQUIVAR","desarquivar","BOTAO_ENVIAR_ASSINATURA","enviarParaAssinatura","BOTAO_INFORMACOES","consult","BOTAO_TERMOS","row","go","navigate","id","modalClose","modalResult","console","log","conteudo","metadata","metadados","BOTAO_REATIVAR","reativar","BOTAO_SUSPENDER","suspender","ngOnInit","minha_unidade","setValue","auth","dynamicOptions","botao","botaoAtendeCondicoes","dynamicButtons","planoTrabalho","situacaoPlano","filterClear","event","grid","reloadFilter","assinaturasExigidas","usuarioEhGestorUnidadeExecutora","gestor","usuarioJaAssinouTCR","jaAssinaramTCR","includes","assinaturaUsuarioEhExigida","planoIncluido","usuarioEhParticipante","usuario_id","planoAguardandoAssinatura","planoAtivo","planoConcluido","planoArquivado","programaExigeOutrasAssinaturas","a","planoSuspenso","hasPermissionTo","isValido","tipo","entity","novoStatus","query","refreshId","planosIds","documentos","items","x","documento_id","map","dialog","alert","sign","then","reset","canAdd","_class","selectRoute","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoTrabalhoListComponent_Query","rf","ctx","PlanoTrabalhoListComponent_Template_grid_select_0_listener","onSelect","PlanoTrabalhoListComponent_toolbar_1_Template","PlanoTrabalhoListComponent_column_12_Template","PlanoTrabalhoListComponent_ng_template_14_Template","PlanoTrabalhoListComponent_ng_template_16_Template","PlanoTrabalhoListComponent_ng_template_19_Template","PlanoTrabalhoListComponent_ng_template_21_Template","PlanoTrabalhoListComponent_ng_template_24_Template","PlanoTrabalhoListComponent_ng_template_27_Template","PlanoTrabalhoListComponent_ng_template_30_Template","PlanoTrabalhoListComponent_ng_template_33_Template","PlanoTrabalhoListComponent_ng_template_35_Template","PlanoTrabalhoListComponent_ng_template_38_Template","PlanoTrabalhoListComponent_ng_template_41_Template","PlanoTrabalhoListComponent_ng_template_46_Template","PlanoTrabalhoListComponent_ng_template_49_Template","PlanoTrabalhoListComponent_ng_template_52_Template","PlanoTrabalhoListComponent_ng_template_55_Template","PlanoTrabalhoListComponent_ng_template_58_Template","PlanoTrabalhoListComponent_ng_template_61_Template","PlanoTrabalhoListComponent_ng_template_64_Template","PlanoTrabalhoListComponent_ng_template_67_Template","add","isModal","orderBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","ɵɵattribute","undefined","_r2","_r4","_r6","_r8","_r10","_r12","_r14","_r16","_r18","_r20","_r22","_r24","_r26","_r28","_r30","_r32","_r34","_r36","_r38","rowsLimit","Documento","templateService","planoTrabalhoDao","template","plano","template_tcr","extraTags","especie","titulo","dataset","datasource","template_id","template_tcr_id","parent","item","find","assinaturas","tipoModalidade","entidade","ids","plano_trabalho_assinatura_participante","plano_trabalho_assinatura_gestor_lotacao","gestoresLotacao","plano_trabalho_assinatura_gestor_unidade","gestor_substituto","plano_trabalho_assinatura_gestor_entidade","gestor_id","gestor_substituto_id","metadado","tags","JSON","stringify","tipoEntrega","planoTrabalhoEntrega","plano_trabalho","plano_entrega_entrega","plano_entrega","orgao","ORIGENS_ENTREGAS_PLANO_TRABALHO","_metadata","novaEntrega","entrega","descricao","cor","atualizarTcr","planoReferencia","planoNovo","textUsuario","textUnidade","dsReferencia","dsNovo","texto_complementar_plano","termo_obrigatorio","generateUuid","renderTemplate","_status","entidade_id","plano_trabalho_id","deleted_at","data_arquivamento","diasParaConcluirConsolidacao","consolidacao","daystamp","dias_tolerancia_avaliacao","hora","ɵɵinject","i1","AuthService","i2","UtilService","i3","LookupService","i4","i5","TemplateService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}