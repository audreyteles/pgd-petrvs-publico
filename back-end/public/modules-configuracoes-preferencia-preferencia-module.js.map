{"version":3,"sources":["./src/app/modules/configuracoes/preferencia/preferencia-form-petrvs/preferencia-form-petrvs.component.ts","./src/app/modules/configuracoes/preferencia/preferencia-form-petrvs/preferencia-form-petrvs.component.html","./src/app/modules/configuracoes/preferencia/preferencia.module.ts","./src/app/modules/configuracoes/preferencia/preferencia-form/preferencia-form.component.ts","./src/app/modules/configuracoes/preferencia/preferencia-form/preferencia-form.component.html","./src/app/modules/configuracoes/preferencia/preferencia-routing.module.ts","./src/app/modules/configuracoes/preferencia/preferencia-form-usuario/preferencia-form-usuario.component.ts","./src/app/modules/configuracoes/preferencia/preferencia-form-usuario/preferencia-form-usuario.component.html"],"names":[],"mappings":"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","file":"modules-configuracoes-preferencia-preferencia-module.js","sourcesContent":["import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { Entidade } from 'src/app/models/entidade.model';\nimport { EntidadeDaoService } from 'src/app/dao/entidade-dao.service';\n\n@Component({\n  selector: 'preferencia-form-petrvs',\n  templateUrl: './preferencia-form-petrvs.component.html',\n  styleUrls: ['./preferencia-form-petrvs.component.scss']\n})\nexport class PreferenciaFormPetrvsComponent extends PageFormBase<Entidade, EntidadeDaoService> implements OnInit {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @Input() panel?: string;\n\n  public form: FormGroup;\n  public carregando: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector, Entidade, EntidadeDaoService);\n    this.form = this.fh.FormBuilder({\n    }, this.cdRef, this.validate);\n  }\n\n  public get isPanel(): boolean {\n    return this.panel != undefined;\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    return result;\n  }\n\n  public async loadData(entity: Entidade, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.carregando = true;\n    try {\n      this.entity = new Entidade();\n      await this.loadData(this.entity, form);\n    } finally {\n      this.carregando = false;\n    }\n  }\n\n  public saveData(form: IIndexable): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      //let atividade = this.util.fill(new Entidade(), this.entity!);\n      //resolve(this.util.fillForm(atividade, this.form!.value));\n      resolve(!this.isPanel);\n    });\n  }\n\n  public titleEdit = (entity: Entidade): string => {\n    return \"Editando \";// + (entity?.unidade_id || \"\");\n  }\n}\n","<div *ngIf=\"carregando\" class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\"></span>\n    </div>\n</div>\n<div [class.d-none]=\"carregando\">\n    <editable-form [form]=\"form!\" [noButtons]=\"isPanel ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n        Em desenvolvimento\n    </editable-form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PreferenciaRoutingModule } from './preferencia-routing.module';\nimport { PreferenciaFormComponent } from './preferencia-form/preferencia-form.component';\nimport { PreferenciaFormPetrvsComponent } from './preferencia-form-petrvs/preferencia-form-petrvs.component';\nimport { PreferenciaFormUsuarioComponent } from './preferencia-form-usuario/preferencia-form-usuario.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    PreferenciaFormComponent,\n    PreferenciaFormPetrvsComponent,\n    PreferenciaFormUsuarioComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    PreferenciaRoutingModule\n  ]\n})\nexport class PreferenciaModule { }\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { PageBase } from 'src/app/modules/base/page-base';\nimport { PreferenciaFormPetrvsComponent } from '../preferencia-form-petrvs/preferencia-form-petrvs.component';\nimport { PreferenciaFormUsuarioComponent } from '../preferencia-form-usuario/preferencia-form-usuario.component';\n\n@Component({\n  selector: 'app-preferencia-form',\n  templateUrl: './preferencia-form.component.html',\n  styleUrls: ['./preferencia-form.component.scss']\n})\nexport class PreferenciaFormComponent extends PageBase implements OnInit {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(PreferenciaFormPetrvsComponent, { static: false }) public petrvs?: PreferenciaFormPetrvsComponent;\n  @ViewChild(PreferenciaFormUsuarioComponent, { static: false }) public usuario?: PreferenciaFormUsuarioComponent;\n\n  public form: FormGroup;\n  public mensagemCarregando = \"Carregando dados do formulário...\";\n  public mensagemSalvando = \"Salvando dados do formulário...\";\n\n  /*private _submitting: boolean = false;\n  public set submitting(value: boolean) {\n    if(!value) {\n      this.dialog.closeSppinerOverlay();\n    } else if(!this._submitting) {\n      this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\n    }\n    this._submitting = value;\n  }\n  public get submitting(): boolean {\n    return this._submitting;\n  } \n  private _loading: boolean = false;\n  public set loading(value: boolean) {\n    if(!value) {\n      this.dialog.closeSppinerOverlay();\n    } else if(!this._loading) {\n      this.dialog.showSppinerOverlay(\"Carregando dados do formulário\");\n    }\n    this._loading = value;\n  }\n  public get loading(): boolean {\n    return this._loading;\n  }*/\n  \n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.form = this.fh.FormBuilder({});\n  }\n\n  public get forceInvalid(): boolean {\n    return !!this.petrvs?.form?.invalid || !!this.usuario?.form?.invalid;\n  }\n\n  public async onSaveData() {\n    if(!this.forceInvalid) {\n      this.submitting = true;\n      try {\n        await Promise.all([\n          this.petrvs?.onSaveData(),\n          this.usuario?.onSaveData()\n        ]);\n        this.dialog.alert(\"Atenção\", \"Algumas modificações só surtirão efeito após atualizar a página.\\nPor motivos de segurança esse procedimento, de atualizar a pagina, deverá ser executado pelo usuário.\");\n        this.go.back();\n      } catch (error: any) {\n        this.editableForm!.error = error.message ? error.message : error;\n      } finally {\n        this.submitting = false;\n      }\n    } else {\n      if(!this.petrvs?.form?.invalid) this.editableForm!.error = \"Forme Petrvs com erro\";\n      if(!this.usuario?.form?.invalid) this.editableForm!.error = \"Forme do usuário com erro\";\n    }\n  }\n\n  public onCancel() {\n    this.go.back(undefined, this.backRoute);\n  }\n}\n","<editable-form [form]=\"form!\" [forceInvalid]=\"forceInvalid\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <tabs display right>\n        <tab key=\"USUARIO\" label=\"Usuário\">\n            <preferencia-form-usuario #usuario panel [usuarioId]=\"auth.usuario!.id\"></preferencia-form-usuario>\n        </tab>\n        <tab key=\"PETRVS\" label=\"Petrvs\">\n            <preferencia-form-petrvs #petrvs panel></preferencia-form-petrvs>\n        </tab>\n        <tab *ngIf=\"auth.unidade?.entidade\" key=\"ENTIDADE\" label=\"Entidade\">\n            Em desenvolvimento\n        </tab>\n    </tabs>\n</editable-form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { PreferenciaFormUsuarioComponent } from './preferencia-form-usuario/preferencia-form-usuario.component';\nimport { PreferenciaFormComponent } from './preferencia-form/preferencia-form.component';\n\nconst routes: Routes = [\n  { path: '', component: PreferenciaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Preferências\" } },\n  { path: 'usuario/:id', component: PreferenciaFormUsuarioComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Preferências do usuário\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreferenciaRoutingModule { }\n","import { Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { Usuario, UsuarioConfig, UsuarioNotificacoes } from 'src/app/models/usuario.model';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\n\n@Component({\n  selector: 'preferencia-form-usuario',\n  templateUrl: './preferencia-form-usuario.component.html',\n  styleUrls: ['./preferencia-form-usuario.component.scss']\n})\nexport class PreferenciaFormUsuarioComponent extends PageFormBase<Usuario, UsuarioDaoService> implements OnInit {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @Input() panel?: string;\n  @Input() usuarioId?: string;\n  \n  public etiquetas: boolean = false;\n  public form: FormGroup;\n  public carregando: boolean = false;\n  public toolbarButtons: ToolbarButton[] = [\n    {\n      label: \"Resetar\",\n      icon: \"bi bi-backspace\",\n      onClick: () => {\n        this.loading = true;\n        this.dao!.update(this.usuarioId!, {config: new UsuarioConfig()}).then(usuario => {\n          this.initializeData(this.form);\n        }).finally(() => {\n          this.loading = false;\n        });\n      }\n    }\n  ];\n\n  constructor(public injector: Injector) {\n    super(injector, Usuario, UsuarioDaoService);\n    this.form = this.fh.FormBuilder({\n      etiquetas: {default: []},\n      etiqueta_texto: {default: \"\"},\n      etiqueta_icone: {default: null},\n      etiqueta_cor: {default: null},\n      ocutar_menu_sei: {default: true},\n      ocutar_container_petrvs: {default: false},\n      notifica_demanda_distribuicao: {default: true},\n      notifica_demanda_conclusao: {default: true},\n      notifica_demanda_avaliacao: {default: true},\n      notifica_demanda_modificacao: {default: true},\n      notifica_demanda_comentario: {default: true},\n      enviar_email: {default: true},\n      enviar_whatsapp: {default: true}\n    }, this.cdRef, this.validate);\n  }\n\n  public get isPanel(): boolean {\n    return this.panel != undefined;\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    return result;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    if(this.urlParams!.get(\"id\")) {\n      this.usuarioId = this.urlParams!.get(\"id\")!;\n    }\n    this.etiquetas = !!this.queryParams.etiquetas;\n  }\n\n  public async loadData(entity: Usuario, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    formValue = this.util.fillForm(formValue, entity.config || {});\n    formValue = this.util.fillForm(formValue, entity.notificacoes || {});\n    form.patchValue(formValue);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.carregando = true;\n    try {\n      this.entity = (await this.dao!.getById(this.usuarioId!))!;\n      await this.loadData(this.entity, form);\n    } finally {\n      this.carregando = false;\n    }\n  }\n\n  public saveData(form: IIndexable): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      /*let config = this.util.fill(new UsuarioConfig(), this.entity!.config || {});\n      config = this.util.fillForm(config, this.form!.value);\n      this.usuario!.config = Object.assign(this.usuario!.config, value);\n      this.usuarioDaoService.updateJson(this.usuario!.id, 'config', value);*/\n      //this.dao!.update(this.usuarioId!, {config: config})\n      let config = this.util.fill(new UsuarioConfig(), this.form!.value);\n      let notificacoes = this.util.fill(new UsuarioNotificacoes(), this.form!.value);\n      Promise.all([\n        this.auth.updateUsuarioConfig(this.usuarioId!, config),\n        this.auth.updateUsuarioNotificacoes(this.usuarioId!, notificacoes)\n      ]).then(results => {\n        if(this.usuarioId == this.auth.usuario!.id) {\n          this.auth.authSession().then(result => resolve(!this.isPanel)).catch(reject);\n        } else {\n          resolve(!this.isPanel);\n        }\n      }).catch(reject);\n    });\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    const value = this.form.controls.etiqueta_texto.value;\n    const key = this.util.textHash(value);\n    if(value?.length && this.util.validateLookupItem(this.form.controls.etiquetas.value, key)) {\n      result = {\n        key: key,\n        value: this.form.controls.etiqueta_texto.value,\n        color: this.form.controls.etiqueta_cor.value,\n        icon: this.form.controls.etiqueta_icone.value\n      };\n      this.form.controls.etiqueta_texto.setValue(\"\");\n      this.form.controls.etiqueta_icone.setValue(null);\n      this.form.controls.etiqueta_cor.setValue(null);\n    }\n    return result;\n  };\n\n  public titleEdit = (entity: Usuario): string => {\n    return \"Editando \";// + (entity?.unidade_id || \"\");\n  }\n}\n","\n<div *ngIf=\"carregando\" class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\"></span>\n    </div>\n</div>\n<div [class.d-none]=\"carregando\">\n    <toolbar [buttons]=\"toolbarButtons\"></toolbar>\n    <editable-form [form]=\"form!\" [noButtons]=\"isPanel ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n        <div class=\"row\">\n            <input-multiselect label=\"Etiquetas\" multiselectStyle=\"inline\" controlName=\"etiquetas\" [size]=\"12\" [control]=\"form!.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                <input-text [size]=\"5\" label=\"Texto\" icon=\"bi bi-textarea-t\" controlName=\"etiqueta_texto\" [control]=\"form!.controls.etiqueta_texto\"></input-text>\n                <input-select [size]=\"3\" label=\"Ícone\" icon=\"fas fa-sign-out-alt\" controlName=\"etiqueta_icone\" liveSearch [control]=\"form!.controls.etiqueta_icone\" [items]=\"lookup.ICONES\"></input-select>\n                <input-color [size]=\"4\" label=\"Cor\" icon=\"bi bi-palette\" controlName=\"etiqueta_cor\" [control]=\"form!.controls.etiqueta_cor\"></input-color>\n            </input-multiselect>\n        </div>\n        <separator *ngIf=\"!etiquetas\" transparent title=\"Preferências de exibição do usuário\">\n            <div class=\"row\">\n                <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Ocutar menu lateral do sei no Controle de Processos\" controlName=\"ocutar_menu_sei\"></input-switch>\n                <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Ocutar o container Petrvs\" controlName=\"ocutar_container_petrvs\"></input-switch>\n            </div>\n        </separator>\n        <separator transparent title=\"Preferências notificações\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <separator transparent title=\"Meios de notificação\"></separator>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar por e-mail\" controlName=\"enviar_email\"></input-switch>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar por Whatsapp\" controlName=\"enviar_whatsapp\"></input-switch>\n                </div>\n                <div class=\"col-md-6\">\n                    <separator transparent title=\"Tipos de notificação\"></separator>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar distribuição da demanda\" controlName=\"notifica_demanda_distribuicao\"></input-switch>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar conclusão da demanda\" controlName=\"notifica_demanda_conclusao\"></input-switch>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar avaliação da demanda\" controlName=\"notifica_demanda_avaliacao\"></input-switch>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar modificação da demanda\" controlName=\"notifica_demanda_modificacao\"></input-switch>\n                    <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" label=\"Notificar comentário da demanda\" controlName=\"notifica_demanda_comentario\"></input-switch>\n                </div>\n            </div>\n        </separator>\n    </editable-form>\n</div>"],"sourceRoot":"webpack:///"}