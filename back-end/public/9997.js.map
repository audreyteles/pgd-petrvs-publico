<<<<<<< HEAD
{"version":3,"file":"9997.js","mappings":"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","sources":["./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html"],"sourcesContent":["import { LookupItem } from '../../../../services/lookup.service';\nimport { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { FullRoute } from 'src/app/services/navigate.service';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'plano-trabalho-list',\n  templateUrl: './plano-trabalho-list.component.html',\n  styleUrls: ['./plano-trabalho-list.component.scss']\n})\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public documentoDao: DocumentoDaoService;\n  public documentoService: DocumentoService;\n  public utilService: UtilService;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\n  public botoes: ToolbarButton[] = [];\n  public BOTAO_ALTERAR: ToolbarButton;\n  public BOTAO_ARQUIVAR: ToolbarButton;\n  public BOTAO_ASSINAR: ToolbarButton;\n  public BOTAO_ATIVAR: ToolbarButton;\n  public BOTAO_CANCELAR_ASSINATURA: ToolbarButton;\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\n  public BOTAO_DESARQUIVAR: ToolbarButton;\n  public BOTAO_ENVIAR_ASSINATURA: ToolbarButton;\n  public BOTAO_INFORMACOES: ToolbarButton;\n  public BOTAO_REATIVAR: ToolbarButton;\n  public BOTAO_SUSPENDER: ToolbarButton;\n  public BOTAO_TERMOS: ToolbarButton;\n  public BOTAO_CONSOLIDACOES: ToolbarButton;\n  public DATAS_FILTRO: LookupItem[] = [\n    { key: \"VIGENTE\", value: \"Vigente\" },\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\n    { key: \"INICIAM\", value: \"Iniciam\" },\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\n  ];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\n    this.utilService = injector.get<UtilService>(UtilService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    /* Inicializações */\n    this.title = this.lex.translate(\"Planos de Trabalho\");\n    this.code = \"MOD_PTR\";\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      usuario: { default: \"\" },\n      status: { default: \"\" },\n      unidade_id: { default: null },\n      arquivados: { default: false },\n      tipo_modalidade_id: { default: null },\n      data_filtro: { default: null },\n      data_filtro_inicio: { default: new Date() },\n      data_filtro_fim: { default: new Date() }\n    }, this.cdRef, this.filterValidate);\n    this.join = [\n      \"unidade.entidade\",\n      \"unidade.gestor.usuario:id\",\n      \"usuario\",\n      \"programa.template_tcr\",\n      \"documento.assinaturas.usuario:id,nome,url_foto\",\n      \"tipo_modalidade\",\n      \"entregas.plano_entrega_entrega.entrega\",\n      \"entregas.plano_entrega_entrega.plano_entrega:id,unidade_id\",\n      \"entregas.plano_entrega_entrega.plano_entrega.unidade\",\n      \"entregas.entrega\",\n      \"entregas.reacoes.usuario:id,nome,apelido\"\n    ];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    this.BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\n    this.BOTAO_ATIVAR = { label: \"Ativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.ativar.bind(this) };\n    this.BOTAO_CANCELAR_ASSINATURA = { label: \"Cancelar assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), onClick: this.cancelarAssinatura.bind(this) };\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    this.BOTAO_ENVIAR_ASSINATURA = { label: \"Enviar para assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), onClick: this.enviarParaAssinatura.bind(this) };\n    this.BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\n    this.BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id] }, { modalClose: (modalResult) => (this.grid?.query || this.query!).refreshId(row.id), metadata: this.planoTrabalhoService.metadados(row) })).bind(this) };\n    this.BOTAO_CONSOLIDACOES = { label: \"Consolidações\", icon: this.entityService.getIcon('PlanoTrabalhoConsolidacao'), onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['gestao', 'plano-trabalho', 'consolidacao', row.usuario_id, row.id] }, { modalClose: (modalResult) => (this.grid?.query || this.query!).refreshId(row.id), modal: true })).bind(this) };\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_ASSINAR, this.BOTAO_ATIVAR, this.BOTAO_CANCELAR_ASSINATURA, this.BOTAO_CANCELAR_PLANO,\n    this.BOTAO_DESARQUIVAR, this.BOTAO_ENVIAR_ASSINATURA, this.BOTAO_INFORMACOES, this.BOTAO_TERMOS, this.BOTAO_CONSOLIDACOES, this.BOTAO_REATIVAR, this.BOTAO_SUSPENDER];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    if (this.metadata?.minha_unidade) {\n      this.filter?.controls.unidade_id.setValue(this.auth.unidade?.id);\n    }\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    this.botoes.forEach(botao => {\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\n    });\n    return result;\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoTrabalho: PlanoTrabalho = row as PlanoTrabalho;\n    switch (this.planoTrabalhoService.situacaoPlano(planoTrabalho)) {\n      case 'INCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR)\n        else if (this.botaoAtendeCondicoes(this.BOTAO_ATIVAR, row)) result.push(this.BOTAO_ATIVAR)\n        else if (this.botaoAtendeCondicoes(this.BOTAO_ENVIAR_ASSINATURA, row)) result.push(this.BOTAO_ENVIAR_ASSINATURA);\n        /*         \n          - botões-padrão:\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;                  (quando for exigida apenas a assinatura do usuário logado no TCR)\n            - 'Ativar'. Condições para ser exibido: vide RN_PTR_P;                   (quando não for exigida nenhuma assinatura no TCR)\n            - 'Enviar para Assinatura'. Condições para ser exibido: vide RN_PTR_U;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \n        */\n        break;\n      case 'AGUARDANDO_ASSINATURA':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR);\n        /**\n          - botões-padrão:\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'ATIVO':\n        /**\n          - botões-padrão:\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'CONCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        /**\n          - botões-padrão:\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \n        */\n        break;\n      case 'SUSPENSO':\n        /**\n          - botões-padrão:\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'ARQUIVADO':\n        /**\n          - botões-padrão:\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'CANCELADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        /**\n          - botões-padrão:\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n    }\n    if (!result.length) result.push(this.BOTAO_INFORMACOES);\n    return result;\n  }\n\n  public filterValidate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\n      result = \"Maior que fim\";\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\n      result = \"Menor que início\";\n    }\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.usuario.setValue(\"\");\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.status.setValue(null);\n    filter.controls.arquivados.setValue(false);\n    filter.controls.tipo_modalidade_id.setValue(null);\n    filter.controls.data_filtro.setValue(null);\n    filter.controls.data_filtro_inicio.setValue(new Date());\n    filter.controls.data_filtro_fim.setValue(new Date());\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    if (form.tipo_modalidade_id?.length) {\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\n    }\n    if (form.data_filtro) {\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\n    }\n    if (form.usuario?.length) result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario.trim().replace(\" \", \"%\") + \"%\"]);\n    if (form.unidade_id?.length) result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    if (form.status) result.push([\"status\", \"==\", form.status]);\n    //  (RI_PTR_C) Por padrão, os planos de trabalho retornados na listagem do grid são os que não foram arquivados.\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivados.value]);\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\n    let assinar = !!Object.keys(multiselected).length;\n    let menu = [];\n    Object.entries(multiselected).forEach(([key, value]) => {\n      if (!this.planoTrabalhoService.needSign(value)) assinar = false;\n    });\n    if (assinar) menu.push({ label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\n    return menu;\n  }\n\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoTrabalho: PlanoTrabalho): boolean {\n    let assinaturasExigidas = planoTrabalho.assinaturasExigidas;\n    let assinaturasFaltantes = this.planoTrabalhoService.assinaturasFaltantes(planoTrabalho.assinaturasExigidas, planoTrabalho.jaAssinaramTCR);\n    let haAssinaturasFaltantes = !!assinaturasFaltantes.participante.length || !!assinaturasFaltantes.gestores_unidade_executora.length || !!assinaturasFaltantes.gestores_unidade_lotacao.length || !!assinaturasFaltantes.gestores_entidade.length;\n    let usuarioEhGestorUnidadeExecutora: boolean = this.auth.isGestorUnidade(planoTrabalho.unidade_id);\n    let usuarioJaAssinouTCR: boolean = !!planoTrabalho.jaAssinaramTCR?.todas?.includes(this.auth.usuario?.id!);\n    let assinaturaUsuarioEhExigida: boolean = !!planoTrabalho.assinaturasExigidas?.todas?.includes(this.auth.usuario?.id!);\n    let planoIncluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'INCLUIDO';\n    let usuarioEhParticipante = this.auth.usuario?.id == planoTrabalho.usuario_id;\n    let planoAguardandoAssinatura = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'AGUARDANDO_ASSINATURA';\n    let planoAtivo = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ATIVO';\n    let planoConcluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CONCLUIDO';\n    let planoCancelado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CANCELADO';\n    let planoDeletado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'EXCLUIDO';\n    let planoArquivado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ARQUIVADO';\n    let planoSuspenso = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'SUSPENSO';\n    let planoPossuiEntrega = planoTrabalho.entregas.length > 0;\n    if(botao == this.BOTAO_INFORMACOES && this.auth.hasPermissionTo(\"MOD_PTR\")) {\n      /*\n          (RN_PTR_S) CONSULTAR\n          Todos os participantes podem visualizar todos os planos de trabalho, desde que possuam a capacidade \"MOD_PTR\";\n      */\n      return true;\n    } else {\n      if(planoDeletado) return false; else {\n        switch (botao) {\n          case this.BOTAO_ALTERAR:\n            /*\n              (RN_PTR_M) Condições para que um Plano de Trabalho possa ser alterado:\n              O usuário logado precisa possuir a capacidade \"MOD_PTR_EDT\", o Plano de Trabalho precisa ser válido (ou seja, nem deletado, nem arquivado, nem estar no status CANCELADO), e:\n                  - estando com o status 'INCLUIDO', o usuário logado precisa ser o participante do plano ou o gestor da Unidade Executora;\n                  - estando com o status 'AGUARDANDO_ASSINATURA', o usuário logado precisa ser um dos que já assinaram o TCR e todas as assinaturas tornam-se sem efeito;\n                  - estando com o status 'ATIVO', o usuário precisa ser gestor da Unidade Executora e possuir a capacidade MOD_PTR_EDT_ATV. Após alterado, o Plano de Trabalho precisa ser repactuado (novo TCR), e o plano retorna ao status 'AGUARDANDO_ASSINATURA';\n            */\n            let condition1 = this.auth.hasPermissionTo(\"MOD_PTR_EDT\");\n            let condition2 = this.planoTrabalhoService.isValido(planoTrabalho);\n            let condition3 = planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\n            let condition4 = planoAguardandoAssinatura && usuarioJaAssinouTCR;\n            let condition5 = planoAtivo && usuarioEhGestorUnidadeExecutora && this.auth.hasPermissionTo(\"MOD_PTR_EDT_ATV\");\n            return condition1 && condition2 && (condition3 || condition4 || condition5);\n          case this.BOTAO_ARQUIVAR:\n            /*\n              (RN_PTR_N) ARQUIVAR\n              O plano precisa estar com o status CONCLUIDO ou CANCELADO, não ter sido arquivado, e:\n                - o usuário logado precisa ser o participante ou o gestor da Unidade Executora;\n            */\n            return (planoConcluido || planoCancelado) && !planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\n          case this.BOTAO_ASSINAR:\n            /*\n              (RN_PTR_O) ASSINAR\n                - o plano precisa possuir ao menos uma entrega, e:\n                - o plano precisa estar com o status INCLUIDO, e:\n                  - o usuário logado precisa ser o participante do plano ou o gestor da sua Unidade Executora, e\n                  - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\n                - ou o plano precisa estar com o status AGUARDANDO_ASSINATURA, e:\n                  - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\n            */\n            let condicao1 = usuarioEhParticipante || usuarioEhGestorUnidadeExecutora;\n            let condicao2 = assinaturaUsuarioEhExigida && !usuarioJaAssinouTCR;\n            return planoPossuiEntrega && ((planoIncluido && condicao1 && condicao2) || (planoAguardandoAssinatura && condicao2));\n          case this.BOTAO_ATIVAR:\n            /*\n              (RN_PTR_P) ATIVAR\n              O plano precisa estar no status 'INCLUIDO', e\n                  - o usuário logado precisa ser o participante do plano ou gestor da Unidade Executora, e\n                  - nenhuma assinatura no TCR deve ser exigida pelo programa, e\n                  - o plano de trabalho precisa ter ao menos uma entrega;        \n            */\n            return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && !assinaturasExigidas?.todas?.length && planoPossuiEntrega;\n          case this.BOTAO_CANCELAR_ASSINATURA:\n            /*\n              (RN_PTR_Q) CANCELAR ASSINATURA\n              O plano precisa estar no status 'AGUARDANDO_ASSINATURA'; e\n                - o usuário logado precisa já ter assinado o TCR;\n            */\n            return planoAguardandoAssinatura && usuarioJaAssinouTCR;\n          case this.BOTAO_CANCELAR_PLANO:\n            /*\n              (RN_PTR_R) CANCELAR \n              O usuário logado precisa possuir a capacidade \"MOD_PTR_CNC\", e\n                - o plano não pode ter sido deletado e precisa estar em um dos seguintes status: INCLUIDO, AGUARDANDO_ASSINATURA, ATIVO ou CONCLUIDO; e\n                - o usuário logado precisa ser gestor da Unidade Executora;\n            */\n            return this.auth.hasPermissionTo(\"MOD_PTR_CNC\") && ['INCLUIDO', 'AGUARDANDO_ASSINATURA', 'ATIVO', 'CONCLUIDO'].includes(planoTrabalho.status);\n          case this.BOTAO_DESARQUIVAR:\n            /*\n              (RN_PTR_T) DESARQUIVAR\n              O plano precisa estar arquivado, e:\n                  - o usuário logado precisa ser o participante ou gestor da Unidade Executora;\n            */\n            return planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\n          case this.BOTAO_ENVIAR_ASSINATURA:\n            /*\n              (RN_PTR_U) ENVIAR PARA ASSINATURA\n              O plano precisa estar com o status INCLUIDO; e\n                - o usuário logado precisa ser o participante do plano ou gestor da sua Unidade Executora; e\n                - se a assinatura do usuário logado for exigida, ele já deve ter assinado o TCR; e\n                - devem existir assinaturas exigíveis ainda pendentes; e\n                - o plano precisa possuir ao menos uma entrega;\n            */\n            return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && (!assinaturaUsuarioEhExigida || usuarioJaAssinouTCR) && haAssinaturasFaltantes && planoPossuiEntrega;\n          case this.BOTAO_REATIVAR:\n            /*\n              (RN_PTR_W) REATIVAR\n              O plano precisa estar com o status SUSPENSO, e\n                - o usuário logado precisa ser gestor da Unidade Executora;\n            */\n            return planoSuspenso && usuarioEhGestorUnidadeExecutora;\n          case this.BOTAO_SUSPENDER:\n            /*\n              (RN_PTR_X) SUSPENDER\n              O plano precisa estar com o status ATIVO, e\n                - o usuário logado precisa ser gestor da Unidade Executora;\n            */\n            return planoAtivo && usuarioEhGestorUnidadeExecutora;\n          case this.BOTAO_TERMOS:\n            return this.auth.hasPermissionTo(\"MOD_PTR\");\n          case this.BOTAO_CONSOLIDACOES:\n            return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public arquivar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: true}), novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Arquivar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public assinar(planoTrabalho?: PlanoTrabalho) {\n    const planosIds = planoTrabalho ? [planoTrabalho.id] : Object.keys(this.grid!.multiselected || {});\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\n    if (!documentos.length) {\n      this.dialog.alert(\"Selecione\", \"Nenhum plano selecionado!\");\n    } else {\n      this.documentoService.sign(documentos).then(() => (this.grid?.query || this.query!).refreshId(planoTrabalho!.id));\n    }\n  }\n\n  public ativar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.ativar.bind(this.dao) },\n      title: \"Ativar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  // COMPLEMENTAR A IMPLEMENTAÇÃO DO MÉTODO\n  public cancelarAssinatura(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.cancelarAssinatura.bind(this.dao) },\n      title: \"Cancelar Assinatura do TCR\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public cancelarPlano(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: true}), exigeJustificativa: true, novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\n      title: \"Cancelar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public desarquivar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: false}), novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Desarquivar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public enviarParaAssinatura(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.enviarParaAssinatura.bind(this.dao) },\n      title: \"Disponibilizar Plano de Trabalho para assinatura\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public reativar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\n      title: \"Reativar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public suspender(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\n      title: \"Suspender Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public canAdd() {\n    return this.auth.hasPermissionTo('MOD_PTR_INCL');\n    //IMPLEMENTAR AS DEMAIS CONDIÇÕES NA VALIDAÇÃO DO FORM *******************\n    /*\n    (RN_PTR_V) INCLUIR/INSERIR\n    O usuário logado precisa possuir a capacidade \"MOD_PTR_INCL\", e:\n        - o usuário logado precisa ser um participante do PGD, habilitado, ou ser gestor da Unidade Executora do plano; (RN_PTR_B); e\n        - o participante do plano precisa estar lotado em uma das áreas de trabalho do usuário logado, ou este deve possuir a capacidade MOD_PTR_USERS_INCL; e\n        - o participante do plano precisa estar lotado na Unidade Executora, ou o usuário logado possuir a capacidade MOD_PTR_INCL_SEM_LOT; e\n        - o novo Plano de Trabalho não pode apresentar período conflitante com outro plano já existente para a mesma Unidade Executora e mesmo participante, ou o usuário logado possuir a capacidade MOD_PTR_INTSC_DATA\n    */\n  }\n\n}\n\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"canAdd()\" [hasEdit]=\"false\" [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\" [multiselectAllFields]=\"multiselectAllFields\">\n    <toolbar *ngIf=\"!selectable\">\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\n    </toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"4\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\" [attr.maxlength]=250></input-text>\n            <input-search [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_TRABALHO_STATUS\" [control]=\"filter!.controls.status\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivados\" [control]=\"filter!.controls.arquivados\" labelInfo=\"Listar também os planos de trabalho arquivados\"></input-switch>\n        </div>\n        <div class=\"row\">\n          <input-search [size]=\"6\" [control]=\"filter!.controls.tipo_modalidade_id\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\n      </div>\n    </filter>\n    <columns>\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\n            <ng-template let-row=\"row\" #columnEntregas>\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\n            <ng-template let-header=\"header\" #titleNumero>\n                <order by=\"numero\" [header]=\"header\">#ID</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnNumero>\n                <span> {{ '#' + row.numero}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\n            <ng-template let-header=\"header\" #titleUsuario>\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order><br>Programa\n            </ng-template>\n            <ng-template let-row=\"row\" #columnUsuario>\n                <span> {{row.usuario?.nome || \"\"}}</span><br>\n                <badge color=\"light\" icon=\"bi bi-file-bar-graph\" [label]=\"row.programa?.nome || ''\"></badge>\n            </ng-template>\n        </column>\n        <!--<column title=\"Programa\" [template]=\"columnPrograma\">\n            <ng-template let-row=\"row\" #columnPrograma>\n                <span> {{row.programa?.nome || \"\"}}</span>\n                <badge color=\"blue\" icon=\"bi bi-file-bar-graph\" [label]=\"row.programa?.nome || ''\"></badge>\n            </ng-template>\n        </column>-->\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\n            <ng-template let-row=\"row\" #columnUnidade>\n                <span> {{row.unidade?.sigla || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\n            <ng-template let-row=\"row\" #columnModalidade>\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\n            <ng-template let-header=\"header\" #titleVigencia>\n              Vigência de<br><order by=\"data_inicio\" [header]=\"header\">Início</order>a<order by=\"data_fim\" [header]=\"header\">Fim</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnInicioVigencia>\n                <span> {{dao!.getDateFormatted(row.data_inicio)}} <br> {{ \" até \"+dao!.getDateFormatted(row.data_fim)}}</span>\n            </ng-template>\n        </column>\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\n            <ng-template let-row=\"row\" #documento>\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\n            </ng-template>\n        </column>\n        <column title=\"Status\" [template]=\"columnStatus\">\n            <ng-template let-row=\"row\" #columnStatus>\n                <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, row.status)\"></badge><br>\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\n            </ng-template>\n        </column>\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\n    </columns>\n    <report>\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio)}}</ng-template></column>\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim)}}</ng-template></column>\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\n    </report>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n"],"names":["GridComponent","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","PlanoTrabalho","PageListBase","PlanoTrabalhoService","DocumentoService","UtilService","i0","ɵɵelementStart","ɵɵlistener","PlanoTrabalhoListComponent_toolbar_1_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r39","ctx_r38","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","filter","controls","agrupar","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","row_r44","entregas","length","ɵɵtemplate","PlanoTrabalhoListComponent_column_14_ng_template_1_span_0_Template","row_r47","PlanoTrabalhoListComponent_column_14_ng_template_1_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoListComponent_column_14_ng_template_3_Template","ctx_r1","lex","translate","_r40","_r42","header_r48","row_r49","numero","header_r50","row_r51","usuario","nome","programa","row_r52","unidade","sigla","row_r53","tipo_modalidade","header_r54","ctx_r17","dao","getDateFormatted","row_r55","data_inicio","data_fim","row_r56","documento","PlanoTrabalhoListComponent_ng_template_40_badge_2_Template","PlanoTrabalhoListComponent_ng_template_40_badge_3_Template","ctx_r21","lookup","getColor","PLANO_TRABALHO_STATUS","row_r57","status","getIcon","getValue","data_arquivamento","deleted_at","ɵɵtextInterpolate","row_r60","row_r61","matricula","row_r62","row_r63","row_r64","ctx_r33","util","getDateTimeFormatted","row_r65","ctx_r35","row_r66","row_r67","numero_processo","PlanoTrabalhoListComponent","constructor","injector","routeStatus","route","multiselectAllFields","botoes","DATAS_FILTRO","key","value","filterValidate","control","controlName","result","data_filtro_fim","data_filtro_inicio","filterWhere","form","tipo_modalidade_id","push","data_filtro","trim","replace","unidade_id","arquivados","dynamicMultiselectMenu","multiselected","assinar","Object","keys","menu","entries","forEach","planoTrabalhoService","needSign","label","icon","onClick","bind","unidadeDao","get","programaDao","documentoDao","documentoService","utilService","usuarioDao","tipoModalidadeDao","title","code","fh","FormBuilder","default","Date","cdRef","join","groupBy","field","BOTAO_ALTERAR","color","edit","BOTAO_ARQUIVAR","arquivar","BOTAO_ASSINAR","BOTAO_ATIVAR","ativar","BOTAO_CANCELAR_ASSINATURA","cancelarAssinatura","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_DESARQUIVAR","desarquivar","BOTAO_ENVIAR_ASSINATURA","enviarParaAssinatura","BOTAO_INFORMACOES","consult","BOTAO_TERMOS","row","go","navigate","id","modalClose","modalResult","grid","query","refreshId","metadata","metadados","BOTAO_CONSOLIDACOES","entityService","usuario_id","modal","BOTAO_REATIVAR","reativar","BOTAO_SUSPENDER","suspender","ngOnInit","minha_unidade","setValue","auth","dynamicOptions","botao","botaoAtendeCondicoes","dynamicButtons","planoTrabalho","situacaoPlano","filterClear","event","reloadFilter","assinaturasExigidas","assinaturasFaltantes","jaAssinaramTCR","haAssinaturasFaltantes","participante","gestores_unidade_executora","gestores_unidade_lotacao","gestores_entidade","usuarioEhGestorUnidadeExecutora","isGestorUnidade","usuarioJaAssinouTCR","todas","includes","assinaturaUsuarioEhExigida","planoIncluido","usuarioEhParticipante","planoAguardandoAssinatura","planoAtivo","planoConcluido","planoCancelado","planoDeletado","planoArquivado","planoSuspenso","planoPossuiEntrega","hasPermissionTo","condition1","condition2","isValido","condition3","condition4","condition5","condicao1","condicao2","tipo","entity","assign","novoStatus","planosIds","documentos","items","x","documento_id","map","dialog","alert","sign","then","exigeJustificativa","canAdd","_","ɵɵdirectiveInject","Injector","_2","selectors","viewQuery","PlanoTrabalhoListComponent_Query","rf","ctx","PlanoTrabalhoListComponent_Template_grid_select_0_listener","onSelect","PlanoTrabalhoListComponent_toolbar_1_Template","PlanoTrabalhoListComponent_column_14_Template","PlanoTrabalhoListComponent_ng_template_16_Template","PlanoTrabalhoListComponent_ng_template_18_Template","PlanoTrabalhoListComponent_ng_template_21_Template","PlanoTrabalhoListComponent_ng_template_23_Template","PlanoTrabalhoListComponent_ng_template_26_Template","PlanoTrabalhoListComponent_ng_template_29_Template","PlanoTrabalhoListComponent_ng_template_32_Template","PlanoTrabalhoListComponent_ng_template_34_Template","PlanoTrabalhoListComponent_ng_template_37_Template","PlanoTrabalhoListComponent_ng_template_40_Template","PlanoTrabalhoListComponent_ng_template_45_Template","PlanoTrabalhoListComponent_ng_template_48_Template","PlanoTrabalhoListComponent_ng_template_51_Template","PlanoTrabalhoListComponent_ng_template_54_Template","PlanoTrabalhoListComponent_ng_template_57_Template","PlanoTrabalhoListComponent_ng_template_60_Template","PlanoTrabalhoListComponent_ng_template_63_Template","PlanoTrabalhoListComponent_ng_template_66_Template","add","isModal","orderBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","ɵɵattribute","undefined","_r2","_r4","_r6","_r8","_r10","_r12","_r14","_r16","_r18","_r20","_r22","_r24","_r26","_r28","_r30","_r32","_r34","_r36","rowsLimit"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
=======
{"version":3,"file":"9997.js","mappings":"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","sources":["./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html"],"sourcesContent":["import { LookupItem } from '../../../../services/lookup.service';\r\nimport { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\r\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\r\nimport { UtilService } from 'src/app/services/util.service';\r\nimport { QueryOptions } from 'src/app/dao/query-options';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-list',\r\n  templateUrl: './plano-trabalho-list.component.html',\r\n  styleUrls: ['./plano-trabalho-list.component.scss']\r\n})\r\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public documentoDao: DocumentoDaoService;\r\n  public documentoService: DocumentoService;\r\n  public utilService: UtilService;\r\n  public programaDao: ProgramaDaoService;\r\n  public usuarioDao: UsuarioDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\r\n  public tipoModalidadeDao: TipoModalidadeDaoService;\r\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\r\n  public relatorios: LookupItem[] = [{ key: \"PTR_LISTA\", value: \"Lista Planos de Trabalhos\" }];\r\n  public botoes: ToolbarButton[] = [];\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_ASSINAR: ToolbarButton;\r\n  public BOTAO_ATIVAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_ASSINATURA: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_ENVIAR_ASSINATURA: ToolbarButton;\r\n  public BOTAO_INFORMACOES: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n  public BOTAO_TERMOS: ToolbarButton;\r\n  public BOTAO_RELATORIO: ToolbarButton;\r\n  public BOTAO_CONSOLIDACOES: ToolbarButton;\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    { key: \"VIGENTE\", value: \"Vigente\" },\r\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\r\n    { key: \"INICIAM\", value: \"Iniciam\" },\r\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\r\n  ];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\r\n    this.utilService = injector.get<UtilService>(UtilService);\r\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Planos de Trabalho\");\r\n    this.code = \"MOD_PTR\";\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      usuario: { default: \"\" },\r\n      status: { default: \"\" },\r\n      unidade_id: { default: null },\r\n      arquivados: { default: false },\r\n      tipo_modalidade_id: { default: null },\r\n      data_filtro: { default: null },\r\n      data_filtro_inicio: { default: new Date() },\r\n      data_filtro_fim: { default: new Date() }\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\r\n      \"unidade.entidade\",\r\n      \"unidade.gestor.usuario:id\",\r\n      \"usuario\",\r\n      \"programa.template_tcr\",\r\n      \"documento.assinaturas.usuario:id,nome,url_foto\",\r\n      \"tipo_modalidade\",\r\n      \"entregas.plano_entrega_entrega.entrega\",\r\n      \"entregas.plano_entrega_entrega.plano_entrega:id,unidade_id\",\r\n      \"entregas.plano_entrega_entrega.plano_entrega.unidade\",\r\n      \"entregas.entrega\",\r\n      \"entregas.reacoes.usuario:id,nome,apelido\"\r\n    ];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\r\n    this.BOTAO_ATIVAR = { label: \"Ativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.ativar.bind(this) };\r\n    this.BOTAO_CANCELAR_ASSINATURA = { label: \"Cancelar assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), onClick: this.cancelarAssinatura.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_ENVIAR_ASSINATURA = { label: \"Enviar para assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), onClick: this.enviarParaAssinatura.bind(this) };\r\n    this.BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    this.BOTAO_RELATORIO = { label: \"Relatório\", icon: \"bi bi-file-pdf\", onClick: (row: PlanoTrabalho) => this.report(row, 'PTR_LISTA_ENTREGAS') };\r\n    this.BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id] }, { modalClose: (modalResult) => (this.grid?.query || this.query!).refreshId(row.id), metadata: this.planoTrabalhoService.metadados(row) })).bind(this) };\r\n    this.BOTAO_CONSOLIDACOES = { label: \"Consolidações\", icon: this.entityService.getIcon('PlanoTrabalhoConsolidacao'), onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['gestao', 'plano-trabalho', 'consolidacao', row.usuario_id, row.id] }, { modalClose: (modalResult) => (this.grid?.query || this.query!).refreshId(row.id), modal: true })).bind(this) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_ASSINAR, this.BOTAO_ATIVAR, this.BOTAO_CANCELAR_ASSINATURA, this.BOTAO_CANCELAR_PLANO,\r\n    this.BOTAO_DESARQUIVAR, this.BOTAO_ENVIAR_ASSINATURA, this.BOTAO_INFORMACOES, this.BOTAO_RELATORIO, this.BOTAO_TERMOS, this.BOTAO_CONSOLIDACOES, this.BOTAO_REATIVAR, this.BOTAO_SUSPENDER];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    if (this.metadata?.minha_unidade) {\r\n      this.filter?.controls.unidade_id.setValue(this.auth.unidade?.id);\r\n    }\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.botoes.forEach(botao => {\r\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoTrabalho: PlanoTrabalho = row as PlanoTrabalho;\r\n    switch (this.planoTrabalhoService.situacaoPlano(planoTrabalho)) {\r\n      case 'INCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR)\r\n        else if (this.botaoAtendeCondicoes(this.BOTAO_ATIVAR, row)) result.push(this.BOTAO_ATIVAR)\r\n        else if (this.botaoAtendeCondicoes(this.BOTAO_ENVIAR_ASSINATURA, row)) result.push(this.BOTAO_ENVIAR_ASSINATURA);\r\n        /*         \r\n          - botões-padrão:\r\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;                  (quando for exigida apenas a assinatura do usuário logado no TCR)\r\n            - 'Ativar'. Condições para ser exibido: vide RN_PTR_P;                   (quando não for exigida nenhuma assinatura no TCR)\r\n            - 'Enviar para Assinatura'. Condições para ser exibido: vide RN_PTR_U;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \r\n        */\r\n        break;\r\n      case 'AGUARDANDO_ASSINATURA':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR);\r\n        /**\r\n          - botões-padrão:\r\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'ATIVO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        /**\r\n          - botões-padrão:\r\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \r\n        */\r\n        break;\r\n      case 'SUSPENSO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'ARQUIVADO':\r\n        /**\r\n          - botões-padrão:\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n      case 'CANCELADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        /**\r\n          - botões-padrão:\r\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\r\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\r\n        */\r\n        break;\r\n    }\r\n    if (!result.length) result.push(this.BOTAO_INFORMACOES, this.BOTAO_RELATORIO);\r\n    return result;\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.usuario.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    filter.controls.arquivados.setValue(false);\r\n    filter.controls.tipo_modalidade_id.setValue(null);\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    if (form.tipo_modalidade_id?.length) {\r\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\r\n    }\r\n    if (form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if (form.usuario?.length) result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario.trim().replace(\" \", \"%\") + \"%\"]);\r\n    if (form.unidade_id?.length) result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    if (form.status) result.push([\"status\", \"==\", form.status]);\r\n    //  (RI_PTR_C) Por padrão, os planos de trabalho retornados na listagem do grid são os que não foram arquivados.\r\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivados.value]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\r\n    let assinar = !!Object.keys(multiselected).length;\r\n    let menu = [];\r\n    Object.entries(multiselected).forEach(([key, value]) => {\r\n      if (!this.planoTrabalhoService.needSign(value)) assinar = false;\r\n    });\r\n    if (assinar) menu.push({ label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\r\n    return menu;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoTrabalho: PlanoTrabalho): boolean {\r\n    let assinaturasExigidas = planoTrabalho.assinaturasExigidas;\r\n    let todasAssinaturasExigidas = [\r\n      ...assinaturasExigidas.gestores_entidade,\r\n      ...assinaturasExigidas.gestores_unidade_executora,\r\n      ...assinaturasExigidas.gestores_unidade_lotacao,\r\n      ...assinaturasExigidas.participante\r\n    ];\r\n    let assinaturasFaltantes = this.planoTrabalhoService.assinaturasFaltantes(planoTrabalho.assinaturasExigidas, planoTrabalho.jaAssinaramTCR);\r\n    let haAssinaturasFaltantes = !!assinaturasFaltantes.participante.length || !!assinaturasFaltantes.gestores_unidade_executora.length || !!assinaturasFaltantes.gestores_unidade_lotacao.length || !!assinaturasFaltantes.gestores_entidade.length;\r\n    let usuarioEhGestorUnidadeExecutora: boolean = this.auth.isGestorUnidade(planoTrabalho.unidade_id);\r\n    let usuarioJaAssinouTCR: boolean = !!planoTrabalho.jaAssinaramTCR?.todas?.includes(this.auth.usuario?.id!);\r\n    let assinaturaUsuarioEhExigida: boolean = !!todasAssinaturasExigidas?.includes(this.auth.usuario?.id!);\r\n    let planoIncluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'INCLUIDO';\r\n    let usuarioEhParticipante = this.auth.usuario?.id == planoTrabalho.usuario_id;\r\n    let planoAguardandoAssinatura = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'AGUARDANDO_ASSINATURA';\r\n    let planoAtivo = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ATIVO';\r\n    let planoConcluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CONCLUIDO';\r\n    let planoCancelado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CANCELADO';\r\n    let planoDeletado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'EXCLUIDO';\r\n    let planoArquivado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ARQUIVADO';\r\n    let planoSuspenso = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'SUSPENSO';\r\n    let planoPossuiEntrega = planoTrabalho.entregas.length > 0;\r\n    if(botao == this.BOTAO_INFORMACOES && this.auth.hasPermissionTo(\"MOD_PTR\")) {\r\n      /*\r\n          (RN_PTR_S) CONSULTAR\r\n          Todos os participantes podem visualizar todos os planos de trabalho, desde que possuam a capacidade \"MOD_PTR\";\r\n      */\r\n      return true;\r\n    } else {\r\n      if(planoDeletado) return false; else {\r\n        switch (botao) {\r\n          case this.BOTAO_ALTERAR:\r\n            /*\r\n              (RN_PTR_M) Condições para que um Plano de Trabalho possa ser alterado:\r\n              O usuário logado precisa possuir a capacidade \"MOD_PTR_EDT\", o Plano de Trabalho precisa ser válido (ou seja, nem deletado, nem arquivado, nem estar no status CANCELADO), e:\r\n                  - estando com o status 'INCLUIDO', o usuário logado precisa ser o participante do plano ou o gestor da Unidade Executora;\r\n                  - estando com o status 'AGUARDANDO_ASSINATURA', o usuário logado precisa ser um dos que já assinaram o TCR e todas as assinaturas tornam-se sem efeito;\r\n                  - estando com o status 'ATIVO', o usuário precisa ser gestor da Unidade Executora e possuir a capacidade MOD_PTR_EDT_ATV. Após alterado, o Plano de Trabalho precisa ser repactuado (novo TCR), e o plano retorna ao status 'AGUARDANDO_ASSINATURA';\r\n            */\r\n            let condition1 = this.auth.hasPermissionTo(\"MOD_PTR_EDT\");\r\n            let condition2 = this.planoTrabalhoService.isValido(planoTrabalho);\r\n            let condition3 = planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\r\n            let condition4 = planoAguardandoAssinatura && usuarioJaAssinouTCR;\r\n            let condition5 = planoAtivo && usuarioEhGestorUnidadeExecutora && this.auth.hasPermissionTo(\"MOD_PTR_EDT_ATV\");\r\n            return condition1 && condition2 && (condition3 || condition4 || condition5);\r\n          case this.BOTAO_ARQUIVAR:\r\n            /*\r\n              (RN_PTR_N) ARQUIVAR\r\n              O plano precisa estar com o status CONCLUIDO ou CANCELADO, não ter sido arquivado, e:\r\n                - o usuário logado precisa ser o participante ou o gestor da Unidade Executora;\r\n            */\r\n            return (planoConcluido || planoCancelado) && !planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\r\n          case this.BOTAO_ASSINAR:\r\n            /*\r\n              (RN_PTR_O) ASSINAR\r\n                - o plano precisa possuir ao menos uma entrega, e:\r\n                - o plano precisa estar com o status INCLUIDO, e:\r\n                  - o usuário logado precisa ser o participante do plano ou o gestor da sua Unidade Executora, e\r\n                  - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\r\n                - ou o plano precisa estar com o status AGUARDANDO_ASSINATURA, e:\r\n                  - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\r\n            */\r\n            let condicao1 = usuarioEhParticipante || usuarioEhGestorUnidadeExecutora;\r\n            let condicao2 = assinaturaUsuarioEhExigida && !usuarioJaAssinouTCR;\r\n            return planoPossuiEntrega && ((planoIncluido && condicao1 && condicao2) || (planoAguardandoAssinatura && condicao2));\r\n          case this.BOTAO_ATIVAR:\r\n            /*\r\n              (RN_PTR_P) ATIVAR\r\n              O plano precisa estar no status 'INCLUIDO', e\r\n                  - o usuário logado precisa ser o participante do plano ou gestor da Unidade Executora, e\r\n                  - nenhuma assinatura no TCR deve ser exigida pelo programa, e\r\n                  - o plano de trabalho precisa ter ao menos uma entrega;        \r\n            */\r\n            return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && !assinaturasExigidas?.todas?.length && planoPossuiEntrega;\r\n          case this.BOTAO_CANCELAR_ASSINATURA:\r\n            /*\r\n              (RN_PTR_Q) CANCELAR ASSINATURA\r\n              O plano precisa estar no status 'AGUARDANDO_ASSINATURA'; e\r\n                - o usuário logado precisa já ter assinado o TCR;\r\n            */\r\n            return planoAguardandoAssinatura && usuarioJaAssinouTCR;\r\n          case this.BOTAO_CANCELAR_PLANO:\r\n            /*\r\n              (RN_PTR_R) CANCELAR \r\n              O usuário logado precisa possuir a capacidade \"MOD_PTR_CNC\", e\r\n                - o plano não pode ter sido deletado e precisa estar em um dos seguintes status: INCLUIDO, AGUARDANDO_ASSINATURA, ATIVO ou CONCLUIDO; e\r\n                - o usuário logado precisa ser gestor da Unidade Executora;\r\n            */\r\n            return this.auth.hasPermissionTo(\"MOD_PTR_CNC\") && ['INCLUIDO', 'AGUARDANDO_ASSINATURA', 'ATIVO', 'CONCLUIDO'].includes(planoTrabalho.status);\r\n          case this.BOTAO_DESARQUIVAR:\r\n            /*\r\n              (RN_PTR_T) DESARQUIVAR\r\n              O plano precisa estar arquivado, e:\r\n                  - o usuário logado precisa ser o participante ou gestor da Unidade Executora;\r\n            */\r\n            return planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\r\n          case this.BOTAO_ENVIAR_ASSINATURA:\r\n            /*\r\n              (RN_PTR_U) ENVIAR PARA ASSINATURA\r\n              O plano precisa estar com o status INCLUIDO; e\r\n                - o usuário logado precisa ser o participante do plano ou gestor da sua Unidade Executora; e\r\n                - se a assinatura do usuário logado for exigida, ele já deve ter assinado o TCR; e\r\n                - devem existir assinaturas exigíveis ainda pendentes; e\r\n                - o plano precisa possuir ao menos uma entrega;\r\n            */\r\n            return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && (!assinaturaUsuarioEhExigida || usuarioJaAssinouTCR) && haAssinaturasFaltantes && planoPossuiEntrega;\r\n          case this.BOTAO_REATIVAR:\r\n            /*\r\n              (RN_PTR_W) REATIVAR\r\n              O plano precisa estar com o status SUSPENSO, e\r\n                - o usuário logado precisa ser gestor da Unidade Executora;\r\n            */\r\n            return planoSuspenso && usuarioEhGestorUnidadeExecutora;\r\n          case this.BOTAO_SUSPENDER:\r\n            /*\r\n              (RN_PTR_X) SUSPENDER\r\n              O plano precisa estar com o status ATIVO, e\r\n                - o usuário logado precisa ser gestor da Unidade Executora;\r\n            */\r\n            return planoAtivo && usuarioEhGestorUnidadeExecutora;\r\n          case this.BOTAO_TERMOS:\r\n            return this.auth.hasPermissionTo(\"MOD_PTR\");\r\n          case this.BOTAO_CONSOLIDACOES:\r\n            return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: true}), novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Arquivar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public assinar(planoTrabalho?: PlanoTrabalho) {\r\n    const planosIds = planoTrabalho ? [planoTrabalho.id] : Object.keys(this.grid!.multiselected || {});\r\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\r\n    if (!documentos.length) {\r\n      this.dialog.alert(\"Selecione\", \"Nenhum plano selecionado!\");\r\n    } else {\r\n      this.documentoService.sign(documentos).then(() => (this.grid?.query || this.query!).refreshId(planoTrabalho!.id));\r\n    }\r\n  }\r\n\r\n  public ativar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.ativar.bind(this.dao) },\r\n      title: \"Ativar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  // COMPLEMENTAR A IMPLEMENTAÇÃO DO MÉTODO\r\n  public cancelarAssinatura(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.cancelarAssinatura.bind(this.dao) },\r\n      title: \"Cancelar Assinatura do TCR\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarPlano(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: true}), exigeJustificativa: true, novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\r\n      title: \"Cancelar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: false}), novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Desarquivar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public report(planoTrabalho: PlanoTrabalho, codigo: string){\r\n    const consulta: any = { \r\n      id: planoTrabalho.id, \r\n      join: [\"unidade.entidade\",\r\n      \"unidade.gestor.usuario:id\",\r\n      \"usuario\",\r\n      \"programa.template_tcr\",\r\n      \"tipo_modalidade\",\r\n      \"entregas.plano_entrega_entrega.entrega\",\r\n      \"entregas.plano_entrega_entrega.plano_entrega:id,unidade_id\",\r\n      \"entregas.plano_entrega_entrega.plano_entrega.unidade\",\r\n      \"entregas.entrega\"] }\r\n    this.grid?.buildRowReport(codigo, consulta)\r\n  }\r\n\r\n  public enviarParaAssinatura(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.enviarParaAssinatura.bind(this.dao) },\r\n      title: \"Disponibilizar Plano de Trabalho para assinatura\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public reativar(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\r\n      title: \"Reativar Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public suspender(planoTrabalho: PlanoTrabalho) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\r\n      title: \"Suspender Plano de Trabalho\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public canAdd() {\r\n    return this.auth.hasPermissionTo('MOD_PTR_INCL');\r\n    //IMPLEMENTAR AS DEMAIS CONDIÇÕES NA VALIDAÇÃO DO FORM *******************\r\n    /*\r\n    (RN_PTR_V) INCLUIR/INSERIR\r\n    O usuário logado precisa possuir a capacidade \"MOD_PTR_INCL\", e:\r\n        - o usuário logado precisa ser um participante do PGD, habilitado, ou ser gestor da Unidade Executora do plano; (RN_PTR_B); e\r\n        - o participante do plano precisa estar lotado em uma das áreas de trabalho do usuário logado, ou este deve possuir a capacidade MOD_PTR_USERS_INCL; e\r\n        - o participante do plano precisa estar lotado na Unidade Executora, ou o usuário logado possuir a capacidade MOD_PTR_INCL_SEM_LOT; e\r\n        - o novo Plano de Trabalho não pode apresentar período conflitante com outro plano já existente para a mesma Unidade Executora e mesmo participante, ou o usuário logado possuir a capacidade MOD_PTR_INTSC_DATA\r\n    */\r\n  }\r\n\r\n}\r\n\r\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [relatorios]=\"relatorios\"\r\n    [hasAdd]=\"canAdd()\" [hasEdit]=\"false\" [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\" [multiselectAllFields]=\"multiselectAllFields\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"4\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\" [attr.maxlength]=250></input-text>\r\n            <input-search [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_TRABALHO_STATUS\" [control]=\"filter!.controls.status\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivados\" [control]=\"filter!.controls.arquivados\" labelInfo=\"Listar também os planos de trabalho arquivados\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n          <input-search [size]=\"6\" [control]=\"filter!.controls.tipo_modalidade_id\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\r\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n      </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\r\n            <ng-template let-header=\"header\" #titleNumero>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ '#' + row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\r\n            <ng-template let-header=\"header\" #titleUsuario>\r\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order><br>Programa\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnUsuario>\r\n                <span> {{row.usuario?.nome || \"\"}}</span><br>\r\n                <badge color=\"light\" icon=\"bi bi-file-bar-graph\" [label]=\"row.programa?.nome || ''\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column title=\"Programa\" [template]=\"columnPrograma\">\r\n            <ng-template let-row=\"row\" #columnPrograma>\r\n                <span> {{row.programa?.nome || \"\"}}</span>\r\n                <badge color=\"blue\" icon=\"bi bi-file-bar-graph\" [label]=\"row.programa?.nome || ''\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\r\n            <ng-template let-row=\"row\" #columnUnidade>\r\n                <span> {{row.unidade?.sigla || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\r\n            <ng-template let-row=\"row\" #columnModalidade>\r\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\r\n            <ng-template let-header=\"header\" #titleVigencia>\r\n              Vigência de<br><order by=\"data_inicio\" [header]=\"header\">Início</order>a<order by=\"data_fim\" [header]=\"header\">Fim</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnInicioVigencia>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}} <br> {{ \" até \"+dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\r\n            <ng-template let-row=\"row\" #documento>\r\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\r\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <report>\r\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\r\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\r\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\r\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio)}}</ng-template></column>\r\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim)}}</ng-template></column>\r\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\r\n    </report>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n"],"names":["GridComponent","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","PlanoTrabalho","PageListBase","PlanoTrabalhoService","DocumentoService","UtilService","i0","ɵɵelementStart","ɵɵlistener","PlanoTrabalhoListComponent_toolbar_1_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r39","ctx_r38","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","filter","controls","agrupar","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","row_r44","entregas","length","ɵɵtemplate","PlanoTrabalhoListComponent_column_14_ng_template_1_span_0_Template","row_r47","PlanoTrabalhoListComponent_column_14_ng_template_1_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoListComponent_column_14_ng_template_3_Template","ctx_r1","lex","translate","_r40","_r42","header_r48","row_r49","numero","header_r50","row_r51","usuario","nome","programa","row_r52","unidade","sigla","row_r53","tipo_modalidade","header_r54","ctx_r17","dao","getDateFormatted","row_r55","data_inicio","data_fim","row_r56","documento","PlanoTrabalhoListComponent_ng_template_40_badge_2_Template","PlanoTrabalhoListComponent_ng_template_40_badge_3_Template","ctx_r21","lookup","getColor","PLANO_TRABALHO_STATUS","row_r57","status","getIcon","getValue","data_arquivamento","deleted_at","ɵɵtextInterpolate","row_r60","row_r61","matricula","row_r62","row_r63","row_r64","ctx_r33","util","getDateTimeFormatted","row_r65","ctx_r35","row_r66","row_r67","numero_processo","PlanoTrabalhoListComponent","constructor","injector","routeStatus","route","multiselectAllFields","relatorios","key","value","botoes","DATAS_FILTRO","filterValidate","control","controlName","result","data_filtro_fim","data_filtro_inicio","filterWhere","form","tipo_modalidade_id","push","data_filtro","trim","replace","unidade_id","arquivados","dynamicMultiselectMenu","multiselected","assinar","Object","keys","menu","entries","forEach","planoTrabalhoService","needSign","label","icon","onClick","bind","unidadeDao","get","programaDao","documentoDao","documentoService","utilService","usuarioDao","tipoModalidadeDao","title","code","fh","FormBuilder","default","Date","cdRef","join","groupBy","field","BOTAO_ALTERAR","color","edit","BOTAO_ARQUIVAR","arquivar","BOTAO_ASSINAR","BOTAO_ATIVAR","ativar","BOTAO_CANCELAR_ASSINATURA","cancelarAssinatura","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_DESARQUIVAR","desarquivar","BOTAO_ENVIAR_ASSINATURA","enviarParaAssinatura","BOTAO_INFORMACOES","consult","BOTAO_RELATORIO","row","report","BOTAO_TERMOS","go","navigate","id","modalClose","modalResult","grid","query","refreshId","metadata","metadados","BOTAO_CONSOLIDACOES","entityService","usuario_id","modal","BOTAO_REATIVAR","reativar","BOTAO_SUSPENDER","suspender","ngOnInit","minha_unidade","setValue","auth","dynamicOptions","botao","botaoAtendeCondicoes","dynamicButtons","planoTrabalho","situacaoPlano","filterClear","event","reloadFilter","assinaturasExigidas","todasAssinaturasExigidas","gestores_entidade","gestores_unidade_executora","gestores_unidade_lotacao","participante","assinaturasFaltantes","jaAssinaramTCR","haAssinaturasFaltantes","usuarioEhGestorUnidadeExecutora","isGestorUnidade","usuarioJaAssinouTCR","todas","includes","assinaturaUsuarioEhExigida","planoIncluido","usuarioEhParticipante","planoAguardandoAssinatura","planoAtivo","planoConcluido","planoCancelado","planoDeletado","planoArquivado","planoSuspenso","planoPossuiEntrega","hasPermissionTo","condition1","condition2","isValido","condition3","condition4","condition5","condicao1","condicao2","tipo","entity","assign","novoStatus","planosIds","documentos","items","x","documento_id","map","dialog","alert","sign","then","exigeJustificativa","codigo","consulta","buildRowReport","canAdd","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoTrabalhoListComponent_Query","rf","ctx","PlanoTrabalhoListComponent_Template_grid_select_0_listener","onSelect","PlanoTrabalhoListComponent_toolbar_1_Template","PlanoTrabalhoListComponent_column_14_Template","PlanoTrabalhoListComponent_ng_template_16_Template","PlanoTrabalhoListComponent_ng_template_18_Template","PlanoTrabalhoListComponent_ng_template_21_Template","PlanoTrabalhoListComponent_ng_template_23_Template","PlanoTrabalhoListComponent_ng_template_26_Template","PlanoTrabalhoListComponent_ng_template_29_Template","PlanoTrabalhoListComponent_ng_template_32_Template","PlanoTrabalhoListComponent_ng_template_34_Template","PlanoTrabalhoListComponent_ng_template_37_Template","PlanoTrabalhoListComponent_ng_template_40_Template","PlanoTrabalhoListComponent_ng_template_45_Template","PlanoTrabalhoListComponent_ng_template_48_Template","PlanoTrabalhoListComponent_ng_template_51_Template","PlanoTrabalhoListComponent_ng_template_54_Template","PlanoTrabalhoListComponent_ng_template_57_Template","PlanoTrabalhoListComponent_ng_template_60_Template","PlanoTrabalhoListComponent_ng_template_63_Template","PlanoTrabalhoListComponent_ng_template_66_Template","add","isModal","orderBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","ɵɵattribute","undefined","_r2","_r4","_r6","_r8","_r10","_r12","_r14","_r16","_r18","_r20","_r22","_r24","_r26","_r28","_r30","_r32","_r34","_r36","rowsLimit"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
>>>>>>> develop
