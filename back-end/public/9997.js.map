{"version":3,"file":"9997.js","mappings":"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","sources":["./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list/plano-trabalho-list.component.html"],"sourcesContent":["import { LookupItem } from '../../../../services/lookup.service';\nimport { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { FullRoute } from 'src/app/services/navigate.service';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'plano-trabalho-list',\n  templateUrl: './plano-trabalho-list.component.html',\n  styleUrls: ['./plano-trabalho-list.component.scss']\n})\nexport class PlanoTrabalhoListComponent extends PageListBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public static selectRoute?: FullRoute = { route: [\"gestao\", \"plano-trabalho\"] };\n  public unidadeDao: UnidadeDaoService;\n  public documentoDao: DocumentoDaoService;\n  public documentoService: DocumentoService;\n  public utilService: UtilService;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n  public multiselectAllFields: string[] = [\"tipo_modalidade_id\", \"usuario_id\", \"unidade_id\", \"documento_id\"];\n  public botoes: ToolbarButton[] = [];\n  public BOTAO_ALTERAR: ToolbarButton;\n  public BOTAO_ARQUIVAR: ToolbarButton;\n  public BOTAO_ASSINAR: ToolbarButton;\n  public BOTAO_ATIVAR: ToolbarButton;\n  public BOTAO_CANCELAR_ASSINATURA: ToolbarButton;\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\n  public BOTAO_DESARQUIVAR: ToolbarButton;\n  public BOTAO_ENVIAR_ASSINATURA: ToolbarButton;\n  public BOTAO_INFORMACOES: ToolbarButton;\n  public BOTAO_REATIVAR: ToolbarButton;\n  public BOTAO_SUSPENDER: ToolbarButton;\n  public BOTAO_TERMOS: ToolbarButton;\n  public BOTAO_CONSOLIDACOES: ToolbarButton;\n  public DATAS_FILTRO: LookupItem[] = [\n    { key: \"VIGENTE\", value: \"Vigente\" },\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\n    { key: \"INICIAM\", value: \"Iniciam\" },\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\n  ];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\n    this.utilService = injector.get<UtilService>(UtilService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    /* Inicializações */\n    this.title = this.lex.translate(\"Planos de Trabalho\");\n    this.code = \"MOD_PTR\";\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      usuario: { default: \"\" },\n      unidade_id: { default: null },\n      tipo_modalidade_id: { default: null },\n      data_filtro: { default: null },\n      data_filtro_inicio: { default: new Date() },\n      data_filtro_fim: { default: new Date() }\n    }, this.cdRef, this.filterValidate);\n    this.join = [\n      \"unidade.entidade\",\n      \"unidade.gestor.usuario:id\",\n      \"usuario\",\n      \"programa.template_tcr\",\n      \"documento.assinaturas.usuario:id,nome,url_foto\",\n      \"tipo_modalidade\",\n      \"entregas.plano_entrega_entrega.entrega\",\n      \"entregas.plano_entrega_entrega.plano_entrega:id,unidade_id\",\n      \"entregas.plano_entrega_entrega.plano_entrega.unidade\",\n      \"entregas.entrega\",\n      \"entregas.reacoes.usuario:id,nome,apelido\"\n    ];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: this.edit.bind(this) };\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    this.BOTAO_ASSINAR = { label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) };\n    this.BOTAO_ATIVAR = { label: \"Ativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.ativar.bind(this) };\n    this.BOTAO_CANCELAR_ASSINATURA = { label: \"Cancelar assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA ou INCLUIDO\"), onClick: this.cancelarAssinatura.bind(this) };\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    this.BOTAO_ENVIAR_ASSINATURA = { label: \"Enviar para assinatura\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"AGUARDANDO_ASSINATURA\"), onClick: this.enviarParaAssinatura.bind(this) };\n    this.BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\n    this.BOTAO_TERMOS = { label: \"Termos\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['uteis', 'documentos', 'TCR', row.id] }, { modalClose: (modalResult) => (this.grid?.query || this.query!).refreshId(row.id), metadata: this.planoTrabalhoService.metadados(row) })).bind(this) };\n    this.BOTAO_CONSOLIDACOES = { label: \"Consolidações\", icon: this.entityService.getIcon('PlanoTrabalhoConsolidacao'), onClick: ((row: PlanoTrabalho) => this.go.navigate({ route: ['gestao', 'plano-trabalho', 'consolidacao', row.usuario_id, row.id] }, { modalClose: (modalResult) => (this.grid?.query || this.query!).refreshId(row.id), modal: true })).bind(this) };\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", icon: this.lookup.getIcon(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_TRABALHO_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_ASSINAR, this.BOTAO_ATIVAR, this.BOTAO_CANCELAR_ASSINATURA, this.BOTAO_CANCELAR_PLANO,\n    this.BOTAO_DESARQUIVAR, this.BOTAO_ENVIAR_ASSINATURA, this.BOTAO_INFORMACOES, this.BOTAO_TERMOS, this.BOTAO_CONSOLIDACOES, this.BOTAO_REATIVAR, this.BOTAO_SUSPENDER];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    if (this.metadata?.minha_unidade) {\n      this.filter?.controls.unidade_id.setValue(this.auth.unidade?.id);\n    }\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    this.botoes.forEach(botao => {\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\n    });\n    return result;\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoTrabalho: PlanoTrabalho = row as PlanoTrabalho;\n    switch (this.planoTrabalhoService.situacaoPlano(planoTrabalho)) {\n      case 'INCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR)\n        else if (this.botaoAtendeCondicoes(this.BOTAO_ATIVAR, row)) result.push(this.BOTAO_ATIVAR)\n        else if (this.botaoAtendeCondicoes(this.BOTAO_ENVIAR_ASSINATURA, row)) result.push(this.BOTAO_ENVIAR_ASSINATURA);\n        /*         \n          - botões-padrão:\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;                  (quando for exigida apenas a assinatura do usuário logado no TCR)\n            - 'Ativar'. Condições para ser exibido: vide RN_PTR_P;                   (quando não for exigida nenhuma assinatura no TCR)\n            - 'Enviar para Assinatura'. Condições para ser exibido: vide RN_PTR_U;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \n        */\n        break;\n      case 'AGUARDANDO_ASSINATURA':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ASSINAR, row)) result.push(this.BOTAO_ASSINAR);\n        /**\n          - botões-padrão:\n            - 'Assinar'. Condições para ser exibido: vide RN_PTR_O;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'ATIVO':\n        /**\n          - botões-padrão:\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'CONCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        /**\n          - botões-padrão:\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S; \n        */\n        break;\n      case 'SUSPENSO':\n        /**\n          - botões-padrão:\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'ARQUIVADO':\n        /**\n          - botões-padrão:\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n      case 'CANCELADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        /**\n          - botões-padrão:\n            - 'Arquivar'. Condições para ser exibido: vide RN_PTR_N;\n            - 'Consultar'. Condições para ser exibido: vide RN_PTR_S;\n        */\n        break;\n    }\n    if (!result.length) result.push(this.BOTAO_INFORMACOES);\n    return result;\n  }\n\n  public filterValidate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\n      result = \"Maior que fim\";\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\n      result = \"Menor que início\";\n    }\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.usuario.setValue(\"\");\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.tipo_modalidade_id.setValue(null);\n    filter.controls.data_filtro.setValue(null);\n    filter.controls.data_filtro_inicio.setValue(new Date());\n    filter.controls.data_filtro_fim.setValue(new Date());\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    if (form.tipo_modalidade_id?.length) {\n      result.push([\"tipo_modalidade_id\", \"==\", form.tipo_modalidade_id]);\n    }\n    if (form.data_filtro) {\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\n    }\n    if (form.usuario?.length) {\n      result.push([\"usuario.nome\", \"like\", \"%\" + form.usuario.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.unidade_id?.length) {\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public dynamicMultiselectMenu = (multiselected: IIndexable): ToolbarButton[] => {\n    let assinar = !!Object.keys(multiselected).length;\n    let menu = [];\n    Object.entries(multiselected).forEach(([key, value]) => {\n      if (!this.planoTrabalhoService.needSign(value)) assinar = false;\n    });\n    if (assinar) menu.push({ label: \"Assinar\", icon: \"bi bi-pen\", onClick: this.assinar.bind(this) });\n    return menu;\n  }\n\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoTrabalho: PlanoTrabalho): boolean {\n    let assinaturasExigidas: string[] = planoTrabalho.assinaturasExigidas;\n    let assinaturasFaltantes: string[] = this.utilService.array_diff(planoTrabalho.assinaturasExigidas,planoTrabalho.jaAssinaramTCR);\n    let usuarioEhGestorUnidadeExecutora: boolean = this.auth.usuario?.id == planoTrabalho.unidade?.gestor?.usuario?.id;\n    let usuarioJaAssinouTCR: boolean = planoTrabalho.jaAssinaramTCR.includes(this.auth.usuario?.id!);\n    let assinaturaUsuarioEhExigida: boolean = planoTrabalho.assinaturasExigidas.includes(this.auth.usuario?.id!);\n    let planoIncluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'INCLUIDO';\n    let usuarioEhParticipante = this.auth.usuario?.id == planoTrabalho.usuario_id;\n    let planoAguardandoAssinatura = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'AGUARDANDO_ASSINATURA';\n    let planoAtivo = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ATIVO';\n    let planoConcluido = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CONCLUIDO';\n    let planoCancelado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'CANCELADO';\n    let planoArquivado = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'ARQUIVADO';\n    //let programaExigeOutrasAssinaturas = !!assinaturasExigidas.filter(a => a != this.auth.usuario?.id).length;\n    let planoSuspenso = this.planoTrabalhoService.situacaoPlano(planoTrabalho) == 'SUSPENSO';\n    let planoPossuiEntrega = planoTrabalho.entregas.length > 0;\n    switch (botao) {\n      case this.BOTAO_ALTERAR:\n        /*\n          (RN_PTR_M) Condições para que um Plano de Trabalho possa ser alterado:\n          O usuário logado precisa possuir a capacidade \"MOD_PTR_EDT\", o Plano de Trabalho precisa ser válido (ou seja, nem deletado, nem arquivado, nem estar no status CANCELADO), e:\n              - estando com o status 'INCLUIDO', o usuário logado precisa ser o participante do plano ou o gestor da Unidade Executora;\n              - estando com o status 'AGUARDANDO_ASSINATURA', o usuário logado precisa ser um dos que já assinaram o TCR e todas as assinaturas tornam-se sem efeito;\n              - estando com o status 'ATIVO', o usuário precisa ser gestor da Unidade Executora e possuir a capacidade MOD_PTR_EDT_ATV. Após alterado, o Plano de Trabalho precisa ser repactuado (novo TCR), e o plano retorna ao status 'AGUARDANDO_ASSINATURA';\n        */\n        let condition1 = this.auth.hasPermissionTo(\"MOD_PTR_EDT\");\n        let condition2 = this.planoTrabalhoService.isValido(planoTrabalho);\n        let condition3 = planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\n        let condition4 = planoAguardandoAssinatura && usuarioJaAssinouTCR;\n        let condition5 = planoAtivo && usuarioEhGestorUnidadeExecutora && this.auth.hasPermissionTo(\"MOD_PTR_EDT_ATV\");\n        return condition1 && condition2 && (condition3 || condition4 || condition5);\n      case this.BOTAO_ARQUIVAR:\n        /*\n          (RN_PTR_N) ARQUIVAR\n          O plano precisa estar com o status CONCLUIDO ou CANCELADO, não ter sido arquivado, e:\n            - o usuário logado precisa ser o participante ou o gestor da Unidade Executora;\n        */\n        return (planoConcluido || planoCancelado) && !planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\n      case this.BOTAO_ASSINAR:\n        /*\n          (RN_PTR_O) ASSINAR\n            - o plano precisa possuir ao menos uma entrega, e:\n            - o plano precisa estar com o status INCLUIDO, e:\n              - o usuário logado precisa ser o participante do plano ou o gestor da sua Unidade Executora, e\n              - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\n            - ou o plano precisa estar com o status AGUARDANDO_ASSINATURA, e:\n              - a assinatura do usuário logado precisa ser uma das exigidas pelo Programa de Gestão, e ele não ter ainda assinado;\n        */\n        let condicao1 = usuarioEhParticipante || usuarioEhGestorUnidadeExecutora;\n        let condicao2 = assinaturaUsuarioEhExigida && !usuarioJaAssinouTCR;\n        return planoPossuiEntrega && ((planoIncluido && condicao1 && condicao2) || (planoAguardandoAssinatura && condicao2));\n      case this.BOTAO_ATIVAR:\n        /*\n          (RN_PTR_P) ATIVAR\n          O plano precisa estar no status 'INCLUIDO', e\n              - o usuário logado precisa ser o participante do plano ou gestor da Unidade Executora, e\n              - nenhuma assinatura no TCR ser exigida pelo programa, e\n              - o plano de trabalho precisa ter ao menos uma entrega;        \n        */\n        return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && !assinaturasExigidas.length && planoPossuiEntrega;\n      case this.BOTAO_CANCELAR_ASSINATURA:\n        /*\n          (RN_PTR_Q) CANCELAR ASSINATURA\n          O plano precisa estar no status 'AGUARDANDO_ASSINATURA'; e\n            - o usuário logado precisa já ter assinado o TCR;\n        */\n        return planoAguardandoAssinatura && usuarioJaAssinouTCR;\n      case this.BOTAO_CANCELAR_PLANO:\n        /*\n          (RN_PTR_R) CANCELAR \n          O usuário logado precisa possuir a capacidade \"MOD_PTR_CNC\", e\n            - o plano precisa estar em um dos seguintes status: INCLUIDO, AGUARDANDO_ASSINATURA, ATIVO ou CONCLUIDO; e\n            - o usuário logado precisa ser gestor da Unidade Executora;\n        */\n        return this.auth.hasPermissionTo(\"MOD_PTR_CNC\") && ['INCLUIDO', 'AGUARDANDO_ASSINATURA', 'ATIVO', 'CONCLUIDO'].includes(planoTrabalho.status);\n      case this.BOTAO_INFORMACOES:\n        /*\n          (RN_PTR_S) CONSULTAR\n          Todos os participantes podem visualizar todos os planos de trabalho, desde que possuam a capacidade \"MOD_PTR\";\n        */\n        return this.auth.hasPermissionTo(\"MOD_PTR\");\n      case this.BOTAO_DESARQUIVAR:\n        /*\n          (RN_PTR_T) DESARQUIVAR\n          O plano precisa estar arquivado, e:\n              - o usuário logado precisa ser o participante ou gestor da Unidade Executora;\n        */\n        return planoArquivado && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora);\n      case this.BOTAO_ENVIAR_ASSINATURA:\n        /*\n          (RN_PTR_U) ENVIAR PARA ASSINATURA\n          O plano precisa estar com o status INCLUIDO; e\n            - o usuário logado precisa ser o participante do plano ou gestor da sua Unidade Executora; e\n            - se a assinatura do usuário logado for exigida, ele já deve ter assinado o TCR; e\n            - devem existir assinaturas exigíveis ainda pendentes; e\n            - o plano precisa possuir ao menos uma entrega;\n        */\n        return planoIncluido && (usuarioEhParticipante || usuarioEhGestorUnidadeExecutora) && (!assinaturaUsuarioEhExigida || usuarioJaAssinouTCR) && !!assinaturasFaltantes.length && planoPossuiEntrega;\n      case this.BOTAO_REATIVAR:\n        /*\n          (RN_PTR_W) REATIVAR\n          O plano precisa estar com o status SUSPENSO, e\n            - o usuário logado precisa ser gestor da Unidade Executora;\n        */\n        return planoSuspenso && usuarioEhGestorUnidadeExecutora;\n      case this.BOTAO_SUSPENDER:\n        /*\n          (RN_PTR_X) SUSPENDER\n          O plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade Executora;\n        */\n        return planoAtivo && usuarioEhGestorUnidadeExecutora;\n      case this.BOTAO_TERMOS:\n        return this.auth.hasPermissionTo(\"MOD_PTR\");\n      case this.BOTAO_CONSOLIDACOES:\n        return true;\n    }\n    return false;\n  }\n\n  public arquivar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: true}), novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Arquivar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public assinar(planoTrabalho?: PlanoTrabalho) {\n    const planosIds = planoTrabalho ? [planoTrabalho.id] : Object.keys(this.grid!.multiselected || {});\n    const documentos = this.grid!.items.filter(x => planosIds.includes(x.id) && x.documento_id?.length).map(x => x.documento);\n    if (!documentos.length) {\n      this.dialog.alert(\"Selecione\", \"Nenhum plano selecionado!\");\n    } else {\n      this.documentoService.sign(documentos).then(() => (this.grid?.query || this.query!).refreshId(planoTrabalho!.id));\n    }\n  }\n\n  public ativar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.ativar.bind(this.dao) },\n      title: \"Ativar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  // COMPLEMENTAR A IMPLEMENTAÇÃO DO MÉTODO\n  public cancelarAssinatura(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.cancelarAssinatura.bind(this.dao) },\n      title: \"Cancelar Assinatura do TCR\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public cancelarPlano(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: true}), novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\n      title: \"Cancelar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public desarquivar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: Object.assign({},planoTrabalho, {arquivar: false}), novoStatus: planoTrabalho.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Desarquivar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public enviarParaAssinatura(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"AGUARDANDO_ASSINATURA\", onClick: this.dao!.enviarParaAssinatura.bind(this.dao) },\n      title: \"Disponibilizar Plano de Trabalho para assinatura\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public reativar(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\n      title: \"Reativar Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public suspender(planoTrabalho: PlanoTrabalho) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoTrabalho\", entity: planoTrabalho, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\n      title: \"Suspender Plano de Trabalho\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoTrabalho.id);\n        };\n      }\n    });\n  }\n\n  public canAdd() {\n    return this.auth.hasPermissionTo('MOD_PTR_INCL');\n    //IMPLEMENTAR AS DEMAIS CONDIÇÕES NA VALIDAÇÃO DO FORM *******************\n    /*\n    (RN_PTR_V) INCLUIR/INSERIR\n    O usuário logado precisa possuir a capacidade \"MOD_PTR_INCL\", e:\n        - o usuário logado precisa ser um participante do PGD, habilitado, ou ser gestor da Unidade Executora do plano; (RN_PTR_B); e\n        - o participante do plano precisa estar lotado em uma das áreas de trabalho do usuário logado, ou este deve possuir a capacidade MOD_PTR_USERS_INCL; e\n        - o participante do plano precisa estar lotado na Unidade Executora, ou o usuário logado possuir a capacidade MOD_PTR_INCL_SEM_LOT; e\n        - o novo Plano de Trabalho não pode apresentar período conflitante com outro plano já existente para a mesma Unidade Executora e mesmo participante, ou o usuário logado possuir a capacidade MOD_PTR_INTSC_DATA\n    */\n  }\n\n}\n\n","<grid multiselect [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"canAdd()\" [hasEdit]=\"false\" [dynamicMultiselectMenu]=\"dynamicMultiselectMenu.bind(this)\" [multiselectAllFields]=\"multiselectAllFields\">\n    <toolbar *ngIf=\"!selectable\">\n      <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\n    </toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"6\" [label]=\"lex.translate('Usuário')\" controlName=\"usuario\" [control]=\"filter!.controls.usuario\" placeholder=\"Usuário\" [attr.maxlength]=250></input-text>\n            <input-search [size]=\"6\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n        </div>\n        <div class=\"row\">\n          <input-search [size]=\"6\" [control]=\"filter!.controls.tipo_modalidade_id\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\n          <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\n          <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\n      </div>\n    </filter>\n    <columns>\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\n            <ng-template let-row=\"row\" #columnEntregas>\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\n                <plano-trabalho-list-entrega [entity]=\"row\"></plano-trabalho-list-entrega>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleNumero\" [template]=\"columnNumero\" [minWidth]=\"50\">\n            <ng-template let-header=\"header\" #titleNumero>\n                <order by=\"numero\" [header]=\"header\">#ID</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnNumero>\n                <span> {{ '#' + row.numero}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleUsuario\" [template]=\"columnUsuario\">\n            <ng-template let-header=\"header\" #titleUsuario>\n                <order by=\"usuario.nome\" [header]=\"header\">Usuário</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnUsuario>\n                <span> {{row.usuario?.nome || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Programa\" [template]=\"columnPrograma\">\n            <ng-template let-row=\"row\" #columnPrograma>\n                <span> {{row.programa?.nome || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\n            <ng-template let-row=\"row\" #columnUnidade>\n                <span> {{row.unidade?.sigla || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Modalidade\" [template]=\"columnModalidade\">\n            <ng-template let-row=\"row\" #columnModalidade>\n                <span> {{row.tipo_modalidade?.nome || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleVigencia\" [template]=\"columnInicioVigencia\">\n            <ng-template let-header=\"header\" #titleVigencia>\n              Vigência de<br><order by=\"data_inicio\" [header]=\"header\">Início</order>a<order by=\"data_fim\" [header]=\"header\">Fim</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnInicioVigencia>\n                <span> {{dao!.getDateFormatted(row.data_inicio)}} <br> {{ \" até \"+dao!.getDateFormatted(row.data_fim)}}</span>\n            </ng-template>\n        </column>\n        <column [title]=\"'Termo\\nAssinaturas'\" [template]=\"documento\">\n            <ng-template let-row=\"row\" #documento>\n                <documentos-badge signatures noRounded withLink [documento]=\"row.documento\" [maxWidth]=\"200\"></documentos-badge>\n                <!--badge *ngIf=\"row.documento\" color=\"light\" icon=\"bi bi-file-earmark-check\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.preview.bind(documentoService)\">\n                    <span [style.max-width.px]=\"200\" class=\"text-wrap\"><small><strong>#{{row.documento.numero}}</strong> - {{row.documento.titulo_documento}}</small></span>\n                    <separator *ngIf=\"row.documento?.assinaturas?.length\" transparent>\n                        <profile-picture *ngFor=\"let assinatura of row.documento!.assinaturas\" [url]=\"assinatura.usuario.url_foto\" [hint]=\"assinatura.usuario.nome\"></profile-picture>\n                    </separator>\n                </badge>\n                <badge *ngIf=\"row.documento?.numero_processo?.length\" [class]=\"'d-block'\" color=\"warning\" icon=\"bi bi-folder-symlink\" [rounded]=\"false\" [data]=\"row.documento\" [click]=\"documentoService.onDocumentoClick.bind(documentoService)\" [hint]=\"documentoService.documentoHint(row)\">\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\n                </badge>\n                < !--span *ngIf=\"row.documento?.numero_processo?.length\" class=\"badge bg-warning text-dark\" [attr.role]=\"row.documento?.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.documento?.numero_processo, row.documento?.numero_documento)\">\n                    <i [class]=\"'bi ' + (row.documento?.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\n                    {{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}\n                    <small *ngIf=\"row.documento?.numero_documento?.length\"><br>Sei nº {{row.documento?.numero_documento}}</small>\n                </span//-->\n            </ng-template>\n        </column>\n        <column title=\"Status\" [template]=\"columnStatus\">\n            <ng-template let-row=\"row\" #columnStatus>\n                <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, row.status)\"></badge><br>\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\n            </ng-template>\n        </column>\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\n    </columns>\n    <report>\n      <column title=\"Numero\" [template]=\"reportNumero\"><ng-template let-row=\"row\" #reportNumero>{{row.numero}}</ng-template></column>\n      <column title=\"Matricula usuário\" [template]=\"reportMatricula\"><ng-template let-row=\"row\" #reportMatricula>{{row.usuario?.matricula || \"\"}}</ng-template></column>\n      <column title=\"Programa\" [template]=\"reportPrograma\"><ng-template let-row=\"row\" #reportPrograma>{{row.programa?.nome || \"\"}}</ng-template></column>\n      <column title=\"Unidade\" [template]=\"reportUnidade\"><ng-template let-row=\"row\" #reportUnidade>{{row.unidade?.nome || \"\"}}</ng-template></column>\n      <column title=\"Modalidade\" [template]=\"reportModalidade\"><ng-template let-row=\"row\" #reportModalidade>{{row.tipo_modalidade?.nome || \"\"}}</ng-template></column>\n      <column title=\"Início vigência\" [template]=\"reportInicioVigencia\"><ng-template let-row=\"row\" #reportInicioVigencia>{{util.getDateTimeFormatted(row.data_inicio)}}</ng-template></column>\n      <column title=\"Fim vigência\" [template]=\"reportFimVigencia\"><ng-template let-row=\"row\" #reportFimVigencia>{{util.getDateTimeFormatted(row.data_fim)}}</ng-template></column>\n      <column title=\"Termo de Adesão\" [template]=\"reportTermoAdesao\"><ng-template let-row=\"row\" #reportTermoAdesao>{{row.documento?.numero_processo?.length ? row.documento?.numero_processo : \"Não atribuído\"}}</ng-template></column>\n    </report>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n"],"names":["GridComponent","DocumentoDaoService","PlanoTrabalhoDaoService","ProgramaDaoService","TipoModalidadeDaoService","UnidadeDaoService","UsuarioDaoService","PlanoTrabalho","PageListBase","PlanoTrabalhoService","DocumentoService","UtilService","i0","ɵɵelementStart","ɵɵlistener","PlanoTrabalhoListComponent_toolbar_1_Template_input_switch_change_1_listener","$event","ɵɵrestoreView","_r41","ctx_r40","ɵɵnextContext","ɵɵresetView","onAgruparChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","filter","controls","agrupar","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","row_r46","entregas","length","ɵɵtemplate","PlanoTrabalhoListComponent_column_12_ng_template_1_span_0_Template","row_r49","PlanoTrabalhoListComponent_column_12_ng_template_1_Template","ɵɵtemplateRefExtractor","PlanoTrabalhoListComponent_column_12_ng_template_3_Template","ctx_r1","lex","translate","_r42","_r44","header_r50","row_r51","numero","header_r52","row_r53","usuario","nome","row_r54","programa","row_r55","unidade","sigla","row_r56","tipo_modalidade","header_r57","ctx_r19","dao","getDateFormatted","row_r58","data_inicio","data_fim","row_r59","documento","PlanoTrabalhoListComponent_ng_template_41_badge_2_Template","ctx_r23","lookup","getColor","PLANO_TRABALHO_STATUS","row_r60","status","getIcon","getValue","data_arquivamento","ɵɵtextInterpolate","row_r62","row_r63","matricula","row_r64","row_r65","row_r66","ctx_r35","util","getDateTimeFormatted","row_r67","ctx_r37","row_r68","row_r69","numero_processo","PlanoTrabalhoListComponent","_","selectRoute","route","constructor","injector","routeStatus","multiselectAllFields","botoes","DATAS_FILTRO","key","value","filterValidate","control","controlName","result","data_filtro_fim","data_filtro_inicio","filterWhere","form","tipo_modalidade_id","push","data_filtro","trim","replace","unidade_id","dynamicMultiselectMenu","multiselected","assinar","Object","keys","menu","entries","forEach","planoTrabalhoService","needSign","label","icon","onClick","bind","unidadeDao","get","programaDao","documentoDao","documentoService","utilService","usuarioDao","tipoModalidadeDao","title","code","fh","FormBuilder","default","Date","cdRef","join","groupBy","field","BOTAO_ALTERAR","color","edit","BOTAO_ARQUIVAR","arquivar","BOTAO_ASSINAR","BOTAO_ATIVAR","ativar","BOTAO_CANCELAR_ASSINATURA","cancelarAssinatura","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_DESARQUIVAR","desarquivar","BOTAO_ENVIAR_ASSINATURA","enviarParaAssinatura","BOTAO_INFORMACOES","consult","BOTAO_TERMOS","row","go","navigate","id","modalClose","modalResult","grid","query","refreshId","metadata","metadados","BOTAO_CONSOLIDACOES","entityService","usuario_id","modal","BOTAO_REATIVAR","reativar","BOTAO_SUSPENDER","suspender","ngOnInit","minha_unidade","setValue","auth","dynamicOptions","botao","botaoAtendeCondicoes","dynamicButtons","planoTrabalho","situacaoPlano","filterClear","event","reloadFilter","assinaturasExigidas","assinaturasFaltantes","array_diff","jaAssinaramTCR","usuarioEhGestorUnidadeExecutora","gestor","usuarioJaAssinouTCR","includes","assinaturaUsuarioEhExigida","planoIncluido","usuarioEhParticipante","planoAguardandoAssinatura","planoAtivo","planoConcluido","planoCancelado","planoArquivado","planoSuspenso","planoPossuiEntrega","condition1","hasPermissionTo","condition2","isValido","condition3","condition4","condition5","condicao1","condicao2","tipo","entity","assign","novoStatus","planosIds","documentos","items","x","documento_id","map","dialog","alert","sign","then","canAdd","_2","ɵɵdirectiveInject","Injector","_3","selectors","viewQuery","PlanoTrabalhoListComponent_Query","rf","ctx","PlanoTrabalhoListComponent_Template_grid_select_0_listener","onSelect","PlanoTrabalhoListComponent_toolbar_1_Template","PlanoTrabalhoListComponent_column_12_Template","PlanoTrabalhoListComponent_ng_template_14_Template","PlanoTrabalhoListComponent_ng_template_16_Template","PlanoTrabalhoListComponent_ng_template_19_Template","PlanoTrabalhoListComponent_ng_template_21_Template","PlanoTrabalhoListComponent_ng_template_24_Template","PlanoTrabalhoListComponent_ng_template_27_Template","PlanoTrabalhoListComponent_ng_template_30_Template","PlanoTrabalhoListComponent_ng_template_33_Template","PlanoTrabalhoListComponent_ng_template_35_Template","PlanoTrabalhoListComponent_ng_template_38_Template","PlanoTrabalhoListComponent_ng_template_41_Template","PlanoTrabalhoListComponent_ng_template_46_Template","PlanoTrabalhoListComponent_ng_template_49_Template","PlanoTrabalhoListComponent_ng_template_52_Template","PlanoTrabalhoListComponent_ng_template_55_Template","PlanoTrabalhoListComponent_ng_template_58_Template","PlanoTrabalhoListComponent_ng_template_61_Template","PlanoTrabalhoListComponent_ng_template_64_Template","PlanoTrabalhoListComponent_ng_template_67_Template","add","isModal","orderBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","ɵɵattribute","undefined","_r2","_r4","_r6","_r8","_r10","_r12","_r14","_r16","_r18","_r20","_r22","_r24","_r26","_r28","_r30","_r32","_r34","_r36","_r38","rowsLimit"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}