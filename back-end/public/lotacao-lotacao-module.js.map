{"version":3,"sources":["./src/app/modules/configuracoes/usuario/lotacao/lotacao-form/lotacao-form.component.ts","./src/app/modules/configuracoes/usuario/lotacao/lotacao-form/lotacao-form.component.html","./src/app/modules/configuracoes/usuario/lotacao/lotacao-routing.module.ts","./src/app/modules/configuracoes/usuario/lotacao/lotacao.module.ts","./src/app/dao/lotacao-dao.service.ts","./src/app/modules/configuracoes/usuario/lotacao/lotacao-list/lotacao-list.component.ts","./src/app/modules/configuracoes/usuario/lotacao/lotacao-list/lotacao-list.component.html"],"names":[],"mappings":"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","file":"lotacao-lotacao-module.js","sourcesContent":["import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CidadeDaoService } from 'src/app/dao/cidade-dao.service';\nimport { LotacaoDaoService } from 'src/app/dao/lotacao-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Lotacao } from 'src/app/models/lotacao.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { Usuario } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-lotacao-form',\n  templateUrl: './lotacao-form.component.html',\n  styleUrls: ['./lotacao-form.component.scss']\n})\n\n\nexport class LotacaoFormComponent extends PageFormBase<Lotacao, LotacaoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public usuarioDao: UsuarioDaoService;\n\n  constructor(public injector: Injector) {\n    super(injector, Lotacao, LotacaoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.modalWidth = 700;\n    this.form = this.fh.FormBuilder({\n      principal: {default: \"\"},\n      unidade_id: {default: \"\"},\n      usuario_id: {default: \"\"}\n     // usuario_id: {default: this.urlParams!.get(\"usuario_id\")!}\n    }, this.cdRef, this.validate);\n    this.join = [\"usuario\", \"unidade\"];\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n    if(['usuario_id', 'unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }\n\n  public async loadData(entity: Lotacao, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    await Promise.all ([\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\n      this.unidade?.loadSearch(entity.unidade || entity.unidade_id)\n    ]);\n    form.patchValue(this.util.fillForm(formValue, entity));\n  }\n\n  public initializeData(form: FormGroup): void {\n    this.entity = new Lotacao();\n    this.entity.usuario_id = this.urlParams!.get(\"usuario_id\")!;\n    this.loadData(this.entity, form);\n  }\n\n  public saveData(form: IIndexable): Promise<Lotacao> {\n    return new Promise<Lotacao>((resolve, reject) => {\n      const lotacao = this.util.fill(new Lotacao(), this.entity!);\n      resolve(this.util.fillForm(lotacao, this.form!.value));\n    });\n  }\n\n  public titleEdit = (entity: Lotacao): string => {\n    return \"Editando \";// + (entity?.usuario_id || \"\");\n  }\n}\n\n","<editable-form [title]=\"isModal ? '' : title\" [form]=\"form!\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div class=\"row\">\n        <input-search #usuario [size]=\"12\" label=\"Usuário\" disabled controlName=\"usuario_id\" [control]=\"form!.controls.usuario_id\" [dao]=\"usuarioDao\"></input-search>\n    </div>\n    <div class=\"row\">\n        <input-search #unidade [size]=\"10\" label=\"Unidade\" controlName=\"unidade_id\" [control]=\"form!.controls.unidade_id\" [dao]=\"unidadeDao\" [selectRoute]=\"{route: ['configuracoes', 'unidade']}\"></input-search>\n        <input-switch [size]=\"2\" label=\"Principal\" controlName=\"principal\" [control]=\"form!.controls.principal\"></input-switch>\n    </div>\n</editable-form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { LotacaoFormComponent } from './lotacao-form/lotacao-form.component';\nimport { LotacaoListComponent } from './lotacao-list/lotacao-list.component';\n\nconst routes: Routes = [\n  { path: '', component: LotacaoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lotação\" } },\n  { path: 'new', component: LotacaoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\n  { path: ':id/edit', component: LotacaoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LotacaoRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LotacaoRoutingModule } from './lotacao-routing.module';\nimport { LotacaoFormComponent } from './lotacao-form/lotacao-form.component';\nimport { LotacaoListComponent } from './lotacao-list/lotacao-list.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    LotacaoFormComponent,\n    LotacaoListComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    LotacaoRoutingModule\n  ]\n})\nexport class LotacaoModule { }\n","import { Injectable, Injector } from '@angular/core';\nimport { Lotacao } from '../models/lotacao.model';\nimport { DaoBaseService } from './dao-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LotacaoDaoService extends DaoBaseService<Lotacao> {\n\n  constructor(protected injector: Injector) { \n    super(\"Lotacao\", injector);\n    //this.searchFields = [\"nome\"];\n  }\n\n}\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { LotacaoDaoService } from 'src/app/dao/lotacao-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { Lotacao } from 'src/app/models/lotacao.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\n\n@Component({\n  selector: 'app-lotacao-list',\n  templateUrl: './lotacao-list.component.html',\n  styleUrls: ['./lotacao-list.component.scss']\n})\nexport class LotacaoListComponent extends PageListBase<Lotacao, LotacaoDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public usuarioDao: UsuarioDaoService;\n  public unidadeDao: UnidadeDaoService;\n\n  constructor(public injector: Injector) {\n    super(injector, Lotacao, LotacaoDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n\n    /* Inicializações */\n    this.title = \"Lotações\";\n    this.join = [\"usuario\", \"unidade\"];\n    this.modalWidth = 500;\n    this.filter = this.fh.FormBuilder({\n      principal: {default: \"\"},\n      unidade_id: {default: \"\"},\n      usuario_id: {default: \"\"}\n    });\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    const usuarioId = this.urlParams!.get(\"usuario_id\")!;\n    this.addParams = {usuario_id: usuarioId};\n    this.usuarioDao.getById(usuarioId).then(usuario => {\n      this.title = \"Lotações do \" + this.lex.noun(\"usuário\") + \" \" + this.util.apelidoOuNome(usuario!);\n      this.cdRef.detectChanges();\n    });\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    result.push([\"usuario_id\", \"=\", this.urlParams?.get(\"usuario_id\")]);\n\n    return result;\n  }\n}\n\n","<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [add]=\"add\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\n    <toolbar></toolbar>\n    <filter hidden [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"filterCollapsed\"></filter> \n    <columns>\n        <column title=\"Unidade\" [template]=\"columnUnidade\">\n            <ng-template let-row=\"row\" #columnUnidade>\n                <strong>{{row.unidade.sigla}}</strong><br>\n                <span><i *ngIf=\"row.principal\" class=\"bi bi-bookmark-star\"></i> {{row.unidade.nome}} </span>\n            </ng-template>\n        </column>\n        <column type=\"switch\" title=\"Principal\" field=\"principal\"></column>\n        <column type=\"options\" [onEdit]=\"edit\" [onDelete]=\"delete\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>"],"sourceRoot":"webpack:///"}