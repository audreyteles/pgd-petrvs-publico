{"version":3,"file":"177.js","mappings":";;;;;;;;;;;;;;AAAoC;AAQ9B,MAAOC,mBAAoB,SAAQD,6CAAI;EAwB3CE,YAAmBC,IAAU;IAAI,KAAK,EAAE;IAnBjC,KAAAC,SAAS,GAAkC,EAAE;IAC7C,KAAAC,SAAS,GAAkC,EAAE;IAE7C,KAAAC,WAAW,GAAS,IAAIC,IAAI,EAAE;IAC9B,KAAAC,QAAQ,GAAgB,IAAI;IAC5B,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAAC,IAAI,GAAiB,EAAE;IACvB,KAAAC,SAAS,GAAiB,EAAE;IAC5B,KAAAC,kBAAkB,GAAW,GAAG;IAChC,KAAAC,mBAAmB,GAAW,CAAC;IAC/B,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,WAAW,GAAiB,EAAE,CAAC,CAAC;IAEhC,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,cAAc,GAAkB,IAAI;IACpC,KAAAC,gBAAgB,GAAkB,IAAI;IAEH,IAAI,CAACC,cAAc,CAAClB,IAAI,CAAC;EAAE;;;;;;;;;;;;;;;;AC/BnC;AAoB9B,MAAOmB,YAAa,SAAQtB,6CAAI;EAyBpCE,YAAmBC,IAAU;IAAI,KAAK,EAAE;IAjBjC,KAAAoB,QAAQ,GAA0B,EAAE,CAAC,CAAsB;IAC3D,KAAAC,gBAAgB,GAA0B,EAAE,CAAC,CAAc;IAE3D,KAAAlB,WAAW,GAAS,IAAIC,IAAI,EAAE,CAAC,CAA4B;IAC3D,KAAAC,QAAQ,GAAgB,IAAI,CAAC,CAA8B;IAC3D,KAAAiB,IAAI,GAAW,EAAE,CAAC,CAAyC;IAG3D,KAAAC,SAAS,GAAsCC,SAAS,CAAC,CAAE;IAC3D,KAAAC,MAAM,GAAuB,UAAU,CAAC,CAAmB;IAE3D,KAAAV,UAAU,GAAW,EAAE;IACvB,KAAAE,gBAAgB,GAAkB,IAAI;IACtC,KAAAS,eAAe,GAAkB,IAAI;IACrC,KAAAC,eAAe,GAAkB,IAAI;IACrC,KAAAC,WAAW,GAAkB,IAAI;IAEE,IAAI,CAACV,cAAc,CAAClB,IAAI,CAAC;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5C0B;AAC1B;AAC6B;AACvB;AACC;AACC;AACT;AACF;AAEF;AACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7D,MAAOsC,+BAAgC,SAAQD,8EAAkD;EAYrGtC,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEpB,4EAAY,EAAEe,yFAAsB,CAAC;IADpC,KAAAK,QAAQ,GAARA,QAAQ;IAmCpB,KAAAC,QAAQ,GAAG,CAACC,OAAwB,EAAEC,WAAmB,KAAI;MAClE,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAI,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;QACpFH,MAAM,GAAG,aAAa;;MAExB,OAAOA,MAAM;IACf,CAAC;IAoBM,KAAAI,SAAS,GAAIC,MAAoB,IAAY;MAClD,OAAO,WAAW,GAAG,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,mBAAmB,CAAC,GAAG,IAAI,IAAIF,MAAM,EAAE1B,IAAI,IAAI,EAAE,CAAC;IAC5F,CAAC;IA7DC,IAAI,CAAC6B,UAAU,GAAGZ,QAAQ,CAACa,GAAG,CAAoBhB,8EAAiB,CAAC;IACpE,IAAI,CAACiB,WAAW,GAAGd,QAAQ,CAACa,GAAG,CAAqBjB,gFAAkB,CAAC;IACvE,IAAI,CAACmB,eAAe,GAAGf,QAAQ,CAACa,GAAG,CAAyBlB,yFAAsB,CAAC;IACnF,IAAI,CAACqB,cAAc,GAAGhB,QAAQ,CAACa,GAAG,CAAwBpB,uFAAqB,CAAC;IAChF,IAAI,CAACwB,4BAA4B,GAAGjB,QAAQ,CAACa,GAAG,CAAyBnB,wFAAsB,CAAC;IAChG,IAAI,CAACwB,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,EAAE,CAACC,WAAW,CAAC;MAC9BvC,IAAI,EAAE;QAAEwC,OAAO,EAAE;MAAE,CAAE;MACrB3D,WAAW,EAAE;QAAE2D,OAAO,EAAE;MAAE,CAAE;MAC5BzD,QAAQ,EAAE;QAAEyD,OAAO,EAAE;MAAE,CAAE;MACzBpC,eAAe,EAAE;QAAEoC,OAAO,EAAE;MAAI,CAAE;MAClCnC,eAAe,EAAE;QAAEmC,OAAO,EAAE;MAAI,CAAE;MAClC/C,UAAU,EAAE;QAAE+C,OAAO,EAAE,IAAI,CAACC,IAAI,CAACC,OAAO,EAAEC;MAAE,CAAE;MAC9ChD,gBAAgB,EAAE;QAAE6C,OAAO,EAAE;MAAI,CAAE;MACnClC,WAAW,EAAE;QAAEkC,OAAO,EAAE;MAAI,CAAE;MAC9BrC,MAAM,EAAE;QAAEqC,OAAO,EAAE;MAAa;KACjC,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAAC1B,QAAQ,CAAC;EAC/B;EAEA2B,QAAQA,CAAA;IACN,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAIC,YAAY,GAAG,IAAI,CAACC,QAAQ,EAAED,YAAY,GAAG,IAAI,CAACC,QAAQ,EAAED,YAA4B,GAAG,IAAI;IACnG,IAAGA,YAAY,EAAC;MACd,IAAI,CAACT,IAAI,CAACW,QAAQ,CAACrD,gBAAgB,CAACsD,QAAQ,CAACH,YAAY,CAACH,EAAE,CAAC;MAC7D,IAAI,CAACN,IAAI,CAACW,QAAQ,CAAChD,IAAI,CAACiD,QAAQ,CAACH,YAAY,CAAC9C,IAAI,CAAC;MACnD,IAAI,CAACqC,IAAI,CAACW,QAAQ,CAACnE,WAAW,CAACoE,QAAQ,CAACH,YAAY,CAACjE,WAAW,CAAC;MACjE,IAAI,CAACwD,IAAI,CAACW,QAAQ,CAACjE,QAAQ,CAACkE,QAAQ,CAACH,YAAY,CAAC/D,QAAQ,CAAC;MAC3D,IAAI,CAACsD,IAAI,CAACW,QAAQ,CAAC5C,eAAe,CAAC6C,QAAQ,CAACH,YAAY,CAAC1C,eAAe,CAAC;MACzE,IAAI,CAACiC,IAAI,CAACW,QAAQ,CAAC3C,eAAe,CAAC4C,QAAQ,CAACH,YAAY,CAACzC,eAAe,CAAC;;EAE7E;EAUa6C,QAAQA,CAACxB,MAAoB,EAAEW,IAAe;IAAA,IAAAc,KAAA;IAAA,OAAAC,mHAAA;MACzD,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAElB,IAAI,CAACd,KAAK,CAAC;MAC7Cc,IAAI,CAACmB,UAAU,CAACL,KAAI,CAACM,IAAI,CAACC,QAAQ,CAACL,SAAS,EAAE3B,MAAM,CAAC,CAAC;MACtDyB,KAAI,CAACP,KAAK,CAACe,aAAa,EAAE;IAAC;EAC7B;EAEaC,cAAcA,CAACvB,IAAe;IAAA,IAAAwB,MAAA;IAAA,OAAAT,mHAAA;MACzCS,MAAI,CAACX,QAAQ,CAACW,MAAI,CAACnC,MAAO,EAAEmC,MAAI,CAACxB,IAAK,CAAC;IAAC;EAC1C;EAEayB,QAAQA,CAACzB,IAAgB;IAAA,IAAA0B,MAAA;IAAA,OAAAX,mHAAA;MACpC,OAAO,IAAIY,OAAO,CAAe,CAACC,OAAO,EAAEC,MAAM,KAAI;QACnD,IAAIpB,YAAY,GAAGiB,MAAI,CAACN,IAAI,CAACU,IAAI,CAAC,IAAItE,4EAAY,EAAE,EAAEkE,MAAI,CAACrC,MAAO,CAAC;QACnEoB,YAAY,GAAGiB,MAAI,CAACN,IAAI,CAACC,QAAQ,CAACZ,YAAY,EAAEiB,MAAI,CAAC1B,IAAK,CAACd,KAAK,CAAC;QACjE0C,OAAO,CAACnB,YAAY,CAAC;MACvB,CAAC,CAAC;IAAC;EACL;EAMOsB,oBAAoBA,CAACC,KAAY;IACtC,IAAG,IAAI,CAAChC,IAAI,CAACW,QAAQ,CAACrD,gBAAgB,CAAC4B,KAAK,EAAC;MAC3C,IAAI,CAACc,IAAI,CAACW,QAAQ,CAAChD,IAAI,CAACiD,QAAQ,CAAC,IAAI,CAACH,YAAY,EAAEwB,cAAc,CAACtE,IAAI,CAAC;MACxE,IAAI,CAACqC,IAAI,CAACW,QAAQ,CAACnE,WAAW,CAACoE,QAAQ,CAAC,IAAI,CAACH,YAAY,EAAEwB,cAAc,CAACzF,WAAW,CAAC;MACtF,IAAI,CAACwD,IAAI,CAACW,QAAQ,CAACjE,QAAQ,CAACkE,QAAQ,CAAC,IAAI,CAACH,YAAY,EAAEwB,cAAc,CAACvF,QAAQ,CAAC;MAChF,IAAI,CAACsD,IAAI,CAACW,QAAQ,CAAC5C,eAAe,CAAC6C,QAAQ,CAAC,IAAI,CAACH,YAAY,EAAEwB,cAAc,CAAClE,eAAe,CAAC;MAC9F,IAAI,CAACiC,IAAI,CAACW,QAAQ,CAAC3C,eAAe,CAAC4C,QAAQ,CAAC,IAAI,CAACH,YAAY,EAAEwB,cAAc,CAACjE,eAAe,CAAC;MAC9F,IAAI,CAACgC,IAAI,CAACW,QAAQ,CAAC1C,WAAW,CAAC2C,QAAQ,CAAC,IAAI,CAACH,YAAY,EAAEwB,cAAc,CAAChE,WAAW,CAAC;;EAE1F;;SAtFWU,+BAAgC;;mBAAhCA,MAA+B,EAAAuD,gEAAA,CAAAA,oDAAA;AAAA;;QAA/BvD,MAA+B;EAAA0D,SAAA;EAAAC,SAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAC/BtE,2GAAqB;iEACrBC,iFAAa;iEACbC,8GAAoB;;;;;;;;;;;;;;;MCvBjC8D,6DAAA,uBAAqK;MAA9CA,yDAAA,oBAAAU,yEAAA;QAAA,OAAUH,GAAA,CAAAI,UAAA,EAAY;MAAA,EAAC,oBAAAC,yEAAA;QAAA,OAAWL,GAAA,CAAAM,QAAA,EAAU;MAAA,EAArB;MAC1Ib,6DAAA,UAAK;MAI2FA,yDAAA,oBAAAc,wEAAAC,MAAA;QAAA,OAAUR,GAAA,CAAAV,oBAAA,CAAAkB,MAAA,CAA4B;MAAA,EAAC;MAAUf,2DAAA,EAAe;MAKxJA,wDAAA,gBAAuB;MAC3BA,2DAAA,EAAM;MACNA,6DAAA,aAAiB;MACbA,wDAAA,oBAA2H;MAC/HA,2DAAA,EAAM;MACNA,6DAAA,aAAiB;MACbA,wDAAA,sBAAgI;MAEpIA,2DAAA,EAAM;MACNA,6DAAA,cAAsB;MAGVA,wDAAA,wBAA2H;MAC/HA,2DAAA,EAAM;MACNA,6DAAA,cAAiB;MACbA,wDAAA,wBAAuJ;MAE3JA,2DAAA,EAAM;MACNA,6DAAA,cAAiB;MACbA,wDAAA,wBAA8H;MAElIA,2DAAA,EAAM;;;MA/BPA,yDAAA,SAAAO,GAAA,CAAAzC,IAAA,CAAc,aAAAyC,GAAA,CAAAY,YAAA,WAAAZ,GAAA,CAAAa,OAAA,QAAAb,GAAA,CAAAc,KAAA;MAGWrB,wDAAA,GAAW;MAAXA,yDAAA,YAAW,QAAAO,GAAA,CAAA9C,eAAA,iBAAAuC,8DAAA,KAAAwB,GAAA,EAAAxB,8DAAA,KAAA0B,GAAA,GAAA1B,8DAAA,KAAA4B,GAAA,EAAA5B,8DAAA,KAAA6B,GAAA,EAAAtB,GAAA,CAAArC,IAAA,CAAAC,OAAA,CAAA2D,cAAA,cAAA9B,8DAAA,KAAA+B,GAAA,EAAA/B,8DAAA,KAAAgC,GAAA,EAAAzB,GAAA,CAAArC,IAAA,CAAAC,OAAA,CAAA2D,cAAA,GAAA9B,8DAAA,KAAAiC,GAAA;MAU3BjC,wDAAA,GAAW;MAAXA,yDAAA,YAAW;MAAyDA,0DAAA,kBAAoB;MAG7EA,wDAAA,GAAU;MAAVA,yDAAA,WAAU,UAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA,oBAAAkD,GAAA,CAAAjD,UAAA;MACZ0C,wDAAA,GAAU;MAAVA,yDAAA,WAAU;MAAqCA,0DAAA,kBAAoB;MAGlBA,wDAAA,GAAuB;MAAvBA,yDAAA,wBAAuB;MAE9DA,wDAAA,GAAW;MAAXA,yDAAA,YAAW,QAAAO,GAAA,CAAA/C,WAAA;MAGXwC,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAA5C,4BAAA;MACRqC,wDAAA,GAAU;MAAVA,yDAAA,WAAU,+BAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MAGZ2C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAA7C,cAAA;MACRsC,wDAAA,GAAU;MAAVA,yDAAA,WAAU,uBAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5B0C;AAEpB;AACC;AACgB;AAC1B;AAGa;AACd;AAEC;AAC2B;AACD;AAC3B;AAUJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICA/C2C,6DAAA,aAAsD;IAClDA,wDAAA,yCAAyL;IAE7LA,2DAAA,EAAM;;;;;IAF0DA,wDAAA,GAAmC;IAAnCA,yDAAA,YAAAyC,GAAA,kBAAAA,GAAA,CAAA1C,cAAA,CAAmC,uBAAA2C,MAAA,CAAA5E,IAAA,CAAAW,QAAA,CAAA9D,IAAA;IACzCqF,wDAAA,GAAmC;IAAnCA,yDAAA,YAAAyC,GAAA,kBAAAA,GAAA,CAAA1C,cAAA,CAAmC,uBAAA2C,MAAA,CAAA5E,IAAA,CAAAW,QAAA,CAAA7D,SAAA,YAAA8H,MAAA,CAAAC,iBAAA,CAAAC,IAAA,CAAAF,MAAA;;;;;IAejF1C,6DAAA,gBAA4C;IAAAA,qDAAA,gBAAS;IAAAA,2DAAA,EAAQ;;;;IAAnCA,yDAAA,WAAA8C,UAAA,CAAiB;;;;;IAG3C9C,6DAAA,WAAM;IAAAA,qDAAA,GAAsB;IAAAA,2DAAA,EAAO;;;;IAA7BA,wDAAA,GAAsB;IAAtBA,gEAAA,CAAAgD,OAAA,CAAAC,QAAA,kBAAAD,OAAA,CAAAC,QAAA,CAAAxH,IAAA,CAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAG5BuE,wDAAA,2BAAoU;;;;IAAtTA,yDAAA,YAAW,UAAAA,8DAAA,IAAAkD,IAAA,EAAAlD,8DAAA,IAAAmD,IAAA,EAAAC,OAAA,CAAAC,cAAA,WAAAD,OAAA,CAAAE,uBAAA,iBAAAtD,8DAAA,KAAAuD,IAAA,EAAAvD,8DAAA,IAAAwD,IAAA,GAAAxD,8DAAA,KAAAyD,IAAA,EAAAzD,8DAAA,IAAA0D,IAAA,EAAAN,OAAA,CAAAC,cAAA;;;;;IAb7CrD,6DAAA,cAAsE;IAClEA,wDAAA,2BAAsH;IACtHA,6DAAA,mBAC6I;IAGjIA,yDAAA,IAAA4D,8DAAA,iCAAA5D,qEAAA,CAEc;IACdA,yDAAA,IAAA8D,8DAAA,iCAAA9D,qEAAA,CAEc;IACdA,yDAAA,KAAA+D,+DAAA,kCAAA/D,qEAAA,CAEc;IAClBA,2DAAA,EAAS;IACTA,wDAAA,kBAAgC;IACpCA,2DAAA,EAAU;;;;;;;IAhBAA,wDAAA,GAAW;IAAXA,yDAAA,YAAW,QAAAgE,MAAA,CAAAC,eAAA;IACnBjE,wDAAA,GAAoC;IAApCA,yDAAA,YAAAgE,MAAA,CAAAlG,IAAA,CAAAW,QAAA,CAAArE,SAAA,CAAoC,SAAA4J,MAAA,CAAAE,aAAA,aAAAF,MAAA,CAAAG,OAAA,6CAAAH,MAAA,CAAAI,WAAA,CAAAxB,IAAA,CAAAoB,MAAA,aAAAA,MAAA,CAAAK,cAAA,CAAAzB,IAAA,CAAAoB,MAAA,WAAAA,MAAA,CAAAM,YAAA,CAAA1B,IAAA,CAAAoB,MAAA;IAG1BhE,wDAAA,GAA+B;IAA/BA,yDAAA,kBAAAuE,GAAA,CAA+B,aAAAC,IAAA,kBAAAC,IAAA;;;;;IAsB/BzE,6DAAA,gBAA4C;IAAAA,qDAAA,gBAAS;IAAAA,2DAAA,EAAQ;;;;IAAnCA,yDAAA,WAAA0E,UAAA,CAAiB;;;;;IAG3C1E,6DAAA,WAAM;IAAAA,qDAAA,GAAsB;IAAAA,2DAAA,EAAO;;;;IAA7BA,wDAAA,GAAsB;IAAtBA,gEAAA,CAAA2E,OAAA,CAAAC,QAAA,kBAAAD,OAAA,CAAAC,QAAA,CAAAnJ,IAAA,CAAsB;;;;;;;;;;;;;;;;IAG5BuE,wDAAA,2BAAqT;;;;IAAvSA,yDAAA,YAAW,UAAAA,8DAAA,IAAAkD,IAAA,EAAAlD,8DAAA,IAAA6E,IAAA,EAAAC,OAAA,CAAAC,aAAA,WAAAD,OAAA,CAAAE,sBAAA,iBAAAhF,8DAAA,KAAAuD,IAAA,EAAAvD,8DAAA,IAAAiF,IAAA,GAAAjF,8DAAA,KAAAyD,IAAA,EAAAzD,8DAAA,IAAAkF,IAAA,EAAAJ,OAAA,CAAAC,aAAA;;;;;IAb7C/E,6DAAA,cAAqE;IACjEA,wDAAA,2BAAoH;IACpHA,6DAAA,mBACyG;IAG7FA,yDAAA,IAAAmF,8DAAA,iCAAAnF,qEAAA,CAEc;IACdA,yDAAA,IAAAoF,8DAAA,iCAAApF,qEAAA,CAEc;IACdA,yDAAA,KAAAqF,+DAAA,kCAAArF,qEAAA,CAEc;IAClBA,2DAAA,EAAS;IACTA,wDAAA,kBAAsF;IAC1FA,2DAAA,EAAU;;;;;;;IAhBAA,wDAAA,GAAW;IAAXA,yDAAA,YAAW,QAAAsF,MAAA,CAAA5H,cAAA;IACnBsC,wDAAA,GAAoC;IAApCA,yDAAA,YAAAsF,MAAA,CAAAxH,IAAA,CAAAW,QAAA,CAAApE,SAAA,CAAoC,SAAAiL,MAAA,CAAAC,aAAA,aAAAD,MAAA,CAAAnB,OAAA,6CAAAmB,MAAA,CAAAE,WAAA,CAAA5C,IAAA,CAAA0C,MAAA,aAAAA,MAAA,CAAAG,cAAA,CAAA7C,IAAA,CAAA0C,MAAA,WAAAA,MAAA,CAAAI,YAAA,CAAA9C,IAAA,CAAA0C,MAAA;IAG1BtF,wDAAA,GAAgC;IAAhCA,yDAAA,kBAAA2F,IAAA,CAAgC,aAAAC,IAAA,kBAAAC,IAAA;IAWjB7F,wDAAA,GAAqD;IAArDA,yDAAA,mBAAAsF,MAAA,CAAAQ,uBAAA,CAAAlD,IAAA,CAAA0C,MAAA,EAAqD;;;;;;;;;;;;;;;;;;;ADrC1F,MAAOS,gCAAiC,SAAQvJ,6EAAgE;EAgCpHtC,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEzC,2FAAmB,EAAEkI,wGAA6B,CAAC;IADlD,KAAAzF,QAAQ,GAARA,QAAQ;IATpB,KAAAsJ,gBAAgB,GAAiB,EAAE;IAOnC,KAAAC,sBAAsB,GAAa,EAAE;IA6DrC,KAAAtJ,QAAQ,GAAG,CAACC,OAAwB,EAAEC,WAAmB,KAAI;MAClE,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAI,CAAC,WAAW,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,EAAE;QAC3C,IAAG,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;UACzBH,MAAM,GAAG,aAAa;SACvB,MAAM,IAAG,IAAI,CAACoJ,OAAQ,CAACnG,cAAc,IAAK,IAAI,CAACmG,OAAQ,CAACnG,cAA0B,CAACtF,SAAS,IAAImC,OAAO,CAACI,KAAK,EAAE;UAC9GF,MAAM,GAAG,8DAA8D;;OAE1E,MAAM,IAAI,CAAC,qBAAqB,EAAE,WAAW,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,EAAED,OAAO,CAACI,KAAK,IAAI,CAAC,IAAIJ,OAAO,CAACI,KAAK,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;QAC/HH,MAAM,GAAG,aAAa;OACvB,MAAM,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,EAAED,OAAO,CAACI,KAAK,GAAG,CAAC,IAAIJ,OAAO,CAACI,KAAK,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;QACxHH,MAAM,GAAG,aAAa;OACvB,MAAM,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;QAC7EH,MAAM,GAAG,oCAAoC;OAC9C,MAAM,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;QAC7EH,MAAM,GAAG,yBAAyB;OACnC,MAAM,IAAI,CAAC,aAAa,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACsJ,GAAG,EAAEC,aAAa,CAACxJ,OAAO,CAACI,KAAK,CAAC,EAAE;QAC/FF,MAAM,GAAG,UAAU;OACpB,MAAM,IAAI,CAAC,UAAU,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACsJ,GAAG,EAAEC,aAAa,CAACxJ,OAAO,CAACI,KAAK,CAAC,EAAE;QAC5FF,MAAM,GAAG,UAAU;OACpB,MAAM,IAAI,CAAC,0BAA0B,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,EAAE;QACjE,IAAG,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAEH,MAAM,GAAG,0CAA0C;QAC9E,IAAGF,OAAO,CAACI,KAAK,EAAEC,MAAM,IAAI,IAAI,CAACoJ,aAAa,EAAEC,KAAK,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,wBAAwB,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACxC,aAAa,CAACzF,QAAQ,CAACgI,wBAAwB,CAACzJ,KAAK,CAAC,EAAEF,MAAM,GAAG,oCAAoC;OAC/M,MAAM,IAAI,CAAC,oBAAoB,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,EAAE;QAC3D,IAAG,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAEH,MAAM,GAAG,6CAA6C;QACjF,IAAGF,OAAO,CAACI,KAAK,EAAEC,MAAM,IAAI,IAAI,CAAC0J,aAAa,EAAEL,KAAK,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,kBAAkB,CAAC,CAACF,QAAQ,CAAC,IAAI,CAACnB,aAAa,CAAC9G,QAAQ,CAACmI,kBAAkB,CAAC5J,KAAK,CAAC,EAAEF,MAAM,GAAG,oCAAoC;;MAEpM,OAAOA,MAAM;IACf,CAAC;IAEM,KAAA+J,cAAc,GAAI/I,IAAgB,IAAI;MAC3C,IAAIgJ,MAAM,GAAG,IAAI,CAAChJ,IAAI,EAAEW,QAAQ,CAACnE,WAAW,CAAC0C,KAAK;MAClD,IAAI+J,GAAG,GAAG,IAAI,CAACjJ,IAAI,EAAEW,QAAQ,CAACjE,QAAQ,CAACwC,KAAK;MAC5C,IAAG,IAAI,CAACqJ,aAAa,EAAEW,OAAO,EAAE;QAC9B,IAAI,CAACC,IAAK,CAACC,MAAM,GAAG,WAAW;QAC/B,OAAO,6CAA6C;;MAEtD,IAAI,IAAI,CAACP,aAAa,EAAEK,OAAO,EAAE;QAC/B,IAAI,CAACC,IAAK,CAACC,MAAM,GAAG,WAAW;QAC/B,OAAO,6CAA6C;;MAEtD,IAAG,CAAC,IAAI,CAACf,GAAG,EAAEC,aAAa,CAACU,MAAM,CAAC,EAAE;QACnC,OAAO,yBAAyB;OACjC,MAAM,IAAG,CAAC,IAAI,CAACX,GAAG,EAAEC,aAAa,CAACW,GAAG,CAAC,EAAE;QACvC,OAAO,sBAAsB;OAC9B,MAAM,IAAGD,MAAM,GAAGC,GAAG,EAAE;QACtB,OAAO,uDAAuD;OAC/D,MAAM,IAAG,IAAI,CAACxI,YAAY,IAAIuI,MAAM,GAAG,IAAI,CAACvI,YAAY,CAACjE,WAAW,EAAE;QACrE,OAAO,2CAA2C,GAAG,IAAI,CAAC8C,GAAG,CAACC,SAAS,CAAC,qBAAqB,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC6B,IAAI,CAACiI,gBAAgB,CAAC,IAAI,CAAC5I,YAAY,CAACjE,WAAW,CAAC;OAClK,MAAM,IAAG,IAAI,CAACiE,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC/D,QAAQ,IAAIuM,GAAG,GAAG,IAAI,CAACxI,YAAY,CAAC/D,QAAQ,EAAE;QAC7F,OAAO,qCAAqC,GAAG,IAAI,CAAC4C,GAAG,CAACC,SAAS,CAAC,qBAAqB,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC6B,IAAI,CAACiI,gBAAgB,CAAC,IAAI,CAAC5I,YAAY,CAAC/D,QAAQ,CAAC;;MAE1J,OAAOmB,SAAS;IAClB,CAAC;IA9GC,IAAI,CAACsI,eAAe,GAAGvH,QAAQ,CAACa,GAAG,CAAyBnB,wFAAsB,CAAC;IACnF,IAAI,CAACkB,UAAU,GAAGZ,QAAQ,CAACa,GAAG,CAAoBhB,8EAAiB,CAAC;IACpE,IAAI,CAAC6K,UAAU,GAAG1K,QAAQ,CAACa,GAAG,CAAoB6E,8EAAiB,CAAC;IACpE,IAAI,CAACzE,4BAA4B,GAAGjB,QAAQ,CAACa,GAAG,CAAyBnB,wFAAsB,CAAC;IAChG,IAAI,CAACiL,sBAAsB,GAAG3K,QAAQ,CAACa,GAAG,CAAgC4E,wGAA6B,CAAC;IACxG,IAAI,CAACzE,cAAc,GAAGhB,QAAQ,CAACa,GAAG,CAAwBpB,uFAAqB,CAAC;IAChF,IAAI,CAAC6I,sBAAsB,GAAGtI,QAAQ,CAACa,GAAG,CAAgC+E,yGAA6B,CAAC;IACxG,IAAI,CAACgB,uBAAuB,GAAG5G,QAAQ,CAACa,GAAG,CAAiC8E,yGAA8B,CAAC;IAC3G,IAAI,CAACiF,mBAAmB,GAAG5K,QAAQ,CAACa,GAAG,CAAsBiF,wEAAmB,CAAC;IACjF,IAAI,CAAC3E,UAAU,GAAG,GAAG;IACrB,IAAI,CAACD,IAAI,GAAG,CAAC,SAAS,CAAC;IACvB,IAAI,CAACE,IAAI,GAAG,IAAI,CAACC,EAAE,CAACC,WAAW,CAAC;MAC9BvD,SAAS,EAAE;QAAEwD,OAAO,EAAE;MAAE,CAAE;MAC1B3D,WAAW,EAAE;QAAE2D,OAAO,EAAE,IAAI1D,IAAI;MAAE,CAAE;MACpCC,QAAQ,EAAE;QAAEyD,OAAO,EAAE,IAAI1D,IAAI;MAAE,CAAE;MACjCI,IAAI,EAAE;QAAEsD,OAAO,EAAE;MAAG,CAAE;MACtBrD,SAAS,EAAE;QAAEqD,OAAO,EAAE;MAAI,CAAE;MAC5B7C,gBAAgB,EAAE;QAAE6C,OAAO,EAAE;MAAE,CAAE;MACjC9C,cAAc,EAAE;QAAE8C,OAAO,EAAE;MAAI,CAAE;MACjChD,UAAU,EAAE;QAAEgD,OAAO,EAAE;MAAI,CAAE;MAC7BpD,kBAAkB,EAAE;QAAEoD,OAAO,EAAE;MAAG,CAAE;MACpCnD,mBAAmB,EAAE;QAAEmD,OAAO,EAAE;MAAI,CAAE;MACtC/C,UAAU,EAAE;QAAE+C,OAAO,EAAE;MAAI,CAAE;MAC7BlD,YAAY,EAAE;QAAEkD,OAAO,EAAE;MAAI,CAAE;MAC/B7D,SAAS,EAAE;QAAE6D,OAAO,EAAE;MAAE,CAAE;MAC1B5D,SAAS,EAAE;QAAE4D,OAAO,EAAE;MAAE,CAAE;MAC1BsJ,gBAAgB,EAAE;QAAEtJ,OAAO,EAAE;MAAE,CAAE;MACjCpC,eAAe,EAAE;QAAEoC,OAAO,EAAE;MAAI,CAAE;MAClCnC,eAAe,EAAE;QAAEmC,OAAO,EAAE;MAAI,CAAE;MAClCuJ,WAAW,EAAE;QAAEvJ,OAAO,EAAE;MAAI,CAAE;MAC9BgF,QAAQ,EAAE;QAAEhF,OAAO,EAAE;MAAI;KAC1B,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAAC1B,QAAQ,CAAC;IAC7B,IAAI,CAACuH,aAAa,GAAG,IAAI,CAACnG,EAAE,CAACC,WAAW,CAAC;MACvCyI,wBAAwB,EAAE;QAAExI,OAAO,EAAE;MAAI;KAC1C,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAAC1B,QAAQ,CAAC;IAC7B,IAAI,CAAC4I,aAAa,GAAG,IAAI,CAACxH,EAAE,CAACC,WAAW,CAAC;MACvC4I,kBAAkB,EAAE;QAAE3I,OAAO,EAAE;MAAI;KACpC,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAAC1B,QAAQ,CAAC;EAC/B;EAEO2B,QAAQA,CAAA;IAAA,IAAAM,KAAA;IACb,KAAK,CAACN,QAAQ,EAAE;IAChB,IAAIH,OAAO,GAAmB,IAAI;IAClC,IAAI,CAACI,YAAY,GAAG,IAAI,CAACC,QAAQ,EAAEiJ,aAAa;IAChD,IAAI,CAACpE,cAAc,GAAG,IAAI,CAAC7E,QAAQ,EAAE3C,eAAe;IACpD,IAAI,CAACkJ,aAAa,GAAG,IAAI,CAACvG,QAAQ,EAAE1C,eAAe;IACnD,IAAI,CAAC4L,SAAS,GAAG,IAAI,CAAClJ,QAAQ,EAAEtD,UAAU;IAC1C,IAAI,CAACiC,MAAM,GAAG,IAAI,CAACqB,QAAQ,EAAE0H,OAA8B;IAC3DrH,mHAAA,CAAC,aAAW;MACV,MAAMD,KAAI,CAACT,OAAO,EAAEwJ,UAAU,CAAC/I,KAAI,CAAC8I,SAAS,CAAC;MAC9C,MAAM9I,KAAI,CAACgJ,YAAY,EAAED,UAAU,CAAC/I,KAAI,CAACyE,cAAc,CAAC;MACxD,MAAMzE,KAAI,CAACiJ,WAAW,EAAEF,UAAU,CAAC/I,KAAI,CAACmG,aAAa,CAAC;MACtD5G,OAAO,GAAGS,KAAI,CAAC8I,SAAS,EAAEzK,MAAM,SAAU2B,KAAI,CAACtB,UAAU,CAACwK,OAAO,CAAClJ,KAAI,CAAC8I,SAAU,CAAa,GAAG,IAAI;MACrG9I,KAAI,CAACqH,sBAAsB,GAAG9H,OAAO,EAAE4J,IAAI,EAAEC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;IACxE,CAAC,EAAC,CAAE;EACN;EAyDatJ,QAAQA,CAACxB,MAA2B,EAAEW,IAAe;IAAA,IAAAwB,MAAA;IAAA,OAAAT,mHAAA;MAChE,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAElB,IAAI,CAACd,KAAK,CAAC;MAC7CsC,MAAI,CAAC4I,eAAe,CAACpK,IAAI,CAACd,KAAK,CAAC;MAChC,IAAI;QAACrC,IAAI;QAAEC,SAAS;QAAE,GAAGuN;MAAa,CAAC,GAAGhL,MAAM;MAChD,MAAMmC,MAAI,CAAC4G,OAAO,EAAEyB,UAAU,CAACxK,MAAM,CAAC+I,OAAO,IAAIpH,SAAS,CAAC7D,UAAU,EAAE,KAAK,CAAC;MAC7E6C,IAAI,CAACmB,UAAU,CAACK,MAAI,CAACJ,IAAI,CAACC,QAAQ,CAACL,SAAS,EAAEqJ,aAAa,CAAC,CAAC;MAC7DrK,IAAI,CAACW,QAAQ,CAAC9D,IAAI,CAAC+D,QAAQ,CAACY,MAAI,CAACgI,mBAAmB,CAACc,QAAQ,CAACjL,MAAM,CAACxC,IAAI,CAAC,CAAC;MAC3EmD,IAAI,CAACW,QAAQ,CAAC7D,SAAS,CAAC8D,QAAQ,CAACY,MAAI,CAACgI,mBAAmB,CAACc,QAAQ,CAACjL,MAAM,CAACvC,SAAS,CAAC,CAAC;MACrFkD,IAAI,CAACW,QAAQ,CAACrE,SAAS,CAACsE,QAAQ,CAACvB,MAAM,CAAC/C,SAAS,CAAC;MAClD0D,IAAI,CAACW,QAAQ,CAACpE,SAAS,CAACqE,QAAQ,CAACvB,MAAM,CAAC9C,SAAS,CAAC;IAAC;EACrD;EAEagF,cAAcA,CAACvB,IAAe;IAAA,IAAA0B,MAAA;IAAA,OAAAX,mHAAA;MACzCW,MAAI,CAACrC,MAAO,CAACjC,UAAU,GAAGsE,MAAI,CAACtB,IAAI,CAACC,OAAQ,CAACC,EAAE;MAC/CoB,MAAI,CAACrC,MAAO,CAACgB,OAAO,GAAGqB,MAAI,CAACtB,IAAI,CAACC,OAAO;MACxC,MAAMqB,MAAI,CAACb,QAAQ,CAACa,MAAI,CAACrC,MAAO,EAAEW,IAAI,CAAC;IAAC;EAC1C;EAEOyB,QAAQA,CAACzB,IAAgB;IAC9B,OAAO,IAAI2B,OAAO,CAAiB,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrD,IAAIuG,OAAO,GAAwB,IAAI,CAAChH,IAAI,CAACU,IAAI,CAAC,IAAI3F,2FAAmB,EAAE,EAAE,IAAI,CAACkD,MAAO,CAAC;MAC1F,IAAI,CAACkJ,aAAa,EAAEgC,OAAO,EAAE;MAC7B,IAAI,CAAC1B,aAAa,EAAE0B,OAAO,EAAE;MAC7B,IAAI;QAAC1N,IAAI;QAAEC,SAAS;QAAE,GAAG0N;MAAY,CAAC,GAAG,IAAI,CAACxK,IAAK,CAACd,KAAK;MACzDkJ,OAAO,GAAG,IAAI,CAAChH,IAAI,CAACC,QAAQ,CAAC+G,OAAO,EAAEoC,YAAY,CAAC;MACnDpC,OAAO,CAAC/H,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE4B,cAAc;MAC9CmG,OAAO,CAACA,OAAO,GAAG,IAAI,CAACA,OAAO,EAAEnG,cAAc;MAC9CmG,OAAO,CAACvL,IAAI,GAAG,IAAI,CAAC2M,mBAAmB,CAACiB,eAAe,CAACrC,OAAO,CAACA,OAAQ,EAAEvL,IAAI,CAAC;MAC/EuL,OAAO,CAACtL,SAAS,GAAG,IAAI,CAAC0M,mBAAmB,CAACiB,eAAe,CAACrC,OAAO,CAACA,OAAQ,EAAEtL,SAAS,CAAC;MACzF8E,OAAO,CAAC,IAAI6C,8EAAc,CAAC2D,OAAO,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;EAEOvD,iBAAiBA,CAAC3F,KAAU,EAAEkJ,OAAiB;IACpD,IAAI,CAACsC,gBAAgB,EAAE;EACzB;EAEOA,gBAAgBA,CAAA;IACrB,MAAM7N,IAAI,GAAG,IAAI,CAACmD,IAAI,EAAEW,QAAQ,CAAC9D,IAAI,CAACqC,KAAK;IAC3C,MAAMpC,SAAS,GAAG,IAAI,CAACkD,IAAI,EAAEW,QAAQ,CAAC7D,SAAS,CAACoC,KAAK;IACrD,IAAIrC,IAAI,IAAIC,SAAS,EAAE;MACrB,IAAI6N,cAAc,GAAG,CAACC,KAAK,CAAC9N,SAAS,CAAC,GAAG,CAAEA,SAAS,GAAGD,IAAI,GAAI,GAAG,EAAEgO,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;MACvF,IAAI,CAAC7K,IAAI,EAAEW,QAAQ,CAAC3D,mBAAmB,CAAC4D,QAAQ,CAAC+J,cAAc,CAAC;;EAEpE;EAEOG,uBAAuBA,CAACC,GAAQ;IACrC,IAAI/L,MAAM,GAAoB,EAAE;IAChC,IAAImG,QAAQ,GAAyB4F,GAA2B;IAChE/L,MAAM,CAACgM,IAAI,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,OAAO,EAAGjG,QAA8B,IAAI;QAAG,IAAI,CAACoB,cAAc,CAACpB,QAAQ,CAAC;MAAE;IAAC,CAAE,CAAC;IACpK,OAAOnG,MAAM;EACf;EAEOqM,uBAAuBA,CAACN,GAAQ;IACrC,IAAI/L,MAAM,GAAoB,EAAE;IAChC,IAAImG,QAAQ,GAAyB4F,GAA2B;IAChE,OAAO/L,MAAM;EACf;EAEOgJ,uBAAuBA,CAAC+C,GAAQ;IACrC,IAAI/L,MAAM,GAAoB,EAAE;IAChC,IAAI8H,QAAQ,GAAwBiE,GAA0B;IAC9D,OAAO/L,MAAM;EACf;EAEasH,WAAWA,CAAA;IAAA,IAAAgF,MAAA;IAAA,OAAAvK,mHAAA;MACtB,OAAO;QACLT,EAAE,EAAEgL,MAAI,CAACjD,GAAI,CAACkD,YAAY,EAAE;QAC5BC,OAAO,EAAE;OACI;IAAC;EAClB;EAEajF,cAAcA,CAACwE,GAAQ;IAAA,IAAAU,MAAA;IAAA,OAAA1K,mHAAA;MAClC,IAAIwJ,OAAO,SAASkB,MAAI,CAACC,MAAM,CAACnB,OAAO,CAAC,UAAU,EAAE,2BAA2B,CAAC;MAChF,IAAIA,OAAO,EAAEQ,GAAG,CAACS,OAAO,GAAG,QAAQ;MACnC,OAAO,KAAK;IAAC;EACf;EAEahF,YAAYA,CAACxG,IAAe,EAAE+K,GAAQ;IAAA,IAAAY,MAAA;IAAA,OAAA5K,mHAAA;MACjD,IAAI6K,WAAW,GAAGb,GAAkC;MACpD,IAAI/K,IAAK,CAACW,QAAQ,CAACgI,wBAAwB,CAACzJ,KAAK,CAACC,MAAM,IAAIwM,MAAI,CAACE,aAAc,CAACC,YAAY,EAAE;QAC5FF,WAAW,CAACjD,wBAAwB,GAAG3I,IAAK,CAACW,QAAQ,CAACgI,wBAAwB,CAACzJ,KAAK;QACpF0M,WAAW,CAACzG,QAAQ,GAAGwG,MAAI,CAACE,aAAc,CAACC,YAAa,CAACzM,MAAM;QAC/D,OAAOuM,WAAW;;MAEpB,OAAO/N,SAAS;IAAC;EACnB;EAEa6J,WAAWA,CAAA;IAAA,IAAAqE,MAAA;IAAA,OAAAhL,mHAAA;MACtB,OAAO;QACLT,EAAE,EAAEyL,MAAI,CAAC1D,GAAI,CAACkD,YAAY,EAAE;QAC5BC,OAAO,EAAE;OACI;IAAC;EAClB;EAEa7D,cAAcA,CAACoD,GAAQ;IAAA,IAAAiB,MAAA;IAAA,OAAAjL,mHAAA;MAClC,IAAIwJ,OAAO,SAASyB,MAAI,CAACN,MAAM,CAACnB,OAAO,CAAC,UAAU,EAAE,2BAA2B,CAAC;MAChF,IAAIA,OAAO,EAAEQ,GAAG,CAACS,OAAO,GAAG,QAAQ;MACnC,OAAO,KAAK;IAAC;EACf;EAEa5D,YAAYA,CAAC5H,IAAe,EAAE+K,GAAQ;IAAA,IAAAkB,MAAA;IAAA,OAAAlL,mHAAA;MACjD,IAAI6K,WAAW,GAAGb,GAAkC;MACpD,IAAI/K,IAAK,CAACW,QAAQ,CAACmI,kBAAkB,CAAC5J,KAAK,CAACC,MAAM,IAAI8M,MAAI,CAACC,aAAc,CAACJ,YAAY,EAAE;QACtFF,WAAW,CAAC9C,kBAAkB,GAAG9I,IAAK,CAACW,QAAQ,CAACmI,kBAAkB,CAAC5J,KAAK;QACxE0M,WAAW,CAAC9E,QAAQ,GAAGmF,MAAI,CAACC,aAAc,CAACJ,YAAa,CAACzM,MAAM;QAC/D,OAAOuM,WAAW;;MAEpB,OAAO/N,SAAS;IAAC;EACnB;EAEauM,eAAeA,CAACW,GAAQ;IAAA,IAAAoB,OAAA;IAAA,OAAApL,mHAAA;MACnC,IAAIoL,OAAI,CAAC/D,OAAO,IAAI+D,OAAI,CAAC/D,OAAO,CAAC0D,YAAY,EAAE;QAC7C,MAAMM,WAAW,GAAGD,OAAI,CAAC/D,OAAO,EAAEnG,cAAyB;QAC3D,MAAMoK,aAAa,GAAGD,WAAW,CAACE,cAAc;QAChD,IAAG,CAACH,OAAI,CAACnM,IAAK,CAACW,QAAQ,CAAChE,SAAS,CAACuC,KAAK,CAACC,MAAM,EAAE;UAC9CgN,OAAI,CAACnM,IAAK,CAACW,QAAQ,CAAChE,SAAS,CAACiE,QAAQ,CAACwL,WAAW,EAAEzP,SAAS,IAAI,EAAE,CAAC;;QAEtE,QAAQ0P,aAAa;UACnB,KAAK,aAAa;YAChBF,OAAI,CAACjE,gBAAgB,GAAGkE,WAAW,CAACG,kBAAkB,IAAI,EAAE;YAC5DJ,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC9D,IAAI,CAAC+D,QAAQ,CAACuL,OAAI,CAACjE,gBAAgB,CAAC/I,MAAM,GAAGgN,OAAI,CAACjE,gBAAgB,CAAC,CAAC,CAAC,CAACsE,GAAG,GAAG,IAAI,CAAC;YACrGL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC7D,SAAS,CAAC8D,QAAQ,CAACuL,OAAI,CAACjE,gBAAgB,CAAC/I,MAAM,GAAGgN,OAAI,CAACjE,gBAAgB,CAAC,CAAC,CAAC,CAACsE,GAAG,GAAG,IAAI,CAAC;YAC1G;UACF,KAAK,OAAO;YACVL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC9D,IAAI,CAAC+D,QAAQ,CAAC,EAAE,CAAC;YACrCuL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC7D,SAAS,CAAC8D,QAAQ,CAAC,CAAC,CAAC;YACzC;UACF,KAAK,YAAY;YACfuL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC9D,IAAI,CAAC+D,QAAQ,CAAC,EAAE,CAAC;YACrCuL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC7D,SAAS,CAAC8D,QAAQ,CAAC,CAAC,CAAC;YACzC;UACF,KAAK,aAAa;YAChBuL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC9D,IAAI,CAAC+D,QAAQ,CAAC,GAAG,CAAC;YACtCuL,OAAI,CAACnM,IAAI,EAAEW,QAAQ,CAAC7D,SAAS,CAAC8D,QAAQ,CAAC,CAAC,CAAC;YACzC;UACF;YACE;;QAEJuL,OAAI,CAACzB,gBAAgB,EAAE;;IACxB;EACH;;SA/RWzC,gCAAiC;;mBAAjCA,MAAgC,EAAA/F,gEAAA,CAAAA,oDAAA;AAAA;;QAAhC+F,MAAgC;EAAA5F,SAAA;EAAAC,SAAA,WAAAmK,uCAAAjK,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAChCtE,2GAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCpClCgE,6DAAA,uBAA+J;MAA9CA,yDAAA,oBAAAwK,0EAAA;QAAA,OAAUjK,GAAA,CAAAI,UAAA,EAAY;MAAA,EAAC,oBAAA8J,0EAAA;QAAA,OAAWlK,GAAA,CAAAM,QAAA,EAAU;MAAA,EAArB;MACpIb,6DAAA,iBAA0D;MAKqEA,yDAAA,oBAAA0K,yEAAA3J,MAAA;QAAA,OAAUR,GAAA,CAAA2H,eAAA,CAAAnH,MAAA,CAAuB;MAAA,EAAC;MAAoFf,2DAAA,EAAe;MAEpPA,6DAAA,aAAiB;MACbA,wDAAA,qBAA+J;MACnKA,2DAAA,EAAM;MACNA,6DAAA,cAAiB;MACbA,wDAAA,uBAA4Y;MAChZA,2DAAA,EAAM;MAEVA,6DAAA,qBAA0E;MAElEA,wDAAA,0BAAgK;MAEpKA,2DAAA,EAAM;MACNA,6DAAA,cAAiB;MACbA,wDAAA,4BAAyH;MAE7HA,2DAAA,EAAM;MAEVA,wDAAA,qBAA4C;MAC5CA,yDAAA,KAAA2K,gDAAA,kBAGM;MACN3K,6DAAA,cAAiB;MACbA,wDAAA,wBAA6H;MAEjIA,2DAAA,EAAM;MAGdA,yDAAA,KAAA4K,gDAAA,oBAmBM;MACN5K,yDAAA,KAAA6K,gDAAA,oBAmBM;MACV7K,2DAAA,EAAO;;;;MA5EIA,yDAAA,SAAAO,GAAA,CAAAzC,IAAA,CAAc,aAAAyC,GAAA,CAAAY,YAAA,WAAAZ,GAAA,CAAAa,OAAA,QAAAb,GAAA,CAAAc,KAAA;MACCrB,wDAAA,GAA+B;MAA/BA,yDAAA,WAAAO,GAAA,CAAAa,OAAA,GAAAb,GAAA,CAAAc,KAAA,MAA+B;MAGGrB,wDAAA,GAAmB;MAAnBA,yDAAA,oBAAmB;MAEpCA,wDAAA,GAAW;MAAXA,yDAAA,YAAW,QAAAO,GAAA,CAAA6G,UAAA;MAGtBpH,wDAAA,GAAW;MAAXA,yDAAA,YAAW;MAA6FA,0DAAA,kBAAoB;MAG1HA,wDAAA,GAAW;MAAXA,yDAAA,YAAW,UAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA,uBAAAkD,GAAA,CAAAnD,GAAA,CAAAC,SAAA,2CAAAkD,GAAA,CAAA8G,sBAAA,WAAArH,8DAAA,KAAA8K,IAAA,EAAAvK,GAAA,CAAA0F,sBAAA,kBAAAjG,8DAAA,KAAA+K,IAAA,EAAA/K,8DAAA,KAAAgL,IAAA,gBAAAhL,8DAAA,KAAAiL,IAAA,EAAA1K,GAAA,CAAA0F,sBAAA;MAGqBjG,wDAAA,GAAmB;MAAnBA,yDAAA,oBAAmB;MAE5CA,wDAAA,GAAU;MAAVA,yDAAA,WAAU,+BAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MACV2C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,uBAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MAGjB2C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAAjD,UAAA;MACZ0C,wDAAA,GAAU;MAAVA,yDAAA,WAAU;MAAiDA,0DAAA,kBAAoB;MAI7FA,wDAAA,GAAkC;MAAlCA,yDAAA,SAAAyC,GAAA,kBAAAA,GAAA,CAAA1C,cAAA,CAAkC;MAKtBC,wDAAA,GAAU;MAAVA,yDAAA,WAAU;MACVA,wDAAA,GAAU;MAAVA,yDAAA,WAAU;MAI9BA,wDAAA,GAA4B;MAA5BA,yDAAA,SAAAO,GAAA,CAAA8C,cAAA,kBAAA9C,GAAA,CAAA8C,cAAA,CAAApG,MAAA,CAA4B;MAoB5B+C,wDAAA,GAA2B;MAA3BA,yDAAA,SAAAO,GAAA,CAAAwE,aAAA,kBAAAxE,GAAA,CAAAwE,aAAA,CAAA9H,MAAA,CAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDwD;AAC1B;AAKM;AACC;AACC;AACT;AACF;AAEF;AAGC;;;;;;;;;;;;AAS7D,MAAOiO,yBAA0B,SAAQ1O,6EAAkD;EAe/FtC,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEpB,4EAAY,EAAEe,yFAAsB,CAAC;IADpC,KAAAK,QAAQ,GAARA,QAAQ;IAqBpB,KAAAC,QAAQ,GAAG,CAACC,OAAwB,EAAEC,WAAmB,KAAI;MAClE,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAI,CAAC,MAAM,EAAE,YAAY,EAAE,aAAa,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;QAC7FH,MAAM,GAAG,aAAa;;MAExB,IAAI,CAAC,aAAa,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACsJ,GAAG,EAAEC,aAAa,CAACxJ,OAAO,CAACI,KAAK,CAAC,EAAE;QACxFF,MAAM,GAAG,UAAU;;MAErB,IAAI,CAAC,UAAU,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACsJ,GAAG,EAAEC,aAAa,CAACxJ,OAAO,CAACI,KAAK,CAAC,EAAE;QACrFF,MAAM,GAAG,UAAU;;MAErB,OAAOA,MAAM;IACf,CAAC;IAEM,KAAA+J,cAAc,GAAI/I,IAAgB,IAAI;MAC3C;;;;;;;MAOA,IAAIqN,kBAAkB,GAAG,IAAI,CAAChN,OAAO,EAAE4B,cAAyB;MAChE,IAAIqL,UAAU,GAAG,IAAI,CAAClN,IAAI,CAACmN,eAAe,CAACF,kBAAkB,CAAC,IAAI,IAAI,CAACjN,IAAI,CAACmN,eAAe,CAACF,kBAAkB,CAACG,WAAW,CAAC;MAC3H,IAAIC,UAAU,GAAGJ,kBAAkB,CAACG,WAAW,GAAI,IAAI,CAACpN,IAAI,CAACsN,YAAY,CAAC,2BAA2B,EAAEL,kBAAkB,CAACG,WAAY,CAAClN,EAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACuN,eAAe,CAAC,kBAAkB,CAAC,GAAI,KAAK;MACpM,IAAIC,UAAU,GAAG,IAAI,CAACxN,IAAI,CAACuN,eAAe,CAAC,kBAAkB,CAAC;MAC9D,IAAI,EAAEL,UAAU,IAAIG,UAAU,IAAIG,UAAU,CAAC,EAAE,OAAO,mFAAmF;MACzI,MAAM5E,MAAM,GAAG,IAAI,CAAChJ,IAAI,EAAEW,QAAQ,CAACnE,WAAW,CAAC0C,KAAK;MACpD,MAAM+J,GAAG,GAAG,IAAI,CAACjJ,IAAI,EAAEW,QAAQ,CAACjE,QAAQ,CAACwC,KAAK;MAC9C,MAAM2O,QAAQ,GAAG,IAAI,CAACA,QAAQ,EAAE5L,cAA0B;MAC1D,IAAI,CAAC4L,QAAQ,EAAE;QACb,OAAO,mCAAmC;OAC3C,MAAM,IAAI,CAAC,IAAI,CAACxF,GAAG,EAAEC,aAAa,CAACU,MAAM,CAAC,EAAE;QAC3C,OAAO,yBAAyB;OACjC,MAAM,IAAI,CAAC,IAAI,CAACX,GAAG,EAAEC,aAAa,CAACW,GAAG,CAAC,EAAE;QACxC,OAAO,sBAAsB;OAC9B,MAAM,IAAID,MAAM,GAAGC,GAAG,EAAE;QACvB,OAAO,wDAAwD;OAChE,MAAM;QACL,MAAM6E,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAChF,MAAM,GAAGC,GAAG,CAAC;QACvC,MAAMgF,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,MAAMrQ,QAAQ,GAAG,IAAI,CAACuC,IAAK,CAACW,QAAQ,CAAClD,QAAQ,CAACyB,KAAK,IAAI,EAAE;QACzD,IAAI2O,QAAQ,CAACM,uBAAuB,GAAG,CAAC,IAAIF,QAAQ,GAAGJ,QAAQ,CAACM,uBAAuB,EAAE,OAAO,4BAA4B,GAAG,IAAI,CAAC7O,GAAG,CAACC,SAAS,CAAC,sBAAsB,CAAC,GAAG,wCAAwC,GAAG,IAAI,CAACD,GAAG,CAACC,SAAS,CAAC,WAAW,CAAC,GAAG,GAAG,GAAEsO,QAAQ,CAACrR,WAAW,CAAC4R,kBAAkB,EAAE,GAAE,OAAO,GAAEP,QAAQ,CAACnR,QAAQ,CAAC0R,kBAAkB,EAAE,GAAG,GAAG;QAC9V,KAAK,IAAIhG,OAAO,IAAI3K,QAAQ,EAAE;UAC5B,IAAI2K,OAAO,CAAC5L,WAAW,GAAGwM,MAAM,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC1J,GAAG,CAACC,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG6I,OAAO,CAACzL,SAAS,GAAG,mCAAmC,GAAG,IAAI,CAAC2C,GAAG,CAACC,SAAS,CAAC,qBAAqB,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC6B,IAAI,CAACiI,gBAAgB,CAACL,MAAM,CAAC;UACtO,IAAIZ,OAAO,CAAC1L,QAAQ,GAAGuM,GAAG,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC3J,GAAG,CAACC,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG6I,OAAO,CAACzL,SAAS,GAAG,gCAAgC,GAAG,IAAI,CAAC2C,GAAG,CAACC,SAAS,CAAC,qBAAqB,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC6B,IAAI,CAACiI,gBAAgB,CAACJ,GAAG,CAAC;;;MAG9N,OAAOpL,SAAS;IAClB,CAAC;IA2BM,KAAAuB,SAAS,GAAIC,MAAoB,IAAY;MAClD,OAAO,WAAW,GAAG,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,mBAAmB,CAAC,GAAG,IAAI,IAAIF,MAAM,EAAE1B,IAAI,IAAI,EAAE,CAAC;IAC5F,CAAC;IAjGC,IAAI,CAAC6B,UAAU,GAAGZ,QAAQ,CAACa,GAAG,CAAoBhB,8EAAiB,CAAC;IACpE,IAAI,CAACiB,WAAW,GAAGd,QAAQ,CAACa,GAAG,CAAqBjB,gFAAkB,CAAC;IACvE,IAAI,CAACoB,cAAc,GAAGhB,QAAQ,CAACa,GAAG,CAAwBpB,uFAAqB,CAAC;IAChF,IAAI,CAACwB,4BAA4B,GAAGjB,QAAQ,CAACa,GAAG,CAAyBnB,wFAAsB,CAAC;IAChG,IAAI,CAACwB,IAAI,GAAG,CAAC,kBAAkB,EAAE,6BAA6B,EAAE,6BAA6B,EAAE,kBAAkB,EAAE,SAAS,CAAC;IAC7H,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,EAAE,CAACC,WAAW,CAAC;MAC9BvC,IAAI,EAAE;QAAEwC,OAAO,EAAE;MAAE,CAAE;MACrB3D,WAAW,EAAE;QAAE2D,OAAO,EAAE,IAAI1D,IAAI;MAAE,CAAE;MACpCC,QAAQ,EAAE;QAAEyD,OAAO,EAAE,IAAI1D,IAAI;MAAE,CAAE;MACjCW,UAAU,EAAE;QAAE+C,OAAO,EAAE;MAAE,CAAE;MAC3B7C,gBAAgB,EAAE;QAAE6C,OAAO,EAAE;MAAI,CAAE;MACnCpC,eAAe,EAAE;QAAEoC,OAAO,EAAE;MAAI,CAAE;MAClCnC,eAAe,EAAE;QAAEmC,OAAO,EAAE;MAAI,CAAE;MAClClC,WAAW,EAAE;QAAEkC,OAAO,EAAE;MAAI,CAAE;MAC9B1C,QAAQ,EAAE;QAAE0C,OAAO,EAAE;MAAE;KACxB,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAAC1B,QAAQ,CAAC;EAC/B;EAqDagC,QAAQA,CAACxB,MAAoB,EAAEW,IAAe;IAAA,IAAAc,KAAA;IAAA,OAAAC,mHAAA;MACzD,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAElB,IAAI,CAACd,KAAK,CAAC;MAC7Cc,IAAI,CAACmB,UAAU,CAACL,KAAI,CAACM,IAAI,CAACC,QAAQ,CAACL,SAAS,EAAE3B,MAAM,CAAC,CAAC;MACtDyB,KAAI,CAACP,KAAK,CAACe,aAAa,EAAE;IAAC;EAC7B;EAEaC,cAAcA,CAACvB,IAAe;IAAA,IAAAwB,MAAA;IAAA,OAAAT,mHAAA;MACzCS,MAAI,CAACnC,MAAM,GAAG,IAAI7B,4EAAY,EAAE;MAChCgE,MAAI,CAACnC,MAAM,CAACjC,UAAU,GAAGoE,MAAI,CAACpB,IAAI,CAACC,OAAO,EAAEC,EAAE,IAAI,EAAE;MACpDkB,MAAI,CAACnC,MAAM,CAACgB,OAAO,GAAGmB,MAAI,CAACpB,IAAI,CAACC,OAAO;MACvC,MAAMgO,EAAE,GAAG,IAAI5R,IAAI,CAAC+E,MAAI,CAACnC,MAAM,CAAC7C,WAAW,CAAC,CAAC4R,kBAAkB,EAAE;MACjE,MAAME,EAAE,GAAE9M,MAAI,CAACnC,MAAM,CAAC3C,QAAQ,GAAG,IAAID,IAAI,CAAC+E,MAAI,CAACnC,MAAM,CAAC3C,QAAQ,CAAC,CAAC0R,kBAAkB,EAAE,GAAG,IAAI3R,IAAI,EAAE,CAAC2R,kBAAkB,EAAE;MACtH5M,MAAI,CAACnC,MAAM,CAAC1B,IAAI,GAAG6D,MAAI,CAACpB,IAAI,CAACC,OAAQ,CAACkO,KAAK,GAAG,KAAK,GAAGF,EAAE,GAAG,KAAK,GAAGC,EAAE;MACrE9M,MAAI,CAACX,QAAQ,CAACW,MAAI,CAACnC,MAAO,EAAEmC,MAAI,CAACxB,IAAK,CAAC;IAAC;EAC1C;EAEayB,QAAQA,CAACzB,IAAgB;IAAA,IAAA0B,MAAA;IAAA,OAAAX,mHAAA;MACpC,OAAO,IAAIY,OAAO,CAAe,CAACC,OAAO,EAAEC,MAAM,KAAI;QACnD,IAAIpB,YAAY,GAAiBiB,MAAI,CAACN,IAAI,CAACU,IAAI,CAAC,IAAItE,4EAAY,EAAE,EAAEkE,MAAI,CAACrC,MAAO,CAAC;QACjFoB,YAAY,GAAGiB,MAAI,CAACN,IAAI,CAACC,QAAQ,CAACZ,YAAY,EAAEiB,MAAI,CAAC1B,IAAK,CAACd,KAAK,CAAC;QACjEuB,YAAY,CAAChD,QAAQ,GAAGgD,YAAY,CAAChD,QAAQ,EAAE+Q,MAAM,CAAC9F,CAAC,IAAIA,CAAC,CAAC8C,OAAO,CAAC,IAAI,EAAE;QAC3E5J,OAAO,CAACnB,YAAY,CAAC;MACvB,CAAC,CAAC;IAAC;EACL;EAMOgO,cAAcA,CAAC1D,GAAQ;IAC5B,IAAI/L,MAAM,GAAoB,EAAE;IAChC,OAAOA,MAAM;EACf;EAEO0P,YAAYA,CAAA;IAAI,IAAI,CAACC,UAAU,EAAE;EAAE;EAEnCC,eAAeA,CAAA;IAAI,IAAI,CAACD,UAAU,EAAE;EAAE;EAEtCA,UAAUA,CAAA;IACf,IAAG,IAAI,CAACE,MAAM,IAAI,KAAK,EAAE;MACvB,MAAMN,KAAK,GAAG,IAAI,CAAClO,OAAO,EAAEyL,YAAY,GAAG,IAAI,CAACzL,OAAO,EAAEyL,YAAY,EAAEzM,MAAM,CAACkP,KAAK,GAAG,IAAI,CAACnO,IAAI,CAACC,OAAO,EAAEkO,KAAK;MAC9G,MAAMF,EAAE,GAAG,IAAI5R,IAAI,CAAC,IAAI,CAACuD,IAAK,CAACW,QAAQ,CAACnE,WAAW,CAAC0C,KAAK,CAAC,CAACkP,kBAAkB,EAAE;MAC/E,MAAME,EAAE,GAAG,IAAI7R,IAAI,CAAC,IAAI,CAACuD,IAAK,CAACW,QAAQ,CAACjE,QAAQ,CAACwC,KAAK,CAAC,CAACkP,kBAAkB,EAAE;MAC5E,IAAI,CAACpO,IAAK,CAACW,QAAQ,CAAChD,IAAI,CAACiD,QAAQ,CAAC2N,KAAK,GAAG,KAAK,GAAGF,EAAE,GAAG,KAAK,GAAGC,EAAE,CAAC;;EAEtE;EAEOQ,OAAOA,CAACC,IAAU,EAAEC,IAAY;IACrC,IAAIhQ,MAAM,GAAG,IAAIvC,IAAI,CAACsS,IAAI,CAAC;IAC3B/P,MAAM,CAACiQ,OAAO,CAACjQ,MAAM,CAACkQ,OAAO,EAAE,GAAGF,IAAI,CAAC;IACvC,OAAOhQ,MAAM;EACf;EAEOmQ,gBAAgBA,CAAA;IACrB,MAAMC,IAAI,GAAE,IAAI,CAACvB,QAAQ,EAAE5L,cAA2B,EAAEkM,uBAAuB;IAC/E,MAAM9R,IAAI,GAAC,IAAI,CAACyS,OAAO,CAAC,IAAI,CAACzP,MAAO,CAAC7C,WAAW,EAAC4S,IAAI,CAAC;IACtD,IAAI,CAACpP,IAAK,CAACW,QAAQ,CAACjE,QAAQ,CAACkE,QAAQ,CAAC,IAAInE,IAAI,CAACJ,IAAI,CAAC,CAAC;IACrD,IAAI,CAACgT,OAAO,EAAEC,MAAM,CAACC,IAAI,EAAE;EAC7B;;SAjJWnC,yBAA0B;;mBAA1BA,MAAyB,EAAAlL,gEAAA,CAAAA,oDAAA;AAAA;;QAAzBkL,MAAyB;EAAA/K,SAAA;EAAAC,SAAA,WAAAkN,gCAAAhN,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEACzBtE,2GAAqB;iEACrBC,iFAAa;;;;;;;;;;;;;;;;;;;;;;MC5B1B+D,6DAAA,uBAA6J;MAA9CA,yDAAA,oBAAAuN,mEAAA;QAAA,OAAUhN,GAAA,CAAAI,UAAA,EAAY;MAAA,EAAC,oBAAA6M,mEAAA;QAAA,OAAWjN,GAAA,CAAAM,QAAA,EAAU;MAAA,EAArB;MAClIb,6DAAA,UAAK;MAEkIA,yDAAA,oBAAAyN,kEAAA;QAAA,OAAUlN,GAAA,CAAAmM,eAAA,EAAiB;MAAA,EAAC;MAAU1M,2DAAA,EAAe;MACpLA,6DAAA,yBAAyK;MAAvCA,yDAAA,oBAAA0N,kEAAA;QAAA,OAAUnN,GAAA,CAAA0M,gBAAA,EAAkB;MAAA,EAAC;MAAUjN,2DAAA,EAAe;MACxLA,6DAAA,wBAAkL;MAAnCA,yDAAA,oBAAA2N,oEAAA;QAAA,OAAUpN,GAAA,CAAAiM,YAAA,EAAc;MAAA,EAAC;MAAUxM,2DAAA,EAAiB;MACnMA,6DAAA,2BAAmL;MAAnCA,yDAAA,oBAAA4N,oEAAA;QAAA,OAAUrN,GAAA,CAAAiM,YAAA,EAAc;MAAA,EAAC;MAAUxM,2DAAA,EAAiB;MAExMA,6DAAA,cAAiB;MACbA,wDAAA,yBAAwG;MAG5GA,2DAAA,EAAM;MACNA,wDAAA,qBAAwC;MAE5CA,2DAAA,EAAM;;;MAfKA,yDAAA,SAAAO,GAAA,CAAAzC,IAAA,CAAc,aAAAyC,GAAA,CAAAY,YAAA,WAAAZ,GAAA,CAAAa,OAAA,QAAAb,GAAA,CAAAc,KAAA;MAGMrB,wDAAA,GAAU;MAAVA,yDAAA,WAAU,cAAAO,GAAA,CAAApD,MAAA,kBAAAoD,GAAA,CAAApD,MAAA,CAAAiB,EAAA,iBAAAzC,SAAA,SAAA4E,GAAA,CAAAjD,UAAA;MACT0C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,cAAAO,GAAA,CAAApD,MAAA,kBAAAoD,GAAA,CAAApD,MAAA,CAAAiB,EAAA,iBAAAzC,SAAA,SAAA4E,GAAA,CAAA/C,WAAA;MACbwC,wDAAA,GAAU;MAAVA,yDAAA,WAAU,+BAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MACV2C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,uBAAAO,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MAGb2C,wDAAA,GAAU;MAAVA,yDAAA,WAAU;MAAiCA,0DAAA,kBAAoB;MACrDA,wDAAA,GAAU;MAAVA,yDAAA,WAAU,4BAAAO,GAAA,CAAA5C,4BAAA;MACXqC,wDAAA,GAAU;MAAVA,yDAAA,WAAU,4BAAAO,GAAA,CAAA7C,cAAA;MAGOsC,wDAAA,GAAmC;MAAnCA,yDAAA,YAAAO,GAAA,CAAAzC,IAAA,CAAAW,QAAA,CAAAlD,QAAA,CAAmC,mBAAAgF,GAAA,CAAAzC,IAAA,CAAAW,QAAA,CAAA5C,eAAA,CAAAmB,KAAA,mBAAAuD,GAAA,CAAAzC,IAAA,CAAAW,QAAA,CAAA3C,eAAA,CAAAkB,KAAA,eAAAuD,GAAA,CAAAzC,IAAA,CAAAW,QAAA,CAAAvD,UAAA,CAAA8B,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZpB;AAEuB;AAC1B;AAEa;AACd;AACJ;;;;;;;;;;;;;;;ICT/DgD,6DAAA,aAAkC;IAAAA,qDAAA,GAAS;IAAAA,2DAAA,EAAK;;;;IAAdA,wDAAA,GAAS;IAATA,gEAAA,CAAA8N,MAAA,CAAAzM,KAAA,CAAS;;;;;IAGvCrB,wDAAA,kBAA2D;;;;IAA9BA,yDAAA,YAAA+N,MAAA,CAAAC,OAAA,CAAmB;;;;;IAgBpChO,wDAAA,gBAAkG;;;;;IAAnEA,yDAAA,UAAAiO,OAAA,CAAAxT,SAAA,2BAA4C;IACpEuF,wDAAA,GAAyC;IAAzCA,yDAAA,SAAA0C,MAAA,CAAAwL,aAAA,CAAAC,OAAA,YAAyC,UAAAF,OAAA,CAAA9P,OAAA,CAAAkO,KAAA;IACpBrM,wDAAA,GAA+C;IAA/CA,yDAAA,UAAAiO,OAAA,CAAAlT,YAAA,2BAA+C;;;;;IAK3EiF,6DAAA,WAAM;IAAAA,qDAAA,GAA0C;IAAAA,wDAAA,SAAI;IAAAA,qDAAA,GAAuC;IAAAA,2DAAA,EAAO;;;;;IAA5FA,wDAAA,GAA0C;IAA1CA,gEAAA,CAAAsF,MAAA,CAAAa,GAAA,CAAAgB,gBAAA,CAAAiH,OAAA,CAAA9T,WAAA,EAA0C;IAAI0F,wDAAA,GAAuC;IAAvCA,gEAAA,CAAAsF,MAAA,CAAAa,GAAA,CAAAgB,gBAAA,CAAAiH,OAAA,CAAA5T,QAAA,EAAuC;;;;;IAK3FwF,6DAAA,eAA2D;IACvDA,wDAAA,YAAgC;IAChCA,qDAAA,GACJ;IAAAA,2DAAA,EAAO;;;;IADHA,wDAAA,GACJ;IADIA,iEAAA,MAAAsO,OAAA,CAAApI,OAAA,CAAAzK,IAAA,IAAA6S,OAAA,CAAAC,WAAA,CAAA9T,SAAA,MACJ;;;;;IAHAuF,yDAAA,IAAAwO,mEAAA,mBAGO;;;;IAHAxO,yDAAA,SAAAsO,OAAA,CAAApI,OAAA,CAAiB;;;;;IAQxBlG,wDAAA,gBAA6E;;;;;IAAtEA,yDAAA,UAAAyO,MAAA,CAAAnH,mBAAA,CAAAoH,YAAA,CAAAC,OAAA,EAA+C;IAC/C3O,wDAAA,GAAoD;IAApDA,yDAAA,UAAAyO,MAAA,CAAAnH,mBAAA,CAAAsH,iBAAA,CAAAD,OAAA,EAAoD;;;;;IAK3D3O,wDAAA,uBAA+E;;;;IAAjEA,yDAAA,UAAA6O,OAAA,CAAA/T,mBAAA,CAAiC;;;AD7BzD,MAAOgU,oCAAqC,SAAQjB,6EAA+D;EASvH3T,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEzC,2FAAmB,EAAEkI,wGAA6B,CAAC;IADlD,KAAAzF,QAAQ,GAARA,QAAQ;IAJpB,KAAAsR,OAAO,GAAoB,EAAE;IAC7B,KAAA/H,sBAAsB,GAAa,EAAE;IAgCrC,KAAA8I,WAAW,GAAIzC,MAAiB,IAAI;MACzC,IAAIxO,IAAI,GAAQwO,MAAM,CAACtP,KAAK;MAC5B,IAAIF,MAAM,GAAU,EAAE;MACtB,IAAG,IAAI,CAACmJ,sBAAsB,CAAChJ,MAAM,EAAEH,MAAM,CAACgM,IAAI,CAAC,CAAC,0BAA0B,EAAE,IAAI,EAAE,IAAI,CAAC7C,sBAAsB,CAAC,CAAC;MACnH,IAAInI,IAAI,CAAC5C,UAAU,EAAE+B,MAAM,EAAE;QAAG;QAC9BH,MAAM,CAACgM,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAEhL,IAAI,CAAC5C,UAAU,CAAC,CAAC;;MAEpD,IAAI4C,IAAI,CAACrD,SAAS,EAAEwC,MAAM,EAAE;QAC1BH,MAAM,CAACgM,IAAI,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,GAAG,GAAGhL,IAAI,CAACrD,SAAS,CAACuU,IAAI,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;MAEzF,IAAInR,IAAI,CAAC/C,YAAY,EAAEkC,MAAM,EAAE;QAC7BH,MAAM,CAACgM,IAAI,CAAC,CAAC,cAAc,EAAE,MAAM,EAAE,GAAG,GAAGhL,IAAI,CAAC/C,YAAY,CAACiU,IAAI,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;MAE/F,OAAOnS,MAAM;IACf,CAAC;IAzCC,IAAI,CAACW,eAAe,GAAGf,QAAQ,CAACa,GAAG,CAAgC4E,wGAA6B,CAAC;IACjG,IAAI,CAAC7E,UAAU,GAAGZ,QAAQ,CAACa,GAAG,CAAoBhB,8EAAiB,CAAC;IACpE,IAAI,CAAC+K,mBAAmB,GAAG5K,QAAQ,CAACa,GAAG,CAAsBiF,uEAAmB,CAAC;IACjF,IAAI,CAACnB,KAAK,GAAG,IAAI,CAACjE,GAAG,CAACC,SAAS,CAAC,UAAU,CAAC;IAC3C,IAAI,CAACiP,MAAM,GAAG,IAAI,CAACvO,EAAE,CAACC,WAAW,CAAC;MAChCvD,SAAS,EAAE;QAAEwD,OAAO,EAAE;MAAE,CAAE;MAC1B/C,UAAU,EAAE;QAAE+C,OAAO,EAAE;MAAE,CAAE;MAC3BlD,YAAY,EAAE;QAAEkD,OAAO,EAAE;MAAE;KAC5B,CAAC;IACF,IAAI,CAACL,IAAI,GAAG,CAAC,iBAAiB,EAAC,0BAA0B,EAAC,kBAAkB,CAAC;EAC/E;EAEAU,QAAQA,CAAA;IACN,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,CAAC2H,sBAAsB,GAAG,IAAI,CAACzH,QAAQ,EAAEyH,sBAAsB,IAAI,IAAI,CAACA,sBAAsB;EACpG;EAEOiJ,cAAcA,CAACrG,GAAQ;IAC5B,IAAI/L,MAAM,GAAoB,EAAE;IAChCA,MAAM,CAACgM,IAAI,CAAC;MAAEC,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE,mBAAmB;MAAEE,OAAO,EAAGjG,QAA8B,IAAK,IAAI,CAACkM,EAAE,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAEpM,QAAQ,CAAC7E,EAAE,EAAE,SAAS;MAAC,CAAE,EAAE;QAAEkR,KAAK,EAAE;MAAI,CAAE;IAAC,CAAE,CAAC;IAC3N,OAAOxS,MAAM;EACf;EAEOyS,WAAWA,CAACjD,MAAiB;IAClC,KAAK,CAACiD,WAAW,CAACjD,MAAM,CAAC;EAC3B;;SApCWwC,oCAAqC;;mBAArCA,MAAoC,EAAA9O,gEAAA,CAAAA,oDAAA;AAAA;;QAApC8O,MAAoC;EAAA3O,SAAA;EAAAC,SAAA,WAAAoP,2CAAAlP,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEACpCrE,iFAAa;;;;;;;;;;;;;MCjB1B+D,yDAAA,IAAAyP,kDAAA,gBAAgD;MAChDzP,6DAAA,cACgC;MAA5BA,yDAAA,oBAAA0P,qEAAA3O,MAAA;QAAA,OAAUR,GAAA,CAAAoP,QAAA,CAAA5O,MAAA,CAAgB;MAAA,EAAC;MAC3Bf,yDAAA,IAAA4P,uDAAA,qBAA2D;MAC3D5P,6DAAA,gBACoG;MAE5FA,wDAAA,oBAC8D;MAClEA,2DAAA,EAAM;MACNA,6DAAA,aAAiB;MACTA,wDAAA,sBAA+G;MAGvHA,2DAAA,EAAM;MAEVA,6DAAA,cAAS;MAEDA,yDAAA,KAAA6P,4DAAA,gCAAA7P,qEAAA,CAIc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,iBAAoE;MAChEA,yDAAA,KAAA8P,4DAAA,iCAAA9P,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAqD;MACjDA,yDAAA,KAAA+P,4DAAA,iCAAA/P,qEAAA,CAKc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,iBAAqE;MACjEA,yDAAA,KAAAgQ,4DAAA,iCAAAhQ,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAuD;MACnDA,yDAAA,KAAAiQ,4DAAA,iCAAAjQ,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,wDAAA,kBAAgC;MACpCA,2DAAA,EAAU;MACVA,wDAAA,sBAA4C;MAChDA,2DAAA,EAAO;;;;;;;;MAnDFA,yDAAA,UAAAO,GAAA,CAAAa,OAAA,CAAc;MACbpB,wDAAA,GAAW;MAAXA,yDAAA,QAAAO,GAAA,CAAA4F,GAAA,CAAW,YAAA5F,GAAA,CAAA4D,OAAA,aAAA5D,GAAA,CAAA2P,OAAA,UAAA3P,GAAA,CAAA3C,IAAA,gBAAA2C,GAAA,CAAA4P,UAAA;MAEHnQ,wDAAA,GAAiB;MAAjBA,yDAAA,UAAAO,GAAA,CAAA4P,UAAA,CAAiB;MACnBnQ,wDAAA,GAAe;MAAfA,yDAAA,SAAAO,GAAA,CAAA+L,MAAA,CAAe,UAAA/L,GAAA,CAAAwO,WAAA,YAAAxO,GAAA,CAAA6P,YAAA,CAAAxN,IAAA,CAAArC,GAAA,YAAAA,GAAA,CAAAgP,WAAA,CAAA3M,IAAA,CAAArC,GAAA,qBAAAA,GAAA,CAAA8P,oBAAA,CAAAzN,IAAA,CAAArC,GAAA,iBAAAA,GAAA,CAAA4P,UAAA,IAAA5P,GAAA,CAAA+P,eAAA;MAGuCtQ,wDAAA,GAAsC;MAAtCA,yDAAA,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAhE,SAAA,CAAsC;MAChEuF,0DAAA,kBAAoB;MAG9BA,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAAjD,UAAA;MACZ0C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAA1D,YAAA;MACKiF,0DAAA,kBAAoB;MAI/CA,wDAAA,GAA6C;MAA7CA,yDAAA,mDAA6C,aAAAuQ,GAAA;MAO7CvQ,wDAAA,GAAiC;MAAjCA,yDAAA,uCAAiC,aAAAwQ,GAAA;MAKjBxQ,wDAAA,GAA4B;MAA5BA,yDAAA,aAAAyQ,GAAA,CAA4B;MAQ5CzQ,wDAAA,GAA2B;MAA3BA,yDAAA,4BAA2B,aAAAuE,GAAA;MAMTvE,wDAAA,GAA4B;MAA5BA,yDAAA,aAAAwE,IAAA,CAA4B;MAO9CxE,wDAAA,GAAkB;MAAlBA,yDAAA,SAAAO,GAAA,CAAAmQ,SAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDuD;AAEQ;AAC1B;AAEuB;AACb;AAEZ;AACN;;;;;;;;;;;;;;ICH/C1Q,6DAAA,iBAAgC;IAAAA,qDAAA,iBAAU;IAAAA,2DAAA,EAAS;IAAAA,6DAAA,eAAwB;IACvEA,wDAAA,gBAAyD;IAC7DA,2DAAA,EAAO;;;;IADoBA,wDAAA,GAAyB;IAAzBA,yDAAA,UAAA6Q,aAAA,kBAAAA,aAAA,CAAAC,IAAA,CAAyB;;;;;IAM5C9Q,wDAAA,gBAAmG;;;;IAAhCA,yDAAA,UAAA2O,OAAA,CAAAlU,SAAA,CAAuB;;;;;IAEtFuF,wDAAA,gBAAuH;;;;;IAA9EA,yDAAA,SAAA+Q,OAAA,CAAA7C,aAAA,CAAAC,OAAA,YAAyC,UAAAQ,OAAA,CAAAxQ,OAAA,CAAAkO,KAAA;;;;;IAClFrM,wDAAA,gBAA8G;;;;IAAnCA,yDAAA,UAAA2O,OAAA,CAAA5T,YAAA,CAA0B;;;;;IAHzGiF,yDAAA,IAAAgR,+DAAA,oBAAmG;IAAAhR,wDAAA,SAAI;IACvGA,6DAAA,eAAsB;IAClBA,yDAAA,IAAAiR,+DAAA,oBAAuH;IACvHjR,yDAAA,IAAAkR,+DAAA,oBAA8G;IAClHlR,2DAAA,EAAO;;;;IAJCA,yDAAA,SAAA2O,OAAA,CAAAlU,SAAA,CAAmB;IAEfuF,wDAAA,GAAiB;IAAjBA,yDAAA,SAAA2O,OAAA,CAAAxQ,OAAA,CAAiB;IACjB6B,wDAAA,GAA8B;IAA9BA,yDAAA,SAAA2O,OAAA,CAAA5T,YAAA,kBAAA4T,OAAA,CAAA5T,YAAA,CAAAkC,MAAA,CAA8B;;;;;IAM1C+C,6DAAA,WAA8B;IAACA,qDAAA,GAA0C;IAAAA,2DAAA,EAAO;;;;;IAAjDA,wDAAA,GAA0C;IAA1CA,iEAAA,MAAA8E,OAAA,CAAAqB,GAAA,CAAAgB,gBAAA,CAAAgK,OAAA,CAAA7W,WAAA,MAA0C;;;;;IACzE0F,6DAAA,WAA2B;IAACA,qDAAA,GAAuC;IAAAA,2DAAA,EAAO;;;;;IAA9CA,wDAAA,GAAuC;IAAvCA,iEAAA,MAAAoR,OAAA,CAAAjL,GAAA,CAAAgB,gBAAA,CAAAgK,OAAA,CAAA3W,QAAA,MAAuC;;;;;IADnEwF,yDAAA,IAAAqR,+DAAA,mBAAgF;IAAArR,wDAAA,SAAI;IACpFA,yDAAA,IAAAsR,+DAAA,mBAA0E;;;;IADnEtR,yDAAA,SAAAmR,OAAA,CAAA7W,WAAA,CAAqB;IACrB0F,wDAAA,GAAkB;IAAlBA,yDAAA,SAAAmR,OAAA,CAAA3W,QAAA,CAAkB;;;;;IAKzBwF,wDAAA,gBAAyH;;;;;IAAtFA,yDAAA,cAAAuR,MAAA,CAAAjK,mBAAA,CAAAoH,YAAA,CAAA8C,OAAA,EAAmD;IACzDxR,wDAAA,GAAwD;IAAxDA,yDAAA,cAAAuR,MAAA,CAAAjK,mBAAA,CAAAsH,iBAAA,CAAA4C,OAAA,EAAwD;;;;;IAGrFxR,wDAAA,yCAAsL;;;;;IAA1HA,yDAAA,YAAAyR,OAAA,CAAAvL,OAAA,CAAuB,uBAAAuI,MAAA,CAAA3Q,IAAA,CAAAW,QAAA,CAAA9D,IAAA;IAC7BqF,wDAAA,GAAuB;IAAvBA,yDAAA,YAAAyR,OAAA,CAAAvL,OAAA,CAAuB,uBAAAuI,MAAA,CAAA3Q,IAAA,CAAAW,QAAA,CAAA7D,SAAA;;;;;IAK7EoF,wDAAA,uBAA+G;;;;IAAjGA,yDAAA,UAAA0R,OAAA,CAAA5W,mBAAA,CAAiC,SAAA4W,OAAA,CAAA7W,kBAAA;;;;;IAG/CmF,wDAAA,uBAA6O;;;;IAA/NA,yDAAA,YAAW,2BAAAoD,OAAA,CAAAtF,IAAA,CAAAW,QAAA,CAAA5D,kBAAA;IACXmF,wDAAA,GAAW;IAAXA,yDAAA,YAAW,2BAAAoD,OAAA,CAAAtF,IAAA,CAAAW,QAAA,CAAA3D,mBAAA;;;;;IAKzBkF,wDAAA,gBAAqG;;;;IAApCA,yDAAA,UAAA2R,OAAA,CAAAzL,OAAA,kBAAAyL,OAAA,CAAAzL,OAAA,CAAAzK,IAAA,CAA2B;;;;;IAA5FuE,yDAAA,IAAA4R,gEAAA,oBAAqG;IACrG5R,wDAAA,6BAAwL;;;;;IADhLA,yDAAA,SAAA2R,OAAA,CAAAzL,OAAA,CAAiB;IACLlG,wDAAA,GAAc;IAAdA,yDAAA,WAAA2R,OAAA,CAAc,gBAAAE,OAAA,CAAAC,QAAA,OAAAD,OAAA,CAAAE,IAAA,kBAAAF,OAAA,CAAAE,IAAA,CAAA/K,OAAA,WAAA6K,OAAA,CAAAE,IAAA,UAAAF,OAAA,CAAAG,kBAAA,CAAApP,IAAA,CAAAiP,OAAA;;;ADhCpD,MAAOI,gCAAiC,SAAQrB,+EAAa;EAIjE,IAAasB,SAASA,CAAClV,KAAyB;IAAI,KAAK,CAACkV,SAAS,GAAGlV,KAAK;EAAE;EAAE,IAAIkV,SAASA,CAAA;IAAyB,OAAO,KAAK,CAACA,SAAS;EAAE;EAC7I,IAAatV,OAAOA,CAACI,KAAkC;IAAI,KAAK,CAACJ,OAAO,GAAGI,KAAK;EAAE;EAAE,IAAIJ,OAAOA,CAAA;IAAkC,OAAO,KAAK,CAACA,OAAO;EAAE;EACvJ,IAAaO,MAAMA,CAACH,KAAsC;IAAI,KAAK,CAACG,MAAM,GAAGH,KAAK;EAAE;EAAE,IAAIG,MAAMA,CAAA;IAAsC,OAAO,KAAK,CAACA,MAAM;EAAE;EAC3J,IAAakG,cAAcA,CAACrG,KAAyB;IACnD,IAAG,IAAI,CAACmV,eAAe,IAAInV,KAAK,EAAE;MAChC,IAAI,CAACmV,eAAe,GAAGnV,KAAK;MAC5B;MACA;;EAEJ;;EAAE,IAAIqG,cAAcA,CAAA;IAClB,OAAO,IAAI,CAAC8O,eAAe;EAC7B;EACA,IAAapN,aAAaA,CAAC/H,KAAyB;IAClD,IAAG,IAAI,CAACoV,cAAc,IAAIpV,KAAK,EAAE;MAC/B,IAAI,CAACoV,cAAc,GAAGpV,KAAK;MAC3B;MACA;;EAEJ;;EAAE,IAAI+H,aAAaA,CAAA;IACjB,OAAO,IAAI,CAACqN,cAAc;EAC5B;EACA,IAAa1K,SAASA,CAAC1K,KAAyB;IAC9C,IAAG,IAAI,CAACqV,UAAU,IAAIrV,KAAK,EAAE;MAC3B,IAAI,CAACqV,UAAU,GAAGrV,KAAK;MACvB;MACA;;EAEJ;;EAAE,IAAI0K,SAASA,CAAA;IACb,OAAO,IAAI,CAAC2K,UAAU;EACxB;EAGA,IAAW/L,KAAKA,CAAA;IACd,IAAI,CAAC,IAAI,CAACgM,WAAW,CAACtV,KAAK,EAAE,IAAI,CAACsV,WAAW,CAAC5T,QAAQ,CAAC,EAAE,CAAC;IAC1D,OAAO,IAAI,CAAC4T,WAAW,CAACtV,KAAK;EAC/B;EAYA9C,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,CAAC;IADE,KAAAA,QAAQ,GAARA,QAAQ;IAjBlB,KAAAoV,QAAQ,GAAY,KAAK;IAW3B,KAAAS,eAAe,GAAIvV,KAAU,IAAMA,KAAsB,CAACzB,QAAQ,IAAI,EAAE;IACxE,KAAAiX,OAAO,GAAoB,EAAE;IAC7B,KAAAC,cAAc,GAAW,EAAE;IA0C3B,KAAA9V,QAAQ,GAAG,CAACC,OAAwB,EAAEC,WAAmB,KAAI;MAClE,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAI,CAAC,MAAM,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;QAChEH,MAAM,GAAG,aAAa;;MAExB,OAAOA,MAAM;IACf,CAAC;IAOM,KAAAiS,WAAW,GAAIzC,MAAiB,IAAI;MACzC,IAAIxP,MAAM,GAAU,EAAE;MACtB,IAAIgB,IAAI,GAAQwO,MAAM,CAACtP,KAAK;MAC5BF,MAAM,CAACgM,IAAI,CAAC,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC2J,cAAc,CAAC,CAAC;MAC5D,OAAO3V,MAAM;IACf,CAAC;IAtDC,IAAI,CAACuE,KAAK,GAAG,IAAI,CAACjE,GAAG,CAACC,SAAS,CAAC,UAAU,CAAC;IAC3C,IAAI,CAACO,IAAI,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;IAClC,IAAI,CAAC8U,IAAI,GAAG,UAAU;IACtB,IAAI,CAACrU,KAAK,GAAG3B,QAAQ,CAACa,GAAG,CAAoBoT,6DAAiB,CAAC;IAC/D,IAAI,CAACxK,GAAG,GAAGzJ,QAAQ,CAACa,GAAG,CAAgC4E,wGAA6B,CAAC;IACrF,IAAI,CAACmF,mBAAmB,GAAG5K,QAAQ,CAACa,GAAG,CAAsBiF,uEAAmB,CAAC;IACjF,IAAI,CAAC1E,IAAI,GAAG,IAAI,CAACC,EAAE,CAACC,WAAW,CAAC;MAC9BvD,SAAS,EAAE;QAAEwD,OAAO,EAAE;MAAE,CAAE;MAC1B3D,WAAW,EAAE;QAAE2D,OAAO,EAAE,IAAI1D,IAAI;MAAE,CAAE;MACpCC,QAAQ,EAAE;QAAEyD,OAAO,EAAE,IAAI1D,IAAI;MAAE,CAAE;MACjCI,IAAI,EAAE;QAAEsD,OAAO,EAAE;MAAE,CAAE;MACrBrD,SAAS,EAAE;QAAEqD,OAAO,EAAE;MAAI,CAAE;MAC5BhD,UAAU,EAAE;QAAEgD,OAAO,EAAE;MAAI,CAAE;MAC7B/C,UAAU,EAAE;QAAE+C,OAAO,EAAE;MAAI,CAAE;MAC7BpD,kBAAkB,EAAE;QAAEoD,OAAO,EAAE;MAAI,CAAE;MACrCnD,mBAAmB,EAAE;QAAEmD,OAAO,EAAE;MAAI,CAAE;MACtClD,YAAY,EAAE;QAAEkD,OAAO,EAAE;MAAI;KAC9B,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAAC1B,QAAQ,CAAC;IAC7B;IACA,IAAI,IAAI,CAACuB,IAAI,CAACuN,eAAe,CAAC,UAAU,CAAC,EAAE;MACzC,IAAI,CAAC+G,OAAO,CAAC1J,IAAI,CAAC;QAChBE,IAAI,EAAE,mBAAmB;QACzBD,KAAK,EAAE,aAAa;QACpBG,OAAO,EAAE,IAAI,CAACyJ,OAAO,CAAC/P,IAAI,CAAC,IAAI;OAChC,CAAC;;IAEJ;IACA,IAAI,IAAI,CAAC1E,IAAI,CAACuN,eAAe,CAAC,oBAAoB,CAAC,EAAE;MACnD,IAAI,CAAC+G,OAAO,CAAC1J,IAAI,CAAC;QAChBE,IAAI,EAAE,aAAa;QACnBD,KAAK,EAAE,SAAS;QAChBG,OAAO,EAAE,IAAI,CAAC0J,MAAM,CAAChQ,IAAI,CAAC,IAAI;OAC/B,CAAC;;EAEN;EAUOtE,QAAQA,CAAA;IACb,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,CAACmU,cAAc,GAAG,IAAI,CAACI,SAAU,CAACtV,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;EACvD;EASauV,GAAGA,CAAA;IAAA,IAAAlU,KAAA;IAAA,OAAAC,mHAAA;MACd,IAAIqH,OAAO,GAAG,IAAIjM,2FAAmB,CAAC;QACpCqP,OAAO,EAAE,KAAK;QACdlL,EAAE,EAAEQ,KAAI,CAACuH,GAAI,CAACkD,YAAY,EAAE;QAC5BjO,gBAAgB,EAAEwD,KAAI,CAACzB,MAAM,EAAEiB;OAChC,CAAC;MACFQ,KAAI,CAACuQ,EAAE,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,SAAS;MAAC,CAAE,EAAE;QAClE7Q,QAAQ,EAAE;UACRiJ,aAAa,EAAE7I,KAAI,CAACzB,MAAO;UAC3BtB,eAAe,EAAE+C,KAAI,CAACyE,cAAc;UACpCvH,eAAe,EAAE8C,KAAI,CAACmG,aAAa;UACnC7J,UAAU,EAAE0D,KAAI,CAAC8I,SAAS;UAC1BxB,OAAO,EAAEA;SACV;QACD6M,UAAU;UAAA,IAAAC,IAAA,GAAAnU,mHAAA,CAAE,WAAOoU,WAAW,EAAI;YAChC,IAAIA,WAAW,EAAE;cACf,IAAI;gBACFrU,KAAI,CAACsU,WAAW,GAAGtU,KAAI,CAAC0H,KAAK,CAACwC,IAAI,CAACmK,WAAW,CAAC,GAAGrU,KAAI,CAAC0H,KAAK,CAACwC,IAAI,OAAOlK,KAAI,CAACuH,GAAI,CAACgN,IAAI,CAACF,WAAW,EAAErU,KAAI,CAAChB,IAAI,CAAC,CAAC;gBAC/GgB,KAAI,CAACP,KAAK,CAACe,aAAa,EAAE;eAC3B,CAAC,OAAOgU,KAAU,EAAE;gBACnBxU,KAAI,CAACwU,KAAK,CAACA,KAAK,EAAEA,KAAK,IAAIA,KAAK,EAAEC,OAAO,IAAID,KAAK,CAAC;;;YAEtD;UACH,CAAC;UAAA,gBAAAL,WAAAO,EAAA;YAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;UAAA;QAAA;OACF,CAAC;IAAC;EACL;EAEOtE,cAAcA,CAACrG,GAAQ;IAC5B,OAAO,CAAC,IAAI,CAACiJ,QAAQ,GAAG,IAAI,CAACU,OAAO,GAAG,EAAE;EAC3C;EAEaiB,IAAIA,CAACvN,OAA4B;IAAA,IAAA5G,MAAA;IAAA,OAAAT,mHAAA;MAC5C,IAAGS,MAAI,CAACwS,QAAQ,EAAE;QAChBxS,MAAI,CAACyS,IAAK,CAAC0B,IAAI,CAACvN,OAAO,CAAC;OACzB,MAAM;QACLA,OAAO,CAACoD,OAAO,GAAGpD,OAAO,CAACoD,OAAO,IAAI,KAAK,GAAG,KAAK,GAAG,MAAM;QAC3D,IAAIoK,KAAK,GAAGpU,MAAI,CAACgH,KAAK,CAACvJ,OAAO,CAACmJ,OAAO,CAAC;QACvC5G,MAAI,CAAC6P,EAAE,CAACC,QAAQ,CAAC;UAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,SAAS;QAAC,CAAE,EAAE;UAClE7Q,QAAQ,EAAE;YACRiJ,aAAa,EAAEnI,MAAI,CAACnC,MAAO;YAC3BtB,eAAe,EAAEyD,MAAI,CAAC+D,cAAc;YACpCvH,eAAe,EAAEwD,MAAI,CAACyF,aAAa;YACnC7J,UAAU,EAAEoE,MAAI,CAACoI,SAAS;YAC1BxB,OAAO,EAAEA;WACV;UACD6M,UAAU;YAAA,IAAAY,KAAA,GAAA9U,mHAAA,CAAE,WAAOoU,WAAW,EAAI;cAChC,IAAIA,WAAW,EAAE;gBACf,IAAI,CAAC3T,MAAI,CAAC4T,WAAW,EAAE,MAAM5T,MAAI,CAAC6G,GAAG,EAAEgN,IAAI,CAACF,WAAW,CAAC;gBACxD3T,MAAI,CAACgH,KAAK,CAACoN,KAAK,CAAC,GAAGT,WAAW;;cAChC;YACH,CAAC;YAAA,gBAAAF,WAAAa,GAAA;cAAA,OAAAD,KAAA,CAAAJ,KAAA,OAAAC,SAAA;YAAA;UAAA;SACF,CAAC;;IACH;EACH;EAEaK,IAAIA,CAAC/V,IAAe,EAAE+K,GAAQ;IAAA,IAAArJ,MAAA;IAAA,OAAAX,mHAAA;MACzCW,MAAI,CAAC1B,IAAK,CAACmB,UAAU,CAAC4J,GAAG,CAAC;MAC1BrJ,MAAI,CAAC1B,IAAK,CAACW,QAAQ,CAAC9D,IAAI,CAAC+D,QAAQ,CAACc,MAAI,CAAC8H,mBAAmB,CAACc,QAAQ,CAACS,GAAG,CAAClO,IAAI,CAAC,CAAC;MAC9E6E,MAAI,CAAC1B,IAAK,CAACW,QAAQ,CAAC7D,SAAS,CAAC8D,QAAQ,CAACc,MAAI,CAAC8H,mBAAmB,CAACc,QAAQ,CAACS,GAAG,CAACjO,SAAS,CAAC,CAAC;MACxF4E,MAAI,CAACnB,KAAK,CAACe,aAAa,EAAE;IAAC;EAC7B;EAEa+T,IAAIA,CAACrV,IAAe,EAAE+K,GAAQ;IAAA,IAAAO,MAAA;IAAA,OAAAvK,mHAAA;MACzC,IAAI/B,MAAM,GAAGnB,SAAS;MACtByN,MAAI,CAACtL,IAAK,CAACgW,gBAAgB,EAAE;MAC7B,IAAIhW,IAAI,CAACiW,KAAK,EAAE;QACd3K,MAAI,CAAC4K,UAAU,GAAG,IAAI;QACtB,IAAI;UACFlX,MAAM,SAASsM,MAAI,CAACjD,GAAG,EAAE8N,MAAM,CAACpL,GAAG,CAACzK,EAAE,EAAE;YACtCxD,SAAS,EAAEwO,MAAI,CAAC9B,mBAAmB,CAACiB,eAAe,CAACM,GAAG,CAAC3C,OAAO,EAAEpI,IAAI,CAACW,QAAQ,CAAC7D,SAAS,CAACoC,KAAK,CAAC;YAC/FlC,mBAAmB,EAAEgD,IAAI,CAACW,QAAQ,CAAC3D,mBAAmB,CAACkC;WACxD,EAAEoM,MAAI,CAACxL,IAAI,CAAC;SACd,SAAS;UACRwL,MAAI,CAAC4K,UAAU,GAAG,KAAK;;;MAG3B,OAAOlX,MAAM;IAAC;EAChB;EAEa8V,MAAMA,CAAC1M,OAA4B;IAAA,IAAAqD,MAAA;IAAA,OAAA1K,mHAAA;MAC9C,IAAIwJ,OAAO,SAASkB,MAAI,CAACC,MAAM,CAACnB,OAAO,CAAC,UAAU,EAAE,2BAA2B,CAAC;MAChF,IAAIA,OAAO,EAAE;QACX,IAAIqL,KAAK,GAAGnK,MAAI,CAACjD,KAAK,CAACvJ,OAAO,CAACmJ,OAAO,CAAC;QACvC,IAAIqD,MAAI,CAAC2J,WAAW,EAAE;UACpBhN,OAAO,CAACoD,OAAO,GAAG,QAAQ;SAC3B,MAAM;UACL,MAAMC,MAAI,CAACpD,GAAI,CAACyM,MAAM,CAAC1M,OAAO,CAAC;;QAChC;;IACF;EACH;EAEayM,OAAOA,CAACzM,OAA4B;IAAA,IAAAuD,MAAA;IAAA,OAAA5K,mHAAA;MAC/C4K,MAAI,CAAC0F,EAAE,CAACC,QAAQ,CAAC;QAACC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAEnJ,OAAO,CAAC9H,EAAE,EAAE,SAAS;MAAC,CAAC,CAAC;IAAC;EAC3F;EAEO4T,kBAAkBA,CAACiB,WAAgB;IACxC;IACA,IAAIpK,GAAG,GAAoC,IAAI,CAACvC,KAAK,CAAC4N,IAAI,CAAC1N,CAAC,IAAIA,CAAC,CAACpI,EAAE,IAAI6U,WAAW,CAAC7U,EAAE,CAAC;IACvF,IAAGyK,GAAG,EAAEA,GAAG,CAAC7N,WAAW,GAAGiY,WAAW,CAACjY,WAAW,IAAI,EAAE;EACzD;;SAhNWiX,gCAAiC;;mBAAjCA,MAAgC,EAAAjS,gEAAA,CAAAA,oDAAA;AAAA;;QAAhCiS,MAAgC;EAAA9R,SAAA;EAAAC,SAAA,WAAA+T,uCAAA7T,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAChCtE,2GAAqB;iEACrBC,iFAAa;;;;;;;;;;;;;;;;;;;;;;;;MClB1B+D,6DAAA,uBAAkE;MAKtDA,yDAAA,IAAAoU,uDAAA,gCAAApU,qEAAA,CAIc;MACdA,6DAAA,cAAS;MAEDA,yDAAA,IAAAqU,uDAAA,gCAAArU,qEAAA,CAMc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,gBAAgG;MAC5FA,yDAAA,KAAAsU,wDAAA,gCAAAtU,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,iBAAsH;MAClHA,yDAAA,KAAAuU,wDAAA,gCAAAvU,qEAAA,CAGc;MACdA,yDAAA,KAAAwU,wDAAA,gCAAAxU,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAoG;MAChGA,yDAAA,KAAAyU,wDAAA,iCAAAzU,qEAAA,CAEc;MACdA,yDAAA,KAAA0U,wDAAA,iCAAA1U,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,iBAAiI;MAC7HA,yDAAA,KAAA2U,wDAAA,iCAAA3U,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,wDAAA,kBAAwG;MAC5GA,2DAAA,EAAU;;;;;;;;;;;MApDGA,yDAAA,SAAAO,GAAA,CAAAzC,IAAA,CAAc,aAAAyC,GAAA,CAAAY,YAAA;MAEzBnB,wDAAA,GAAe;MAAfA,yDAAA,UAAAO,GAAA,CAAA+F,KAAA,CAAe,SAAA/F,GAAA,CAAAzC,IAAA,mBAAA8W,GAAA,4BAAArU,GAAA,CAAArC,IAAA,CAAAuN,eAAA,2BAAAlL,GAAA,CAAAuR,QAAA,SAAAvR,GAAA,CAAAuS,GAAA,CAAAlQ,IAAA,CAAArC,GAAA,cAAAA,GAAA,CAAArC,IAAA,CAAAuN,eAAA,+BAAAlL,GAAA,CAAAsT,IAAA,CAAAjR,IAAA,CAAArC,GAAA,WAAAA,GAAA,CAAA4S,IAAA,CAAAvQ,IAAA,CAAArC,GAAA;MASLP,wDAAA,GAA4C;MAA5CA,yDAAA,kDAA4C,aAAAuQ,GAAA,kBAAAA,GAAA;MAS5CvQ,wDAAA,GAAiC;MAAjCA,yDAAA,uCAAiC,aAAAwQ,GAAA,kBAAAA,GAAA;MAMjCxQ,wDAAA,GAA2B;MAA3BA,yDAAA,4BAA2B,2BAAAyQ,GAAA,kBAAAlM,GAAA;MAUTvE,wDAAA,GAAa;MAAbA,yDAAA,cAAa,aAAAwE,IAAA,kBAAAC,IAAA;MAS/BzE,wDAAA,GAA4C;MAA5CA,yDAAA,uDAA4C,aAAA6U,IAAA,kBAAAA,IAAA;MAM7B7U,wDAAA,GAA0B;MAA1BA,yDAAA,WAAAO,GAAA,CAAAkT,IAAA,CAAA7Q,IAAA,CAAArC,GAAA,EAA0B,mBAAAA,GAAA,CAAA2O,cAAA,CAAAtM,IAAA,CAAArC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDM;AAEL;AACa;AAC1B;AAEc;;;;;;;;;;;;;;;;ICQJP,6DAAA,aAAQ;IAAAA,qDAAA,uBAAW;IAAAA,2DAAA,EAAS;;;;;IAE3EA,6DAAA,WAAM;IAACA,qDAAA,GAAoB;IAAAA,2DAAA,EAAO;;;;IAA3BA,wDAAA,GAAoB;IAApBA,iEAAA,MAAAsO,OAAA,CAAA0G,WAAA,MAAoB;;;;;IAIoBhV,6DAAA,aAAQ;IAAAA,qDAAA,gBAAS;IAAAA,2DAAA,EAAS;;;;;IAEzEA,6DAAA,WAAM;IAAAA,qDAAA,GAA8C;IAAAA,2DAAA,EAAO;;;;;IAArDA,wDAAA,GAA8C;IAA9CA,gEAAA,CAAAiV,MAAA,CAAA/V,IAAA,CAAAgW,oBAAA,CAAAC,OAAA,CAAAC,SAAA,EAA8C;;;;;IAKpDpV,6DAAA,aAAiB;IACqCA,qDAAA,gBAAS;IAAAA,2DAAA,EAAS;IACpEA,6DAAA,cAA6B;IAAQA,qDAAA,cAAO;IAAAA,wDAAA,SAAI;IAAAA,qDAAA,aAAM;IAAAA,2DAAA,EAAS;IAC/DA,6DAAA,cAA6B;IAAQA,qDAAA,eAAO;IAAAA,wDAAA,UAAI;IAAAA,qDAAA,kBAAU;IAAAA,2DAAA,EAAS;;;;;IAO3DA,6DAAA,SAA0C;IACtBA,qDAAA,GAAY;IAAAA,2DAAA,EAAK;IACjCA,6DAAA,aAAgB;IAAAA,qDAAA,GAAyD;IAAAA,2DAAA,EAAK;IAC9EA,6DAAA,aAAgB;IAAAA,qDAAA,GAAiE;IAAAA,2DAAA,EAAK;;;;;IAFtEA,wDAAA,GAAY;IAAZA,gEAAA,CAAAqV,OAAA,IAAY;IACZrV,wDAAA,GAAyD;IAAzDA,gEAAA,CAAA+Q,OAAA,CAAApE,MAAA,cAAAoE,OAAA,CAAApE,MAAA,YAAA0I,OAAA,SAAyD;IACzDrV,wDAAA,GAAiE;IAAjEA,gEAAA,CAAA+Q,OAAA,CAAApE,MAAA,aAAA0I,OAAA,MAAAtE,OAAA,CAAApE,MAAA,iBAAA0I,OAAA,IAAiE;;;;;IANjGrV,6DAAA,oBAA6E;IAGjEA,yDAAA,IAAAsV,0DAAA,iBAIK;IACTtV,2DAAA,EAAQ;;;;;IARkBA,yDAAA,wBAAuB;IAGzBA,wDAAA,GAAoB;IAApBA,yDAAA,YAAAuV,OAAA,CAAAC,YAAA,CAAA3G,OAAA,EAAoB;;;ADvB9D,MAAO4G,6BAA8B,SAAQ5H,6EAAsC;EAUvF3T,YAAmBwC,QAAkB,EAAEyJ,GAAqB;IAC1D,KAAK,CAACzJ,QAAQ,EAAEqY,+DAAM,EAAED,4EAAgB,CAAC;IADxB,KAAApY,QAAQ,GAARA,QAAQ;IANpB,KAAAgZ,YAAY,GAAiB,EAAE;IAG/B,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAhJ,MAAM,GAAW,EAAE;IAuCnB,KAAAoC,WAAW,GAAIzC,MAAiB,IAAI;MACzC,IAAIxP,MAAM,GAAU,EAAE;MACtB,IAAIgB,IAAI,GAAQwO,MAAM,CAACtP,KAAK;MAE5BF,MAAM,CAACgM,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC;MACpDhM,MAAM,CAACgM,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC6M,OAAO,CAAC,CAAC;MAC3C,IAAG7X,IAAI,CAAC8X,cAAc,EAAE3Y,MAAM,EAAC;QAC7BH,MAAM,CAACgM,IAAI,CAAC,CAAC,SAAS,EAAE,IAAI,EAAEhL,IAAI,CAAC8X,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG9X,IAAI,CAAC8X,cAAc,CAAC,CAAC;;MAC3F;MACD,IAAG9X,IAAI,CAACxD,WAAW,EAAC;QAClBwC,MAAM,CAACgM,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,EAAEhL,IAAI,CAACxD,WAAW,CAAC,CAAC;;MACnD;MACD,IAAGwD,IAAI,CAACtD,QAAQ,EAAC;QACfsC,MAAM,CAACgM,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,EAAEhL,IAAI,CAACtD,QAAQ,CAAC,CAAC;;MAChD;MACD,IAAGsD,IAAI,CAAC+X,IAAI,EAAE5Y,MAAM,EAAC;QACnBH,MAAM,CAACgM,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,EAAEhL,IAAI,CAAC+X,IAAI,CAAC,CAAC;;MACvC;MACD,OAAO/Y,MAAM;IACf,CAAC;IAtDC;IACA,IAAI,CAACW,eAAe,GAAGf,QAAQ,CAACa,GAAG,CAAyBlB,yFAAsB,CAAC;IACnF,IAAI,CAACgF,KAAK,GAAG,4BAA4B;IACzC,IAAI,CAACiL,MAAM,GAAG,IAAI,CAACvO,EAAE,CAACC,WAAW,CAAC;MAChC4X,cAAc,EAAE;QAAC3X,OAAO,EAAE;MAAE,CAAC;MAC7B3D,WAAW,EAAE;QAAC2D,OAAO,EAAE;MAAE,CAAC;MAC1BzD,QAAQ,EAAE;QAACyD,OAAO,EAAE;MAAE,CAAC;MACvB4X,IAAI,EAAE;QAAC5X,OAAO,EAAE;MAAE;KACnB,CAAC;IACF,IAAI,CAACkG,OAAO,GAAG,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACjC;EAEA7F,QAAQA,CAAA;IACN,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,CAACqX,OAAO,GAAG,IAAI,CAAC9C,SAAS,EAAEtV,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;IAC9C,IAAI,CAACE,eAAe,CAACqK,OAAO,CAAC,IAAI,CAAC6N,OAAO,CAAC,CAACG,IAAI,CAACC,KAAK,IAAI,IAAI,CAACxX,YAAY,GAAGwX,KAAM,CAAC;EACtF;EAEAC,eAAeA,CAAA;IACb,KAAK,CAACA,eAAe,EAAE;IACvB,IAAI,CAACC,kBAAmB,CAACC,OAAO,GAAG,IAAI;IACvC,IAAI,CAAC/P,GAAG,EAAEgQ,gBAAgB,EAAE,CAACL,IAAI,CAACJ,YAAY,IAAG;MAC/C,IAAI,CAACA,YAAY,GAAGA,YAAY,IAAI,EAAE;MACtC,IAAI,CAACO,kBAAmB,CAACC,OAAO,GAAG,KAAK;IAC1C,CAAC,CAAC;EACJ;EAEO3G,WAAWA,CAACjD,MAAiB;IAClCA,MAAM,CAAC7N,QAAQ,CAACmX,cAAc,CAAClX,QAAQ,CAAC,EAAE,CAAC;IAC3C4N,MAAM,CAAC7N,QAAQ,CAACnE,WAAW,CAACoE,QAAQ,CAAC,EAAE,CAAC;IACxC4N,MAAM,CAAC7N,QAAQ,CAACjE,QAAQ,CAACkE,QAAQ,CAAC,EAAE,CAAC;IACrC4N,MAAM,CAAC7N,QAAQ,CAACoX,IAAI,CAACnX,QAAQ,CAAC,EAAE,CAAC;IACjC,KAAK,CAAC6Q,WAAW,CAACjD,MAAM,CAAC;EAC3B;EAuBOkJ,YAAYA,CAAC3M,GAAQ;IAC1B,IAAI,CAAC8D,MAAM,GAAG9D,GAAG,CAACuN,IAAI;IACtB,IAAIC,SAAS,GAAGxN,GAAG,CAACyN,KAAK,YAAYC,KAAK,GAAG1N,GAAG,CAACyN,KAAK,GAAGvX,MAAM,CAACyX,OAAO,CAAC3N,GAAG,CAACyN,KAAK,CAAC;IAClFD,SAAS,CAACI,OAAO,CAAEC,OAAc,IAAI;MACnC,IAAGA,OAAO,CAAC,CAAC,CAAC,YAAYnc,IAAI,EAAEmc,OAAO,CAAC,CAAC,CAAC,GAAG,IAAInc,IAAI,CAACmc,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;MAC9E,IAAGD,OAAO,CAACzZ,MAAM,GAAG,CAAC,IAAIyZ,OAAO,CAAC,CAAC,CAAC,YAAYnc,IAAI,EAAEmc,OAAO,CAAC,CAAC,CAAC,GAAG,IAAInc,IAAI,CAACmc,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;IACtG,CAAC,CAAC;IACF,OAAON,SAAS;EAClB;;SA5EWZ,6BAA8B;;mBAA9BA,MAA6B,EAAAzV,gEAAA,CAAAA,oDAAA,GAAAA,gEAAA,CAAA4W,4EAAA;AAAA;;QAA7BnB,MAA6B;EAAAtV,SAAA;EAAAC,SAAA,WAAAyW,oCAAAvW,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAC7BrE,iFAAa;;;;;;;;;;;;;;;MCjB1B+D,6DAAA,cAAyH;MACvGA,qDAAA,GAAuD;MAAAA,2DAAA,EAAS;MAC9EA,wDAAA,cAAmB;MACnBA,6DAAA,gBAAkN;MAE1MA,wDAAA,yBACsC;MAC1CA,2DAAA,EAAM;MACNA,6DAAA,aAAiB;MACbA,wDAAA,yBAAwK;MAG5KA,2DAAA,EAAM;MAEVA,6DAAA,eAAS;MAEDA,yDAAA,KAAA8W,qDAAA,gCAAA9W,qEAAA,CAA6F;MAC7FA,yDAAA,KAAA+W,qDAAA,iCAAA/W,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,iBAA0E;MACtEA,yDAAA,KAAAgX,qDAAA,iCAAAhX,qEAAA,CAA2F;MAC3FA,yDAAA,KAAAiX,qDAAA,iCAAAjX,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,iBAAsE;MAClEA,yDAAA,KAAAkX,qDAAA,kCAAAlX,qEAAA,CAMc;MACdA,yDAAA,KAAAmX,qDAAA,iCAAAnX,qEAAA,CAYc;MAChBA,2DAAA,EAAS;MACXA,wDAAA,kBAAuD;MAC3DA,2DAAA,EAAU;MACVA,wDAAA,sBAA4C;MAChDA,2DAAA,EAAO;;;;;;;;;MApDDA,yDAAA,QAAAO,GAAA,CAAA4F,GAAA,CAAW,4BAAA5F,GAAA,CAAAa,OAAA,QAAAb,GAAA,CAAAc,KAAA,aAAAd,GAAA,CAAA4D,OAAA,aAAA5D,GAAA,CAAA2P,OAAA,UAAA3P,GAAA,CAAA3C,IAAA;MACCoC,wDAAA,GAAuD;MAAvDA,gEAAA,EAAAO,GAAA,CAAAhC,YAAA,kBAAAgC,GAAA,CAAAhC,YAAA,CAAA6Y,MAAA,aAAA7W,GAAA,CAAAhC,YAAA,kBAAAgC,GAAA,CAAAhC,YAAA,CAAA9C,IAAA,EAAuD;MAE7DuE,wDAAA,GAAe;MAAfA,yDAAA,SAAAO,GAAA,CAAA+L,MAAA,CAAe,UAAA/L,GAAA,CAAAwO,WAAA,YAAAxO,GAAA,CAAA6P,YAAA,CAAAxN,IAAA,CAAArC,GAAA,YAAAA,GAAA,CAAAgP,WAAA,CAAA3M,IAAA,CAAArC,GAAA,qBAAAA,GAAA,CAAA8P,oBAAA,CAAAzN,IAAA,CAAArC,GAAA,iBAAAA,GAAA,CAAA4P,UAAA,IAAA5P,GAAA,CAAA+P,eAAA;MAEkFtQ,wDAAA,GAA2C;MAA3CA,yDAAA,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAmX,cAAA,CAA2C,UAAArV,GAAA,CAAAmV,YAAA;MAI5H1V,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAnE,WAAA;MACV0F,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAjE,QAAA;MACZwF,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAoX,IAAA,WAAAtV,GAAA,CAAA8W,MAAA,CAAAC,eAAA;MAIpBtX,wDAAA,GAAkC;MAAlCA,yDAAA,kBAAAyC,GAAA,CAAkC,aAAA8U,GAAA;MAMlCvX,wDAAA,GAAkC;MAAlCA,yDAAA,kBAAAwX,GAAA,CAAkC,aAAAC,GAAA;MAMlCzX,wDAAA,GAAgC;MAAhCA,yDAAA,kBAAA0X,GAAA,CAAgC,aAAAC,IAAA;MAwBhC3X,wDAAA,GAAkB;MAAlBA,yDAAA,SAAAO,GAAA,CAAAmQ,SAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDqC;AAEM;AACC;AACC;AACX;AACF;AAEC;AACJ;;;;;;;;;;;;;;;;;;;;ICR3D1Q,6DAAA,kBAAwD;IAC6EA,yDAAA,oBAAA4X,4EAAA7W,MAAA;MAAAf,4DAAA,CAAA6F,IAAA;MAAA,MAAAiS,OAAA,GAAA9X,4DAAA;MAAA,OAAUA,0DAAA,CAAA8X,OAAA,CAAAG,eAAA,CAAAlX,MAAA,CAAuB;IAAA,EAAC;IAACf,2DAAA,EAAe;IACnLA,6DAAA,uBAAwT;IAAtLA,yDAAA,oBAAAkY,4EAAAnX,MAAA;MAAAf,4DAAA,CAAA6F,IAAA;MAAA,MAAAf,OAAA,GAAA9E,4DAAA;MAAA,OAAUA,0DAAA,CAAA8E,OAAA,CAAAqT,kBAAA,CAAApX,MAAA,CAA0B;IAAA,EAAC;IAAiJf,2DAAA,EAAe;;;;IAF9SA,yDAAA,YAAA8N,MAAA,CAAAsK,cAAA,CAA0B;IACrCpY,wDAAA,GAAU;IAAVA,yDAAA,WAAU,YAAA8N,MAAA,CAAAxB,MAAA,CAAA7N,QAAA,CAAA4Z,OAAA;IACVrY,wDAAA,GAAU;IAAVA,yDAAA,WAAU,YAAA8N,MAAA,CAAAxB,MAAA,CAAA7N,QAAA,CAAA6Z,UAAA,eAAAxK,MAAA,CAAA1Q,GAAA,CAAAmb,IAAA,iCAAAzK,MAAA,CAAA1Q,GAAA,CAAAmb,IAAA;;;;;IAkBhBvY,6DAAA,eAAiF;IAAAA,wDAAA,YAAgC;IAACA,qDAAA,GAAwB;IAAAA,2DAAA,EAAO;;;;IAA/BA,wDAAA,GAAwB;IAAxBA,iEAAA,MAAAyR,OAAA,CAAAlW,QAAA,kBAAAkW,OAAA,CAAAlW,QAAA,CAAA0B,MAAA,KAAwB;;;;;IAA1I+C,yDAAA,IAAAwY,iEAAA,mBAAiJ;;;;IAA1IxY,yDAAA,SAAAyR,OAAA,CAAAlW,QAAA,kBAAAkW,OAAA,CAAAlW,QAAA,CAAA0B,MAAA,CAA0B;;;;;IAGjC+C,wDAAA,qCAAwN;;;;;IAA5LA,yDAAA,WAAA2R,OAAA,CAAc,aAAA8G,OAAA,CAAA3G,QAAA,WAAA2G,OAAA,CAAApa,KAAA,oBAAAsT,OAAA,CAAA9V,eAAA,mBAAA8V,OAAA,CAAA7V,eAAA,eAAA6V,OAAA,CAAAzW,UAAA;;;;;IALlD8E,6DAAA,iBAA6L;IACzLA,yDAAA,IAAA0Y,0DAAA,iCAAA1Y,qEAAA,CAEc;IACdA,yDAAA,IAAA2Y,0DAAA,iCAAA3Y,qEAAA,CAEc;IAClBA,2DAAA,EAAS;;;;;;IAPyDA,yDAAA,mBAAkB,SAAAgE,MAAA,CAAA5G,GAAA,CAAAC,SAAA,yBAAAub,IAAA,oBAAAC,IAAA;;;;;IAU5E7Y,6DAAA,gBAAqC;IAAAA,qDAAA,UAAG;IAAAA,2DAAA,EAAQ;;;;IAA7BA,yDAAA,WAAA8Y,UAAA,CAAiB;;;;;IAGpC9Y,6DAAA,gBAAkC;IAAAA,qDAAA,GAAe;IAAAA,2DAAA,EAAQ;;;;IAAvBA,wDAAA,GAAe;IAAfA,iEAAA,MAAA+Y,OAAA,CAAA3B,MAAA,KAAe;;;;;IAKjDpX,6DAAA,gBAAmC;IAAAA,qDAAA,WAAI;IAAAA,2DAAA,EAAQ;IAAAA,wDAAA,SAAI;IACnDA,qDAAA,GACJ;;;;;IAFqBA,yDAAA,WAAAgZ,UAAA,CAAiB;IAClChZ,wDAAA,GACJ;IADIA,iEAAA,eAAAiZ,OAAA,CAAA3M,MAAA,CAAA7N,QAAA,CAAA4Z,OAAA,CAAArb,KAAA,0BACJ;;;;;IAIIgD,wDAAA,gBAA8J;;;;;IAA7FA,yDAAA,SAAAkZ,OAAA,CAAAhL,aAAA,CAAAC,OAAA,CAAA+K,OAAA,CAAA9b,GAAA,CAAAC,SAAA,aAAwD,UAAA8b,OAAA,CAAAhb,OAAA,CAAAkO,KAAA;;;;;IAFzHrM,6DAAA,eAA8D;IAAAA,qDAAA,GAAY;IAAAA,2DAAA,EAAO;IAAAA,wDAAA,SAAI;IAErFA,yDAAA,IAAAoZ,yDAAA,oBAA8J;;;;;IAF3HpZ,0DAAA,wBAA0B;IAACA,wDAAA,GAAY;IAAZA,gEAAA,CAAAmZ,OAAA,CAAA1d,IAAA,CAAY;IACnEuE,wDAAA,GAA0C;IAA1CA,yDAAA,SAAAuV,OAAA,CAAArH,aAAA,CAAAC,OAAA,aAA0C,UAAAgL,OAAA,CAAAxN,QAAA,CAAAlQ,IAAA;IACzCuE,wDAAA,GAAqC;IAArCA,yDAAA,UAAAuV,OAAA,CAAAjJ,MAAA,CAAA7N,QAAA,CAAA4Z,OAAA,CAAArb,KAAA,CAAqC;;;;;IAK7CgD,6DAAA,WAAM;IAACA,qDAAA,GAA0C;IAAAA,2DAAA,EAAO;;;;;IAAjDA,wDAAA,GAA0C;IAA1CA,iEAAA,MAAAsZ,OAAA,CAAAnT,GAAA,CAAAgB,gBAAA,CAAAoS,OAAA,CAAAjf,WAAA,MAA0C;;;;;IAKjD0F,6DAAA,WAAM;IAACA,qDAAA,GAAuC;IAAAA,2DAAA,EAAO;;;;;IAA9CA,wDAAA,GAAuC;IAAvCA,iEAAA,MAAAwZ,OAAA,CAAArT,GAAA,CAAAgB,gBAAA,CAAAsS,OAAA,CAAAjf,QAAA,MAAuC;;;;;IAK9CwF,qDAAA,kCAA0B;IAAAA,wDAAA,SAAI;IAC9BA,qDAAA,wBACJ;;;;;IAEIA,wDAAA,gBAAuJ;;;;;IAAvHA,yDAAA,iBAAgB,SAAA0Z,OAAA,CAAAxL,aAAA,CAAAC,OAAA,2BAAAwL,OAAA,CAAA/R,YAAA,kBAAA+R,OAAA,CAAA/R,YAAA,CAAAnM,IAAA;;;;;IAChDuE,wDAAA,gBAAsJ;;;;;IAAtHA,yDAAA,iBAAgB,SAAA4Z,OAAA,CAAA1L,aAAA,CAAAC,OAAA,0BAAAwL,OAAA,CAAAE,YAAA,kBAAAF,OAAA,CAAAE,YAAA,CAAApe,IAAA;;;;;IADhDuE,yDAAA,IAAA8Z,yDAAA,oBAAuJ;IACvJ9Z,yDAAA,IAAA+Z,yDAAA,oBAAsJ;;;;IAD9I/Z,yDAAA,SAAA2Z,OAAA,CAAA/R,YAAA,CAAsB;IACtB5H,wDAAA,GAAsB;IAAtBA,yDAAA,SAAA2Z,OAAA,CAAAE,YAAA,CAAsB;;;;;IAK9B7Z,wDAAA,gBAAsN;;;;;IAA/MA,yDAAA,UAAAga,OAAA,CAAA3C,MAAA,CAAA4C,QAAA,CAAAD,OAAA,CAAA3C,MAAA,CAAA6C,oBAAA,EAAAC,OAAA,CAAAve,MAAA,EAAkE,SAAAoe,OAAA,CAAA3C,MAAA,CAAAlJ,OAAA,CAAA6L,OAAA,CAAA3C,MAAA,CAAA6C,oBAAA,EAAAC,OAAA,CAAAve,MAAA,YAAAoe,OAAA,CAAA3C,MAAA,CAAA+C,QAAA,CAAAJ,OAAA,CAAA3C,MAAA,CAAA6C,oBAAA,EAAAC,OAAA,CAAAve,MAAA;;;ADlDnF,MAAOye,yBAA0B,SAAQxM,6EAAkD;EAoC/F3T,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEpB,4EAAY,EAAEe,yFAAsB,CAAC;IADpC,KAAAK,QAAQ,GAARA,QAAQ;IAjCpB,KAAA4d,UAAU,GAAY,IAAI;IAO1B,KAAAC,sBAAsB,GAAY,KAAK;IACvC,KAAAnC,cAAc,GAAoB,EAAE;IACpC,KAAAoC,MAAM,GAAoB,EAAE;IAC5B,KAAAC,WAAW,GAAc;MAAEpL,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ;IAAC,CAAE;IAqBvD,KAAAyC,QAAQ,GAAY,KAAK;IA4HzB,KAAA/C,WAAW,GAAIzC,MAAiB,IAAI;MACzC,IAAIxP,MAAM,GAAU,EAAE;MACtB,IAAIgB,IAAI,GAAQwO,MAAM,CAACtP,KAAK;MAC5B;;;;;;;MAOA,IAAI,IAAI,CAACsP,MAAM,EAAE7N,QAAQ,CAAC6Z,UAAU,CAACtb,KAAK,EAAE;QAC1C,IAAI0d,EAAE,GAA+B,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,IAAI,CAACxc,IAAI,CAACyc,QAAQ,IAAI,EAAE,EAAEpU,GAAG,CAACqU,CAAC,IAAIA,CAAC,CAACxc,EAAE,CAAC,CAAC;QACpG,IAAI,IAAI,CAACF,IAAI,CAAC2c,0BAA0B,EAAE,EAAE;UAC1C,IAAIC,uBAAuB,GAAG,IAAI,CAAC5c,IAAI,CAACyc,QAAQ,EAAErO,MAAM,CAAC9F,CAAC,IAAI,IAAI,CAACtI,IAAI,CAACmN,eAAe,CAAC7E,CAAC,CAAC,CAAC;UAC3F,IAAIuU,EAAE,GAAyBD,uBAAuB,EAAEvU,GAAG,CAACqU,CAAC,IAAIA,CAAC,CAACtP,WAAW,EAAElN,EAAE,IAAI,EAAE,CAAC,CAACkO,MAAM,CAAC9F,CAAC,IAAIA,CAAC,CAACvJ,MAAM,CAAC;UAC/G,IAAI8d,EAAE,EAAE9d,MAAM,EAAEyd,EAAE,CAAC,CAAC,CAAC,CAAC5R,IAAI,CAAC,GAAGiS,EAAE,CAAC;UACjC,IAAIC,EAAE,GAAG,CAAC,wBAAwB,EAAE,IAAI,EAAEF,uBAAuB,EAAEvU,GAAG,CAACqU,CAAC,IAAIA,CAAC,CAACxc,EAAE,CAAC,CAAC;UAClFtB,MAAM,CAACgM,IAAI,CAAC,CAAC,IAAI,EAAE4R,EAAE,EAAEM,EAAE,CAAC,CAAC;SAC5B,MAAM;UACLle,MAAM,CAACgM,IAAI,CAAC4R,EAAE,CAAC;;;MAGnB,IAAI5c,IAAI,CAACrC,IAAI,EAAEwB,MAAM,EAAE;QACrBH,MAAM,CAACgM,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,GAAGhL,IAAI,CAACrC,IAAI,CAACuT,IAAI,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;MAE/E,IAAInR,IAAI,CAACxD,WAAW,EAAE;QACpBwC,MAAM,CAACgM,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,EAAEhL,IAAI,CAACxD,WAAW,CAAC,CAAC;;MAEtD,IAAIwD,IAAI,CAACtD,QAAQ,EAAE;QACjBsC,MAAM,CAACgM,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,EAAEhL,IAAI,CAACtD,QAAQ,CAAC,CAAC;;MAEhD,IAAIsD,IAAI,CAAC5C,UAAU,EAAE;QACnB4B,MAAM,CAACgM,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAEhL,IAAI,CAAC5C,UAAU,CAAC,CAAC;;MAEpD,IAAI4C,IAAI,CAACjC,eAAe,EAAE;QACxBiB,MAAM,CAACgM,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAEhL,IAAI,CAACjC,eAAe,CAAC,CAAC;;MAE9D,IAAIiC,IAAI,CAAChC,eAAe,EAAE;QACxBgB,MAAM,CAACgM,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAEhL,IAAI,CAAChC,eAAe,CAAC,CAAC;;MAE9D,IAAIgC,IAAI,CAAClC,MAAM,EAAE;QACfkB,MAAM,CAACgM,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAEhL,IAAI,CAAClC,MAAM,CAAC,CAAC;;MAE5C;MACA;MACAkB,MAAM,CAACgM,IAAI,CAAC,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;MAC9C,OAAOhM,MAAM;IACf,CAAC;IAvKC,IAAI,CAACQ,UAAU,GAAGZ,QAAQ,CAACa,GAAG,CAAoBhB,8EAAiB,CAAC;IACpE,IAAI,CAAC0H,eAAe,GAAGvH,QAAQ,CAACa,GAAG,CAAyBnB,wFAAsB,CAAC;IACnF,IAAI,CAACsB,cAAc,GAAGhB,QAAQ,CAACa,GAAG,CAAwBpB,uFAAqB,CAAC;IAChF,IAAI,CAACmL,mBAAmB,GAAG5K,QAAQ,CAACa,GAAG,CAAsBiF,uEAAmB,CAAC;IACjF,IAAI,CAAC2I,kBAAkB,GAAG,IAAI,CAACjN,IAAI,CAACC,OAAQ;IAC5C;IACA,IAAI,CAACkD,KAAK,GAAG,IAAI,CAACjE,GAAG,CAACC,SAAS,CAAC,oBAAoB,CAAC;IACrD,IAAI,CAACiP,MAAM,GAAG,IAAI,CAACvO,EAAE,CAACC,WAAW,CAAC;MAChCqa,OAAO,EAAE;QAAEpa,OAAO,EAAE;MAAI,CAAE;MAC1Bqa,UAAU,EAAE;QAAEra,OAAO,EAAE;MAAI,CAAE;MAC7BxC,IAAI,EAAE;QAAEwC,OAAO,EAAE;MAAE,CAAE;MACrB3D,WAAW,EAAE;QAAE2D,OAAO,EAAE;MAAE,CAAE;MAC5BzD,QAAQ,EAAE;QAAEyD,OAAO,EAAE;MAAE,CAAE;MACzBrC,MAAM,EAAE;QAAEqC,OAAO,EAAE;MAAE,CAAE;MACvB/C,UAAU,EAAE;QAAE+C,OAAO,EAAE;MAAI,CAAE;MAC7BpC,eAAe,EAAE;QAAEoC,OAAO,EAAE;MAAI,CAAE;MAClCnC,eAAe,EAAE;QAAEmC,OAAO,EAAE;MAAI;KACjC,CAAC;IACF,IAAI,CAACL,IAAI,GAAG,CACV,sBAAsB,EACtB,kBAAkB,EAClB,sBAAsB,EACtB,uBAAuB,EACvB,kBAAkB,EAClB,kBAAkB,EAClB,8CAA8C,EAC9C,mBAAmB,EACnB,8BAA8B,EAC9B,qBAAqB,CACtB;IACD,IAAI,CAACsS,OAAO,GAAG,CAAC;MAAE+K,KAAK,EAAE,eAAe;MAAElS,KAAK,EAAE;IAAS,CAAE,CAAC;IAC7D,IAAI,CAACmS,mBAAmB,GAAG;MAAEnS,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,IAAI,CAACkF,aAAa,CAACC,OAAO,CAAC,QAAQ,CAAC;MAAEjF,OAAO,EAAE,CAAC,MAAK;QAAG,IAAI,CAACiG,EAAE,CAACC,QAAQ,CAAC;UAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ;QAAC,CAAE,EAAE;UAAE7Q,QAAQ,EAAE;YAAED,YAAY,EAAE,IAAI,CAAC4c;UAAK,CAAE;UAAEpI,UAAU,EAAGE,WAAW,IAAI;YAAG,IAAI,CAACmI,OAAO,EAAE;UAAE;QAAC,CAAE,CAAC;MAAE,CAAC,EAAExY,IAAI,CAAC,IAAI;IAAC,CAAE;IAC7R,IAAI,CAACyY,oBAAoB,GAAG;MAAEtS,KAAK,EAAE,QAAQ;MAAEuS,QAAQ,EAAE,CAAC,IAAI,CAACf,sBAAsB;MAAEvR,IAAI,EAAE,IAAI,CAACkF,aAAa,CAACC,OAAO,CAAC,QAAQ,CAAC;MAAEjF,OAAO,EAAE,CAAC,MAAK;QAAG,IAAI,CAACiG,EAAE,CAACC,QAAQ,CAAC;UAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ;QAAC,CAAE,EAAE;UAAE0D,UAAU,EAAGE,WAAW,IAAI;YAAG,IAAI,CAACmI,OAAO,EAAE;UAAE;QAAC,CAAE,CAAC;MAAE,CAAC,EAAExY,IAAI,CAAC,IAAI;IAAC,CAAE;IAC9R,IAAI,CAAC2Y,aAAa,GAAG;MAAExS,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,OAAO,EAAG3K,YAA0B,IAAK,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE9Q,YAAY,CAACH,EAAE,EAAE,MAAM;MAAC,CAAE,EAAE,IAAI,CAACod,cAAc,CAACjd,YAAY,CAAC;IAAC,CAAE;IAChQ,IAAI,CAACkd,cAAc,GAAG;MAAE1S,KAAK,EAAE,UAAU;MAAEC,IAAI,EAAE,eAAe;MAAEE,OAAO,EAAE,IAAI,CAACwS,QAAQ,CAAC9Y,IAAI,CAAC,IAAI;IAAC,CAAE;IACrG,IAAI,CAAC+Y,aAAa,GAAG;MAAE5S,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAAC0S,OAAO,CAAChZ,IAAI,CAAC,IAAI;IAAC,CAAE;IAC/N,IAAI,CAACiZ,oBAAoB,GAAG;MAAE9S,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,WAAW,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,WAAW,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAAC4S,aAAa,CAAClZ,IAAI,CAAC,IAAI;IAAC,CAAE;IACrP,IAAI,CAACmZ,wBAAwB,GAAG;MAAEhT,KAAK,EAAE,oBAAoB;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,WAAW,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,WAAW,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAAC8S,iBAAiB,CAACpZ,IAAI,CAAC,IAAI;IAAC,CAAE;IACjQ,IAAI,CAACqZ,wBAAwB,GAAG;MAAElT,KAAK,EAAE,oBAAoB;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,OAAO,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,OAAO,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAACgT,iBAAiB,CAACtZ,IAAI,CAAC,IAAI;IAAC,CAAE;IACzP,IAAI,CAACuZ,0BAA0B,GAAG;MAAEpT,KAAK,EAAE,sBAAsB;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,aAAa,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,aAAa,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAACkT,mBAAmB,CAACxZ,IAAI,CAAC,IAAI;IAAC,CAAE;IAC3Q,IAAI,CAACyZ,cAAc,GAAG;MAAEtT,KAAK,EAAE,UAAU;MAAE3K,EAAE,EAAE,WAAW;MAAE4K,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,WAAW,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,WAAW,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAACoT,QAAQ,CAAC1Z,IAAI,CAAC,IAAI;IAAC,CAAE;IACrP,IAAI,CAAC2Z,eAAe,GAAG;MAAExT,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE,mBAAmB;MAAEE,OAAO,EAAG3K,YAA0B,IAAK,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE9Q,YAAY,CAACH,EAAE,EAAE,SAAS;MAAC,CAAE,EAAE;QAAEkR,KAAK,EAAE;MAAI,CAAE;IAAC,CAAE;IAC1N,IAAI,CAACkN,iBAAiB,GAAG;MAAEzT,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE,aAAa;MAAEE,OAAO,EAAE,IAAI,CAACuT,WAAW,CAAC7Z,IAAI,CAAC,IAAI;IAAC,CAAE;IAC5G,IAAI,CAAC8Z,aAAa,GAAG;MAAE3T,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,aAAa;MAAEE,OAAO,EAAE,IAAI,CAAC0J,MAAM,CAAChQ,IAAI,CAAC,IAAI;IAAC,CAAE;IAC/F,IAAI,CAAC+Z,eAAe,GAAG;MAAE5T,KAAK,EAAE,WAAW;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,OAAO,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,OAAO,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAAC0T,SAAS,CAACha,IAAI,CAAC,IAAI;IAAC,CAAE;IAC/N,IAAI,CAACia,yBAAyB,GAAG;MAAE9T,KAAK,EAAE,0BAA0B;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,aAAa,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,aAAa,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAAC4T,kBAAkB,CAACla,IAAI,CAAC,IAAI;IAAC,CAAE;IAC7Q,IAAI,CAACma,UAAU,GAAG;MAAEhU,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEhR,OAAO,EAAG3K,YAA0B,IAAK,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE9Q,YAAY,CAACH,EAAE,EAAE,MAAM;MAAC,CAAE;IAAC,CAAE;IACnT,IAAI,CAAC4e,cAAc,GAAG;MAAEjU,KAAK,EAAE,UAAU;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,OAAO,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,OAAO,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAAC+T,QAAQ,CAACra,IAAI,CAAC,IAAI;IAAC,CAAE;IAC5N,IAAI,CAACsa,yBAAyB,GAAG;MAAEnU,KAAK,EAAE,wBAAwB;MAAEC,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAACiU,kBAAkB,CAACva,IAAI,CAAC,IAAI;IAAC,CAAE;IACrQ,IAAI,CAACwa,eAAe,GAAG;MAAErU,KAAK,EAAE,WAAW;MAAE3K,EAAE,EAAE,SAAS;MAAE4K,IAAI,EAAE,IAAI,CAACqO,MAAM,CAAClJ,OAAO,CAAC,IAAI,CAACkJ,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEjR,KAAK,EAAE,IAAI,CAACoO,MAAM,CAAC4C,QAAQ,CAAC,IAAI,CAAC5C,MAAM,CAAC6C,oBAAoB,EAAE,UAAU,CAAC;MAAEhR,OAAO,EAAE,IAAI,CAACmU,SAAS,CAACza,IAAI,CAAC,IAAI;IAAC,CAAE;IACpP,IAAI,CAAC4X,MAAM,GAAG,CAAC,IAAI,CAACe,aAAa,EAAE,IAAI,CAACE,cAAc,EAAE,IAAI,CAACE,aAAa,EAAE,IAAI,CAACI,wBAAwB,EAAE,IAAI,CAACE,wBAAwB,EACxI,IAAI,CAACE,0BAA0B,EAAE,IAAI,CAACE,cAAc,EAAE,IAAI,CAACE,eAAe,EAAE,IAAI,CAACC,iBAAiB,EAAE,IAAI,CAACE,aAAa,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACE,yBAAyB,EAC5K,IAAI,CAACE,UAAU,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACE,yBAAyB,EAAE,IAAI,CAACE,eAAe,CAAC;IAC3F;EACF;;EAEA9e,QAAQA,CAAA;IACN,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,CAACwT,QAAQ,GAAG,CAAC,CAAC,IAAI,CAACwL,WAAW,EAAExL,QAAQ;IAC5C,IAAI,CAACwI,UAAU,GAAG,OAAO,IAAI,CAACgD,WAAW,EAAEhD,UAAU,IAAI,WAAW,GAAI,IAAI,CAACgD,WAAW,CAAChD,UAAU,IAAI,MAAM,GAAI,IAAI;IACrH,IAAI,CAACnK,UAAU,GAAG,IAAI,CAAC3R,QAAQ,EAAE2R,UAAU,IAAI,IAAI,CAACA,UAAU;IAC9D,IAAI,IAAI,CAAC2B,QAAQ,EAAE;MACjB,IAAI,CAACzQ,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,aAAa;MACvC,IAAI,CAACiL,MAAO,CAAC7N,QAAQ,CAACvD,UAAU,CAACwD,QAAQ,CAAC,IAAI,CAACR,IAAI,CAACqf,aAAa,EAAE,EAAEnf,EAAE,IAAI,IAAI,CAAC;MAChF,IAAI,CAACkO,MAAO,CAAC7N,QAAQ,CAAC6Z,UAAU,CAAC5Z,QAAQ,CAAC,KAAK,CAAC;;IAElD,IAAI,CAAC8e,uBAAuB,EAAE;IAC9B;EACF;;EAEAC,qBAAqBA,CAAA;IACnB,IAAI,IAAI,CAACvf,IAAI,CAACC,OAAO,IAAI,IAAI,CAACgN,kBAAkB,EAAE;MAChD,IAAI,CAACA,kBAAkB,GAAG,IAAI,CAACjN,IAAI,CAACC,OAAQ;MAC5C,IAAI,CAACqf,uBAAuB,EAAE;MAC9B,IAAI,CAACnf,KAAK,CAACe,aAAa,EAAE;;EAE9B;EAEOse,UAAUA,CAACC,IAAa;IAC7B,IAAIA,IAAI,IAAI,IAAI,CAAC7L,QAAQ,EAAE;MACzB6L,IAAI,CAAClH,OAAO,CAACmH,CAAC,IAAG;QACf,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAClX,QAAQ,CAAEkX,CAAkB,CAAChiB,MAAM,CAAC,EAAE,IAAI,CAACmW,IAAK,CAAC8L,MAAM,CAACD,CAAC,CAACxf,EAAE,CAAC;MACzF,CAAC,CAAC;;EAEN;EAEOof,uBAAuBA,CAAA;IAC5B;;;;;;IAMA;;;;;;EAAA;EAQKM,8BAA8BA,CAAA;IACnC,OAAO,IAAI,CAAC5f,IAAI,CAACC,OAAO,EAAEmN,WAAW,EAAEyS,cAAc,EAAEzR,MAAM,CAAC9F,CAAC,IAAI,IAAI,CAACc,mBAAmB,CAAC0W,OAAO,CAACxX,CAAC,CAAC,CAAC,IAAI,EAAE;EAC/G;EAEOyX,sCAAsCA,CAAA;IAC3C,OAAO,IAAI,CAAC/f,IAAI,EAAEC,OAAO,EAAE4f,cAAc,EAAEzR,MAAM,CAAC9F,CAAC,IAAI,IAAI,CAACc,mBAAmB,CAAC0W,OAAO,CAACxX,CAAC,CAAC,CAAC,IAAI,EAAE;EACnG;EAEO+I,WAAWA,CAACjD,MAAiB;IAClCA,MAAM,CAAC7N,QAAQ,CAAChD,IAAI,CAACiD,QAAQ,CAAC,EAAE,CAAC;IACjC4N,MAAM,CAAC7N,QAAQ,CAACnE,WAAW,CAACoE,QAAQ,CAAC,IAAI,CAAC;IAC1C4N,MAAM,CAAC7N,QAAQ,CAACjE,QAAQ,CAACkE,QAAQ,CAAC,IAAI,CAAC;IACvC4N,MAAM,CAAC7N,QAAQ,CAACvD,UAAU,CAACwD,QAAQ,CAAC,IAAI,CAAC;IACzC4N,MAAM,CAAC7N,QAAQ,CAAC5C,eAAe,CAAC6C,QAAQ,CAAC,IAAI,CAAC;IAC9C4N,MAAM,CAAC7N,QAAQ,CAAC3C,eAAe,CAAC4C,QAAQ,CAAC,IAAI,CAAC;IAC9C4N,MAAM,CAAC7N,QAAQ,CAAC7C,MAAM,CAAC8C,QAAQ,CAAC,IAAI,CAAC;IACrC,KAAK,CAAC6Q,WAAW,CAACjD,MAAM,CAAC;EAC3B;EAmDO2L,eAAeA,CAACnY,KAAY;IACjC,MAAMuY,OAAO,GAAG,IAAI,CAAC/L,MAAO,CAAC7N,QAAQ,CAAC4Z,OAAO,CAACrb,KAAK;IACnD,IAAKqb,OAAO,IAAI,CAAC,IAAI,CAACnI,OAAO,EAAEjT,MAAM,IAAM,CAACob,OAAO,IAAI,IAAI,CAACnI,OAAO,EAAEjT,MAAO,EAAE;MAC5E,IAAI,CAACiT,OAAO,GAAGmI,OAAO,GAAG,CAAC;QAAE4C,KAAK,EAAE,eAAe;QAAElS,KAAK,EAAE;MAAS,CAAE,CAAC,GAAG,EAAE;MAC5E,IAAI,CAACgJ,IAAK,CAACmM,YAAY,EAAE;;EAE7B;EAEO/F,kBAAkBA,CAACrY,KAAY;IACpC,IAAI,IAAI,CAACwM,MAAO,CAAC7N,QAAQ,CAAC6Z,UAAU,CAACtb,KAAK,EAAE,IAAI,CAACsP,MAAO,CAAC7N,QAAQ,CAACvD,UAAU,CAACwD,QAAQ,CAAC,IAAI,CAAC;IAC3F,IAAI,CAACqT,IAAK,CAACmM,YAAY,EAAE;EAC3B;EAEO3R,cAAcA,CAAC1D,GAAiB;IACrC,IAAI/L,MAAM,GAAoB,EAAE;IAChC,IAAIyB,YAAY,GAAiBsK,GAAmB;IACpD,QAAQ,IAAI,CAACvB,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC;MAC1D,KAAK,UAAU;QACb,IAAI,IAAI,CAAC6f,oBAAoB,CAAC,IAAI,CAACvB,yBAAyB,EAAEhU,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAAC+T,yBAAyB,CAAC,CAAC,KAAM/f,MAAM,CAACgM,IAAI,CAAC,IAAI,CAACyT,eAAe,CAAC;QACvJ;MACF,KAAK,aAAa;QAChB,IAAI,IAAI,CAAC6B,oBAAoB,CAAC,IAAI,CAACzB,eAAe,EAAE9T,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAAC6T,eAAe,CAAC;QAC3F;MACF,KAAK,OAAO;QACV,IAAI,IAAI,CAACyB,oBAAoB,CAAC,IAAI,CAAC/B,cAAc,EAAExT,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAACuT,cAAc,CAAC;QACzF;MACF,KAAK,WAAW;QACd,IAAI,IAAI,CAAC+B,oBAAoB,CAAC,IAAI,CAACzC,aAAa,EAAE9S,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAAC6S,aAAa,CAAC;QACvF;MACF,KAAK,UAAU;QACb,IAAI,IAAI,CAACyC,oBAAoB,CAAC,IAAI,CAACpB,cAAc,EAAEnU,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAACkU,cAAc,CAAC;QACzF;MACF,KAAK,UAAU;QACb,IAAI,IAAI,CAACoB,oBAAoB,CAAC,IAAI,CAAC3C,cAAc,EAAE5S,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAAC2S,cAAc,CAAC;QACzF;MACF,KAAK,WAAW;QACd,IAAI,IAAI,CAAC2C,oBAAoB,CAAC,IAAI,CAAC5B,iBAAiB,EAAE3T,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAAC,IAAI,CAAC0T,iBAAiB,CAAC;QAC/F;MACF,KAAK,WAAW;QACd;;IAEJ,IAAI,CAAC1f,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACgM,IAAI,CAAC,IAAI,CAACyT,eAAe,CAAC;IACrD,OAAOzf,MAAM;EACf;EAEOoS,cAAcA,CAACrG,GAAiB;IACrC,IAAI/L,MAAM,GAAoB,EAAE;IAChC,IAAI,CAACqe,KAAK,GAAGtS,GAAG;IAChB,IAAI,CAAC2R,MAAM,CAAC/D,OAAO,CAAC4H,KAAK,IAAG;MAC1B,IAAI,IAAI,CAACD,oBAAoB,CAACC,KAAK,EAAExV,GAAG,CAAC,EAAE/L,MAAM,CAACgM,IAAI,CAACuV,KAAK,CAAC;IAC/D,CAAC,CAAC;IACF,OAAOvhB,MAAM;EACf;EAEOshB,oBAAoBA,CAACC,KAAoB,EAAE9f,YAA0B;IAC1E,QAAQ8f,KAAK;MACX,KAAK,IAAI,CAACnD,mBAAmB;QAC3B;;;;;;;QAOA,OAAO,CAAC,IAAI,CAACpJ,QAAQ,IAAK,IAAI,CAACxK,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,OAAO,IAAKA,YAAY,CAACrD,UAAU,IAAI,IAAI,CAACgD,IAAI,CAACC,OAAO,EAAE2D,cAAe,KAAK,IAAI,CAAC5D,IAAI,CAACmN,eAAe,EAAE,IAAK,IAAI,CAACnN,IAAI,CAACogB,gBAAgB,CAAC,IAAI,CAACpgB,IAAI,CAACC,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,cAAc,CAAE,CAAC,IACzR,IAAI,CAACwS,sCAAsC,EAAE,CAAC3R,MAAM,CAAC9F,CAAC,IAAI,IAAI,CAACtH,IAAI,CAACqf,YAAY,CAAC,CAAC;UAAEC,KAAK,EAAEhY,CAAC,CAAClM,WAAW;UAAEmkB,GAAG,EAAEjY,CAAC,CAAChM;QAAS,CAAE,EAAE;UAAEgkB,KAAK,EAAEjgB,YAAY,CAACjE,WAAW;UAAEmkB,GAAG,EAAElgB,YAAY,CAAC/D;QAAS,CAAE,CAAC,CAAC,CAAC,CAACyC,MAAM,IAAI,CAAG;MACpN,KAAK,IAAI,CAACse,aAAa;QACrB;;;;;;;;;;;QAWA,IAAImD,SAAS,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAChY,QAAQ,CAAC,IAAI,CAACY,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,CAAC,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,CAAC;QACnN,IAAIwgB,SAAS,GAAG,IAAI,CAACzgB,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,EAAE2D,cAAc,CAAC,IAAI,IAAI,CAAC5D,IAAI,CAACuN,eAAe,CAAC,kBAAkB,CAAC;QAChI,IAAImT,SAAS,GAAG,IAAI,CAAC1gB,IAAI,CAACsN,YAAY,CAAC,2BAA2B,EAAEjN,YAAY,CAACJ,OAAQ,CAAC2D,cAAe,CAAC;QAC1G,IAAI+c,SAAS,GAAG,IAAI,CAACvX,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,OAAO,IAAI,IAAI,CAACL,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;QACpN,IAAIqT,SAAS,GAAG,IAAI,CAAC5gB,IAAI,CAACuN,eAAe,CAAC,kBAAkB,CAAC;QAC7D,OAAO,CAAC,IAAI,CAACqG,QAAQ,IAAI,IAAI,CAAC5T,IAAI,CAACuN,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAACnE,mBAAmB,CAACyX,QAAQ,CAACxgB,YAAY,CAAC,KAAKmgB,SAAS,IAAIC,SAAS,IAAIC,SAAS,IAAIC,SAAS,IAAIC,SAAS,CAAC;MAC1L,KAAK,IAAI,CAACrD,cAAc;QACtB;;;;;;QAMA,OAAO,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC/U,QAAQ,CAAC,IAAI,CAACY,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,CAAC,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,cAAc,CAAE,CAAC;MACzP,KAAK,IAAI,CAACkQ,aAAa;QACrB;;;;;;;;;QASA,IAAIqD,OAAO,GAAG,IAAI,CAAC9gB,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,EAAE2D,cAAc,CAAC;QAC7E,IAAImd,OAAO,GAAG,IAAI,CAAC/gB,IAAI,CAACsN,YAAY,CAAC,yBAAyB,EAAEjN,YAAY,CAACJ,OAAQ,CAACC,EAAG,CAAC;QAC1F,IAAI8gB,OAAO,GAAG,IAAI,CAAChhB,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,EAAEmN,WAAW,CAAC,IAAI,IAAI,CAACpN,IAAI,CAACuN,eAAe,CAAC,eAAe,CAAC;QACzH,IAAI0T,OAAO,GAAG,IAAI,CAACjhB,IAAI,CAACkhB,uBAAuB,CAAC7gB,YAAY,CAACJ,OAAQ,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,sBAAsB,CAAC;QAC3H,OAAO,IAAI,CAACnE,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,WAAW,KAAKygB,OAAO,IAAIC,OAAO,IAAIC,OAAO,IAAIC,OAAO,CAAC;MAC1H,KAAK,IAAI,CAACpD,wBAAwB;QAChC;;;;;;QAMA,OAAO,IAAI,CAACzU,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,UAAU,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,EAAE2D,cAAc,CAAC,IAAI,IAAI,CAAC5D,IAAI,CAACsN,YAAY,CAAC,yBAAyB,EAAEjN,YAAY,CAACJ,OAAQ,CAACC,EAAG,CAAC,CAAC;MAChO,KAAK,IAAI,CAAC6d,wBAAwB;QAChC;;;;QAIA,OAAO,IAAI,CAAC3U,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,WAAW,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,qBAAqB,CAAE,CAAC;MAC3O,KAAK,IAAI,CAAC0Q,0BAA0B;QAClC;;;;;;;QAOA,OAAO,CAAC,IAAI,CAACrK,QAAQ,IAAI,IAAI,CAACxK,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,OAAO,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,EAAE2D,cAAc,CAAC,IAAK,IAAI,CAAC5D,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,EAAEmN,WAAW,CAAC,IAAI,IAAI,CAACpN,IAAI,CAACuN,eAAe,CAAC,qBAAqB,CAAE,IAAI,IAAI,CAACvN,IAAI,CAACsN,YAAY,CAAC,2BAA2B,EAAEjN,YAAY,CAACJ,OAAQ,CAAC2D,cAAe,CAAC,CAAC;MACpX,KAAK,IAAI,CAAC+Z,oBAAoB;QAC5B;;;;;;QAMA,OAAO,IAAI,CAAC3d,IAAI,CAACuN,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC/E,QAAQ,CAAC,IAAI,CAACY,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,CAAC,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,EAAEC,EAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,CAAC;MACnR,KAAK,IAAI,CAACke,cAAc;QACtB;;;;;;QAMA,OAAO,IAAI,CAAC/U,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,OAAO,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,eAAe,CAAE,CAAC;MACjO,KAAK,IAAI,CAAC8Q,eAAe;QACvB;;;;QAIA,OAAO,IAAI,CAACre,IAAI,CAACuN,eAAe,CAAC,UAAU,CAAC;MAC9C,KAAK,IAAI,CAAC+Q,iBAAiB;QACzB;;;;;;QAMA,OAAO,IAAI,CAAClV,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,WAAW,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,cAAc,CAAE,CAAC;MACpO,KAAK,IAAI,CAACiR,aAAa;QACrB;;;;;;QAMA,OAAO,CAAC,IAAI,CAAC5K,QAAQ,IAAI,IAAI,CAAC5T,IAAI,CAACuN,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC/E,QAAQ,CAAC,IAAI,CAACY,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,CAAC,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,CAAC;QAAC;MAC7Q,KAAK,IAAI,CAACwe,eAAe;QACvB;;;;;;;;QAQA,IAAIvR,UAAU,GAAG,IAAI,CAAC9D,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,aAAa;QACtF,IAAIgN,UAAU,GAAG,IAAI,CAACrN,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,EAAE2D,cAAc,CAAC;QAChF,IAAI4J,UAAU,GAAG,IAAI,CAACxN,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAQ,CAACmN,WAAW,CAAC,IAAI,IAAI,CAACpN,IAAI,CAACuN,eAAe,CAAC,gBAAgB,CAAC;QAC7H,IAAI4T,UAAU,GAAG,IAAI,CAACnhB,IAAI,CAACsN,YAAY,CAAC,2BAA2B,EAAEjN,YAAY,CAACJ,OAAQ,CAAC2D,cAAe,CAAC;QAC3G,OAAO,CAAC,IAAI,CAACgQ,QAAQ,IAAI1G,UAAU,KAAKG,UAAU,IAAIG,UAAU,IAAI2T,UAAU,CAAC;MACjF,KAAK,IAAI,CAACxC,yBAAyB;QACjC;;;;;;QAMA,OAAO,CAAC,IAAI,CAAC/K,QAAQ,IAAI,IAAI,CAACxK,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,UAAU,IAAIA,YAAY,CAAChD,QAAQ,CAAC0B,MAAM,GAAG,CAAC,KAAK,IAAI,CAACiB,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,oBAAoB,CAAE,CAAC;MAC/R,KAAK,IAAI,CAACsR,UAAU;QAClB;;;QAGA,OAAO,IAAI,CAAC7e,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,sBAAsB,CAAC;MAC7G,KAAK,IAAI,CAACuR,cAAc;QACtB;;;;;;;QAOA,OAAO,IAAI,CAAC1V,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,UAAU,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,cAAc,CAAE,IAAI,IAAI,CAACvN,IAAI,CAACkhB,uBAAuB,CAAC7gB,YAAY,CAACJ,OAAQ,CAAC,CAAC;MAC/R,KAAK,IAAI,CAAC+e,yBAAyB;QACjC;;;;;;QAMA,OAAO,CAAC,IAAI,CAACpL,QAAQ,IAAI,IAAI,CAACxK,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,aAAa,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,oBAAoB,CAAE,CAAC;MAC9P,KAAK,IAAI,CAAC2R,eAAe;QACvB;;;;;;;QAOA,OAAO,IAAI,CAAC9V,mBAAmB,CAAC6W,aAAa,CAAC5f,YAAY,CAAC,IAAI,OAAO,KAAK,IAAI,CAACL,IAAI,CAACmN,eAAe,CAAC9M,YAAY,CAACJ,OAAO,CAAC,IAAK,IAAI,CAACD,IAAI,CAACogB,gBAAgB,CAAC/f,YAAY,CAACJ,OAAO,CAAC,IAAI,IAAI,CAACD,IAAI,CAACuN,eAAe,CAAC,eAAe,CAAE,IAAI,IAAI,CAACvN,IAAI,CAACkhB,uBAAuB,CAAC7gB,YAAY,CAACJ,OAAQ,CAAC,CAAC;;IAE/R,OAAO,KAAK;EACd;EAEOud,QAAQA,CAACnd,YAA0B;IACxC,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE/gB,YAAY,CAAC3C,MAAM;QAAEsN,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACuV,QAAQ,CAAC9Y,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MACrI9E,KAAK,EAAE,4BAA4B;MACnC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEO5B,OAAOA,CAACrd,YAA0B;IACvC,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,UAAU;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACyV,OAAO,CAAChZ,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAC3H9E,KAAK,EAAE,2BAA2B;MAClC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOxB,iBAAiBA,CAACzd,YAA0B;IACjD,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,WAAW;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAAC6V,iBAAiB,CAACpZ,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MACtI9E,KAAK,EAAE,oBAAoB;MAC3B0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOtB,iBAAiBA,CAAC3d,YAA0B;IACjD,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,OAAO;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAAC+V,iBAAiB,CAACtZ,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAClI9E,KAAK,EAAE,oBAAoB;MAC3B0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOpB,mBAAmBA,CAAC7d,YAA0B;IACnD,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,aAAa;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACiW,mBAAmB,CAACxZ,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAC1I9E,KAAK,EAAE,sBAAsB;MAC7B0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEO1B,aAAaA,CAACvd,YAA0B;IAC7C,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,WAAW;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAAC2V,aAAa,CAAClZ,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAClI9E,KAAK,EAAE,4BAA4B;MACnC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOlB,QAAQA,CAAC/d,YAA0B;IACxC,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,WAAW;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACmW,QAAQ,CAAC1Z,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAC7H9E,KAAK,EAAE,4BAA4B;MACnC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOf,WAAWA,CAACle,YAA0B;IAC3C,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE/gB,YAAY,CAAC3C,MAAM;QAAEsN,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACsW,WAAW,CAAC7Z,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MACxI9E,KAAK,EAAE,+BAA+B;MACtC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOZ,SAASA,CAACre,YAA0B;IACzC,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,OAAO;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACyW,SAAS,CAACha,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAC1H9E,KAAK,EAAE,6BAA6B;MACpC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOV,kBAAkBA,CAACve,YAA0B;IAClD,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,aAAa;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAAC2W,kBAAkB,CAACla,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MACzI9E,KAAK,EAAE,0BAA0B;MACjC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOP,QAAQA,CAAC1e,YAA0B;IACxC,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,OAAO;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAAC8W,QAAQ,CAACra,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MACzH9E,KAAK,EAAE,4BAA4B;MACnC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOL,kBAAkBA,CAAC5e,YAA0B;IAClD,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,UAAU;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACgX,kBAAkB,CAACva,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MACtI9E,KAAK,EAAE,wBAAwB;MAC/B0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOH,SAASA,CAAC9e,YAA0B;IACzC,IAAI,CAAC4Q,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACqL,WAAW,EAAE;MACjCjc,QAAQ,EAAE;QAAEqX,IAAI,EAAE,cAAc;QAAE1Y,MAAM,EAAEoB,YAAY;QAAE+gB,UAAU,EAAE,UAAU;QAAEpW,OAAO,EAAE,IAAI,CAAC/C,GAAI,CAACkX,SAAS,CAACza,IAAI,CAAC,IAAI,CAACuD,GAAG;MAAC,CAAE;MAC7H9E,KAAK,EAAE,6BAA6B;MACpC0R,UAAU,EAAGE,WAAW,IAAI;QAC1B,IAAIA,WAAW,EAAE;UACf,CAAC,IAAI,CAAClB,IAAI,EAAEwN,KAAK,IAAI,IAAI,CAACA,KAAM,EAAEC,SAAS,CAACjhB,YAAY,CAACH,EAAE,CAAC,CAAC0X,IAAI,CAAC,MAAK;YACrE,IAAI,CAAC0H,uBAAuB,EAAE;UAChC,CAAC,CAAC;;QACH;MACH;KACD,CAAC;EACJ;EAEOiC,MAAMA,CAAA;IACX,OAAO,IAAI,CAACvhB,IAAI,CAACuN,eAAe,CAAC,eAAe,CAAC;IACjD;EACF;;SAzmBW4O,yBAA0B;;mBAA1BA,MAAyB,EAAAra,gEAAA,CAAAA,oDAAA;AAAA;;QAAzBqa,MAAyB;EAAAla,SAAA;EAAAC,SAAA,WAAAsf,gCAAApf,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEACzBrE,iFAAa;;;;;;;;;;;;;MCrB1B+D,6DAAA,cAEyD;MAD3BA,yDAAA,oBAAA2f,0DAAA5e,MAAA;QAAA,OAAUR,GAAA,CAAAoP,QAAA,CAAA5O,MAAA,CAAgB;MAAA,EAAC;MAErDf,yDAAA,IAAA4f,4CAAA,qBAGU;MACV5f,6DAAA,gBAAyO;MAEjOA,wDAAA,oBAAwL;MAG5LA,2DAAA,EAAM;MACNA,6DAAA,aAAiB;MACbA,wDAAA,yBAA4G;MAIhHA,2DAAA,EAAM;MAEVA,6DAAA,eAAS;MACLA,yDAAA,KAAA6f,4CAAA,qBAOS;MACT7f,6DAAA,kBAAwE;MACpEA,yDAAA,KAAA8f,iDAAA,iCAAA9f,qEAAA,CAEc;MACdA,yDAAA,KAAA+f,iDAAA,iCAAA/f,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAA2E;MACvEA,yDAAA,KAAAggB,iDAAA,iCAAAhgB,qEAAA,CAGc;MACdA,yDAAA,KAAAigB,iDAAA,iCAAAjgB,qEAAA,CAIc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAuE;MACnEA,yDAAA,KAAAkgB,iDAAA,iCAAAlgB,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAA8D;MAC1DA,yDAAA,KAAAmgB,iDAAA,iCAAAngB,qEAAA,CAEc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAA0E;MACtEA,yDAAA,KAAAogB,iDAAA,iCAAApgB,qEAAA,CAGc;MACdA,yDAAA,KAAAqgB,iDAAA,iCAAArgB,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAiD;MAC7CA,yDAAA,KAAAsgB,iDAAA,iCAAAtgB,qEAAA,CAGc;MAClBA,2DAAA,EAAS;MACTA,wDAAA,kBAA0H;MAC9HA,2DAAA,EAAU;MACVA,wDAAA,sBAA4C;MAChDA,2DAAA,EAAO;;;;;;;;;;;;MA7EDA,yDAAA,QAAAO,GAAA,CAAA4F,GAAA,CAAW,QAAA5F,GAAA,CAAAuS,GAAA,WAAAvS,GAAA,CAAAa,OAAA,QAAAb,GAAA,CAAAc,KAAA,aAAAd,GAAA,CAAA4D,OAAA,aAAA5D,GAAA,CAAA2P,OAAA,UAAA3P,GAAA,CAAA3C,IAAA,gBAAA2C,GAAA,CAAA4P,UAAA,YAAA5P,GAAA,CAAAkf,MAAA,kCAAAlf,GAAA,CAAAmd,UAAA,CAAA9a,IAAA,CAAArC,GAAA;MAGHP,wDAAA,GAAiB;MAAjBA,yDAAA,UAAAO,GAAA,CAAA4P,UAAA,CAAiB;MAInBnQ,wDAAA,GAAe;MAAfA,yDAAA,SAAAO,GAAA,CAAA+L,MAAA,CAAe,UAAA/L,GAAA,CAAAwO,WAAA,YAAAxO,GAAA,CAAA6P,YAAA,CAAAxN,IAAA,CAAArC,GAAA,YAAAA,GAAA,CAAAgP,WAAA,CAAA3M,IAAA,CAAArC,GAAA,qBAAAA,GAAA,CAAA8P,oBAAA,CAAAzN,IAAA,CAAArC,GAAA,iBAAAA,GAAA,CAAA4P,UAAA,IAAA5P,GAAA,CAAA+P,eAAA,aAAA/P,GAAA,CAAA+Z,UAAA;MAEHta,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAhD,IAAA,8BAAA8E,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MAAgI2C,0DAAA,kBAAoB;MACnJA,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAAjD,UAAA;MACnB0C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,UAAAO,GAAA,CAAA8W,MAAA,CAAA6C,oBAAA;MAGIla,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAA0D,eAAA;MACXjE,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAA7C,cAAA;MACrBsC,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAnE,WAAA,2CAAAiG,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MACV2C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAjE,QAAA,mCAAA+F,GAAA,CAAAnD,GAAA,CAAAC,SAAA;MAIrB2C,wDAAA,GAAiB;MAAjBA,yDAAA,UAAAO,GAAA,CAAA4P,UAAA,CAAiB;MAQlBnQ,wDAAA,GAAqC;MAArCA,yDAAA,kBAAAwX,GAAA,CAAqC,aAAAC,GAAA;MAQrCzX,wDAAA,GAA0C;MAA1CA,yDAAA,kBAAA0X,GAAA,CAA0C,aAAAC,IAAA;MAW3B3X,wDAAA,GAAyB;MAAzBA,yDAAA,aAAAugB,IAAA,CAAyB;MAK5BvgB,wDAAA,GAAsB;MAAtBA,yDAAA,aAAAwgB,IAAA,CAAsB;MAKlCxgB,wDAAA,GAAkC;MAAlCA,yDAAA,kBAAAygB,IAAA,CAAkC,aAAAC,IAAA;MAUnB1gB,wDAAA,GAAyB;MAAzBA,yDAAA,aAAA2gB,IAAA,CAAyB;MAMzB3gB,wDAAA,GAA4C;MAA5CA,yDAAA,mBAAAO,GAAA,CAAA2O,cAAA,CAAAtM,IAAA,CAAArC,GAAA,EAA4C,mBAAAA,GAAA,CAAAgM,cAAA,CAAA3J,IAAA,CAAArC,GAAA;MAE3DP,wDAAA,GAAkB;MAAlBA,yDAAA,SAAAO,GAAA,CAAAmQ,SAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EqC;AAEH;AAC0B;AAC1B;AACa;AACd;AACJ;;;;;;;;;;;;;;;;;ICM/C1Q,6DAAA,QAAG;IAAGA,qDAAA,YAAK;IAAAA,2DAAA,EAAI;IAACA,qDAAA,GAAoF;IAAAA,2DAAA,EAAI;IACxGA,6DAAA,QAAG;IAAGA,qDAAA,eAAQ;IAAAA,2DAAA,EAAI;IAACA,qDAAA,GAAe;IAAAA,2DAAA,EAAI;IACtCA,6DAAA,QAAG;IAAAA,qDAAA,GAAiB;IAAAA,2DAAA,EAAI;IACxBA,wDAAA,iBAAoJ;;;;;IAHpIA,wDAAA,GAAoF;IAApFA,iEAAA,MAAA0C,MAAA,CAAAxD,IAAA,CAAAiI,gBAAA,CAAA0Z,MAAA,CAAAvmB,WAAA,UAAAoI,MAAA,CAAAxD,IAAA,CAAAiI,gBAAA,CAAA0Z,MAAA,CAAArmB,QAAA,MAAoF;IACjFwF,wDAAA,GAAe;IAAfA,iEAAA,MAAA6gB,MAAA,CAAAC,OAAA,KAAe;IAC/B9gB,wDAAA,GAAiB;IAAjBA,gEAAA,CAAA6gB,MAAA,CAAApmB,SAAA,CAAiB;IACmCuF,wDAAA,GAAyC;IAAzCA,yDAAA,UAAA6gB,MAAA,CAAApZ,aAAA,CAAAtJ,OAAA,CAAAkO,KAAA,CAAyC,SAAA3J,MAAA,CAAAtF,GAAA,CAAAC,SAAA;;;;;IAKhG2C,6DAAA,cAAwB;IAGWA,qDAAA,WAAI;IAAAA,2DAAA,EAAK;IAChCA,6DAAA,aAAyB;IAAAA,qDAAA,GAAoC;IAAAA,2DAAA,EAAK;;;;;IAAzCA,wDAAA,GAAoC;IAApCA,gEAAA,CAAAsF,MAAA,CAAAyb,cAAA,CAAArS,YAAA,CAAAsS,MAAA,EAAoC;;;;;IAY7DhhB,6DAAA,aAAsE;IAAAA,qDAAA,cAAO;IAAAA,2DAAA,EAAK;;;;;IAClFA,wDAAA,uBAA6H;;;;IAArEA,yDAAA,UAAAihB,OAAA,CAAArmB,SAAA,CAAAsmB,WAAA,CAAqC;;;;;IALzGlhB,6DAAA,cAA6B;IAGMA,qDAAA,gBAAS;IAAAA,2DAAA,EAAK;IACrCA,yDAAA,IAAAmhB,8DAAA,iBAAkF;IAClFnhB,yDAAA,IAAAohB,wEAAA,2BAA6H;IACjIphB,2DAAA,EAAM;IACNA,6DAAA,cAA6B;IACzBA,wDAAA,wBAA2D;IAC/DA,2DAAA,EAAM;;;;;IALGA,wDAAA,GAAwC;IAAxCA,yDAAA,UAAAuR,MAAA,CAAAwP,cAAA,CAAAM,aAAA,CAAAJ,OAAA,EAAwC;IAC9BjhB,wDAAA,GAAuC;IAAvCA,yDAAA,SAAAuR,MAAA,CAAAwP,cAAA,CAAAM,aAAA,CAAAJ,OAAA,EAAuC;;;ADxB5E,MAAOK,iCAAkC,SAAQzT,6EAAgE;EAUrH3T,YAAmBwC,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEzC,2FAAmB,EAAEkI,wGAA6B,CAAC;IADlD,KAAAzF,QAAQ,GAARA,QAAQ;IA+BpB,KAAAqS,WAAW,GAAIzC,MAAiB,IAAI;MACzC,IAAIxP,MAAM,GAAU,EAAE;MACtB,IAAIgB,IAAI,GAAQwO,MAAM,CAACtP,KAAK;MAE5B,IAAG,IAAI,CAACukB,UAAU,EAAEzkB,MAAM,CAACgM,IAAI,CAAC,CAAC,uBAAuB,EAAE,IAAI,EAAE,IAAI,CAACyY,UAAU,CAAC,CAAC;MACjF,IAAG,IAAI,CAACC,UAAU,EAAE1kB,MAAM,CAACgM,IAAI,CAAC,CAAC,uBAAuB,EAAE,IAAI,EAAE,IAAI,CAAC0Y,UAAU,CAAC,CAAC;MACjF,IAAG1jB,IAAI,CAAC5C,UAAU,EAAE4B,MAAM,CAACgM,IAAI,CAAC,CAAC,0BAA0B,EAAE,IAAI,EAAEhL,IAAI,CAAC5C,UAAU,CAAC,CAAC;MACpF,IAAG4C,IAAI,CAAC7C,UAAU,EAAE6B,MAAM,CAACgM,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAEhL,IAAI,CAAC7C,UAAU,CAAC,CAAC;MACtE,IAAG6C,IAAI,CAACxD,WAAW,EAAEwC,MAAM,CAACgM,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,EAAEhL,IAAI,CAACxD,WAAW,CAAC,CAAC;MACzE,IAAGwD,IAAI,CAACtD,QAAQ,EAAEsC,MAAM,CAACgM,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,EAAEhL,IAAI,CAACtD,QAAQ,CAAC,CAAC;MAEhE,OAAOsC,MAAM;IACf,CAAC;IAzCC,IAAI,CAACQ,UAAU,GAAGZ,QAAQ,CAACa,GAAG,CAAoBhB,8EAAiB,CAAC;IACpE,IAAI,CAAC6K,UAAU,GAAG1K,QAAQ,CAACa,GAAG,CAAoB6E,8EAAiB,CAAC;IACpE,IAAI,CAAC2e,cAAc,GAAGrkB,QAAQ,CAACa,GAAG,CAAsBiF,uEAAmB,CAAC;IAC5E;IACA,IAAI,CAAC5E,IAAI,GAAG,CAAC,uBAAuB,CAAC;IACrC,IAAI,CAACyD,KAAK,GAAG,IAAI,CAACjE,GAAG,CAACC,SAAS,CAAC,UAAU,CAAC;IAC3C,IAAI,CAACiP,MAAM,GAAG,IAAI,CAACvO,EAAE,CAACC,WAAW,CAAC;MAChC9C,UAAU,EAAE;QAAC+C,OAAO,EAAE;MAAI,CAAC;MAC3BhD,UAAU,EAAE;QAACgD,OAAO,EAAE;MAAI,CAAC;MAC3B3D,WAAW,EAAE;QAAC2D,OAAO,EAAE;MAAI,CAAC;MAC5BzD,QAAQ,EAAE;QAACyD,OAAO,EAAE;MAAI;KACzB,CAAC;IACF,IAAI,CAACL,IAAI,GAAG,EAAE;EAChB;EAEAU,QAAQA,CAAA;IACN,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,CAACijB,UAAU,GAAG,IAAI,CAAC1O,SAAU,CAACtV,GAAG,CAAC,aAAa,CAAC,IAAI5B,SAAS;IACjE,IAAI,CAAC6lB,UAAU,GAAG,IAAI,CAAC3O,SAAU,CAACtV,GAAG,CAAC,aAAa,CAAC,IAAI5B,SAAS;EACnE;EAEO4T,WAAWA,CAACjD,MAAiB;IAClCA,MAAM,CAAC7N,QAAQ,CAACvD,UAAU,CAACwD,QAAQ,CAAC,IAAI,CAAC;IACzC4N,MAAM,CAAC7N,QAAQ,CAACxD,UAAU,CAACyD,QAAQ,CAAC,IAAI,CAAC;IACzC4N,MAAM,CAAC7N,QAAQ,CAACnE,WAAW,CAACoE,QAAQ,CAAC,IAAI,CAAC;IAC1C4N,MAAM,CAAC7N,QAAQ,CAACjE,QAAQ,CAACkE,QAAQ,CAAC,IAAI,CAAC;IACvC,KAAK,CAAC6Q,WAAW,CAACjD,MAAM,CAAC;EAC3B;;SAvCWgV,iCAAkC;;mBAAlCA,MAAiC,EAAAthB,gEAAA,CAAAA,oDAAA;AAAA;;QAAjCshB,MAAiC;EAAAnhB,SAAA;EAAAC,SAAA,WAAAqhB,wCAAAnhB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEACjCrE,iFAAa;;;;;;;;;;;;;;;MCjB1B+D,6DAAA,cAA4F;MACxFA,wDAAA,cAEU;MACVA,6DAAA,gBAAkN;MAE1MA,wDAAA,yBAA6F;MAIjGA,2DAAA,EAAM;MAEVA,6DAAA,eAAS;MAEDA,yDAAA,KAAA0hB,yDAAA,kCAAA1hB,qEAAA,CAKc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAA6C;MACzCA,yDAAA,KAAA2hB,yDAAA,iCAAA3hB,qEAAA,CASc;MAClBA,2DAAA,EAAS;MACTA,6DAAA,kBAAuD;MACnDA,yDAAA,KAAA4hB,yDAAA,iCAAA5hB,qEAAA,CAac;MAClBA,2DAAA,EAAS;MAEbA,wDAAA,sBAA4C;MAChDA,2DAAA,EAAO;;;;;;MAnDDA,yDAAA,QAAAO,GAAA,CAAA4F,GAAA,CAAW,UAAA5F,GAAA,CAAAa,OAAA,QAAAb,GAAA,CAAAc,KAAA,aAAAd,GAAA,CAAA4D,OAAA,UAAA5D,GAAA,CAAA3C,IAAA;MAILoC,wDAAA,GAAe;MAAfA,yDAAA,SAAAO,GAAA,CAAA+L,MAAA,CAAe,UAAA/L,GAAA,CAAAwO,WAAA,YAAAxO,GAAA,CAAA6P,YAAA,CAAAxN,IAAA,CAAArC,GAAA,YAAAA,GAAA,CAAAgP,WAAA,CAAA3M,IAAA,CAAArC,GAAA,qBAAAA,GAAA,CAAA8P,oBAAA,CAAAzN,IAAA,CAAArC,GAAA,iBAAAA,GAAA,CAAA4P,UAAA,IAAA5P,GAAA,CAAA+P,eAAA;MAEQtQ,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAAjD,UAAA;MACV0C,wDAAA,GAAU;MAAVA,yDAAA,WAAU,QAAAO,GAAA,CAAA6G,UAAA;MACjBpH,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAnE,WAAA;MACV0F,wDAAA,GAAU;MAAVA,yDAAA,WAAU,YAAAO,GAAA,CAAA+L,MAAA,CAAA7N,QAAA,CAAAjE,QAAA;MAINwF,wDAAA,GAA0B;MAA1BA,yDAAA,aAAAuQ,GAAA,CAA0B;MAQ7BvQ,wDAAA,GAAuB;MAAvBA,yDAAA,aAAAwQ,GAAA,CAAuB;MAYlBxQ,wDAAA,GAA4B;MAA5BA,yDAAA,aAAAyQ,GAAA,CAA4B;MAiB9CzQ,wDAAA,GAAkB;MAAlBA,yDAAA,SAAAO,GAAA,CAAAmQ,SAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDqB;AACD;AACa;AAC2B;AACA;AAC0B;AACN;AACG;AACT;AACuB;;;AAEnI,MAAMsR,MAAM,GAAW,CACrB;EAAEja,IAAI,EAAE,EAAE;EAAEka,SAAS,EAAE5H,uGAAyB;EAAE6H,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE;EAAmB;AAAE,CAAE,EACxL;EAAE0G,IAAI,EAAE,KAAK;EAAEka,SAAS,EAAE/W,uGAAyB;EAAEgX,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,+BAA+B;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,EACpN;EAAEvH,IAAI,EAAE,UAAU;EAAEka,SAAS,EAAE/W,uGAAyB;EAAEgX,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,6BAA6B;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,EACvN;EAAEvH,IAAI,EAAE,aAAa;EAAEka,SAAS,EAAE/W,uGAAyB;EAAEgX,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,8BAA8B;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,EAC3N;EAAEvH,IAAI,EAAE,UAAU;EAAEka,SAAS,EAAExM,qHAA6B;EAAEyM,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,0CAA0C;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,EACxO;EAAEvH,IAAI,EAAE,SAAS;EAAEka,SAAS,EAAElc,8HAAgC;EAAEmc,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,+BAA+B;IAAEiO,KAAK,EAAC;EAAI;AAAE,CAAC,EAC7N;EAAEvH,IAAI,EAAE,qBAAqB;EAAEka,SAAS,EAAElc,8HAAgC;EAAEmc,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,uCAAuC;IAAEiO,KAAK,EAAC;EAAI;AAAE,CAAC,EACjP;EAAEvH,IAAI,EAAE,aAAa;EAAEka,SAAS,EAAEnT,4IAAoC;EAAEoT,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,+BAA+B;IAAEiO,KAAK,EAAC;EAAI;AAAE,CAAC,EACrO;EAAEvH,IAAI,EAAE,gCAAgC;EAAEka,SAAS,EAAEX,iIAAiC;EAAEY,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,+BAA+B;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,EACvP;EAAEvH,IAAI,EAAE,gCAAgC;EAAEka,SAAS,EAAEX,iIAAiC;EAAEY,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,+BAA+B;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,EACvP;EAAEvH,IAAI,EAAE,QAAQ;EAAEka,SAAS,EAAExlB,2HAA+B;EAAEylB,WAAW,EAAE,CAACJ,gEAAS,CAAC;EAAEpiB,OAAO,EAAE;IAAEyiB,MAAM,EAAEJ,6EAAcA;EAAA,CAAE;EAAEK,qBAAqB,EAAE,QAAQ;EAAEjoB,IAAI,EAAE;IAAEkH,KAAK,EAAE,4BAA4B;IAAEiO,KAAK,EAAE;EAAI;AAAE,CAAE,CAC3N;AAMK,MAAO+S,yBAAyB;SAAzBA,yBAAyB;;mBAAzBA,MAAyB;AAAA;;QAAzBA;AAAyB;;YAH1BR,0DAAY,CAACS,QAAQ,CAACN,MAAM,CAAC,EAC7BH,0DAAY;AAAA;;sHAEXQ,yBAAyB;IAAAE,OAAA,GAAA3L,0DAAA;IAAA4L,OAAA,GAF1BX,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IE5BxB7hB,4DAAA,sBAAuM;IAA1CA,wDAAA,oBAAAyiB,2FAAA1hB,MAAA;MAAAf,2DAAA,CAAAwQ,GAAA;MAAA,MAAA9N,MAAA,GAAA1C,2DAAA;MAAA,OAAUA,yDAAA,CAAA0C,MAAA,CAAAggB,aAAA,CAAA3hB,MAAA,CAAqB;IAAA,EAAC;IAAUf,0DAAA,EAAe;;;;IAA5JA,wDAAA,aAAA8N,MAAA,CAAAwN,QAAA,CAAqB,SAAAxN,MAAA,CAAA9E,IAAA,WAAA8E,MAAA,CAAA/E,KAAA,8BAAA+E,MAAA,CAAAlR,OAAA;;;;;;IAC/EoD,4DAAA,sBAAmM;IAA1CA,wDAAA,oBAAA2iB,2FAAA5hB,MAAA;MAAAf,2DAAA,CAAAyQ,GAAA;MAAA,MAAAnL,MAAA,GAAAtF,2DAAA;MAAA,OAAUA,yDAAA,CAAAsF,MAAA,CAAAod,aAAA,CAAA3hB,MAAA,CAAqB;IAAA,EAAC;IAAUf,0DAAA,EAAe;;;;IAAhJA,wDAAA,aAAA+N,MAAA,CAAAuN,QAAA,CAAqB,SAAAvN,MAAA,CAAA/E,IAAA,WAAA+E,MAAA,CAAAhF,KAAA,gCAAAgF,MAAA,CAAAnR,OAAA;;;;;;;;;IACvFoD,4DAAA,sBAAyO;IAA1CA,wDAAA,oBAAA4iB,2FAAA7hB,MAAA;MAAAf,2DAAA,CAAAuE,GAAA;MAAA,MAAAgN,MAAA,GAAAvR,2DAAA;MAAA,OAAUA,yDAAA,CAAAuR,MAAA,CAAAmR,aAAA,CAAA3hB,MAAA,CAAqB;IAAA,EAAC;IAAUf,0DAAA,EAAe;;;;IAA9LA,wDAAA,aAAA6iB,MAAA,CAAAvH,QAAA,CAAqB,SAAAuH,MAAA,CAAA7Z,IAAA,WAAA6Z,MAAA,CAAA9Z,KAAA,8BAAA8Z,MAAA,CAAAjmB,OAAA,YAAAimB,MAAA,CAAA3c,OAAA,kBAAA2c,MAAA,CAAA3c,OAAA,CAAAmE,kBAAA,KAAArK,6DAAA,IAAA0B,GAAA;;;;;;;;;;;;ADQzE,MAAOohB,mCAAmC;EALhD5oB,YAAA;IAMwB,KAAA6oB,KAAK,GAAG,YAAY;IAEjC,KAAA/Z,IAAI,GAAW,EAAE;IAelB,KAAAga,KAAK,GAAW,CAAC;;EAVzB,IAAaC,IAAIA,CAACA,IAAY;IAC5B,IAAIA,IAAI,IAAI,IAAI,CAACD,KAAK,EAAE;MACtB,IAAI,CAACA,KAAK,GAAGC,IAAI;MACjB,IAAI,CAACF,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC9T,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC,GAAG,UAAU,GAAGgU,IAAI;;EAEjF;EACA,IAAWA,IAAIA,CAAA;IACb,OAAO,IAAI,CAACD,KAAK,IAAI,EAAE;EACzB;EAIOE,kBAAkBA,CAACC,KAAe;IACvC,OAAOA,KAAK,CAACzc,QAAQ,CAAC,IAAI,CAACR,OAAO,EAAEkE,cAAc,IAAI,EAAE,CAAC;EAC3D;EAEOsY,aAAaA,CAAC5iB,KAAY;IAC/B,IAAI,IAAI,CAACsN,MAAM,EAAE,IAAI,CAACA,MAAM,CAAC,IAAI,CAACxQ,OAAO,EAAEI,KAAK,EAAE,IAAI,CAACkJ,OAAO,CAAC;EACjE;;SA1BW4c,mCAAmC;;mBAAnCA,MAAmC;AAAA;;QAAnCA,MAAmC;EAAA3iB,SAAA;EAAAijB,QAAA;EAAAC,YAAA,WAAAC,iDAAAhjB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;MCVhDN,wDAAA,IAAAujB,2DAAA,0BAAsN;MACtNvjB,wDAAA,IAAAwjB,2DAAA,0BAAkN;MAClNxjB,wDAAA,IAAAyjB,2DAAA,0BAAwP;;;MAFzOzjB,wDAAA,SAAAO,GAAA,CAAA2iB,kBAAA,CAAAljB,6DAAA,IAAA6B,GAAA,GAAyC;MACzC7B,uDAAA,GAAiD;MAAjDA,wDAAA,SAAAO,GAAA,CAAA2iB,kBAAA,CAAAljB,6DAAA,IAAA4B,GAAA,GAAiD;MACjD5B,uDAAA,GAAyC;MAAzCA,wDAAA,SAAAO,GAAA,CAAA2iB,kBAAA,CAAAljB,6DAAA,IAAAwB,GAAA,GAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDT;AACyB;AACG;AACmB;AACA;AACuB;AACG;AACN;AACG;AAC9B;AACf;AAC2D;AACvB;AACrD;AACyE;;AAwB1H,MAAOuiB,kBAAkB;SAAlBA,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA;AAAkB;;YAR3BL,0DAAY,EACZC,kFAAgB,EAChBtB,oFAAyB,EACzBuB,+FAAkB,EAClBC,gFAAiB,EACjBC,6DAAW;AAAA;;uHAGFC,kBAAkB;IAAAC,YAAA,GApB3B3J,uGAAyB,EACzBnP,uGAAyB,EACzB+G,8HAAgC,EAChCxV,2HAA+B,EAC/B6kB,iIAAiC,EACjCA,iIAAiC,EACjCvb,8HAAgC,EAChC+I,6IAAoC,EACpC2G,sHAA6B,EAC7BqN,0IAAmC;IAAAP,OAAA,GAGnCmB,0DAAY,EACZC,kFAAgB,EAChBtB,oFAAyB,EACzBuB,+FAAkB,EAClBC,gFAAiB,EACjBC,6DAAW;EAAA;AAAA","sources":["./src/app/models/plano-entrega-entrega.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts"],"sourcesContent":["import { Base } from './base.model';\r\nimport { Comentario, HasComentarios } from './comentario';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { PlanoEntregaEntregaObjetivo } from './plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from './plano-entrega-entrega-processo.model';\r\nimport { PlanoEntrega } from './plano-entrega.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base implements HasComentarios {\r\n  public entrega?: Entrega;\r\n  public entrega_pai?: Entrega;\r\n  public plano_entrega?: PlanoEntrega;\r\n  public unidade?: Unidade;\r\n  public objetivos: PlanoEntregaEntregaObjetivo[] = [];\r\n  public processos: PlanoEntregaEntregaProcesso[] = [];\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public descricao: string = \"\";\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n  public destinatario: string = '';\r\n  public comentarios: Comentario[] = []; /* Comentarios da etrega */\r\n\r\n  public entrega_id: string = '';\r\n  public unidade_id: string = '';                        \r\n  public entrega_pai_id: string | null = null;                      \r\n  public plano_entrega_id: string | null = null;\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\nexport class PlanoEntrega extends Base implements HasStatus {\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n\r\n  public unidade_id: string = '';\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'plano-entrega-adesao',\n  templateUrl: './plano-entrega-form-adesao.component.html',\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\n})\n\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [];\n    this.modalWidth = 1000;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: \"\" },\n      data_fim: { default: \"\" },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      unidade_id: { default: this.auth.unidade?.id },\n      plano_entrega_id: { default: null },\n      programa_id: { default: null },\n      status: { default: \"HOMOLOGANDO\" }\n    }, this.cdRef, this.validate);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\n    if(planoEntrega){\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\n      this.form.controls.nome.setValue(planoEntrega.nome);\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\n    }\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result; \n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public onPlanoEntregaChange(event: Event){\n    if(this.form.controls.plano_entrega_id.value){\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\n    }\n  }\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row mb-4\">\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\n            -->\n            <separator></separator>\n        </div>\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n        </div>\n        <div class=\"row\">\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row mt-4\">\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\n                <div class=\"row\">\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n            </separator>\n        </div>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\nimport { NavigateResult } from 'src/app/services/navigate.service';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\n\n@Component({\n  selector: 'plano-entrega-form-entrega',\n  templateUrl: './plano-entrega-form-entrega.component.html',\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\n})\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n\n  public planoEntrega?: PlanoEntrega;\n  public planejamentoDao: PlanejamentoDaoService;\n  public planejamentoId?: string;\n  public cadeiaValorId?: string;\n  public unidadeId?: string;\n  public orderBy?: QueryOrderBy[];\n  public formObjetivos: FormGroup;\n  public formProcessos: FormGroup;\n  public unidadeDao: UnidadeDaoService;\n  public entregaDao: EntregaDaoService;\n  public itensQualitativo: LookupItem[] = [];\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public idsUnidadesAscendentes: string[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.modalWidth = 600;\n    this.join = [\"entrega\"];\n    this.form = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      meta: { default: 100 },\n      realizado: { default: null },\n      plano_entrega_id: { default: \"\" },\n      entrega_pai_id: { default: null },\n      entrega_id: { default: null },\n      progresso_esperado: { default: 100 },\n      progresso_realizado: { default: null },\n      unidade_id: { default: null },\n      destinatario: { default: null },\n      objetivos: { default: [] },\n      processos: { default: [] },\n      listaQualitativo: { default: [] },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      objetivo_id: { default: null },\n      objetivo: { default: null },\n    }, this.cdRef, this.validate);\n    this.formObjetivos = this.fh.FormBuilder({\n      planejamento_objetivo_id: { default: null },\n    }, this.cdRef, this.validate);\n    this.formProcessos = this.fh.FormBuilder({\n      cadeia_processo_id: { default: null },\n    }, this.cdRef, this.validate);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    let unidade: Unidade | null = null;\n    this.planoEntrega = this.metadata?.plano_entrega;\n    this.planejamentoId = this.metadata?.planejamento_id;\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\n    this.unidadeId = this.metadata?.unidade_id;\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \n    (async () => {\n      await this.unidade?.loadSearch(this.unidadeId);\n      await this.planejamento?.loadSearch(this.planejamentoId);\n      await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\n      unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\n      this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\n    })();\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) {\n        result = \"Obrigatório\";\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\n      }\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A unidade demandante é obrigatória\";\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A entrega é obrigatória\";\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    let inicio = this.form?.controls.data_inicio.value;\n    let fim = this.form?.controls.data_fim.value;\n    if(this.gridObjetivos?.editing) {\n      this.tabs!.active = \"OBJETIVOS\" ;\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if (this.gridProcessos?.editing) {\n      this.tabs!.active = \"PROCESSOS\";\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if(!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if(!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if(inicio > fim) {\n      return \"A data do fim não pode ser anterior à data do início!\";\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    this.onEntregaChange(form.value);\n    let {meta, realizado, ...entityWithout} = entity;\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\n    form.controls.objetivos.setValue(entity.objetivos);\n    form.controls.processos.setValue(entity.processos);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity!.unidade_id = this.auth.unidade!.id;\n    this.entity!.unidade = this.auth.unidade;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult> {\n    return new Promise<NavigateResult>((resolve, reject) => {\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\n      this.gridObjetivos?.confirm();\n      this.gridProcessos?.confirm();\n      let {meta, realizado, ...valueWithout} = this.form!.value;\n      entrega = this.util.fillForm(entrega, valueWithout);\n      entrega.unidade = this.unidade?.selectedEntity;\n      entrega.entrega = this.entrega?.selectedEntity;\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\n      resolve(new NavigateResult(entrega));\n    });\n  }\n\n  public onRealizadoChange(value: any, entrega?: Entrega) {\n    this.calculaRealizado();\n  }\n\n  public calculaRealizado() {\n    const meta = this.form?.controls.meta.value;\n    const realizado = this.form?.controls.realizado.value;\n    if (meta && realizado) {\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(2) || 0 : 0;\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\n    }\n  }\n\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\n    return result;\n  }\n\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    return result;\n  }\n\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\n    return result;\n  }\n\n  public async addObjetivo() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeObjetivo(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveObjetivo(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async addProcesso() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeProcesso(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveProcesso(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaProcesso;\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async onEntregaChange(row: any) {\n    if (this.entrega && this.entrega.selectedItem) {\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\n      const tipoIndicador = entregaItem.tipo_indicador;\n      if(!this.form!.controls.descricao.value.length) {\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\n      }\n      switch (tipoIndicador) {\n        case 'QUALITATIVO':\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          break;\n        case 'VALOR':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'QUANTIDADE':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'PORCENTAGEM':\n          this.form?.controls.meta.setValue(100);\n          this.form?.controls.realizado.setValue(0);\n          break;\n        default:\n          break;\n      }\n      this.calculaRealizado();\n    }\n  }\n \n}\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\n            <div class=\"row\">\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-search #entrega [size]=\"12\" label=\"Entrega do Catálogo\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\n                    </div>\n                    <div class=\"row\">\n                        <input-text [size]=\"12\" label=\"Título/Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\" [attr.maxlength]=250 required></input-text>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\n                    </div>\n                </separator>\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250></input-text>\n                    </div>\n                </separator>\n                <separator title=\"Planejamento\"></separator>\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\n                    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\n                    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizado\" [change]=\"onRealizadoChange.bind(this)\"></plano-entrega-valor-meta-input>\n                </div>\n                <div class=\"row\">\n                    <input-number [size]=\"6\" [decimals]=\"2\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\n                    <input-number [size]=\"6\" [decimals]=\"2\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\n                </div>\n            </div>\n        </tab>\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\n                        <ng-template let-header=\"header\" #titleObjetivo>\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #columnObjetivo>\n                            <span>{{row.objetivo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editObjetivo>\n                            <input-search [size]=\"12\" #inputObjetivo label icon controlName=\"planejamento_objetivo_id\" label icon [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\"></column>\n                </columns>\n            </grid>\n        </tab>\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\n                        <ng-template let-header=\"header\" #titleProcessos>\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #processo>\n                            <span>{{row.processo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editProcesso>\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\n                </columns>\n            </grid>\n        </tab>\n    </tabs>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n\n@Component({\n  selector: 'app-plano-entrega-form',\n  templateUrl: './plano-entrega-form.component.html',\n  styleUrls: ['./plano-entrega-form.component.scss']\n})\n\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n  public maxPE: Number | undefined;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\"];\n    this.modalWidth = 1200;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      unidade_id: { default: \"\" },\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      programa_id: { default: null },\n      entregas: { default: [] },\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    /*\n        (RN_PENT_Z) INSERIR/CRIAR\n        - o usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\", e:\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou gestor da sua Unidade-pai (Unidade A)(RN_PENT_C); ou\n            - o usuário precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; ou\n            - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\n    */\n    let unidadeSelecionada = this.unidade?.selectedEntity as Unidade;\n    let condition1 = this.auth.isGestorUnidade(unidadeSelecionada) || this.auth.isGestorUnidade(unidadeSelecionada.unidade_pai);\n    let condition2 = unidadeSelecionada.unidade_pai ? (this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', unidadeSelecionada.unidade_pai!.id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\")) : false;\n    let condition3 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\n    if (!(condition1 || condition2 || condition3)) return \"Você não tem permissão para incluir plano de entregas para a unidade selecionada!\";\n    const inicio = this.form?.controls.data_inicio.value;\n    const fim = this.form?.controls.data_fim.value;\n    const programa = this.programa?.selectedEntity as Programa;\n    if (!programa) {\n      return \"Obrigatório selecionar o programa\";\n    } else if (!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if (!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if (inicio > fim) {\n      return \"A data do fim não pode ser menor que a data do início!\";\n    } else {\n      const diffTime = Math.abs(inicio - fim);\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      const entregas = this.form!.controls.entregas.value || [];\n      if (programa.prazo_max_plano_entrega > 0 && diffDays > programa.prazo_max_plano_entrega) return \"A data de início e término\" + this.lex.translate(\" do Plano de Entrega\") + \" deve respeitar o período previsto no \" + this.lex.translate(\"Programa \") + \"(\"+ programa.data_inicio.toLocaleDateString() +\" até \"+ programa.data_fim.toLocaleDateString() + \")\";\n      for (let entrega of entregas) {\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\n      }\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = new PlanoEntrega();\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\n    this.entity.unidade = this.auth.unidade;\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    return result;\n  }\n\n  public onDataChange(){ this.sugereNome(); }\n\n  public onUnidadeChange(){ this.sugereNome(); }\n\n  public sugereNome() {\n    if(this.action == 'new') {\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\n      const df = new Date(this.form!.controls.data_fim.value).toLocaleDateString();\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + \" - \" + df)      \n    }\n  }\n\n  public somaDia(date: Date, days: number){\n    let result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  public onProgramaChange(){\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\n    const data=this.somaDia(this.entity!.data_inicio,dias);\n    this.form!.controls.data_fim.setValue(new Date(data)); \n    this.dataFim?.change.emit();\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\n        </div>\n        <div class=\"row\">\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\n        </div>\n        <separator title=\"Entregas\"></separator>\n        <plano-entrega-list-entrega #entregas noPersist [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\" ></plano-entrega-list-entrega>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\n\n@Component({\n  selector: 'app-plano-entrega-list-entrega-list',\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\n})\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public buttons: ToolbarButton[] = [];\n  public idsUnidadesAscendentes: string[] = [];\n  public planoEntregaService: PlanoEntregaService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.title = this.lex.translate(\"Entregas\");\n    this.filter = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      unidade_id: { default: \"\" },\n      destinatario: { default: \"\" },\n    });\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let form: any = filter.value;\n    let result: any[] = [];\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\n    if (form.unidade_id?.length) {  // unidade demandante\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.descricao?.length) {\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.destinatario?.length) {\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    return result;\n  }\n}\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\n    (select)=\"onSelect($event)\">\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row\"> \n                <input-search [size]=\"6\" label=\"Unidade demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\n            <ng-template let-row=\"row\" #columnEntregaCliente>\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\n            <ng-template let-row=\"row\" #columnDatas>\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\n            <ng-template let-row=\"row\" #columnIndicador>\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\n                    <i class=\"bi bi-list-check\"></i>\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\n                </span>\n            </ng-template>\n        </column>\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\n            <ng-template let-row=\"row\" #columnMetaRealizado>\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\n            <ng-template let-row=\"row\" #columnProgresso>\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\n            </ng-template>\n        </column>\n        <column type=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntregaEntrega | undefined) { super.entity = value; } get entity(): PlanoEntregaEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir a entrega do plano de entregas\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao ? this.options : [];\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        await this.dao!.delete(entrega);\r\n      };\r\n    }\r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]});\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n}\r\n","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"0\" editable \r\n            [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n            [hasEdit]=\"auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\">\r\n            <ng-template let-separator=\"separator\" #groupEntregas>\r\n                <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n                    <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n                </span>\r\n            </ng-template>\r\n            <columns>\r\n                <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n                    <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                        <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge><br>\r\n                        <span class=\"d-block\">\r\n                            <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                            <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                        </span>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n                    <ng-template let-row=\"row\" #columnDatas>\r\n                        <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                        <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Meta\\nRealizado'\" [width]=\"200\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n                    <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                        <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Meta\"></badge><br>\r\n                        <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizado\"></badge>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editMetaRealizado>\r\n                        <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                        <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizado\"></plano-entrega-valor-meta-input>\r\n                    </ng-template>\r\n                </column>\r\n                <column title=\"Progresso\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n                    <ng-template let-row=\"row\" #columnProgresso>\r\n                        <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n                    </ng-template>\r\n                    <ng-template let-row=\"row\" #editProgresso>\r\n                        <input-number [size]=\"12\" disabled [decimals]=\"2\" label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                        <input-number [size]=\"12\" [decimals]=\"2\" label=\"Progresso\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Entrega do catálogo\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n                    <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                        <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                        <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n                    </ng-template>\r\n                </column>\r\n                <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { Change } from 'src/app/models/change.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-list-logs',\n  templateUrl: './plano-entrega-list-logs.component.html',\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\n})\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\n\n  public responsaveis: LookupItem[] = [];\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public planoEntrega?: PlanoEntrega;\n  public planoId: string = \"\";\n  public action: string = \"\";\n\n  constructor(public injector: Injector, dao: ChangeDaoService) {\n    super(injector, Change, ChangeDaoService);\n    /* Inicializações */\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.title = \"Logs de Planos de Entregas\";\n    this.filter = this.fh.FormBuilder({\n      responsavel_id: {default: \"\"},\n      data_inicio: {default: \"\"},\n      data_fim: {default: \"\"},\n      tipo: {default: \"\"}\n    });\n    this.orderBy = [['id', 'desc']];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.selectResponsaveis!.loading = true;\n    this.dao?.showResponsaveis().then(responsaveis => {\n      this.responsaveis = responsaveis || [];\n      this.selectResponsaveis!.loading = false;\n    });\n  }\n  \n  public filterClear(filter: FormGroup) {\n    filter.controls.responsavel_id.setValue(\"\");\n    filter.controls.data_inicio.setValue(\"\");\n    filter.controls.data_fim.setValue(\"\");\n    filter.controls.tipo.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\n    result.push([\"row_id\", \"==\", this.planoId]);\n    if(form.responsavel_id?.length){\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\n    };\n    if(form.data_inicio){\n      result.push([\"date_time\", \">=\", form.data_inicio]);\n    };\n    if(form.data_fim){\n      result.push([\"date_time\", \"<=\", form.data_fim]);\n    };\n    if(form.tipo?.length){\n      result.push([\"type\", \"==\", form.tipo]);\n    };\n    return result;\n  }\n\n  public preparaDelta(row: any): any[] {\n    this.action = row.type;\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\n    novoDelta.forEach((element: any[]) => {\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\n    });\n    return novoDelta;\n  }\n\n}\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\n    <toolbar></toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \n            [items]=\"responsaveis\"></input-select>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\n        </div>\n    </filter>\n    <columns>\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\n            <ng-template let-row=\"row\" #columnResponsavel>\n                <span> {{row.responsavel}} </span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\n            <ng-template let-row=\"row\" #columnDataCriacao>\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\n            <ng-template #titleDiferenca let-header=\"header\">\n                <div class=\"row\">\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\n                </div>\n            </ng-template>\n            <ng-template #columnDiferenca let-row=\"row\">\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\n                    <table>\n                        <tbody> \n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\n                                <td width=\"150\">{{ dif[0] }}</td>\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\n                            </tr>\n                        </tbody>\n                    </table>                   \n                </separator>\n            </ng-template>\n          </column>\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { FullRoute } from 'src/app/services/navigate.service';\nimport { Base } from 'src/app/models/base.model';\n\n@Component({\n  selector: 'plano-entrega-list',\n  templateUrl: './plano-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list.component.scss']\n})\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public showFilter: boolean = true;\n  public linha?: PlanoEntrega;\n  public unidadeDao: UnidadeDaoService;\n  public planejamentoDao: PlanejamentoDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public unidadeSelecionada: Unidade;\n  public habilitarAdesaoToolbar: boolean = false;\n  public toolbarButtons: ToolbarButton[] = [];\n  public botoes: ToolbarButton[] = [];\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\n  public BOTAO_ALTERAR: ToolbarButton;\n  public BOTAO_ARQUIVAR: ToolbarButton;\n  public BOTAO_AVALIAR: ToolbarButton;\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_CONCLUIR: ToolbarButton;\n  public BOTAO_CONSULTAR: ToolbarButton;\n  public BOTAO_DESARQUIVAR: ToolbarButton;\n  public BOTAO_EXCLUIR: ToolbarButton;\n  public BOTAO_HOMOLOGAR: ToolbarButton;\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_LOGS: ToolbarButton;\n  public BOTAO_REATIVAR: ToolbarButton;\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_SUSPENDER: ToolbarButton;\n\n  public execucao: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.unidadeSelecionada = this.auth.unidade!;\n    /* Inicializações */\n    this.title = this.lex.translate('Planos de Entregas');\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      principais: { default: true },\n      nome: { default: '' },\n      data_inicio: { default: '' },\n      data_fim: { default: '' },\n      status: { default: '' },\n      unidade_id: { default: null },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n    });\n    this.join = [\n      'planejamento:id,nome',\n      'programa:id,nome',\n      'cadeia_valor:id,nome',\n      'unidade:id,sigla,path',\n      'entregas.entrega',\n      'entregas.unidade',\n      'entregas.comentarios.usuario:id,nome,apelido',\n      'unidade.gestor:id',\n      'unidade.gestor_substituto:id',\n      'unidade.unidade_pai'\n    ];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.cancelarAvaliacao.bind(this) };\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'logs'] }) };\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\n    this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\n    this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.execucao = !!this.queryParams?.execucao;\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\n    this.selectable = this.metadata?.selectable || this.selectable;\n    if (this.execucao) {\n      this.title = this.title + \" (Execução)\";\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\n      this.filter!.controls.principais.setValue(false);\n    }\n    this.checaBotaoAderirToolbar();\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.auth.unidade != this.unidadeSelecionada) {\n      this.unidadeSelecionada = this.auth.unidade!;\n      this.checaBotaoAderirToolbar();\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onGridLoad(rows?: Base[]) {\n    if (rows && this.execucao) {\n      rows.forEach(v => {\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\n      });\n    }\n  }\n\n  public checaBotaoAderirToolbar() {\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\n    this.habilitarAdesaoToolbar = condition1 && condition2;\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\n    /*  (RI_PENT_1)\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\n    */\n  }\n\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    filter.controls.data_inicio.setValue(null);\n    filter.controls.data_fim.setValue(null);\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.planejamento_id.setValue(null);\n    filter.controls.cadeia_valor_id.setValue(null);\n    filter.controls.status.setValue(null);\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    /*\n        (RI_PENT_4) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\n        - se ele for gestor:\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \n          - os ativos das unidades imediatamente subordinadas (w3);\n    */\n    if (this.filter?.controls.principais.value) {\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\n        if (w2?.length) w1[2].push(...w2);\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\n        result.push([\"or\", w1, w3]);\n      } else {\n        result.push(w1)\n      }\n    }\n    if (form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.data_inicio) {\n      result.push([\"data_inicio\", \">=\", form.data_inicio]);\n    }\n    if (form.data_fim) {\n      result.push([\"data_fim\", \"<=\", form.data_fim]);\n    }\n    if (form.unidade_id) {\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.planejamento_id) {\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\n    }\n    if (form.cadeia_valor_id) {\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\n    }\n    if (form.status) {\n      result.push([\"status\", \"==\", form.status]);\n    }\n    //  (RI_PENT_5) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados nem cancelados.\n    //  O não-arquivamento é tratado abaixo. A condição de não-cancelado é tratada no back-end.\n    result.push([\"data_arquivamento\", \"==\", null]);\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public onPrincipaisChange(event: Event) {\n    if (this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);\n    this.grid!.reloadFilter();\n  }\n\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\n      case 'INCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\n        break;\n      case 'HOMOLOGANDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\n        break;\n      case 'ATIVO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\n        break;\n      case 'CONCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\n        break;\n      case 'SUSPENSO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\n        break;\n      case 'AVALIADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        break;\n      case 'ARQUIVADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\n        break;\n      case 'CANCELADO':\n        break;\n    }\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\n    return result;\n  }\n\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    this.linha = row;\n    this.botoes.forEach(botao => {\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\n    });\n    return result;\n  }\n\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\n    switch (botao) {\n      case this.BOTAO_ADERIR_OPTION:\n        /*         \n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\n          - o plano estiver com o status Ativo; e\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\n        */\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\n      case this.BOTAO_ALTERAR:\n        /*\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\n            - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\n        */\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\n      case this.BOTAO_ARQUIVAR:\n        /*\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_AVALIAR:\n        /*\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\n              - sugerir arquivamento automático (vide RI_PENT_A); \n        */\n        let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\n      case this.BOTAO_CANCELAR_AVALIACAO:\n        /*\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status AVALIADO, e\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\n      case this.BOTAO_CANCELAR_CONCLUSAO:\n        /*\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\n      case this.BOTAO_CANCELAR_PLANO:\n        /*\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n      case this.BOTAO_CONCLUIR:\n        /*\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\n      case this.BOTAO_CONSULTAR:\n        /*\n          (RN_PENT_V) CONSULTAR\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\";\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\n      case this.BOTAO_DESARQUIVAR:\n        /*\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\n          - o plano precisa estar arquivado, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_EXCLUIR:\n        /*\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\n      case this.BOTAO_HOMOLOGAR:\n        /*\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\n        */\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\n        let condition2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega, e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\n      case this.BOTAO_LOGS:\n        /*\n        \n        */\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n      case this.BOTAO_REATIVAR:\n        /*\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\n          - o plano precisa estar com o status SUSPENSO, e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\n      case this.BOTAO_SUSPENDER:\n        /*\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n    }\n    return false;\n  }\n\n  public arquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Arquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public avaliar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"AVALIADO\", onClick: this.dao!.avaliar.bind(this.dao) },\n      title: \"Avaliar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarAvaliacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\n      title: \"Cancelar Avaliação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\n      title: \"Cancelar Conclusão\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\n      title: \"Cancelar Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\n      title: \"Cancelar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public concluir(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\n      title: \"Concluir Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public desarquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: planoEntrega.status, onClick: this.dao!.desarquivar.bind(this.dao) },\n      title: \"Desarquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public homologar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\n      title: \"Homologar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\n      title: \"Liberar para Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public reativar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\n      title: \"Reativar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\n      title: \"Retirar de Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public suspender(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\n      title: \"Suspender Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public canAdd() {\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\n    //IMPLEMENTAR AS DEMAIS CONDIÇÕES*******************\n  }\n}\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores das geridas por ele'\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"5\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" [labelInfo]=\"'Data de início do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" [labelInfo]=\"'Data do fim do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome}}</span><br>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge>\r\n                <!-- <badge *ngIf=\"row.data_cancelamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Cancelado\"></badge> -->\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-valor-meta-input',\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\n})\nexport class PlanoEntregaValorMetaInputComponent {\n  @HostBinding('class') class = 'form-group';\n  @Input() entrega?: Entrega;\n  @Input() icon: string = \"\";\n  @Input() label?: string;\n  @Input() disabled?: string;\n  @Input() control?: AbstractControl;\n  @Input() change?: (value: any, entrega?: Entrega) => void;\n  @Input() set size(size: number) {\n    if (size != this._size) {\n      this._size = size;\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\n    }\n  }\n  public get size(): number {\n    return this._size || 12;\n  }\n\n  private _size: number = 0;\n\n  public checkTipoIndicador(tipos: string[]): boolean {\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\n  }\n\n  public onValueChange(event: Event) {\n    if (this.change) this.change(this.control?.value, this.entrega);\n  }\n}\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" required></input-number>\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" required></input-number>\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n"],"names":["Base","PlanoEntregaEntrega","constructor","data","objetivos","processos","data_inicio","Date","data_fim","descricao","homologado","meta","realizado","progresso_esperado","progresso_realizado","destinatario","comentarios","entrega_id","unidade_id","entrega_pai_id","plano_entrega_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","status","planejamento_id","cadeia_valor_id","programa_id","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","injector","validate","control","controlName","result","indexOf","value","length","titleEdit","entity","lex","translate","unidadeDao","get","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","join","modalWidth","form","fh","FormBuilder","default","auth","unidade","id","cdRef","ngOnInit","planoEntrega","metadata","controls","setValue","loadData","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","detectChanges","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","i0","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoEntregaFormAdesaoComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","ɵɵelementEnd","ɵɵelement","ɵɵproperty","formDisabled","isModal","title","ɵɵadvance","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","_r1","ctx_r3","onRealizadoChange","bind","ɵɵtext","header_r14","ɵɵtextInterpolate","row_r15","objetivo","_c11","_c10","ctx_r13","planejamentoId","planejamentoObjetivoDao","_c15","_c12","_c14","_c13","ɵɵtemplate","PlanoEntregaFormEntregaComponent_tab_26_ng_template_7_Template","ɵɵtemplateRefExtractor","PlanoEntregaFormEntregaComponent_tab_26_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_26_ng_template_11_Template","ctx_r4","planejamentoDao","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r8","_r10","_r12","header_r26","row_r27","processo","_c16","ctx_r25","cadeiaValorId","cadeiaValorProcessoDao","_c17","_c18","PlanoEntregaFormEntregaComponent_tab_27_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_11_Template","ctx_r5","formProcessos","addProcesso","removeProcesso","saveProcesso","_r20","_r22","_r24","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","entrega","dao","validDateTime","gridObjetivos","items","map","x","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","getDateFormatted","entregaDao","planoEntregaEntregaDao","planoEntregaService","listaQualitativo","objetivo_id","plano_entrega","unidadeId","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","onEntregaChange","entityWithout","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","push","label","icon","color","onClick","dynamicButtonsObjetivos","_this4","generateUuid","_status","_this5","dialog","_this6","consolidado","inputObjetivo","selectedItem","_this7","_this8","_this9","inputProcesso","_this10","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_26_Template","PlanoEntregaFormEntregaComponent_tab_27_Template","_c19","_c21","_c20","_c22","PlanoEntregaFormComponent","unidadeSelecionada","condition1","isGestorUnidade","unidade_pai","condition2","isIntegrante","hasPermissionTo","condition3","programa","diffTime","Math","abs","diffDays","ceil","prazo_max_plano_entrega","toLocaleDateString","di","df","sigla","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","entityService","getIcon","row_r13","ɵɵtextInterpolate1","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_17_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","groupBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","rowsLimit","ChangeDetectorRef","PageFrameBase","separator_r16","text","ctx_r19","PlanoEntregaListEntregaComponent_ng_template_7_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_7_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_7_badge_4_Template","row_r24","ctx_r26","PlanoEntregaListEntregaComponent_ng_template_10_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_span_2_Template","ctx_r7","row_r29","row_r30","row_r31","row_r33","PlanoEntregaListEntregaComponent_ng_template_23_badge_0_Template","ctx_r15","execucao","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","gridControl","entityToControl","options","planoEntregaId","code","consult","delete","urlParams","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","edit","index","_ref2","_x2","load","markAllAsTouched","valid","submitting","update","find","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_3_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_15_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_20_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","_r0","_r14","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","row_r16","date_time","dif_r20","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","ctx_r12","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","then","plano","ngAfterViewInit","selectResponsaveis","loading","showResponsaveis","type","novoDelta","delta","Array","entries","forEach","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","lookup","TIPO_LOG_CHANGE","_r3","_r5","_r7","_r9","_r11","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","ɵɵrestoreView","ctx_r23","ɵɵnextContext","ɵɵresetView","onAgruparChange","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_2_listener","onPrincipaisChange","toolbarButtons","agrupar","principais","noun","PlanoEntregaListComponent_column_16_ng_template_1_span_0_Template","ctx_r29","PlanoEntregaListComponent_column_16_ng_template_1_Template","PlanoEntregaListComponent_column_16_ng_template_3_Template","_r26","_r28","header_r34","row_r35","header_r36","ctx_r10","ctx_r38","row_r37","PlanoEntregaListComponent_ng_template_25_badge_4_Template","ɵɵstyleProp","ctx_r14","row_r40","ctx_r16","row_r41","ctx_r44","row_r43","ctx_r45","cadeia_valor","PlanoEntregaListComponent_ng_template_36_badge_0_Template","PlanoEntregaListComponent_ng_template_36_badge_1_Template","ctx_r22","getColor","PLANO_ENTREGA_STATUS","row_r48","getValue","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","w1","unidades","u","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","w2","w3","field","BOTAO_ADERIR_OPTION","linha","refresh","BOTAO_ADERIR_TOOLBAR","disabled","BOTAO_ALTERAR","modalRefreshId","BOTAO_ARQUIVAR","arquivar","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","onGridLoad","rows","v","expand","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botaoAtendeCondicoes","botao","isLotacaoUsuario","intersection","start","end","condicao1","condicao2","condicao3","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition4","novoStatus","query","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_16_Template","PlanoEntregaListComponent_ng_template_18_Template","PlanoEntregaListComponent_ng_template_20_Template","PlanoEntregaListComponent_ng_template_23_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_28_Template","PlanoEntregaListComponent_ng_template_31_Template","PlanoEntregaListComponent_ng_template_34_Template","PlanoEntregaListComponent_ng_template_36_Template","PlanoEntregaListComponent_ng_template_39_Template","_r13","_r15","_r17","_r19","_r21","ɵɵtextInterpolate2","row_r8","cliente","entregaService","row_r9","row_r10","porcentagem","PlanoEntregaMapaEntregasComponent_ng_template_18_h2_5_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_progress_bar_6_Template","isPorcentagem","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_template_12_Template","PlanoEntregaMapaEntregasComponent_ng_template_15_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_Template","RouterModule","AuthGuard","ConfigResolver","routes","component","canActivate","config","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoEntregaModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}