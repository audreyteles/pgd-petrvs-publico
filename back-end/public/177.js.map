{"version":3,"file":"177.js","mappings":"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","sources":["./src/app/models/plano-entrega-entrega.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho.service.ts"],"sourcesContent":["import { Base } from './base.model';\r\nimport { Comentario, HasComentarios } from './comentario';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { PlanoEntregaEntregaObjetivo } from './plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from './plano-entrega-entrega-processo.model';\r\nimport { PlanoEntrega } from './plano-entrega.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base implements HasComentarios {\r\n  public entrega?: Entrega;\r\n  public entrega_pai?: Entrega;\r\n  public plano_entrega?: PlanoEntrega;\r\n  public unidade?: Unidade;\r\n  public objetivos: PlanoEntregaEntregaObjetivo[] = [];\r\n  public processos: PlanoEntregaEntregaProcesso[] = [];\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public descricao: string = \"\";\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n  public destinatario: string = '';\r\n  public comentarios: Comentario[] = []; /* Comentarios da etrega */\r\n\r\n  public entrega_id: string = '';\r\n  public unidade_id: string = '';                        \r\n  public entrega_pai_id: string | null = null;                      \r\n  public plano_entrega_id: string | null = null;\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\nexport class PlanoEntrega extends Base implements HasStatus {\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelo método avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n\r\n  public unidade_id: string = '';\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-entregas-plano-trabalho',\r\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\r\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\r\n})\r\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \r\n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\r\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n\r\n  public PlanosTrabalho!: PlanoTrabalho[];\r\n  public items: Usuario[] = [];\r\n  public loader: boolean = false;\r\n\r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.join = [\"plano_trabalho.usuario\"];\r\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\r\n\r\n        response.forEach((item) => {\r\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\r\n          if (usuario) {\r\n            const usuarioId = usuario.id;\r\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\r\n            if (!usuarioExistente) {\r\n              usuarioExistente = {\r\n                ...usuario,\r\n                planos_trabalho: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              this.items.push(usuarioExistente);\r\n            }\r\n\r\n            const planoTrabalhoId = item.plano_trabalho!.id;\r\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\r\n              (pt) => pt.id === planoTrabalhoId\r\n            );\r\n\r\n            if (!planoTrabalho) {\r\n              planoTrabalho = {\r\n                ...item.plano_trabalho!,\r\n                entregas: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\r\n            }\r\n            const entrega: PlanoTrabalhoEntrega = {\r\n              ...item,\r\n              initialization(data) {\r\n                \r\n              },\r\n            };\r\n            planoTrabalho.entregas.push(entrega);\r\n          }\r\n\r\n        });\r\n\r\n      }).finally(() => {\r\n        this.loader = false;\r\n        this.cdRef.detectChanges();\r\n      })\r\n    } catch  (e){\r\n      console.log(\"Erro\")\r\n    }\r\n  }\r\n\r\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n    return Math.round(forca * 100) / 100;\r\n  }\r\n\r\n\r\n}\r\n","<h5>Participantes:</h5>\r\n\r\n<accordion #accordionUser [items]=\"items\" [titleTemplate]=\"usuarioSectionTitle\" [template]=\"usuarioPlanosSection\" [selectedIndex]=\"-1\" [loading]=\"loader\">\r\n  <ng-template let-item=\"item\" #usuarioSectionTitle>\r\n    <div class=\"d-flex align-items-center flex-grow-1\">\r\n      <profile-picture [url]=\"item.url_foto\" [size]=\"40\" [hint]=\"item.nome\"></profile-picture>\r\n      <div class=\"ms-2\">\r\n        <b>{{item.nome}}</b><br>\r\n        <small>{{item.apelido || \"\"}}</small>\r\n      </div>  \r\n    </div>\r\n  </ng-template>\r\n  <ng-template let-item=\"item\" #usuarioPlanosSection>\r\n    <h5>Entregas do plano:</h5>\r\n    <hr>\r\n    <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card\">\r\n       <div class=\"card-body\">\r\n        <grid [items]=\"plano.entregas\">\r\n          <columns>\r\n\r\n            <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\r\n              <ng-template let-row=\"row\" #columnExpandedAtividades>\r\n                <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\r\n              </ng-template>\r\n            </column>\r\n\r\n            <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\r\n              <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\r\n              <ng-template let-row=\"row\" #columnPlano>\r\n                <b class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</b>\r\n              </ng-template>\r\n            </column>\r\n\r\n            <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\r\n              <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n              <ng-template let-row=\"row\" #columnOrigem>\r\n                  <div class=\"w-100 d-flex justify-content-center\">\r\n                      <div class=\"one-per-line\">\r\n                          <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\r\n                          <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\r\n                          <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\r\n                      </div>\r\n                  </div>\r\n              </ng-template>\r\n              \r\n\r\n          </column>\r\n\r\n\r\n            <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\r\n              <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                  <div class=\"text-center\">\r\n                      <small><strong>% Força Trab.</strong></small><br>\r\n                      <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\r\n                  </div>\r\n              </ng-template>\r\n              <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n            </column>\r\n\r\n            <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\r\n              <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\r\n              <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\r\n            </column>\r\n          </columns>\r\n        </grid>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</accordion>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-form-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1000;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: \"\" },\r\n      data_fim: { default: \"\" },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      unidade_id: { default: this.auth.unidade?.id },\r\n      plano_entrega_id: { default: null },\r\n      programa_id: { default: null },\r\n      status: { default: \"HOMOLOGANDO\" }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\r\n    if(planoEntrega){\r\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\r\n      this.form.controls.nome.setValue(planoEntrega.nome);\r\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\r\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\r\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result; \r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event){\r\n    if(this.form.controls.plano_entrega_id.value){\r\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\r\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\r\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\r\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\r\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\r\n    }\r\n  }\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row mb-4\">\r\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \r\n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\r\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\r\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\r\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \r\n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\r\n            -->\r\n            <separator></separator>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n            </separator>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-entrega',\r\n  templateUrl: './plano-entrega-form-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\r\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\r\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\r\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\r\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\r\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\r\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public planejamentoId?: string;\r\n  public cadeiaValorId?: string;\r\n  public unidadeId?: string;\r\n  public orderBy?: QueryOrderBy[];\r\n  public formObjetivos: FormGroup;\r\n  public formProcessos: FormGroup;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public itensQualitativo: LookupItem[] = [];\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\r\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public idsUnidadesAscendentes: string[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.modalWidth = 600;\r\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      realizado: { default: null },\r\n      plano_entrega_id: { default: \"\" },\r\n      entrega_pai_id: { default: null },\r\n      entrega_id: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null },\r\n      unidade_id: { default: null },\r\n      destinatario: { default: null },\r\n      objetivos: { default: [] },\r\n      processos: { default: [] },\r\n      listaQualitativo: { default: [] },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      objetivo_id: { default: null },\r\n      objetivo: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formObjetivos = this.fh.FormBuilder({\r\n      planejamento_objetivo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formProcessos = this.fh.FormBuilder({\r\n      cadeia_processo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    let unidade: Unidade | null = null;\r\n    this.planoEntrega = this.metadata?.plano_entrega;\r\n    this.planejamentoId = this.metadata?.planejamento_id;\r\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\r\n    this.unidadeId = this.metadata?.unidade_id;\r\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \r\n    (async () => {\r\n      let planejamento = await this.planejamentoDao.getById(this.planejamentoId!);\r\n      let cadeiaValor = await this.cadeiaValorDao.getById(this.cadeiaValorId!);\r\n      await this.unidade?.loadSearch(this.unidadeId);\r\n      await this.planejamento?.loadSearch(planejamento);\r\n      await this.cadeiaValor?.loadSearch(cadeiaValor);\r\n      unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\r\n      this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\r\n    })();\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) {\r\n        result = \"Obrigatório\";\r\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\r\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\r\n      }\r\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A unidade demandante é obrigatória\";\r\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A entrega é obrigatória\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\r\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\r\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\r\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    let inicio = this.form?.controls.data_inicio.value;\r\n    let fim = this.form?.controls.data_fim.value;\r\n    if(this.gridObjetivos?.editing) {\r\n      this.tabs!.active = \"OBJETIVOS\" ;\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if (this.gridProcessos?.editing) {\r\n      this.tabs!.active = \"PROCESSOS\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if(!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if(!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if(inicio > fim) {\r\n      return \"A data do fim não pode ser anterior à data do início!\";\r\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\r\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\r\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\r\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.onEntregaChange(form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n    form.controls.objetivos.setValue(entity.objetivos);\r\n    form.controls.processos.setValue(entity.processos);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity!.unidade_id = this.auth.unidade!.id;\r\n    this.entity!.unidade = this.auth.unidade;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult> {\r\n    return new Promise<NavigateResult>((resolve, reject) => {\r\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\r\n      this.gridObjetivos?.confirm();\r\n      this.gridProcessos?.confirm();\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n      entrega = this.util.fillForm(entrega, valueWithout);\r\n      entrega.unidade = this.unidade?.selectedEntity;\r\n      entrega.entrega = this.entrega?.selectedEntity;\r\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\r\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\r\n      resolve(new NavigateResult(entrega));\r\n    });\r\n  }\r\n\r\n  public onRealizadoChange(value: any, entrega?: Entrega) {\r\n    this.calculaRealizado();\r\n  }\r\n\r\n  public calculaRealizado() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\r\n    return result;\r\n  }\r\n\r\n  public async addObjetivo() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeObjetivo(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveObjetivo(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\r\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\r\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\r\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async addProcesso() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeProcesso(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveProcesso(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaProcesso;\r\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\r\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\r\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async onEntregaChange(row: any) {\r\n    if (this.entrega && this.entrega.selectedItem) {\r\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\r\n      const tipoIndicador = entregaItem.tipo_indicador;\r\n      if(!this.form!.controls.descricao.value.length) {\r\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\r\n      }\r\n      switch (tipoIndicador) {\r\n        case 'QUALITATIVO':\r\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\r\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          break;\r\n        case 'VALOR':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'QUANTIDADE':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'PORCENTAGEM':\r\n          this.form?.controls.meta.setValue(100);\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.calculaRealizado();\r\n    }\r\n  }\r\n \r\n}\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\r\n            <div class=\"row\">\r\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-search #entrega [size]=\"12\" label=\"Modelo de Entrega\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-text [size]=\"12\" label=\"Título/Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\" [attr.maxlength]=250 required></input-text>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\r\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250></input-text>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Planejamento\"></separator>\r\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\r\n                    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n                    <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\r\n                </div>\r\n            </div>\r\n        </tab>\r\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\r\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \r\n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\r\n                        <ng-template let-header=\"header\" #titleObjetivo>\r\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #columnObjetivo>\r\n                            <span>{{row.objetivo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivo>\r\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\r\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\r\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\r\n                        <ng-template let-header=\"header\" #titleProcessos>\r\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #processo>\r\n                            <span>{{row.processo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editProcesso>\r\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\r\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\r\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n  public maxPE: Number | undefined;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\"];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      programa_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const programa = this.programa?.selectedEntity as Programa;\r\n    if (!programa) {\r\n      return \"Obrigatório selecionar o programa\";\r\n    } else if (!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if (!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if (inicio > fim) {\r\n      return \"A data do fim não pode ser menor que a data do início!\";\r\n    } else {\r\n      const entregas = this.form!.controls.entregas.value || [];\r\n      for (let entrega of entregas) {\r\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\r\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntrega();\r\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\r\n    this.entity.unidade = this.auth.unidade;\r\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\r\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\r\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public onDataChange(){ this.sugereNome(); }\r\n\r\n  public onUnidadeChange(){ this.sugereNome(); }\r\n\r\n  public sugereNome() {\r\n    if(this.action == 'new') {\r\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\r\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\r\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\r\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\r\n    }\r\n  }\r\n\r\n  public somaDia(date: Date, days: number){\r\n    let result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  public onProgramaChange(){\r\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\r\n    const data=this.somaDia(this.entity!.data_inicio,dias);\r\n    this.form!.controls.data_fim.setValue(new Date(data));\r\n    this.dataFim?.change.emit();\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\r\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\r\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator title=\"Entregas\"></separator>\r\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\" ></plano-entrega-list-entrega>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega-list',\r\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public buttons: ToolbarButton[] = [];\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      unidade_id: { default: \"\" },\r\n      destinatario: { default: \"\" },\r\n    });\r\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let form: any = filter.value;\r\n    let result: any[] = [];\r\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\r\n    if (form.unidade_id?.length) {  // unidade demandante\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.destinatario?.length) {\r\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\r\n    (select)=\"onSelect($event)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\r\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <div class=\"row\"> \r\n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\r\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\r\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\r\n            <ng-template let-row=\"row\" #columnIndicador>\r\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\r\n                    <i class=\"bi bi-list-check\"></i>\r\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\r\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntregaEntrega | undefined) { super.entity = value; } get entity(): PlanoEntregaEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    return this.isDisabled ? [Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES)] : [];\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    //console.log(this.form?.controls.progresso_realizado.value);\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    console.log(row)\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        await this.dao!.delete(entrega);\r\n      };\r\n    }\r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge><br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [width]=\"200\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Meta\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizado\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\">\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of row.objetivos\" class=\"objetivo\">\r\n                        <small>{{pObjetivo.objetivo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Modelo de Entrega\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { Change } from 'src/app/models/change.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-logs',\r\n  templateUrl: './plano-entrega-list-logs.component.html',\r\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\r\n})\r\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\r\n\r\n  public responsaveis: LookupItem[] = [];\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planoId: string = \"\";\r\n  public action: string = \"\";\r\n\r\n  constructor(public injector: Injector, dao: ChangeDaoService) {\r\n    super(injector, Change, ChangeDaoService);\r\n    /* Inicializações */\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.title = \"Logs de Planos de Entregas\";\r\n    this.filter = this.fh.FormBuilder({\r\n      responsavel_id: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      tipo: {default: \"\"}\r\n    });\r\n    this.orderBy = [['id', 'desc']];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\r\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    // this.selectResponsaveis!.loading = true;\r\n    // this.dao?.showResponsaveis().then(responsaveis => {\r\n    //   this.responsaveis = responsaveis || [];\r\n    //   this.selectResponsaveis!.loading = false;\r\n    // });\r\n  }\r\n  \r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.responsavel_id.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(\"\");\r\n    filter.controls.data_fim.setValue(\"\");\r\n    filter.controls.tipo.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\r\n    result.push([\"row_id\", \"==\", this.planoId]);\r\n    if(form.responsavel_id?.length){\r\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\r\n    };\r\n    if(form.data_inicio){\r\n      result.push([\"date_time\", \">=\", form.data_inicio]);\r\n    };\r\n    if(form.data_fim){\r\n      result.push([\"date_time\", \"<=\", form.data_fim]);\r\n    };\r\n    if(form.tipo?.length){\r\n      result.push([\"type\", \"==\", form.tipo]);\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public preparaDelta(row: any): any[] {\r\n    this.action = row.type;\r\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\r\n    novoDelta.forEach((element: any[]) => {\r\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\r\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\r\n    });\r\n    return novoDelta;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\r\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\r\n    <toolbar></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \r\n            [items]=\"responsaveis\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\r\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\r\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\r\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnResponsavel>\r\n                <span> {{row.responsavel}} </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\r\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnDataCriacao>\r\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\r\n            <ng-template #titleDiferenca let-header=\"header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #columnDiferenca let-row=\"row\">\r\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\r\n                    <table>\r\n                        <tbody> \r\n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\r\n                                <td width=\"150\">{{ dif[0] }}</td>\r\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\r\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>                   \r\n                </separator>\r\n            </ng-template>\r\n          </column>\r\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { Base } from 'src/app/models/base.model';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public showFilter: boolean = true;\r\n  public linha?: PlanoEntrega;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public unidadeSelecionada: Unidade;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public botoes: ToolbarButton[] = [];\r\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\r\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\r\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_AVALIAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_CONCLUIR: ToolbarButton;\r\n  public BOTAO_CONSULTAR: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_EXCLUIR: ToolbarButton;\r\n  public BOTAO_HOMOLOGAR: ToolbarButton;\r\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_LOGS: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n\r\n  public execucao: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.unidadeSelecionada = this.auth.unidade!;\r\n    /* Inicializações */\r\n    this.title = this.lex.translate('Planos de Entregas');\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      principais: { default: true },\r\n      arquivadas: { default: false },\r\n      nome: { default: '' },\r\n      data_inicio: { default: '' },\r\n      data_fim: { default: '' },\r\n      status: { default: '' },\r\n      unidade_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n    });\r\n    this.join = [\r\n      'planejamento:id,nome',\r\n      'programa:id,nome',\r\n      'cadeia_valor:id,nome',\r\n      'unidade:id,sigla,path',\r\n      'entregas.entrega',\r\n      'entregas.objetivos.objetivo',\r\n      'entregas.processos.processo',\r\n      'entregas.unidade',\r\n      'entregas.comentarios.usuario:id,nome,apelido',\r\n      'unidade.gestor:id',\r\n      'unidade.gestor_substituto:id',\r\n      'unidade.unidade_pai'\r\n    ];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\r\n    this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\r\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.execucao = !!this.queryParams?.execucao;\r\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\r\n    this.selectable = this.metadata?.selectable || this.selectable;\r\n    if (this.execucao) {\r\n      this.title = this.title + \" (Execução)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    this.checaBotaoAderirToolbar();\r\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.auth.unidade != this.unidadeSelecionada) {\r\n      this.unidadeSelecionada = this.auth.unidade!;\r\n      this.checaBotaoAderirToolbar();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onGridLoad(rows?: Base[]) {\r\n    if (rows && this.execucao) {\r\n      rows.forEach(v => {\r\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\r\n      });\r\n    }\r\n  }\r\n\r\n  public checaBotaoAderirToolbar() {\r\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\r\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\r\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\r\n    /*  (RI_PENT_1)\r\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\r\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \r\n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\r\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\r\n    */\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\r\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\r\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    /*\r\n        (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\r\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\r\n        - se ele for gestor:\r\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \r\n          - os ativos das unidades imediatamente subordinadas (w3);\r\n    */\r\n    if (this.filter?.controls.principais.value) {\r\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\r\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\r\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\r\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\r\n        if (w2?.length) w1[2].push(...w2);\r\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\r\n        result.push([\"or\", w1, w3]);\r\n      } else {\r\n        result.push(w1)\r\n      }\r\n    }\r\n    if (form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.data_inicio) {\r\n      result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    }\r\n    if (form.data_fim) {\r\n      result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n    }\r\n    if (form.unidade_id) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.planejamento_id) {\r\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    }\r\n    if (form.cadeia_valor_id) {\r\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    }\r\n    if (form.status) {\r\n      result.push([\"status\", \"==\", form.status]);\r\n    }\r\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados nem cancelados.\r\n    //  A condição de não-cancelado é tratada no back-end.\r\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public onPrincipaisChange(event: Event) {\r\n    if (this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);\r\n    this.grid!.reloadFilter();\r\n  }\r\n\r\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\r\n        break;\r\n      case 'ATIVO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\r\n        break;\r\n      case 'SUSPENSO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\r\n        break;\r\n      case 'AVALIADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        break;\r\n      case 'ARQUIVADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\r\n        break;\r\n      case 'CANCELADO':\r\n        break;\r\n    }\r\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.linha = row;\r\n    this.botoes.forEach(botao => {\r\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\r\n    switch (botao) {\r\n      case this.BOTAO_ADERIR_OPTION:\r\n        /*         \r\n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\r\n          - o plano estiver com o status Ativo; e\r\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\r\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\r\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\r\n        */\r\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\r\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\r\n            - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\r\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\r\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\r\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\r\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\r\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\r\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\r\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\r\n        */\r\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\r\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\r\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_AVALIAR:\r\n        /*\r\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\r\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\r\n              - sugerir arquivamento automático (vide RI_PENT_A); \r\n        */\r\n        let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\r\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\r\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\r\n      case this.BOTAO_CANCELAR_AVALIACAO:\r\n        /*\r\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO, e\r\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\r\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\r\n      case this.BOTAO_CANCELAR_CONCLUSAO:\r\n        /*\r\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\r\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\r\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\r\n      case this.BOTAO_CANCELAR_PLANO:\r\n        /*\r\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n      case this.BOTAO_CONCLUIR:\r\n        /*\r\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\r\n      case this.BOTAO_CONSULTAR:\r\n        /*\r\n          (RN_PENT_V) CONSULTAR\r\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\r\n          - o plano precisa estar arquivado, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_EXCLUIR:\r\n        /*\r\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\r\n      case this.BOTAO_HOMOLOGAR:\r\n        /*\r\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\r\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\r\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\r\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\r\n        */\r\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\r\n        let condition2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\r\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\r\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\r\n      case this.BOTAO_LOGS:\r\n        /*\r\n        \r\n        */\r\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\r\n          - o plano precisa estar com o status SUSPENSO, e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Arquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: true}), novoStatus: \"AVALIADO\", onClick: this.dao!.avaliar.bind(this.dao) },\r\n      title: \"Avaliar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\r\n      title: \"Cancelar Avaliação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\r\n      title: \"Cancelar Conclusão\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\r\n      title: \"Cancelar Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\r\n      title: \"Cancelar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\r\n      title: \"Concluir Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: planoEntrega.status, onClick: this.dao!.desarquivar.bind(this.dao) },\r\n      title: \"Desarquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\r\n      title: \"Homologar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\r\n      title: \"Liberar para Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\r\n      title: \"Reativar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\r\n      title: \"Retirar de Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\r\n      title: \"Suspender Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public canAdd() {\r\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\r\n    /*\r\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\r\n     */\r\n  }\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores das geridas por ele'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"4\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" [labelInfo]=\"'Data de início do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" [labelInfo]=\"'Data do fim do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome}}</span><br>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Arquivado\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-valor-meta-input',\r\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\r\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\r\n})\r\nexport class PlanoEntregaValorMetaInputComponent {\r\n  @HostBinding('class') class = 'form-group';\r\n  @Input() entrega?: Entrega;\r\n  @Input() icon: string = \"\";\r\n  @Input() label?: string;\r\n  @Input() labelInfo: string = \"\";\r\n  @Input() disabled?: string;\r\n  @Input() control?: AbstractControl;\r\n  @Input() change?: (value: any, entrega?: Entrega) => void;\r\n  @Input() set size(size: number) {\r\n    if (size != this._size) {\r\n      this._size = size;\r\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\r\n    }\r\n  }\r\n  public get size(): number {\r\n    return this._size || 12;\r\n  }\r\n\r\n  private _size: number = 0;\r\n\r\n  public checkTipoIndicador(tipos: string[]): boolean {\r\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\r\n  }\r\n\r\n  public onValueChange(event: Event) {\r\n    if (this.change) this.change(this.control?.value, this.entrega);\r\n  }\r\n}\r\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-entrega-atividades',\r\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\r\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\r\n})\r\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\r\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public AtividadeDao: AtividadeDaoService;\r\n  public items: Atividade[] = [];\r\n\r\n  public loader: boolean = false;\r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.join = ['unidade']\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\r\n      this.items = response\r\n    }).finally(()=> {\r\n      this.loader = false;\r\n    })\r\n  }\r\n\r\n}\r\n","<h5>Atividades:</h5>\r\n<grid [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\r\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \r\n          Descrição\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\r\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\r\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\r\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\r\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnPessoas>\r\n          <div class=\"text-nowrap\">\r\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\r\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n          </div>\r\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\r\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\r\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n\r\n  </columns>\r\n</grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { Documento, HasDocumentos } from 'src/app/models/documento.model';\r\nimport { PlanoTrabalhoEntrega, PlanoTrabalhoEntregaTipo } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Template } from 'src/app/models/template.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { LookupItem, LookupService } from 'src/app/services/lookup.service';\r\nimport { TemplateService } from '../../uteis/templates/template.service';\r\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { UtilService } from 'src/app/services/util.service';\r\n\r\nexport type BadgeTrabalho = {\r\n  titulo: string,\r\n  cor: string,\r\n  nome: string,\r\n  descricao: string,\r\n  tipo: PlanoTrabalhoEntregaTipo\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoTrabalhoService {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public util: UtilService,\r\n    public lookup: LookupService,\r\n    public dao: PlanoTrabalhoDaoService,\r\n    public templateService: TemplateService,\r\n    public planoTrabalhoDao: PlanoTrabalhoDaoService\r\n  ) { }\r\n\r\n  public template(plano: PlanoTrabalho): Template | undefined {\r\n    return plano.programa?.template_tcr;\r\n  }\r\n\r\n  public metadados(plano: PlanoTrabalho) {\r\n    return {\r\n      needSign: this.needSign.bind(this),\r\n      extraTags: this.extraTags.bind(this),\r\n      especie: \"TCR\",\r\n      titulo: \"Termo de Ciência e Responsabilidade\",\r\n      dataset: this.planoTrabalhoDao.dataset(),\r\n      datasource: this.planoTrabalhoDao.datasource(plano),\r\n      template: plano.programa?.template_tcr,\r\n      template_id: plano.programa?.template_tcr_id\r\n    };\r\n  }\r\n\r\n  public needSign(parent?: HasDocumentos, item?: Documento): boolean {\r\n    const plano = parent as PlanoTrabalho;\r\n    const documento = item || (plano?.documentos || []).find(x => plano?.documento_id?.length && x.id == plano?.documento_id) || plano?.documento;\r\n    if (parent && documento && !documento.assinaturas?.find(x => x.usuario_id == this.auth.usuario!.id)) {\r\n      const tipoModalidade = plano.tipo_modalidade;\r\n      const programa = plano.programa;\r\n      const entidade = this.auth.entidade!;\r\n      let ids: string[] = [];\r\n      if (programa?.plano_trabalho_assinatura_participante) ids.push(plano.usuario_id);\r\n      if (programa?.plano_trabalho_assinatura_gestor_lotacao) ids.push(...this.auth.gestoresLotacao.map(x => x.id));\r\n      if (programa?.plano_trabalho_assinatura_gestor_unidade) ids.push(plano.unidade?.gestor?.id || \"\", plano.unidade?.gestor_substituto?.id || \"\");\r\n      if (programa?.plano_trabalho_assinatura_gestor_entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\r\n      return !!tipoModalidade && ids.includes(this.auth.usuario!.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public extraTags(parent: HasDocumentos, documento: Documento, metadado: any): LookupItem[] {\r\n    const plano = parent as PlanoTrabalho;\r\n    let tags: LookupItem[] = [];\r\n    if (plano?.documento_id == documento.id) tags.push({ key: documento.id, value: \"Vigente\", icon: \"bi bi-check-all\", color: \"primary\" })\r\n    if (JSON.stringify(metadado.tags) != JSON.stringify(tags)) metadado.tags = tags;\r\n    return metadado.tags;\r\n  }\r\n\r\n  /**\r\n   * Método retorna um badge de acordo com o tipo de entrega recebida no parâmetro 'planoTrabalhoTrabalho': entrega associada a uma entrega do catálogo, entrega associada a uma entrega \r\n   * da mesma unidade, ou entrega associada a uma entrega de outra unidade.\r\n   * @param planoTrabalhoTrabalho  Trabalho do Plano de Trabalho cujo tipo será analisado.\r\n   * @param planoTrabalho         Plano de Trabalho ao qual pertence a entrega a ser analisada. Se não for informado, o método tentará obtê-lo diretamente da própria entrega recebida.\r\n   * @returns \r\n   */\r\n  public tipoEntrega(planoTrabalhoEntrega: PlanoTrabalhoEntrega, planoTrabalho?: PlanoTrabalho): BadgeTrabalho {\r\n    /* Se row for uma entrega vinda do banco de dados, ela já deve trazer consigo um dos seus relacionamentos: 'entrega' ou 'plano_entrega_entrega', que serão lidos diretamente de row quando necessário. \r\n       Se row não vier do banco, ela passou pelo método saveEntrega() e lá um desses objetos, escolhido em um dos 3 inputSearch, foi anexado à variável this.novaEntrega, que originalmente é vazia. Sendo assim,\r\n       quando necessário, os dados serão lidos em this.novaEntrega.entrega ou em this.novaEntrega.plano_entrega_entrega. */\r\n    let plano = planoTrabalho || planoTrabalhoEntrega.plano_trabalho;\r\n    let key: PlanoTrabalhoEntregaTipo = planoTrabalhoEntrega.plano_entrega_entrega?.plano_entrega?.unidade_id == plano!.unidade_id ? \"PROPRIA_UNIDADE\" :\r\n      (planoTrabalhoEntrega.plano_entrega_entrega ? \"OUTRA_UNIDADE\" : \r\n      (!!planoTrabalhoEntrega.orgao?.length ? \"OUTRO_ORGAO\" : \"SEM_ENTREGA\"));\r\n    let result = this.lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO.find(x => x.key == key) || {key: \"\", value: \"Desconhecido\"};\r\n    let nome = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.entrega?.nome || planoTrabalhoEntrega.plano_entrega_entrega?.entrega?.nome || \"Desconhecido\";\r\n    let descricao = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.descricao || planoTrabalhoEntrega.plano_entrega_entrega?.descricao || \"\";\r\n    return { titulo: result.value, cor: result.color || \"danger\", nome: nome, tipo: key, descricao: descricao};\r\n  }\r\n\r\n  /**\r\n   * Método atualiza o TCR caso ele exista (possivelmente obrigatório pelo programa), e caso ele não esteja assinado. \r\n   * Em caso de estar assinado ou ser obrigatório e não exista ainda, será gerado um novo documento.\r\n   * @param planoReferencia  Plano de trabalho para comparação (contendo as entregas)\r\n   * @param planoNovo        Plano de trabalho modificado, com as novas informações (contendo as entregas, programa.template_tcr e documentos)\r\n   * @param ?textUsuario     Texto complementar do usuário, caso não seja informado, irá utilizar o do planoNovo.usuario.texto_complementar_plano\r\n   * @param ?textUnidade     Texto complementar da unidade, caso não seja informado, irá utilizar o do planoNovo.unidade.texto_complementar_plano\r\n   * @returns                Documento gerado ou modificado (observar o _status)\r\n   */\r\n  public atualizarTcr(planoReferencia: PlanoTrabalho, planoNovo: PlanoTrabalho, textUsuario?: string, textUnidade?: string) {\r\n    if (planoNovo.usuario && planoNovo.unidade) {\r\n      let dsReferencia = this.dao!.datasource(planoReferencia);\r\n      let dsNovo = this.dao!.datasource(planoNovo);\r\n      let programa = planoNovo.programa;\r\n      /* Atualiza os campos de texto complementar do usuário e da unidade */\r\n      dsNovo.usuario.texto_complementar_plano = textUsuario || planoNovo.usuario?.texto_complementar_plano || \"\";\r\n      dsNovo.unidade.texto_complementar_plano = textUnidade || planoNovo.unidade?.texto_complementar_plano || \"\";\r\n      /* Se tiver modificações e o termo for obrigatório ou já exista um documento */\r\n      if ((programa?.termo_obrigatorio || planoNovo.documento_id?.length) && JSON.stringify(dsNovo) != JSON.stringify(dsReferencia) && programa?.template_tcr) {\r\n        let documento = planoNovo.documentos?.find((x: Documento) => x.id == planoNovo.documento_id);\r\n        if (!planoNovo.documento_id?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\r\n          documento = new Documento({\r\n            id: this.dao?.generateUuid(),\r\n            tipo: \"HTML\",\r\n            especie: \"TCR\",\r\n            titulo: \"Termo de Ciência e Responsabilidade\",\r\n            conteudo: this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo),\r\n            status: \"GERADO\",\r\n            _status: \"ADD\",\r\n            template: programa?.template_tcr?.conteudo,\r\n            dataset: this.dao!.dataset(),\r\n            datasource: dsNovo,\r\n            entidade_id: this.auth.entidade?.id,\r\n            plano_trabalho_id: planoNovo.id,\r\n            template_id: programa?.template_tcr_id\r\n          });\r\n          planoNovo.documentos.push(documento);\r\n        } else {\r\n          documento.conteudo = this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo);\r\n          documento.dataset = this.dao!.dataset();\r\n          documento.datasource = dsNovo;\r\n          documento._status = documento._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n        }\r\n        planoNovo.documento = documento;\r\n        planoNovo.documento_id = documento?.id || null;\r\n      }\r\n    }\r\n    return planoNovo.documento;\r\n  }\r\n\r\n  /**\r\n   * Informa a situação do plano de trabalho recebido como parâmetro, ou seja, se foi EXCLUIDO ou ARQUIVADO, ou, caso contrário, o seu status atual.\r\n   * @param planoTrabalho \r\n   * @returns \r\n   */\r\n  public situacaoPlano(planoTrabalho: PlanoTrabalho): string {\r\n    if (planoTrabalho.deleted_at) return \"EXCLUIDO\";\r\n    else if (planoTrabalho.data_arquivamento) return \"ARQUIVADO\";\r\n    else return planoTrabalho.status!;\r\n  }\r\n\r\n  /**\r\n   * Informa se o plano de trabalho recebido como parâmetro é válido, ou seja, não foi deletado, não foi cancelado nem foi arquivado.\r\n   * @param planoTrabalho \r\n   * @returns \r\n   */\r\n    public isValido(planoTrabalho: PlanoTrabalho): boolean {\r\n      return !planoTrabalho.deleted_at && planoTrabalho.status != 'CANCELADO' && !planoTrabalho.data_arquivamento;\r\n    }\r\n\r\n  /**\r\n   * Calcula a quantidade de dias para concluir a consolidação considerando a tolerância configurada no programa.\r\n   * @param consolidacao  Consolidacao do plano de trabalho\r\n   * @param programa      Programa\r\n   * @returns             Quantidade de dias para conclusão (Retorna números negativos caso tenha passado o prazo)\r\n   */\r\n  public diasParaConcluirConsolidacao(consolidacao?: PlanoTrabalhoConsolidacao, programa?: Programa): number {\r\n    return !consolidacao || !programa ? -1 : this.util.daystamp(consolidacao.data_fim) + programa.dias_tolerancia_avaliacao - this.util.daystamp(this.auth.hora);\r\n  }\r\n}\r\n"],"names":["Base","PlanoEntregaEntrega","constructor","data","objetivos","processos","data_inicio","Date","data_fim","descricao","homologado","meta","realizado","progresso_esperado","progresso_realizado","destinatario","comentarios","entrega_id","unidade_id","entrega_pai_id","plano_entrega_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","arquivar","status","planejamento_id","cadeia_valor_id","programa_id","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PageFrameBase","PlanoTrabalhoService","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r5","url_foto","ɵɵtextInterpolate","apelido","row_r27","id","ɵɵtextInterpolate1","ctx_r14","PlanoTrabalhoDao","getDateFormatted","plano_r8","row_r32","plano_entrega_entrega","plano_entrega","unidade","sigla","ctx_r33","entityService","getIcon","orgao","ɵɵtemplate","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_15_badge_4_Template","ctx_r18","planoTrabalhoService","tipoEntrega","entity","titulo","cor","plano_entrega_entrega_id","length","ctx_r20","totalForcaTrabalho","row_r39","forca_trabalho","row_r41","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_25_Template","ɵɵstyleMap","_r9","_r13","_r11","_r15","_r17","_r19","_r21","_r23","_r25","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_Template","item_r6","planos_trabalho","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","injector","items","loader","get","PlanoTrabalhoEntregaDao","join","groupBy","field","label","ngOnInit","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","entrega","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","rf","ctx","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_4_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","_r1","_r3","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","lex","translate","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","metadata","controls","setValue","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","isModal","title","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","ctx_r3","onRealizadoChange","bind","header_r14","row_r15","objetivo","_c11","_c10","ctx_r13","planejamentoId","planejamentoObjetivoDao","_c15","_c12","_c14","_c13","PlanoEntregaFormEntregaComponent_tab_26_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_26_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_26_ng_template_11_Template","ctx_r4","planejamentoDao","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r8","_r10","_r12","header_r26","processo","_c16","ctx_r25","cadeiaValorId","cadeiaValorProcessoDao","_c17","_c18","PlanoEntregaFormEntregaComponent_tab_27_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_11_Template","ctx_r5","formProcessos","addProcesso","removeProcesso","saveProcesso","_r20","_r22","_r24","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","dao","validDateTime","gridObjetivos","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","entregaDao","planoEntregaEntregaDao","planoEntregaService","listaQualitativo","objetivo_id","unidadeId","planejamento","getById","cadeiaValor","loadSearch","path","split","slice","onEntregaChange","entityWithout","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","_this4","generateUuid","_status","_this5","dialog","_this6","consolidado","inputObjetivo","selectedItem","_this7","_this8","_this9","inputProcesso","_this10","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_26_Template","PlanoEntregaFormEntregaComponent_tab_27_Template","_c19","_c21","_c20","_c22","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_17_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","selectable","hasPermissionTo","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","rowsLimit","ChangeDetectorRef","separator_r22","text","row_r23","PlanoEntregaListEntregaComponent_ng_template_5_span_0_Template","row_r26","ctx_r29","PlanoEntregaListEntregaComponent_ng_template_10_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_4_Template","ctx_r35","row_r34","ctx_r36","PlanoEntregaListEntregaComponent_ng_template_13_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_13_span_2_Template","ctx_r11","row_r40","onRealizadaChange","ctx_r17","pObjetivo_r47","PlanoEntregaListEntregaComponent_ng_template_26_separator_0_div_1_Template","ctx_r44","row_r43","pProcesso_r50","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_div_1_Template","ctx_r45","PlanoEntregaListEntregaComponent_ng_template_26_separator_0_Template","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_Template","row_r52","PlanoEntregaListEntregaComponent_ng_template_29_badge_0_Template","ctx_r21","execucao","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","urlParams","isDisabled","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","edit","index","_ref2","_x2","load","markAllAsTouched","valid","submitting","update","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_16_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_21_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","PlanoEntregaListEntregaComponent_ng_template_26_Template","PlanoEntregaListEntregaComponent_ng_template_29_Template","_r0","_r14","_r16","_r18","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","row_r16","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","ctx_r12","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","plano","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","lookup","TIPO_LOG_CHANGE","_r5","_r7","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","ɵɵrestoreView","ctx_r23","ɵɵnextContext","ɵɵresetView","onAgruparChange","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_2_listener","onPrincipaisChange","toolbarButtons","agrupar","principais","noun","row_r30","PlanoEntregaListComponent_column_17_ng_template_1_span_0_Template","row_r33","PlanoEntregaListComponent_column_17_ng_template_1_Template","PlanoEntregaListComponent_column_17_ng_template_3_Template","_r26","_r28","header_r34","row_r35","header_r36","ctx_r10","ctx_r38","row_r37","PlanoEntregaListComponent_ng_template_26_badge_4_Template","ɵɵstyleProp","ctx_r16","cadeia_valor","PlanoEntregaListComponent_ng_template_37_badge_0_Template","PlanoEntregaListComponent_ng_template_37_badge_1_Template","PlanoEntregaListComponent_ng_template_40_badge_2_Template","ctx_r22","getColor","PLANO_ENTREGA_STATUS","row_r48","getValue","data_arquivamento","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","w1","unidades","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","isGestorUnidade","w2","unidade_pai","w3","arquivadas","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","refresh","BOTAO_ADERIR_TOOLBAR","BOTAO_ALTERAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","onGridLoad","rows","v","expand","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botaoAtendeCondicoes","botao","isLotacaoUsuario","intersection","start","end","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_17_Template","PlanoEntregaListComponent_ng_template_19_Template","PlanoEntregaListComponent_ng_template_21_Template","PlanoEntregaListComponent_ng_template_24_Template","PlanoEntregaListComponent_ng_template_26_Template","PlanoEntregaListComponent_ng_template_29_Template","PlanoEntregaListComponent_ng_template_32_Template","PlanoEntregaListComponent_ng_template_35_Template","PlanoEntregaListComponent_ng_template_37_Template","PlanoEntregaListComponent_ng_template_40_Template","ɵɵtextInterpolate2","row_r8","cliente","entregaService","row_r9","row_r10","porcentagem","PlanoEntregaMapaEntregasComponent_ng_template_18_h2_5_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_progress_bar_6_Template","ctx_r7","isPorcentagem","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_template_12_Template","PlanoEntregaMapaEntregasComponent_ng_template_15_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_Template","RouterModule","AuthGuard","ConfigResolver","routes","component","canActivate","config","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","progresso","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template","Documento","templateService","planoTrabalhoDao","template","template_tcr","needSign","extraTags","especie","dataset","datasource","template_id","template_tcr_id","parent","documento","documentos","documento_id","assinaturas","usuario_id","tipoModalidade","tipo_modalidade","entidade","ids","plano_trabalho_assinatura_participante","plano_trabalho_assinatura_gestor_lotacao","gestoresLotacao","plano_trabalho_assinatura_gestor_unidade","gestor","gestor_substituto","plano_trabalho_assinatura_gestor_entidade","gestor_id","gestor_substituto_id","metadado","tags","JSON","stringify","planoTrabalhoEntrega","ORIGENS_ENTREGAS_PLANO_TRABALHO","_metadata","novaEntrega","atualizarTcr","planoReferencia","planoNovo","textUsuario","textUnidade","dsReferencia","dsNovo","texto_complementar_plano","termo_obrigatorio","conteudo","renderTemplate","entidade_id","plano_trabalho_id","deleted_at","diasParaConcluirConsolidacao","consolidacao","daystamp","dias_tolerancia_avaliacao","hora","ɵɵinject","AuthService","i2","UtilService","i3","LookupService","i4","i5","TemplateService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}