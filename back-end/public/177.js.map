{"version":3,"file":"177.js","mappings":"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","sources":["./src/app/models/plano-entrega-entrega.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho.service.ts"],"sourcesContent":["import { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { Comentario, HasComentarios } from './comentario';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { PlanoEntregaEntregaObjetivo } from './plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from './plano-entrega-entrega-processo.model';\r\nimport { PlanoEntrega } from './plano-entrega.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base implements HasAvaliacao, HasComentarios {\r\n  public entrega?: Entrega;\r\n  public entrega_pai?: Entrega;\r\n  public plano_entrega?: PlanoEntrega;\r\n  public avaliacao?: Avaliacao;\r\n  public unidade?: Unidade;\r\n  public objetivos: PlanoEntregaEntregaObjetivo[] = [];\r\n  public processos: PlanoEntregaEntregaProcesso[] = [];\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public descricao: string = \"\";\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n  public destinatario: string = '';\r\n  public avaliacoes: Avaliacao[] = [];\r\n  public comentarios: Comentario[] = []; /* Comentarios da etrega */\r\n\r\n  public entrega_id: string = '';\r\n  public unidade_id: string = '';                        \r\n  public entrega_pai_id: string | null = null;                      \r\n  public avaliacao_id: string | null = null;\r\n  public plano_entrega_id: string | null = null;\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\nexport class PlanoEntrega extends Base implements HasStatus {\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelo método avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n\r\n  public unidade_id: string = '';\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\n\n@Component({\n  selector: 'plano-entrega-entregas-plano-trabalho',\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\n})\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\n\n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  private _entregaId!: string;\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n\n  public PlanosTrabalho!: PlanoTrabalho[];\n  public items: Usuario[] = [];\n  public loader: boolean = false;\n  \n\n  constructor(public injector: Injector){\n    super(injector);\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.join = [\"plano_trabalho.usuario\",\"plano_entrega_entrega.plano_entrega.unidade\"];\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\n  }\n\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public loadData() {\n    this.loader = true;\n    this.cdRef.detectChanges();\n    try {\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\n\n        response.forEach((item) => {\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\n          if (usuario) {\n            const usuarioId = usuario.id;\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\n            if (!usuarioExistente) {\n              usuarioExistente = {\n                ...usuario,\n                planos_trabalho: [],\n                initialization(data) {                  \n                },\n              };\n              this.items.push(usuarioExistente);\n            }\n\n            const planoTrabalhoId = item.plano_trabalho!.id;\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\n              (pt) => pt.id === planoTrabalhoId\n            );\n\n            if (!planoTrabalho) {\n              planoTrabalho = {\n                ...item.plano_trabalho!,\n                entregas: [],\n                initialization(data) {                  \n                },\n              };\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\n            }\n            const entrega: PlanoTrabalhoEntrega = {\n              ...item,\n              initialization(data) {\n                \n              },\n            };\n            planoTrabalho.entregas.push(entrega);\n          }\n        });\n\n      }).finally(() => {\n        this.loader = false;\n        this.cdRef.detectChanges();\n      })\n    } catch  (e){\n      console.log(\"Erro\")\n    }\n  }\n\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\n    return Math.round(forca * 100) / 100;\n  }\n\n  public planoAtivo(planos: PlanoTrabalho[]): PlanoTrabalho {\n    const planoAtivo = planos.find((plano) => plano.status === \"ATIVO\");\n    return planoAtivo || {} as PlanoTrabalho;\n  }\n\n\n}\n","<h5>Participantes:</h5>\n\n<grid #accordionUser [items]=\"items\" [loading]=\"loader\">\n  <columns>\n    <column type=\"expand\"  [expandTemplate]=\"columnExpandeEntregas\" [template]=\"usuarioSectionTitle\" [width]=\"40\">\n      \n      <ng-template let-row=\"row\" #usuarioSectionTitle>        \n      </ng-template>\n\n      <ng-template let-item=\"row\" #columnExpandeEntregas>\n        <h5>Entregas do plano:</h5>\n        <hr>\n        <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card mb-2\">\n          <div class=\"card-body\">\n            <grid [items]=\"plano.entregas\">\n              <columns>\n\n                <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\n                  <ng-template let-row=\"row\" #columnExpandedAtividades>\n                    <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\n                  </ng-template>\n                </column>\n\n                <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\n                  <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnPlano>\n                    <b class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</b>\n                  </ng-template>\n                </column>\n\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnOrigem>\n                      <div class=\"w-100 d-flex justify-content-center\">\n                          <div class=\"one-per-line\">\n                              <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\n                              <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\n                              <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\n                          </div>\n                      </div>\n                  </ng-template>\n                  \n\n              </column>\n\n\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleForcaTrabalho>\n                      <div class=\"text-center\">\n                          <small><strong>% Força Trab.</strong></small><br>\n                          <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\n                      </div>\n                  </ng-template>\n                  <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\n                </column>\n\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\n                </column>\n\n                <column title=\"Status\" [template]=\"columnStatus\">\n                  <ng-template let-row=\"row\" #columnStatus>\n                      <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, plano.status)\"></badge>\n                  </ng-template>\n                </column>\n\n              </columns>\n            </grid>\n          </div>\n        </div>\n      </ng-template>\n    </column>  \n\n    <column [titleTemplate]=\"titleParticipante\" [template]=\"columnParticipante\">\n      <ng-template let-header=\"header\" #titleParticipante>\n          <b>Participante</b>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnParticipante>\n        <b>{{row.nome}}</b><br>\n        <small>{{row.apelido || \"\"}}</small>\n      </ng-template>\n    </column>\n\n    <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\">\n      <ng-template let-header=\"header\" #titleForcaTrabalho>\n          <b>% Força Trab.</b>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnForcaTrabalho>\n        <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) + '%'\"></badge></small>\n      </ng-template>\n    </column>\n  \n  </columns>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'plano-entrega-adesao',\n  templateUrl: './plano-entrega-form-adesao.component.html',\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\n})\n\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [];\n    this.modalWidth = 1000;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: \"\" },\n      data_fim: { default: \"\" },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      unidade_id: { default: this.auth.unidade?.id },\n      plano_entrega_id: { default: null },\n      programa_id: { default: null },\n      status: { default: \"HOMOLOGANDO\" }\n    }, this.cdRef, this.validate);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\n    if(planoEntrega){\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\n      this.form.controls.nome.setValue(planoEntrega.nome);\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\n    }\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result; \n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public onPlanoEntregaChange(event: Event){\n    if(this.form.controls.plano_entrega_id.value){\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\n    }\n  }\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row mb-4\">\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\n            -->\n            <separator></separator>\n        </div>\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n        </div>\n        <div class=\"row\">\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row mt-4\">\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\n                <div class=\"row\">\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n            </separator>\n        </div>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\nimport { NavigateResult } from 'src/app/services/navigate.service';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\n\n@Component({\n  selector: 'plano-entrega-form-entrega',\n  templateUrl: './plano-entrega-form-entrega.component.html',\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\n})\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n\n  public planoEntrega?: PlanoEntrega;\n  public planejamentoDao: PlanejamentoDaoService;\n  public planejamentoId?: string;\n  public cadeiaValorId?: string;\n  public unidadeId?: string;\n  public orderBy?: QueryOrderBy[];\n  public formObjetivos: FormGroup;\n  public formProcessos: FormGroup;\n  public unidadeDao: UnidadeDaoService;\n  public entregaDao: EntregaDaoService;\n  public itensQualitativo: LookupItem[] = [];\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public idsUnidadesAscendentes: string[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.modalWidth = 600;\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\n    this.form = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      meta: { default: 100 },\n      realizado: { default: null },\n      plano_entrega_id: { default: \"\" },\n      entrega_pai_id: { default: null },\n      entrega_id: { default: null },\n      progresso_esperado: { default: 100 },\n      progresso_realizado: { default: null },\n      unidade_id: { default: null },\n      destinatario: { default: null },\n      objetivos: { default: [] },\n      processos: { default: [] },\n      listaQualitativo: { default: [] },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      objetivo_id: { default: null },\n      objetivo: { default: null },\n    }, this.cdRef, this.validate);\n    this.formObjetivos = this.fh.FormBuilder({\n      planejamento_objetivo_id: { default: null },\n    }, this.cdRef, this.validate);\n    this.formProcessos = this.fh.FormBuilder({\n      cadeia_processo_id: { default: null },\n    }, this.cdRef, this.validate);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    let unidade: Unidade | null = null;\n    this.planoEntrega = this.metadata?.plano_entrega;\n    this.planejamentoId = this.metadata?.planejamento_id;\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\n    this.unidadeId = this.metadata?.unidade_id;\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) {\n        result = \"Obrigatório\";\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\n      }\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A unidade demandante é obrigatória\";\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A entrega é obrigatória\";\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    let inicio = this.form?.controls.data_inicio.value;\n    let fim = this.form?.controls.data_fim.value;\n    if(this.gridObjetivos?.editing) {\n      this.tabs!.active = \"OBJETIVOS\" ;\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if (this.gridProcessos?.editing) {\n      this.tabs!.active = \"PROCESSOS\";\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if(!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if(!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if(inicio > fim) {\n      return \"A data do fim não pode ser anterior à data do início!\";\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    this.onEntregaChange(form.value);\n    let {meta, realizado, ...entityWithout} = entity;\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\n    await this.unidade?.loadSearch(this.unidadeId);\n    await this.planejamento?.loadSearch(this.planejamentoId);\n    await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\n    let unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\n    this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\n    form.controls.objetivos.setValue(entity.objetivos);\n    form.controls.processos.setValue(entity.processos);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity!.unidade_id = this.auth.unidade!.id;\n    this.entity!.unidade = this.auth.unidade;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult> {\n    return new Promise<NavigateResult>((resolve, reject) => {\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\n      this.gridObjetivos?.confirm();\n      this.gridProcessos?.confirm();\n      let {meta, realizado, ...valueWithout} = this.form!.value;\n      entrega = this.util.fillForm(entrega, valueWithout);\n      entrega.unidade = this.unidade?.selectedEntity;\n      entrega.entrega = this.entrega?.selectedEntity;\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\n      resolve(new NavigateResult(entrega));\n    });\n  }\n\n  public onRealizadoChange(value: any, entrega?: Entrega) {\n    this.calculaRealizado();\n  }\n\n  public calculaRealizado() {\n    const meta = this.form?.controls.meta.value;\n    const realizado = this.form?.controls.realizado.value;\n    if (meta && realizado) {\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\n    }\n  }\n\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\n    return result;\n  }\n\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    return result;\n  }\n\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\n    return result;\n  }\n\n  public async addObjetivo() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeObjetivo(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveObjetivo(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async addProcesso() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeProcesso(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveProcesso(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaProcesso;\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async onEntregaChange(row: any) {\n    if (this.entrega && this.entrega.selectedItem) {\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\n      const tipoIndicador = entregaItem.tipo_indicador;\n      if(!this.form!.controls.descricao.value.length) {\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\n      }\n      switch (tipoIndicador) {\n        case 'QUALITATIVO':\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          break;\n        case 'VALOR':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'QUANTIDADE':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'PORCENTAGEM':\n          this.form?.controls.meta.setValue(100);\n          this.form?.controls.realizado.setValue(0);\n          break;\n        default:\n          break;\n      }\n      this.calculaRealizado();\n    }\n  }\n \n}\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\n            <div class=\"row\">\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-search #entrega [size]=\"12\" label=\"Modelo de Entrega\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\n                    </div>\n                    <div class=\"row\">\n                        <input-text [size]=\"12\" label=\"Título/Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\" [attr.maxlength]=250 required></input-text>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\n                    </div>\n                </separator>\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250></input-text>\n                    </div>\n                </separator>\n                <separator title=\"Planejamento\"></separator>\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\n                    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\n                    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\n                </div>\n                <div class=\"row\">\n                    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\n                    <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\n                </div>\n            </div>\n        </tab>\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\n                        <ng-template let-header=\"header\" #titleObjetivo>\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #columnObjetivo>\n                            <span>{{row.objetivo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editObjetivo>\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\"></column>\n                </columns>\n            </grid>\n        </tab>\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\n                        <ng-template let-header=\"header\" #titleProcessos>\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #processo>\n                            <span>{{row.processo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editProcesso>\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\n                </columns>\n            </grid>\n        </tab>\n    </tabs>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n\n@Component({\n  selector: 'app-plano-entrega-form',\n  templateUrl: './plano-entrega-form.component.html',\n  styleUrls: ['./plano-entrega-form.component.scss']\n})\n\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n  public maxPE: Number | undefined;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\"];\n    this.modalWidth = 1200;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      unidade_id: { default: \"\" },\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      programa_id: { default: null },\n      entregas: { default: [] },\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    const inicio = this.form?.controls.data_inicio.value;\n    const fim = this.form?.controls.data_fim.value;\n    const programa = this.programa?.selectedEntity as Programa;\n    if (!programa) {\n      return \"Obrigatório selecionar o programa\";\n    } else if (!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if (!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if (inicio > fim) {\n      return \"A data do fim não pode ser menor que a data do início!\";\n    } else {\n      const entregas = this.form!.controls.entregas.value || [];\n      for (let entrega of entregas) {\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\n      }\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = new PlanoEntrega();\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\n    this.entity.unidade = this.auth.unidade;\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    return result;\n  }\n\n  public onDataChange(){ this.sugereNome(); }\n\n  public onUnidadeChange(){ this.sugereNome(); }\n\n  public sugereNome() {\n    if(this.action == 'new') {\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\n    }\n  }\n\n  public somaDia(date: Date, days: number){\n    let result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  public onProgramaChange(){\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\n    const data=this.somaDia(this.entity!.data_inicio,dias);\n    this.form!.controls.data_fim.setValue(new Date(data));\n    this.dataFim?.change.emit();\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\n        </div>\n        <div class=\"row\">\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\n        </div>\n        <separator title=\"Entregas\"></separator>\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\"></plano-entrega-list-entrega>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\n\n@Component({\n  selector: 'app-plano-entrega-list-entrega-list',\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\n})\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public buttons: ToolbarButton[] = [];\n  public idsUnidadesAscendentes: string[] = [];\n  public planoEntregaService: PlanoEntregaService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.title = this.lex.translate(\"Entregas\");\n    this.filter = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      unidade_id: { default: \"\" },\n      destinatario: { default: \"\" },\n    });\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let form: any = filter.value;\n    let result: any[] = [];\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\n    if (form.unidade_id?.length) {  // unidade demandante\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.descricao?.length) {\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.destinatario?.length) {\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    return result;\n  }\n}\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\n    (select)=\"onSelect($event)\">\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row\"> \n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\n            <ng-template let-row=\"row\" #columnEntregaCliente>\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\n            <ng-template let-row=\"row\" #columnDatas>\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\n            <ng-template let-row=\"row\" #columnIndicador>\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\n                    <i class=\"bi bi-list-check\"></i>\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\n                </span>\n            </ng-template>\n        </column>\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\n            <ng-template let-row=\"row\" #columnMetaRealizado>\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\n            <ng-template let-row=\"row\" #columnProgresso>\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\n            </ng-template>\n        </column>\n        <column type=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntrega | undefined) { super.entity = value; } get entity(): PlanoEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    return this.isDisabled ? [Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES)] : [];\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    //console.log(this.form?.controls.progresso_realizado.value);\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    console.log(row)\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        await this.dao!.delete(entrega);\r\n      };\r\n    }\r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public async showPlanejamento(planejamento_id: string){\r\n    this.go.navigate({ route: ['gestao', 'planejamento', planejamento_id, 'consult'] }, {modal: true})\r\n  }\r\n\r\n  public async showCadeiaValor(cadeia_valor_id_id: string){\r\n    this.go.navigate({ route: ['gestao', 'cadeia-valor', cadeia_valor_id_id, 'consult'] }, {modal: true})\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge><br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [width]=\"200\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Meta\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizado\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\">\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of row.objetivos\" class=\"objetivo d-flex align-items-center\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.planejamento_id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pObjetivo.objetivo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.cadeia_valor_id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Modelo de Entrega\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { Change } from 'src/app/models/change.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-list-logs',\n  templateUrl: './plano-entrega-list-logs.component.html',\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\n})\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\n\n  public responsaveis: LookupItem[] = [];\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public planoEntrega?: PlanoEntrega;\n  public planoId: string = \"\";\n  public action: string = \"\";\n\n  constructor(public injector: Injector, dao: ChangeDaoService) {\n    super(injector, Change, ChangeDaoService);\n    /* Inicializações */\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.title = \"Logs de Planos de Entregas\";\n    this.filter = this.fh.FormBuilder({\n      responsavel_id: {default: \"\"},\n      data_inicio: {default: \"\"},\n      data_fim: {default: \"\"},\n      tipo: {default: \"\"}\n    });\n    this.orderBy = [['id', 'desc']];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // this.selectResponsaveis!.loading = true;\n    // this.dao?.showResponsaveis().then(responsaveis => {\n    //   this.responsaveis = responsaveis || [];\n    //   this.selectResponsaveis!.loading = false;\n    // });\n  }\n  \n  public filterClear(filter: FormGroup) {\n    filter.controls.responsavel_id.setValue(\"\");\n    filter.controls.data_inicio.setValue(\"\");\n    filter.controls.data_fim.setValue(\"\");\n    filter.controls.tipo.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\n    result.push([\"row_id\", \"==\", this.planoId]);\n    if(form.responsavel_id?.length){\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\n    };\n    if(form.data_inicio){\n      result.push([\"date_time\", \">=\", form.data_inicio]);\n    };\n    if(form.data_fim){\n      result.push([\"date_time\", \"<=\", form.data_fim]);\n    };\n    if(form.tipo?.length){\n      result.push([\"type\", \"==\", form.tipo]);\n    };\n    return result;\n  }\n\n  public preparaDelta(row: any): any[] {\n    this.action = row.type;\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\n    novoDelta.forEach((element: any[]) => {\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\n    });\n    return novoDelta;\n  }\n\n}\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\n    <toolbar></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \n            [items]=\"responsaveis\"></input-select>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\n        </div>\n    </filter>\n    <columns>\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\n            <ng-template let-row=\"row\" #columnResponsavel>\n                <span> {{row.responsavel}} </span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\n            <ng-template let-row=\"row\" #columnDataCriacao>\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\n            <ng-template #titleDiferenca let-header=\"header\">\n                <div class=\"row\">\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\n                </div>\n            </ng-template>\n            <ng-template #columnDiferenca let-row=\"row\">\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\n                    <table>\n                        <tbody> \n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\n                                <td width=\"150\">{{ dif[0] }}</td>\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\n                            </tr>\n                        </tbody>\n                    </table>                   \n                </separator>\n            </ng-template>\n          </column>\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { FullRoute } from 'src/app/services/navigate.service';\nimport { Base } from 'src/app/models/base.model';\n\n@Component({\n  selector: 'plano-entrega-list',\n  templateUrl: './plano-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list.component.scss']\n})\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public showFilter: boolean = true;\n  public linha?: PlanoEntrega;\n  public unidadeDao: UnidadeDaoService;\n  public planejamentoDao: PlanejamentoDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public unidadeSelecionada: Unidade;\n  public habilitarAdesaoToolbar: boolean = false;\n  public toolbarButtons: ToolbarButton[] = [];\n  public botoes: ToolbarButton[] = [];\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\n  public BOTAO_ALTERAR: ToolbarButton;\n  public BOTAO_ARQUIVAR: ToolbarButton;\n  public BOTAO_AVALIAR: ToolbarButton;\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_CONCLUIR: ToolbarButton;\n  public BOTAO_CONSULTAR: ToolbarButton;\n  public BOTAO_DESARQUIVAR: ToolbarButton;\n  public BOTAO_EXCLUIR: ToolbarButton;\n  public BOTAO_HOMOLOGAR: ToolbarButton;\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_LOGS: ToolbarButton;\n  public BOTAO_REATIVAR: ToolbarButton;\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_SUSPENDER: ToolbarButton;\n\n  public execucao: boolean = false;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.unidadeSelecionada = this.auth.unidade!;\n    /* Inicializações */\n    this.title = this.lex.translate('Planos de Entregas');\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      principais: { default: true },\n      arquivadas: { default: false },\n      nome: { default: '' },\n      data_inicio: { default: '' },\n      data_fim: { default: '' },\n      status: { default: '' },\n      unidade_id: { default: null },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n    });\n    this.join = [\n      'planejamento:id,nome',\n      'programa:id,nome',\n      'cadeia_valor:id,nome',\n      'unidade:id,sigla,path',\n      'entregas.entrega',\n      'entregas.objetivos.objetivo',\n      'entregas.processos.processo',\n      'entregas.unidade',\n      'entregas.comentarios.usuario:id,nome,apelido',\n      'unidade.gestor:id',\n      'unidade.gestor_substituto:id',\n      'unidade.unidade_pai'\n    ];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.cancelarAvaliacao.bind(this) };\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\n    this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\n    this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.execucao = !!this.queryParams?.execucao;\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\n    this.selectable = this.metadata?.selectable || this.selectable;\n    if (this.execucao) {\n      this.title = this.title + \" (Execução)\";\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\n      this.filter!.controls.principais.setValue(false);\n    }\n    this.checaBotaoAderirToolbar();\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.auth.unidade != this.unidadeSelecionada) {\n      this.unidadeSelecionada = this.auth.unidade!;\n      this.checaBotaoAderirToolbar();\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onGridLoad(rows?: Base[]) {\n    if (rows && this.execucao) {\n      rows.forEach(v => {\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\n      });\n    }\n  }\n\n  public checaBotaoAderirToolbar() {\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\n    this.habilitarAdesaoToolbar = condition1 && condition2;\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\n    /*  (RI_PENT_1)\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\n    */\n  }\n\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    filter.controls.data_inicio.setValue(null);\n    filter.controls.data_fim.setValue(null);\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.planejamento_id.setValue(null);\n    filter.controls.cadeia_valor_id.setValue(null);\n    filter.controls.status.setValue(null);\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    /*\n        (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\n        - se ele for gestor:\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \n          - os ativos das unidades imediatamente subordinadas (w3);\n    */\n    if (this.filter?.controls.principais.value) {\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\n        if (w2?.length) w1[2].push(...w2);\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\n        result.push([\"or\", w1, w3]);\n      } else {\n        result.push(w1)\n      }\n    }\n    if (form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.data_inicio) {\n      result.push([\"data_inicio\", \">=\", form.data_inicio]);\n    }\n    if (form.data_fim) {\n      result.push([\"data_fim\", \"<=\", form.data_fim]);\n    }\n    if (form.unidade_id) {\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.planejamento_id) {\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\n    }\n    if (form.cadeia_valor_id) {\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\n    }\n    if (form.status) {\n      result.push([\"status\", \"==\", form.status]);\n    }\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados nem cancelados.\n    //  A condição de não-cancelado é tratada no back-end.\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public onPrincipaisChange(event: Event) {\n    if (this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);\n    this.grid!.reloadFilter();\n  }\n\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\n      case 'INCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\n        break;\n      case 'HOMOLOGANDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\n        break;\n      case 'ATIVO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\n        break;\n      case 'CONCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\n        break;\n      case 'SUSPENSO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\n        break;\n      case 'AVALIADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        break;\n      case 'ARQUIVADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\n        break;\n      case 'CANCELADO':\n        break;\n    }\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\n    return result;\n  }\n\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    this.linha = row;\n    this.botoes.forEach(botao => {\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\n    });\n    return result;\n  }\n\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\n    switch (botao) {\n      case this.BOTAO_ADERIR_OPTION:\n        /*         \n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\n          - o plano estiver com o status Ativo; e\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\n        */\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\n      case this.BOTAO_ALTERAR:\n        /*\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\n            - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\n        */\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\n      case this.BOTAO_ARQUIVAR:\n        /*\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_AVALIAR:\n        /*\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\n              - sugerir arquivamento automático (vide RI_PENT_A); \n        */\n        let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\n      case this.BOTAO_CANCELAR_AVALIACAO:\n        /*\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status AVALIADO, e\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\n      case this.BOTAO_CANCELAR_CONCLUSAO:\n        /*\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\n      case this.BOTAO_CANCELAR_PLANO:\n        /*\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n      case this.BOTAO_CONCLUIR:\n        /*\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\n      case this.BOTAO_CONSULTAR:\n        /*\n          (RN_PENT_V) CONSULTAR\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\n      case this.BOTAO_DESARQUIVAR:\n        /*\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\n          - o plano precisa estar arquivado, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_EXCLUIR:\n        /*\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\n      case this.BOTAO_HOMOLOGAR:\n        /*\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\n        */\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\n        let condition2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\n      case this.BOTAO_LOGS:\n        /*\n        \n        */\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n      case this.BOTAO_REATIVAR:\n        /*\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\n          - o plano precisa estar com o status SUSPENSO, e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\n      case this.BOTAO_SUSPENDER:\n        /*\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n    }\n    return false;\n  }\n\n  public arquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: true}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Arquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public avaliar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: true}), novoStatus: \"AVALIADO\", onClick: this.dao!.avaliar.bind(this.dao) },\n      title: \"Avaliar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarAvaliacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\n      title: \"Cancelar Avaliação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\n      title: \"Cancelar Conclusão\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\n      title: \"Cancelar Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\n      title: \"Cancelar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public concluir(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\n      title: \"Concluir Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public desarquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: false}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Desarquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public homologar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\n      title: \"Homologar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\n      title: \"Liberar para Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public reativar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\n      title: \"Reativar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\n      title: \"Retirar de Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public suspender(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\n      title: \"Suspender Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public canAdd() {\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\n    /*\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\n     */\n  }\n}\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores das geridas por ele'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"4\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" [labelInfo]=\"'Data de início do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" [labelInfo]=\"'Data do fim do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome}}</span><br>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Arquivado\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-valor-meta-input',\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\n})\nexport class PlanoEntregaValorMetaInputComponent {\n  @HostBinding('class') class = 'form-group';\n  @Input() entrega?: Entrega;\n  @Input() icon: string = \"\";\n  @Input() label?: string;\n  @Input() labelInfo: string = \"\";\n  @Input() disabled?: string;\n  @Input() control?: AbstractControl;\n  @Input() change?: (value: any, entrega?: Entrega) => void;\n  @Input() set size(size: number) {\n    if (size != this._size) {\n      this._size = size;\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\n    }\n  }\n  public get size(): number {\n    return this._size || 12;\n  }\n\n  private _size: number = 0;\n\n  public checkTipoIndicador(tipos: string[]): boolean {\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\n  }\n\n  public onValueChange(event: Event) {\n    if (this.change) this.change(this.control?.value, this.entrega);\n  }\n}\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { Atividade } from 'src/app/models/atividade.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'plano-trabalho-entrega-atividades',\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\n})\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\n\n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  private _entregaId!: string;\n  public AtividadeDao: AtividadeDaoService;\n  public items: Atividade[] = [];\n\n  public loader: boolean = false;\n\n  constructor(public injector: Injector){\n    super(injector);\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\n    this.join = ['unidade', 'usuario','demandante']\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public loadData() {\n    this.loader = true;\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\n      this.items = response\n    }).finally(()=> {\n      this.loader = false;\n    })\n  }\n\n}\n","<h5>Atividades:</h5>\n<grid [items]=\"items\" [loading]=\"loader\">\n  <columns>\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \n          Descrição\n      </ng-template>\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n      </ng-template>\n    </column>\n\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnPessoas>\n          <div class=\"text-nowrap\">\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\n          </div>\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\n      </ng-template>\n    </column>\n\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n      </ng-template>\n    </column>\n\n  </columns>\n</grid>\n","import { Injectable } from '@angular/core';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { Documento, HasDocumentos } from 'src/app/models/documento.model';\nimport { PlanoTrabalhoEntrega, PlanoTrabalhoEntregaTipo } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Template } from 'src/app/models/template.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LookupItem, LookupService } from 'src/app/services/lookup.service';\nimport { TemplateService } from '../../uteis/templates/template.service';\nimport { PlanoTrabalhoConsolidacao } from 'src/app/models/plano-trabalho-consolidacao.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { UtilService } from 'src/app/services/util.service';\n\nexport type BadgeTrabalho = {\n  titulo: string,\n  cor: string,\n  nome: string,\n  descricao: string,\n  tipo: PlanoTrabalhoEntregaTipo\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoTrabalhoService {\n\n  constructor(\n    public auth: AuthService,\n    public util: UtilService,\n    public lookup: LookupService,\n    public dao: PlanoTrabalhoDaoService,\n    public templateService: TemplateService,\n    public planoTrabalhoDao: PlanoTrabalhoDaoService\n  ) { }\n\n  public template(plano: PlanoTrabalho): Template | undefined {\n    return plano.programa?.template_tcr;\n  }\n\n  public metadados(plano: PlanoTrabalho) {\n    return {\n      needSign: this.needSign.bind(this),\n      extraTags: this.extraTags.bind(this),\n      especie: \"TCR\",\n      titulo: \"Termo de Ciência e Responsabilidade\",\n      dataset: this.planoTrabalhoDao.dataset(),\n      datasource: this.planoTrabalhoDao.datasource(plano),\n      template: plano.programa?.template_tcr,\n      template_id: plano.programa?.template_tcr_id\n    };\n  }\n\n  public needSign(parent?: HasDocumentos, item?: Documento): boolean {\n    const plano = parent as PlanoTrabalho;\n    const documento = item || (plano?.documentos || []).find(x => plano?.documento_id?.length && x.id == plano?.documento_id) || plano?.documento;\n    if (parent && documento && !documento.assinaturas?.find(x => x.usuario_id == this.auth.usuario!.id)) {\n      const tipoModalidade = plano.tipo_modalidade;\n      const programa = plano.programa;\n      const entidade = this.auth.entidade!;\n      let ids: string[] = [];\n      if (programa?.plano_trabalho_assinatura_participante) ids.push(plano.usuario_id);\n      if (programa?.plano_trabalho_assinatura_gestor_lotacao) ids.push(...this.auth.gestoresLotacao.map(x => x.id));\n      if (programa?.plano_trabalho_assinatura_gestor_unidade) ids.push(plano.unidade?.gestor?.id || \"\", plano.unidade?.gestor_substituto?.id || \"\");\n      if (programa?.plano_trabalho_assinatura_gestor_entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\n      return !!tipoModalidade && ids.includes(this.auth.usuario!.id);\n    }\n    return false;\n  }\n\n  public extraTags(parent: HasDocumentos, documento: Documento, metadado: any): LookupItem[] {\n    const plano = parent as PlanoTrabalho;\n    let tags: LookupItem[] = [];\n    if (plano?.documento_id == documento.id) tags.push({ key: documento.id, value: \"Vigente\", icon: \"bi bi-check-all\", color: \"primary\" })\n    if (JSON.stringify(metadado.tags) != JSON.stringify(tags)) metadado.tags = tags;\n    return metadado.tags;\n  }\n\n  /**\n   * Método retorna um badge de acordo com o tipo de entrega recebida no parâmetro 'planoTrabalhoTrabalho': entrega associada a uma entrega do catálogo, entrega associada a uma entrega \n   * da mesma unidade, ou entrega associada a uma entrega de outra unidade.\n   * @param planoTrabalhoTrabalho  Trabalho do Plano de Trabalho cujo tipo será analisado.\n   * @param planoTrabalho         Plano de Trabalho ao qual pertence a entrega a ser analisada. Se não for informado, o método tentará obtê-lo diretamente da própria entrega recebida.\n   * @returns \n   */\n  public tipoEntrega(planoTrabalhoEntrega: PlanoTrabalhoEntrega, planoTrabalho?: PlanoTrabalho): BadgeTrabalho {\n    /* Se row for uma entrega vinda do banco de dados, ela já deve trazer consigo um dos seus relacionamentos: 'entrega' ou 'plano_entrega_entrega', que serão lidos diretamente de row quando necessário. \n       Se row não vier do banco, ela passou pelo método saveEntrega() e lá um desses objetos, escolhido em um dos 3 inputSearch, foi anexado à variável this.novaEntrega, que originalmente é vazia. Sendo assim,\n       quando necessário, os dados serão lidos em this.novaEntrega.entrega ou em this.novaEntrega.plano_entrega_entrega. */\n    let plano = planoTrabalho || planoTrabalhoEntrega.plano_trabalho;\n    let key: PlanoTrabalhoEntregaTipo = planoTrabalhoEntrega.plano_entrega_entrega?.plano_entrega?.unidade_id == plano!.unidade_id ? \"PROPRIA_UNIDADE\" :\n      (planoTrabalhoEntrega.plano_entrega_entrega ? \"OUTRA_UNIDADE\" : \n      (!!planoTrabalhoEntrega.orgao?.length ? \"OUTRO_ORGAO\" : \"SEM_ENTREGA\"));\n    let result = this.lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO.find(x => x.key == key) || {key: \"\", value: \"Desconhecido\"};\n    let nome = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.entrega?.nome || planoTrabalhoEntrega.plano_entrega_entrega?.entrega?.nome || \"Desconhecido\";\n    let descricao = plano?._metadata?.novaEntrega?.plano_entrega_entrega?.descricao || planoTrabalhoEntrega.plano_entrega_entrega?.descricao || \"\";\n    return { titulo: result.value, cor: result.color || \"danger\", nome: nome, tipo: key, descricao: descricao};\n  }\n\n  /**\n   * Método atualiza o TCR caso ele exista (possivelmente obrigatório pelo programa), e caso ele não esteja assinado. \n   * Em caso de estar assinado ou ser obrigatório e não exista ainda, será gerado um novo documento.\n   * @param planoReferencia  Plano de trabalho para comparação (contendo as entregas)\n   * @param planoNovo        Plano de trabalho modificado, com as novas informações (contendo as entregas, programa.template_tcr e documentos)\n   * @param ?textUsuario     Texto complementar do usuário, caso não seja informado, irá utilizar o do planoNovo.usuario.texto_complementar_plano\n   * @param ?textUnidade     Texto complementar da unidade, caso não seja informado, irá utilizar o do planoNovo.unidade.texto_complementar_plano\n   * @returns                Documento gerado ou modificado (observar o _status)\n   */\n  public atualizarTcr(planoReferencia: PlanoTrabalho, planoNovo: PlanoTrabalho, textUsuario?: string, textUnidade?: string) {\n    if (planoNovo.usuario && planoNovo.unidade) {\n      let dsReferencia = this.dao!.datasource(planoReferencia);\n      let dsNovo = this.dao!.datasource(planoNovo);\n      let programa = planoNovo.programa;\n      /* Atualiza os campos de texto complementar do usuário e da unidade */\n      dsNovo.usuario.texto_complementar_plano = textUsuario || planoNovo.usuario?.texto_complementar_plano || \"\";\n      dsNovo.unidade.texto_complementar_plano = textUnidade || planoNovo.unidade?.texto_complementar_plano || \"\";\n      /* Se tiver modificações e o termo for obrigatório ou já exista um documento */\n      if ((programa?.termo_obrigatorio || planoNovo.documento_id?.length) && JSON.stringify(dsNovo) != JSON.stringify(dsReferencia) && programa?.template_tcr) {\n        let documento = planoNovo.documentos?.find((x: Documento) => x.id == planoNovo.documento_id);\n        if (!planoNovo.documento_id?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\n          documento = new Documento({\n            id: this.dao?.generateUuid(),\n            tipo: \"HTML\",\n            especie: \"TCR\",\n            titulo: \"Termo de Ciência e Responsabilidade\",\n            conteudo: this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo),\n            status: \"GERADO\",\n            _status: \"ADD\",\n            template: programa?.template_tcr?.conteudo,\n            dataset: this.dao!.dataset(),\n            datasource: dsNovo,\n            entidade_id: this.auth.entidade?.id,\n            plano_trabalho_id: planoNovo.id,\n            template_id: programa?.template_tcr_id\n          });\n          planoNovo.documentos.push(documento);\n        } else {\n          documento.conteudo = this.templateService.renderTemplate(programa?.template_tcr?.conteudo || \"\", dsNovo);\n          documento.dataset = this.dao!.dataset();\n          documento.datasource = dsNovo;\n          documento._status = documento._status == \"ADD\" ? \"ADD\" : \"EDIT\";\n        }\n        planoNovo.documento = documento;\n        planoNovo.documento_id = documento?.id || null;\n      }\n    }\n    return planoNovo.documento;\n  }\n\n  /**\n   * Informa a situação do plano de trabalho recebido como parâmetro, ou seja, se foi EXCLUIDO ou ARQUIVADO, ou, caso contrário, o seu status atual.\n   * @param planoTrabalho \n   * @returns \n   */\n  public situacaoPlano(planoTrabalho: PlanoTrabalho): string {\n    if (planoTrabalho.deleted_at) return \"EXCLUIDO\";\n    else if (planoTrabalho.data_arquivamento) return \"ARQUIVADO\";\n    else return planoTrabalho.status!;\n  }\n\n  /**\n   * Informa se o plano de trabalho recebido como parâmetro é válido, ou seja, não foi deletado, não foi cancelado nem foi arquivado.\n   * @param planoTrabalho \n   * @returns \n   */\n    public isValido(planoTrabalho: PlanoTrabalho): boolean {\n      return !planoTrabalho.deleted_at && planoTrabalho.status != 'CANCELADO' && !planoTrabalho.data_arquivamento;\n    }\n\n  /**\n   * Calcula a quantidade de dias para concluir a consolidação considerando a tolerância configurada no programa.\n   * @param consolidacao  Consolidacao do plano de trabalho\n   * @param programa      Programa\n   * @returns             Quantidade de dias para conclusão (Retorna números negativos caso tenha passado o prazo)\n   */\n  public diasParaConcluirConsolidacao(consolidacao?: PlanoTrabalhoConsolidacao, programa?: Programa): number {\n    return !consolidacao || !programa ? -1 : this.util.daystamp(consolidacao.data_fim) + programa.dias_tolerancia_avaliacao - this.util.daystamp(this.auth.hora);\n  }\n}\n"],"names":["Base","PlanoEntregaEntrega","constructor","data","objetivos","processos","data_inicio","Date","data_fim","descricao","homologado","meta","realizado","progresso_esperado","progresso_realizado","destinatario","avaliacoes","comentarios","entrega_id","unidade_id","entrega_pai_id","avaliacao_id","plano_entrega_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","arquivar","status","planejamento_id","cadeia_valor_id","programa_id","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PageFrameBase","PlanoTrabalhoService","i0","ɵɵelement","ɵɵproperty","row_r37","id","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r22","PlanoTrabalhoDao","getDateFormatted","plano_r16","ɵɵtextInterpolate","row_r42","plano_entrega_entrega","plano_entrega","unidade","sigla","ctx_r43","entityService","getIcon","orgao","ɵɵtemplate","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_4_Template","ctx_r26","planoTrabalhoService","tipoEntrega","entity","titulo","cor","plano_entrega_entrega_id","length","ctx_r28","totalForcaTrabalho","row_r49","forca_trabalho","row_r51","ctx_r36","lookup","getColor","PLANO_TRABALHO_STATUS","getValue","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_25_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_28_Template","ɵɵstyleMap","_r17","_r21","_r19","_r23","_r25","_r27","_r29","_r31","_r33","_r35","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_Template","item_r14","planos_trabalho","row_r55","apelido","ctx_r12","planoAtivo","row_r57","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","injector","items","loader","get","PlanoTrabalhoEntregaDao","join","groupBy","field","label","ngOnInit","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","entrega","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","planos","plano","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","rf","ctx","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_11_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_16_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_18_Template","_r3","_r1","_r5","_r7","_r9","_r11","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","lex","translate","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","metadata","controls","setValue","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","isModal","title","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","ctx_r3","onRealizadoChange","bind","header_r14","row_r15","objetivo","_c11","_c10","ctx_r13","planejamentoId","planejamentoObjetivoDao","_c15","_c12","_c14","_c13","PlanoEntregaFormEntregaComponent_tab_26_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_26_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_26_ng_template_11_Template","ctx_r4","planejamentoDao","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r8","_r10","_r12","header_r26","row_r27","processo","_c16","ctx_r25","cadeiaValorId","cadeiaValorProcessoDao","_c17","_c18","PlanoEntregaFormEntregaComponent_tab_27_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_11_Template","ctx_r5","formProcessos","addProcesso","removeProcesso","saveProcesso","_r20","_r22","_r24","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","dao","validDateTime","gridObjetivos","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","entregaDao","planoEntregaEntregaDao","planoEntregaService","listaQualitativo","objetivo_id","unidadeId","onEntregaChange","entityWithout","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","generateUuid","_status","_this4","dialog","_this5","consolidado","inputObjetivo","selectedItem","_this6","_this7","_this8","inputProcesso","_this9","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_26_Template","PlanoEntregaFormEntregaComponent_tab_27_Template","_c19","_c21","_c20","_c22","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_17_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","selectable","hasPermissionTo","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","rowsLimit","ChangeDetectorRef","separator_r22","text","row_r23","PlanoEntregaListEntregaComponent_ng_template_5_span_0_Template","row_r26","ctx_r29","PlanoEntregaListEntregaComponent_ng_template_10_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_4_Template","ctx_r35","row_r34","PlanoEntregaListEntregaComponent_ng_template_13_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_13_span_2_Template","ctx_r11","row_r39","row_r40","onRealizadaChange","row_r41","ctx_r17","PlanoEntregaListEntregaComponent_ng_template_26_separator_0_div_1_Template_button_click_1_listener","restoredCtx","ɵɵrestoreView","_r49","pObjetivo_r47","$implicit","ctx_r48","ɵɵnextContext","ɵɵresetView","showPlanejamento","PlanoEntregaListEntregaComponent_ng_template_26_separator_0_div_1_Template","ctx_r44","row_r43","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_div_1_Template_button_click_1_listener","_r54","pProcesso_r52","ctx_r53","showCadeiaValor","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_div_1_Template","ctx_r45","PlanoEntregaListEntregaComponent_ng_template_26_separator_0_Template","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_Template","row_r56","PlanoEntregaListEntregaComponent_ng_template_29_badge_0_Template","ctx_r21","execucao","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","urlParams","isDisabled","add","_ref","modalClose","_x","modalResult","isNoPersist","save","error","message","apply","arguments","edit","_ref2","index","_x2","load","markAllAsTouched","valid","submitting","update","cadeia_valor_id_id","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_16_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_21_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","PlanoEntregaListEntregaComponent_ng_template_26_Template","PlanoEntregaListEntregaComponent_ng_template_29_Template","_r0","_r14","_r16","_r18","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","row_r16","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","TIPO_LOG_CHANGE","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","ctx_r23","onAgruparChange","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_2_listener","onPrincipaisChange","toolbarButtons","agrupar","principais","noun","row_r30","PlanoEntregaListComponent_column_17_ng_template_1_span_0_Template","row_r33","PlanoEntregaListComponent_column_17_ng_template_1_Template","PlanoEntregaListComponent_column_17_ng_template_3_Template","_r26","_r28","header_r34","row_r35","header_r36","ctx_r10","ctx_r38","PlanoEntregaListComponent_ng_template_26_badge_4_Template","ɵɵstyleProp","ctx_r14","ctx_r16","cadeia_valor","PlanoEntregaListComponent_ng_template_37_badge_0_Template","PlanoEntregaListComponent_ng_template_37_badge_1_Template","PlanoEntregaListComponent_ng_template_40_badge_2_Template","PLANO_ENTREGA_STATUS","row_r48","data_arquivamento","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","w1","unidades","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","isGestorUnidade","w2","unidade_pai","w3","arquivadas","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","refresh","BOTAO_ADERIR_TOOLBAR","BOTAO_ALTERAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","onGridLoad","rows","v","expand","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botaoAtendeCondicoes","botao","isLotacaoUsuario","intersection","start","end","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_17_Template","PlanoEntregaListComponent_ng_template_19_Template","PlanoEntregaListComponent_ng_template_21_Template","PlanoEntregaListComponent_ng_template_24_Template","PlanoEntregaListComponent_ng_template_26_Template","PlanoEntregaListComponent_ng_template_29_Template","PlanoEntregaListComponent_ng_template_32_Template","PlanoEntregaListComponent_ng_template_35_Template","PlanoEntregaListComponent_ng_template_37_Template","PlanoEntregaListComponent_ng_template_40_Template","_r13","_r15","ɵɵtextInterpolate2","row_r8","cliente","entregaService","row_r9","row_r10","porcentagem","PlanoEntregaMapaEntregasComponent_ng_template_18_h2_5_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_progress_bar_6_Template","ctx_r7","isPorcentagem","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_template_12_Template","PlanoEntregaMapaEntregasComponent_ng_template_15_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_Template","RouterModule","AuthGuard","ConfigResolver","routes","component","canActivate","config","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","progresso","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template","Documento","templateService","planoTrabalhoDao","template","template_tcr","needSign","extraTags","especie","dataset","datasource","template_id","template_tcr_id","parent","documento","documentos","documento_id","assinaturas","usuario_id","tipoModalidade","tipo_modalidade","entidade","ids","plano_trabalho_assinatura_participante","plano_trabalho_assinatura_gestor_lotacao","gestoresLotacao","plano_trabalho_assinatura_gestor_unidade","gestor","gestor_substituto","plano_trabalho_assinatura_gestor_entidade","gestor_id","gestor_substituto_id","metadado","tags","JSON","stringify","planoTrabalhoEntrega","ORIGENS_ENTREGAS_PLANO_TRABALHO","_metadata","novaEntrega","atualizarTcr","planoReferencia","planoNovo","textUsuario","textUnidade","dsReferencia","dsNovo","texto_complementar_plano","termo_obrigatorio","conteudo","renderTemplate","entidade_id","plano_trabalho_id","deleted_at","diasParaConcluirConsolidacao","consolidacao","daystamp","dias_tolerancia_avaliacao","hora","ɵɵinject","AuthService","i2","UtilService","i3","LookupService","i4","i5","TemplateService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}