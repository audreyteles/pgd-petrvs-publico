{"version":3,"file":"177.js","mappings":"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","sources":["./src/app/models/plano-entrega-entrega.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts"],"sourcesContent":["import { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { PlanoEntregaEntregaObjetivo } from './plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from './plano-entrega-entrega-processo.model';\r\nimport { PlanoEntrega } from './plano-entrega.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base {\r\n  public entrega?: Entrega;\r\n  public entrega_pai?: Entrega;\r\n  public plano_entrega?: PlanoEntrega;\r\n  public demandante?: Unidade;\r\n  public objetivos: PlanoEntregaEntregaObjetivo[] = [];\r\n  public processos: PlanoEntregaEntregaProcesso[] = [];\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public descricao: string = \"\";\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n  public destinatario: string = '';\r\n\r\n  public entrega_id: string = '';\r\n  public unidade_id: string = '';                        \r\n  public entrega_pai_id: string | null = null;                      \r\n  public plano_entrega_id: string | null = null;\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\nexport class PlanoEntrega extends Base implements HasStatus {\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public status: PlanoEntregaStatus | null = null;                  // Status atual do plano de entregas\r\n\r\n  public unidade_id: string = '';\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-form-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1000;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: \"\" },\r\n      data_fim: { default: \"\" },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      unidade_id: { default: this.auth.unidade?.id },\r\n      plano_entrega_id: { default: null },\r\n      programa_id: { default: null },\r\n      status: { default: \"HOMOLOGANDO\" }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\r\n    if(planoEntrega){\r\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\r\n      this.form.controls.nome.setValue(planoEntrega.nome);\r\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\r\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\r\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result; \r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event){\r\n    if(this.form.controls.plano_entrega_id.value){\r\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\r\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\r\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\r\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\r\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\r\n    }\r\n  }\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row mb-4\">\r\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \r\n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\r\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\r\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\r\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \r\n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\r\n            -->\r\n            <separator></separator>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" required></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\"></input-text>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n            </separator>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-entrega',\r\n  templateUrl: './plano-entrega-form-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\r\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\r\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\r\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\r\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\r\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\r\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public planejamentoId?: string;\r\n  public cadeiaValorId?: string;\r\n  public unidadeId?: string;\r\n  public formObjetivos: FormGroup;\r\n  public formProcessos: FormGroup;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public itensQualitativo: LookupItem[] = [];\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\r\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public idsUnidadesAscendentes: string[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.join = ['objetivos', 'processos', 'unidade'];\r\n    this.modalWidth = 600;\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      realizado: { default: null },\r\n      plano_entrega_id: { default: \"\" },\r\n      entrega_pai_id: { default: null },\r\n      entrega_id: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null },\r\n      unidade_id: { default: null },\r\n      destinatario: { default: null },\r\n      objetivos: { default: [] },\r\n      processos: { default: [] },\r\n      listaQualitativo: { default: [] },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      objetivo_id: { default: null },\r\n      objetivo: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formObjetivos = this.fh.FormBuilder({\r\n      planejamento_objetivo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formProcessos = this.fh.FormBuilder({\r\n      cadeia_processo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntrega = this.metadata?.plano_entrega;\r\n    this.planejamentoId = this.metadata?.planejamento_id;\r\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\r\n    this.unidadeId = this.metadata?.unidade_id;\r\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    let unidade: Unidade | null = null;\r\n    (async () => {\r\n      await this.unidade?.loadSearch(this.unidadeId);\r\n      await this.planejamento?.loadSearch(this.planejamentoId);\r\n      await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\r\n      unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\r\n      this.idsUnidadesAscendentes = unidade!.path?.split('/').slice(1) || [];\r\n    })();\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"O demandante é obrigatório\";\r\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A entrega é obrigatória\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    let inicio = this.form?.controls.data_inicio.value;\r\n    let fim = this.form?.controls.data_fim.value;\r\n    if(this.gridObjetivos?.editing) {\r\n      this.tabs!.active = \"OBJETIVOS\" ;\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if (this.gridProcessos?.editing) {\r\n      this.tabs!.active = \"PROCESSOS\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if(!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if(!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if(inicio > fim) {\r\n      return \"A data do fim não pode ser anterior à data do início!\";\r\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\r\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\r\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\r\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.onEntregaChange(form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult> {\r\n    return new Promise<NavigateResult>((resolve, reject) => {\r\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\r\n      this.gridObjetivos?.confirm();\r\n      this.gridProcessos?.confirm();\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n      entrega = this.util.fillForm(entrega, valueWithout);\r\n      entrega.objetivos = entrega.objetivos.filter(x => [\"ADD\", \"DELETE\"].includes(x._status || \"\"));\r\n      entrega.processos = entrega.processos.filter(x => [\"ADD\", \"DELETE\"].includes(x._status || \"\"));\r\n      entrega.demandante = this.unidade?.selectedEntity;\r\n      entrega.entrega = this.entrega?.selectedEntity;\r\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\r\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\r\n      resolve(new NavigateResult(entrega));\r\n    });\r\n  }\r\n\r\n  public onRealizadoChange(event: Event) {\r\n    this.calculaRealizado();\r\n  }\r\n\r\n  public calculaRealizado() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(2) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public checkTipoIndicador(tipos: string[]): boolean {\r\n    return tipos.includes((this.entrega?.selectedEntity as Entrega).tipo_indicador);\r\n  }\r\n\r\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\r\n    return result;\r\n  }\r\n\r\n  public async addObjetivo() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeObjetivo(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveObjetivo(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\r\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\r\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\r\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  public async addProcesso() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeProcesso(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveProcesso(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaProcesso;\r\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\r\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\r\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async onEntregaChange(row: any) {\r\n    if (this.entrega && this.entrega.selectedItem) {\r\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\r\n      const tipoIndicador = entregaItem.tipo_indicador;\r\n      if(!this.form!.controls.descricao.value.length) {\r\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\r\n      }\r\n      switch (tipoIndicador) {\r\n        case 'QUALITATIVO':\r\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\r\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          break;\r\n        case 'VALOR':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'QUANTIDADE':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'PORCENTAGEM':\r\n          this.form?.controls.meta.setValue(100);\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.calculaRealizado();\r\n    }\r\n  }\r\n \r\n}\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\r\n            <div class=\"row\">\r\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-search #entrega [size]=\"12\" label=\"Entrega do Catálogo\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-text [size]=\"12\" label=\"Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\"></input-text>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega')+ ' superior'\" controlName=\"entrega_pai_id\" \r\n                                        [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\r\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\"></input-text>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Planejamento\"></separator>\r\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\r\n                    <input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [size]=\"6\" label=\"Meta\" controlName=\"meta\" sufix=\"%\" required></input-number>\r\n                    <input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [size]=\"6\" label=\"Meta\" controlName=\"meta\"></input-number>\r\n                    <input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [size]=\"6\" label=\"Meta\" controlName=\"meta\" [items]=\"itensQualitativo\"></input-select>\r\n                    <input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [size]=\"6\" label=\"Realizado\" (change)=\"onRealizadoChange($event)\" controlName=\"realizado\" sufix=\"%\"></input-number>\r\n                    <input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [size]=\"6\" label=\"Realizado\" (change)=\"onRealizadoChange($event)\" controlName=\"realizado\" required></input-number>\r\n                    <input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [size]=\"6\" label=\"Realizado\" (change)=\"onRealizadoChange($event)\" controlName=\"realizado\" [items]=\"itensQualitativo\"></input-select>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-number [size]=\"6\" [decimals]=\"2\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n                    <input-number [size]=\"6\" [decimals]=\"2\" label=\"Progresso já Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\r\n                </div>\r\n            </div>\r\n        </tab>\r\n        <!-- *ngIf=\"checkFilled(['planejamento_id'])\" -->\r\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\r\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\r\n                <columns>\r\n                    <column title=\"Objetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\r\n                        <ng-template let-row=\"row\" #columnObjetivo>\r\n                            <span>{{row.objetivo.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivo>\r\n                            <input-search [size]=\"12\" #inputObjetivo label icon controlName=\"planejamento_objetivo_id\" label icon [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <!--column type=\"options\" [dynamicButtons]=\"dynamicButtonsObjetivos.bind(this)\" [dynamicOptions]=\"dynamicOptionsObjetivos.bind(this)\"></!--column//-->\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n            <!-- <planejamento-list-objetivos-entregas [planejamentoId]=\"planejamentoId\"></planejamento-list-objetivos-entregas> -->\r\n        </tab>\r\n        <!-- *ngIf=\"checkFilled(['cadeia_valor_id'])\" -->\r\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\r\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\r\n                <columns>\r\n                    <column title=\"Processos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\r\n                        <ng-template let-row=\"row\" #processo>\r\n                            <span>{{row.processo.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editProcesso>\r\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { Component, Injector, ViewChild, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { SelectItem } from 'src/app/components/input/input-base';\r\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\r\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\r\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n  public maxPE: Number | undefined;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [\"entregas.entrega\", \"unidade\", \"entregas.unidade\"];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      programa_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n    //this.maxPE=this.programa?.\r\n\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    /*\r\n        (RN_PENT_Z) INSERIR/CRIAR\r\n        - o usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\", e:\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou gestor da sua Unidade-pai (Unidade A)(RN_PENT_C); ou\r\n            - o usuário precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; ou\r\n            - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\r\n    */\r\n    let unidadeSelecionada = this.unidade?.selectedEntity as Unidade;\r\n    let condition1 = this.auth.isGestorUnidade(unidadeSelecionada) || this.auth.isGestorUnidade(unidadeSelecionada.unidade_pai);\r\n    let condition2 = unidadeSelecionada.unidade_pai ? (this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', unidadeSelecionada.unidade_pai!.id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\")) : false;\r\n    let condition3 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\r\n    if (!(condition1 || condition2 || condition3)) return \"Você não tem permissão para incluir plano de entregas para a unidade selecionada!\";\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const programa = this.programa?.selectedEntity as Programa;\r\n    if (!programa) {\r\n      return \"Obrigatório selecionar o programa\";\r\n    } else if (!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if (!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if (inicio > fim) {\r\n      return \"A data do fim não pode ser menor que a data do início!\";\r\n    } else {\r\n      const diffTime = Math.abs(inicio - fim);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      const entregas = this.form!.controls.entregas.value || [];\r\n      if (programa.prazo_max_plano_entrega > 0 && diffDays > programa.prazo_max_plano_entrega) return \"A data de início e término\" + this.lex.translate(\"do Plano de Entrega\") + \" deve respeitar o período previsto no \" + this.lex.translate(\"Programa\");\r\n      for (let entrega of entregas) {\r\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\r\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntrega();\r\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\r\n    this.entity.unidade = this.auth.unidade;\r\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\r\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\r\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public onDataChange(){\r\n    if(this.action == 'new') {\r\n      const sigla = this.auth.unidade?.sigla;\r\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\r\n      const df = new Date(this.form!.controls.data_fim.value).toLocaleDateString();\r\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + \" - \" + df)      \r\n    }\r\n  }\r\n\r\n  public somaDia(date: Date, days: number){\r\n    let result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  public onProgramaChange(){\r\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\r\n    const data=this.somaDia(this.entity!.data_inicio,dias);\r\n    this.form!.controls.data_fim.setValue(new Date(data)); \r\n    this.dataFim?.change.emit();\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\r\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\"></input-search>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\r\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" required></input-text>\r\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator title=\"Entregas\"></separator>\r\n        <plano-entrega-list-entrega #entregas noPersist [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\" ></plano-entrega-list-entrega>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega-list',\r\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public buttons: ToolbarButton[] = [];\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      unidade_id: { default: \"\" },\r\n      destinatario: { default: \"\" },\r\n    });\r\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"demandante:id,sigla\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let form: any = filter.value;\r\n    let result: any[] = [];\r\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\r\n    if (form.unidade_id?.length) {  // unidade demandante\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.destinatario?.length) {\r\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\r\n    (select)=\"onSelect($event)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n<!--             <input-text [size]=\"6\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\"\r\n                placeholder=\"Nome\"></input-text> -->\r\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\r\n                placeholder=\"Descrição\"></input-text>\r\n        </div>\r\n        <div class=\"row\"> \r\n                <input-search [size]=\"6\" label=\"Unidade demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\r\n                placeholder=\"Destinatário\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <span>{{row.descricao}}<br>\r\n                <badge [label]=\"row.demandante.sigla || '(não informado)'\" color=\"success\"></badge><br>\r\n                {{row.destinatario || '(não informado)'}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\r\n            <ng-template let-row=\"row\" #columnIndicador>\r\n                <span>{{row.entrega.nome || row.entrega_pai.descricao}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\r\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntregaEntrega | undefined) { super.entity = value; } get entity(): PlanoEntregaEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entidade\", \"entrega\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    // Testa se o usuário possui permissão para exibir dados do feriado\r\n    if (true || this.auth.hasPermissionTo(\"\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o feriado\r\n    if (true || this.auth.hasPermissionTo(\"MOD_FER_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n    let index = this.items.indexOf(entrega);\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n          this.items[index] = modalResult;\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        await this.dao!.delete(entrega);\r\n      };\r\n    }\r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['', entrega.id, \"consult\"]});\r\n  }\r\n\r\n}\r\n","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" editable [hasAdd]=\"true || auth.hasPermissionTo('')\" [hasEdit]=\"true || auth.hasPermissionTo('')\" [add]=\"add.bind(this)\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"0\">\r\n            <ng-template let-separator=\"separator\" #groupEntregas>\r\n                <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n                    <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n                </span>\r\n            </ng-template>\r\n            <columns>\r\n                <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\">\r\n                    <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                        <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge>\r\n                        <span class=\"d-block\">\r\n                            <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                            <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                        </span>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n                    <ng-template let-row=\"row\" #columnDatas>\r\n                        <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n                        <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n                    </ng-template>\r\n                </column>\r\n                <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                    <ng-template let-row=\"row\" #columnEntrega>\r\n                        <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\r\n                            <i class=\"bi bi-list-check\"></i>\r\n                            {{row.entrega?.nome}}\r\n                        </span>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n                    <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                        <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\r\n                        <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\r\n                    </ng-template>\r\n                </column>\r\n                <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n                    <ng-template let-row=\"row\" #columnProgresso>\r\n                        <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n                    </ng-template>\r\n                </column>\r\n                <column type=\"options\" [onEdit]=\"edit.bind(this)\" [options]=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { Change } from 'src/app/models/change.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-logs',\r\n  templateUrl: './plano-entrega-list-logs.component.html',\r\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\r\n})\r\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\r\n\r\n  public responsaveis: LookupItem[] = [];\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planoId: string = \"\";\r\n  public action: string = \"\";\r\n\r\n  constructor(public injector: Injector, dao: ChangeDaoService) {\r\n    super(injector, Change, ChangeDaoService);\r\n    /* Inicializações */\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.title = \"Logs de Planos de Entregas\";\r\n    this.filter = this.fh.FormBuilder({\r\n      responsavel_id: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      tipo: {default: \"\"}\r\n    });\r\n    this.orderBy = [['id', 'desc']];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\r\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    this.selectResponsaveis!.loading = true;\r\n    this.dao?.showResponsaveis().then(responsaveis => {\r\n      this.responsaveis = responsaveis || [];\r\n      this.selectResponsaveis!.loading = false;\r\n    });\r\n  }\r\n  \r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.responsavel_id.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(\"\");\r\n    filter.controls.data_fim.setValue(\"\");\r\n    filter.controls.tipo.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\r\n    result.push([\"row_id\", \"==\", this.planoId]);\r\n    if(form.responsavel_id?.length){\r\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\r\n    };\r\n    if(form.data_inicio){\r\n      result.push([\"date_time\", \">=\", form.data_inicio]);\r\n    };\r\n    if(form.data_fim){\r\n      result.push([\"date_time\", \"<=\", form.data_fim]);\r\n    };\r\n    if(form.tipo?.length){\r\n      result.push([\"type\", \"==\", form.tipo]);\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public preparaDelta(row: any): any[] {\r\n    this.action = row.type;\r\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\r\n    novoDelta.forEach((element: any[]) => {\r\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\r\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\r\n    });\r\n    return novoDelta;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\r\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\r\n    <toolbar></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \r\n            [items]=\"responsaveis\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\r\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\r\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\r\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnResponsavel>\r\n                <span> {{row.responsavel}} </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\r\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnDataCriacao>\r\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\r\n            <ng-template #titleDiferenca let-header=\"header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #columnDiferenca let-row=\"row\">\r\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\r\n                    <table>\r\n                        <tbody> \r\n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\r\n                                <td width=\"150\">{{ dif[0] }}</td>\r\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\r\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>                   \r\n                </separator>\r\n            </ng-template>\r\n          </column>\r\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public showFilter: boolean = true;\r\n  public linha?: PlanoEntrega;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public unidadeSelecionada: Unidade;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public botoes: ToolbarButton[] = [];\r\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\r\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_AVALIAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_CONCLUIR: ToolbarButton;\r\n  public BOTAO_CONSULTAR: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_EXCLUIR: ToolbarButton;\r\n  public BOTAO_HOMOLOGAR: ToolbarButton;\r\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_LOGS: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.unidadeSelecionada = this.auth.unidade!;\r\n    /* Inicializações */\r\n    this.title = this.lex.translate('Planos de Entregas');\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      principais: { default: true },\r\n      nome: { default: '' },\r\n      data_inicio: { default: '' },\r\n      data_fim: { default: '' },\r\n      status: { default: '' },\r\n      unidade_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n    });\r\n    this.join = ['planejamento:id,nome', 'programa:id,nome', 'cadeia_valor:id,nome', 'unidade:id,sigla,path', 'entregas.entrega', 'entregas.demandante', 'unidade.gestor:id', 'unidade.gestor_substituto:id'];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({route: ['gestao', 'plano-entrega', 'adesao']}, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({route: ['gestao', 'plano-entrega', planoEntrega.id, 'logs']}) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO, \r\n                  this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO, \r\n                  this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\r\n                  //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\r\n    this.selectable = this.metadata?.selectable || this.selectable;\r\n    this.checaBotaoAderirToolbar();\r\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.auth.unidade != this.unidadeSelecionada) {\r\n      this.unidadeSelecionada = this.auth.unidade!;\r\n      this.checaBotaoAderirToolbar();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public checaBotaoAderirToolbar() {\r\n    let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().map(x => x.id);\r\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\r\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar;\r\n    /*  (RI_PENT_1)\r\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\r\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \r\n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\r\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\r\n    */\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\r\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\r\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    /*\r\n        (RI_PENT_4) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\r\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho), e\r\n        - se ele for gestor, os ativos das unidades-pai de onde ele é gestor e os ativos das unidades imediatamente subordinadas;\r\n    */\r\n    if (this.filter?.controls.principais.value) {\r\n      let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\r\n      let w1 = [\"unidade_id\", \"in\", this.auth.unidades?.map(u => u.id)];\r\n      let w2 = [\"unidade_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id)];\r\n      //let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\r\n      //if (this.auth.isGestorAlgumaAreaTrabalho()) result.push([\"or\", w1, w2, w3]); else result.push(w1);\r\n      if (this.auth.isGestorAlgumaAreaTrabalho()) result.push([\"or\", w1, w2]); else result.push(w1);\r\n      if (form.nome?.length) {\r\n        result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n      }\r\n      if (form.data_inicio) {\r\n        result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n      }\r\n      if (form.data_fim) {\r\n        result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n      }\r\n      if (form.unidade_id) {\r\n        result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n      }\r\n      if (form.planejamento_id) {\r\n        result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n      }\r\n      if (form.cadeia_valor_id) {\r\n        result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n      }\r\n      if (form.status) {\r\n        result.push([\"status\", \"==\", form.status]);\r\n      }\r\n    } else {\r\n      if (form.nome?.length) {\r\n        result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n      }\r\n      if (form.data_inicio) {\r\n        result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n      }\r\n      if (form.data_fim) {\r\n        result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n      }\r\n      if (form.unidade_id) {\r\n        result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n      }\r\n      if (form.planejamento_id) {\r\n        result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n      }\r\n      if (form.cadeia_valor_id) {\r\n        result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n      }\r\n      if (form.status) {\r\n        result.push([\"status\", \"==\", form.status]);\r\n      }\r\n    }\r\n    //  (RI_PENT_5) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados nem cancelados.\r\n    //  O não-arquivamento é tratado abaixo. A condição de não-cancelado é tratada no back-end.\r\n    result.push([\"data_arquivamento\", \"==\", null]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUIDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\r\n        break;\r\n      case 'ATIVO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\r\n        break;\r\n      case 'SUSPENSO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\r\n        break;\r\n      case 'AVALIADO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        break;\r\n      case 'ARQUIVADO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\r\n        break;\r\n      case 'CANCELADO':\r\n        break;\r\n    }\r\n    if(!result.length) result.push(this.BOTAO_CONSULTAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.linha = row;\r\n    this.botoes.forEach(botao => {\r\n      if(this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\r\n    switch(botao){\r\n      case this.BOTAO_ADERIR_OPTION:\r\n        /*         \r\n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\r\n          - o plano estiver com o status Ativo; e\r\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\r\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\r\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\r\n        */\r\n        return (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\r\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\r\n            - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\r\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\r\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\r\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\r\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\r\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\r\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\r\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\r\n        */\r\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\r\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\",\"MOD_PENT_EDT_ATV_ATV\"]);\r\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\r\n        return this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_AVALIAR:\r\n        /*\r\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\r\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\r\n              - sugerir arquivamento automático (vide RI_PENT_A); \r\n        */\r\n       let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n       let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\r\n       let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\r\n       let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n       return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\r\n      case this.BOTAO_CANCELAR_AVALIACAO:\r\n        /*\r\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO, e\r\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\r\n      case this.BOTAO_CANCELAR_CONCLUSAO:\r\n        /*\r\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\r\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\r\n          /*\r\n            (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\r\n            - o plano precisa estar com o status ATIVO, e\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\r\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\r\n          */\r\n          return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\r\n      case this.BOTAO_CANCELAR_PLANO:\r\n          /*\r\n            (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\r\n            - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n          */\r\n          return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n      case this.BOTAO_CONCLUIR:\r\n        /*\r\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));        \r\n      case this.BOTAO_CONSULTAR:\r\n        /*\r\n          (RN_PENT_V) CONSULTAR\r\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\";\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT\");          \r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\r\n          - o plano precisa estar arquivado, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_EXCLUIR:\r\n        /*\r\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));  ;  \r\n      case this.BOTAO_HOMOLOGAR:\r\n        /*\r\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\r\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\r\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\r\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));  \r\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega, e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));  \r\n      case this.BOTAO_LOGS:\r\n        /*\r\n        \r\n        */\r\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");  \r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\r\n          - o plano precisa estar com o status SUSPENSO, e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) );  \r\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\"))); \r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));  \r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.dialog.confirm(\"Arquivar?\", \"Deseja realmente arquivar o Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.arquivar(planoEntrega.id, true).then(() => {\r\n          if (this.filter?.controls.arquivadas?.value) {\r\n            this.grid!.query!.refreshId(planoEntrega.id);\r\n          } else {\r\n            (this.grid?.query || this.query!).removeId(planoEntrega.id);\r\n          }\r\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao arquivar o Plano de Entregas: \" + error?.message ? error?.message : error));\r\n      }\r\n    });\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dao!.avaliar(planoEntrega.id).then(function () {\r\n      (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n      self.dialog.alert(\"Sucesso\", \"Avaliado com sucesso!\");\r\n    }).catch(function (error) {\r\n      self.dialog.alert(\"Erro\", \"Erro ao avaliar: \" + error?.message ? error?.message : error);\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar avaliacao ?\", \"Deseja realmente cancelar a avaliação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarAvaliacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar avaliacao: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar conclusão ?\", \"Deseja realmente cancelar a conclusão?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarConclusao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar conclusão: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar homologacao ?\", \"Deseja realmente cancelar a homologacao?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar a homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar plano ?\", \"Deseja realmente cancelar o plano de entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarPlano(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Plano cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar o plano: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Concluir ?\", \"Deseja realmente concluir este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.concluir(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Concluído com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao concluir: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.dialog.confirm(\"Desarquivar ?\", \"Deseja realmente desarquivar o Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.arquivar(planoEntrega.id, false).then(() => {\r\n          this.grid!.query!.refreshId(planoEntrega.id);\r\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao desarquivar o Plano de Entregas: \" + error?.message ? error?.message : error));\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Homologar ?\", \"Deseja realmente homologar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.homologar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Homologado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao homologar: \" + error?.message ? error?.message : error);\r\n        });\r\n        this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n        this.checaBotaoAderirToolbar();\r\n      }\r\n    });\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Liberar para homologação ?\", \"Deseja realmente liberar para a homologação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.liberarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Liberado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao liberar para homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Reativar ?\", \"Deseja realmente reativar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.reativar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Reativado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao reativar: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Retirar da homologação ?\", \"Deseja realmente retirar da homologação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.retirarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Retirado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao retirar da homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Suspender ?\", \"Deseja realmente suspender este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.suspender(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Suspenso com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao suspender: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_INCL')\"\r\n    [hasEdit]=\"false\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\"\r\n            [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\"\r\n            [control]=\"filter!.controls.principais\" (change)=\"grid!.reloadFilter()\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores das geridas por ele'\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"5\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\"></input-text>\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" [labelInfo]=\"'Data de início do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" [labelInfo]=\"'Data do fim do '+ lex.translate('plano de entrega')\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [entity]=\"row\" [cdRef]=\"cdRef\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome}}</span><br>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeiaValor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeiaValor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge>\r\n                <!-- <badge *ngIf=\"row.data_cancelamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Cancelado\"></badge> -->\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n"],"names":["Base","PlanoEntregaEntrega","constructor","data","objetivos","processos","data_inicio","Date","data_fim","descricao","homologado","meta","realizado","progresso_esperado","progresso_realizado","destinatario","entrega_id","unidade_id","entrega_pai_id","plano_entrega_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","status","planejamento_id","cadeia_valor_id","programa_id","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","injector","validate","control","controlName","result","indexOf","value","length","titleEdit","entity","lex","translate","unidadeDao","get","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","join","modalWidth","form","fh","FormBuilder","default","auth","unidade","id","cdRef","ngOnInit","planoEntrega","metadata","controls","setValue","loadData","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","detectChanges","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","i0","ɵɵdirectiveInject","Injector","selectors","viewQuery","PlanoEntregaFormAdesaoComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","ɵɵelementEnd","ɵɵelement","ɵɵproperty","formDisabled","isModal","title","ɵɵadvance","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","PlanoEntregaEntregaDaoService","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","ctx_r8","itensQualitativo","PlanoEntregaFormEntregaComponent_div_22_input_number_4_Template_input_number_change_0_listener","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","onRealizadoChange","PlanoEntregaFormEntregaComponent_div_22_input_number_5_Template_input_number_change_0_listener","_r15","ctx_r14","PlanoEntregaFormEntregaComponent_div_22_input_select_6_Template_input_select_change_0_listener","_r17","ctx_r16","ctx_r11","ɵɵtemplate","PlanoEntregaFormEntregaComponent_div_22_input_number_1_Template","PlanoEntregaFormEntregaComponent_div_22_input_number_2_Template","PlanoEntregaFormEntregaComponent_div_22_input_select_3_Template","PlanoEntregaFormEntregaComponent_div_22_input_number_4_Template","PlanoEntregaFormEntregaComponent_div_22_input_number_5_Template","PlanoEntregaFormEntregaComponent_div_22_input_select_6_Template","ctx_r3","checkTipoIndicador","_c10","_c11","_c12","ɵɵtext","ɵɵtextInterpolate","row_r24","objetivo","_c14","_c13","ctx_r23","planejamentoId","planejamentoObjetivoDao","_c18","_c15","_c17","_c16","PlanoEntregaFormEntregaComponent_tab_26_ng_template_7_Template","ɵɵtemplateRefExtractor","PlanoEntregaFormEntregaComponent_tab_26_ng_template_9_Template","ctx_r4","planejamentoDao","formObjetivos","addObjetivo","bind","removeObjetivo","saveObjetivo","_r20","_r22","row_r33","processo","_c19","ctx_r32","cadeiaValorId","cadeiaValorProcessoDao","_c20","_c21","PlanoEntregaFormEntregaComponent_tab_27_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_27_ng_template_9_Template","ctx_r5","formProcessos","addProcesso","removeProcesso","saveProcesso","_r29","_r31","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","idsUnidadesAscendentes","dao","validDateTime","formValidation","inicio","fim","gridObjetivos","editing","tabs","active","gridProcessos","getDateFormatted","entregaDao","planoEntregaEntregaDao","planoEntregaService","listaQualitativo","objetivo_id","planejamento_objetivo_id","cadeia_processo_id","plano_entrega","unidadeId","entrega","ngAfterViewInit","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","onEntregaChange","entityWithout","getValor","confirm","valueWithout","filter","x","includes","_status","demandante","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","tipos","tipo_indicador","dynamicOptionsObjetivos","row","push","label","icon","color","onClick","dynamicButtonsObjetivos","_this4","generateUuid","_this5","dialog","_this6","consolidado","inputObjetivo","selectedItem","_this7","_this8","_this9","inputProcesso","_this10","entregaItem","tipoIndicador","lista_qualitativos","key","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_26_Template","PlanoEntregaFormEntregaComponent_tab_27_Template","_c22","_c24","_c23","_c25","_r1","PlanoEntregaFormComponent","unidadeSelecionada","condition1","isGestorUnidade","unidade_pai","condition2","isIntegrante","hasPermissionTo","condition3","programa","diffTime","Math","abs","diffDays","ceil","prazo_max_plano_entrega","di","toLocaleDateString","df","sigla","dynamicButtons","onDataChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","ɵɵtextInterpolate1","row_r13","row_r14","entrega_pai","ctx_r9","getValorMeta","row_r15","getValorRealizado","row_r16","PlanoEntregaListEntregaListComponent","filterWhere","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","orderBy","groupBy","selectable","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","_r8","_r10","rowsLimit","ChangeDetectorRef","PageFrameBase","separator_r12","text","ctx_r15","entityService","getIcon","PlanoEntregaListEntregaComponent_ng_template_7_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_7_badge_2_Template","PlanoEntregaListEntregaComponent_ng_template_7_badge_3_Template","ctx_r21","row_r20","ctx_r22","PlanoEntregaListEntregaComponent_ng_template_10_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_span_1_Template","row_r25","PlanoEntregaListEntregaComponent_ng_template_13_span_0_Template","row_r28","row_r29","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","items","gridControl","entityToControl","options","planoEntregaId","code","consult","delete","urlParams","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","edit","index","_ref2","_x2","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_3_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_16_Template","PlanoEntregaListEntregaComponent_ng_template_19_Template","_r0","ChangeDaoService","Change","responsavel","getDateTimeFormatted","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","row_r18","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","then","plano","selectResponsaveis","loading","showResponsaveis","type","novoDelta","delta","Array","entries","forEach","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","lookup","TIPO_LOG_CHANGE","_r3","_r5","_r7","_r9","_r11","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","_r24","onAgruparChange","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_2_listener","ctx_r25","grid","reloadFilter","toolbarButtons","agrupar","principais","noun","row_r30","PlanoEntregaListComponent_column_16_ng_template_1_span_0_Template","ctx_r29","PlanoEntregaListComponent_column_16_ng_template_1_Template","PlanoEntregaListComponent_column_16_ng_template_3_Template","_r26","_r28","header_r34","row_r35","header_r36","ctx_r10","ctx_r38","row_r37","PlanoEntregaListComponent_ng_template_25_badge_4_Template","ɵɵstyleProp","row_r40","row_r41","ctx_r44","row_r43","ctx_r45","PlanoEntregaListComponent_ng_template_36_badge_0_Template","PlanoEntregaListComponent_ng_template_36_badge_1_Template","getColor","PLANO_ENTREGA_STATUS","row_r48","getValue","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","unidadesUsuarioEhGestor","unidades","w1","map","u","w2","isGestorAlgumaAreaTrabalho","field","BOTAO_ADERIR_OPTION","linha","refresh","BOTAO_ADERIR_TOOLBAR","disabled","BOTAO_ALTERAR","modalRefreshId","BOTAO_ARQUIVAR","arquivar","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","checaBotaoAderirToolbar","ngAfterContentChecked","planos_ativos_unidade_pai","planosEntregasAtivosUnidadePai","planos_superiores_vinculados_pela_unidade_selecionada","planosEntregasAtivosUnidadeSelecionada","isLotacaoUsuario","planos_entrega","isAtivo","situacaoPlano","botaoAtendeCondicoes","botao","intersection","start","end","condicao1","condicao2","condicao3","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","arquivadas","query","refreshId","removeId","catch","alert","self","selecionaUnidade","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_16_Template","PlanoEntregaListComponent_ng_template_18_Template","PlanoEntregaListComponent_ng_template_20_Template","PlanoEntregaListComponent_ng_template_23_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_28_Template","PlanoEntregaListComponent_ng_template_31_Template","PlanoEntregaListComponent_ng_template_34_Template","PlanoEntregaListComponent_ng_template_36_Template","PlanoEntregaListComponent_ng_template_39_Template","_r19","_r21","ɵɵtextInterpolate2","row_r8","cliente","entregaService","row_r9","row_r10","porcentagem","PlanoEntregaMapaEntregasComponent_ng_template_18_h2_5_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_progress_bar_6_Template","ctx_r7","isPorcentagem","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_template_12_Template","PlanoEntregaMapaEntregasComponent_ng_template_15_Template","PlanoEntregaMapaEntregasComponent_ng_template_18_Template","RouterModule","AuthGuard","ConfigResolver","routes","component","canActivate","config","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","PlanoEntregaModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}