{"version":3,"sources":["./src/app/models/entidade.model.ts","./src/app/dao/tipo-atividade-dao.service.ts","./src/app/models/tipo-justificativa.model.ts","./src/app/services/notificacao.service.ts","./src/app/dao/entidade-dao.service.ts","./src/app/dao/tipo-motivo-afastamento-dao.service.ts","./src/app/dao/cidade-dao.service.ts","./src/app/dao/perfil-dao.service.ts","./src/app/dao/tipo-justificativa-dao.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { LookupItem } from '../services/lookup.service';\r\nimport { Base } from './base.model';\r\nimport { Cidade } from './cidade.model';\r\nimport { TipoModalidade } from './tipo-modalidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type Nomenclatura = {\r\n    id: string,\r\n    nome: string,\r\n    singular: string,\r\n    plural: string,\r\n    feminino: boolean\r\n}\r\n\r\nexport type TipoCargaHoraria = \"DIA\" | \"SEMANA\" | \"MES\";\r\n\r\nexport class EntidadeNotificacoes {\r\n    enviar_email: boolean = true;\r\n    enviar_whatsapp: boolean = true;\r\n    notifica_demanda_distribuicao: boolean = true;\r\n    notifica_demanda_conclusao: boolean = true;\r\n    notifica_demanda_avaliacao: boolean = true;\r\n    notifica_demanda_modificacao: boolean = true;\r\n    notifica_demanda_comentario: boolean = true;\r\n    template_demanda_distribuicao: string = \"Uma nova demanda foi atribuída a você, acesse o PETRVS para visualizá-la! (ID: #{{demanda_numero}})\";\r\n    template_demanda_conclusao: string = \"A demanda #{{demanda_numero}}, atribuída à\\ao {{demanda_responsavel}}, foi concluída, acesse o PETRVS para visualizá-la!\";\r\n    template_demanda_avaliacao: string = \"Sua demanda #{{demanda_numero}} foi avaliada, acesse o PETRVS para avaliá-la!\";\r\n    template_demanda_modificacao: string = \"A demanda #{{demanda_numero}}, atribuída à {{demanda_responsavel}}, foi atualizada, acesse o PETRVS para visualizá-la!\";\r\n    template_demanda_comentario: string = \"Foi inserido um comentário na demanda #{{demanda_numero}}, atribuída a {{demanda_responsavel}}, acesse o PETRVS para visualizá-la!\";\r\n}\r\n\r\nexport class Entidade extends Base {\r\n    public cidade?: Cidade;\r\n    public tipoModalidade?: TipoModalidade;\r\n    public gestor?: Usuario; /* Objeto do ususario gestor */\r\n    public gestor_substituto?: Usuario; /* Objeto do ususario gestor substituto */\r\n\r\n    public sigla: string = \"\"; // Sigla da entidade\r\n    public nome: string = \"\"; // Nome da entidade\r\n    public abrangencia: string = \"NACIONAL\"; //[\"NACIONAL\", \"ESTADUAL\", \"MUNICIPAL\" // (\"Abrangência da entidade\r\n    public codigo_ibge: string | null = null; //Código da UF ou do município (IBGE)\r\n    public carga_horaria_padrao: number = 8; //default(8) //Carga horária utilizada ao criar plano de trabalho\r\n    public gravar_historico_processo: number = 0; //default(0) //Se grava andamento da demanda dentro do processo vinculado (Caso seja o Sei, será em Consultar Andamento)\r\n    public layout_formulario_demanda: string = \"COMPLETO\"; //[\"COMPLETO\", \"SIMPLIFICADO\"]) default(\"COMPLETO\") //Layout para a tela do formulário de demandas (cadastro simplificado ou completo)\r\n    public campos_ocultos_demanda: LookupItem[] = []; //Campos que se deseja ocultar do formulário de daemanda, com seu respectivo valor padrão, em caso de null será utilizado o valor default do banco\"\r\n    public tipo_modalidade_id: string | null = null; //Tipo de modalidade utilizada ao criar plano de trabalho\r\n    public cidade_id: string | null = null;\r\n    public uf: string | null = null; /* UF para abrangencia estadual */\r\n    public nomenclatura: Nomenclatura[] = []; /* Nomenclatura da entidade */\r\n    public notificacoes: EntidadeNotificacoes = new EntidadeNotificacoes();\r\n    public url_sei: string = \"\"; /* Url base do sei */\r\n    public gestor_id: string | null = null; // Usuário gestor da unidade\r\n    public gestor_substituto_id: string | null = null; // Usuário gestor substituto da unidade\r\n    public forma_contagem_carga_horaria: TipoCargaHoraria = \"DIA\"; // Forma de contagem padrão da carga horária\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n}\r\n","import { Base, IIndexable } from '../models/base.model';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { TipoAtividade } from '../models/tipo-atividade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoAtividadeDaoService extends DaoBaseService<TipoAtividade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"TipoAtividade\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n\r\n}\r\n\r\n","import { Base } from './base.model';\r\n\r\nexport class TipoJustificativa extends Base {\r\n    public nome: string = \"\"; /* Descrição do tipo da justificativa */\r\n    public data_inicio: Date = new Date(); /* Data de início */\r\n    public data_fim: Date | null = null; /* Data do fim */\r\n        \r\n    constructor(){\r\n        super();\r\n    }\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacaoService {\n\n  constructor() { }\n\n  public get hintDemandaDistribuicao(): string {\n    return \"Variáveis disponíveis:\\n{{demanda_numero}}\";\n  }\n\n  public get hintDemandaConclusao(): string {\n    return \"Variáveis disponíveis:\\n{{demanda_numero}}\\n{{demanda_responsavel}}\";\n  }\n\n  public get hintDemandaAvaliacao(): string {\n    return \"Variáveis disponíveis:\\n{{demanda_numero}}\";\n  }\n\n  public get hintDemandaModificacao(): string {\n    return \"Variáveis disponíveis:\\n{{demanda_numero}}\\n{{demanda_responsavel}}\";\n  }\n\n  public get hintDemandaComentario(): string {\n    return \"Variáveis disponíveis:\\n{{demanda_numero}}\\n{{demanda_responsavel}}\";\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Entidade } from '../models/entidade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntidadeDaoService extends DaoBaseService<Entidade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Entidade\", injector);\r\n    this.searchFields = [\"sigla\", \"nome\"];\r\n  }  \r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { TipoMotivoAfastamento } from '../models/tipo-motivo-afastamento.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoMotivoAfastamentoDaoService extends DaoBaseService<TipoMotivoAfastamento> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"TipoMotivoAfastamento\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Cidade } from '../models/cidade.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CidadeDaoService extends DaoBaseService<Cidade> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Cidade\", injector);\r\n    this.searchFields = [\"uf\", \"nome\"];\r\n  }  \r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Perfil } from '../models/perfil.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PerfilDaoService extends DaoBaseService<Perfil> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"Perfil\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }\r\n}\r\n  ","import { Injectable, Injector } from '@angular/core';\r\nimport { TipoJustificativa } from '../models/tipo-justificativa.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoJustificativaDaoService extends DaoBaseService<TipoJustificativa> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"TipoJustificativa\", injector);\r\n    this.searchFields = [\"nome\"];\r\n  }  \r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}