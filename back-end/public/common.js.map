{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/models/tipo-justificativa.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.service.ts"],"sourcesContent":["import { Base } from './base.model';\r\n\r\nexport class TipoJustificativa extends Base {\r\n    public nome: string = \"\"; /* Descrição do tipo da justificativa */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Entrega, EntregaValor } from 'src/app/models/entrega.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { LookupService } from 'src/app/services/lookup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaService {\r\n\r\n  constructor(public lookup: LookupService) { }\r\n\r\n  public getValorMeta(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch (entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": result = entrega.meta.porcentagem + \" %\"; break;\r\n      case \"QUANTIDADE\": result = entrega.meta.quantitativo + \"\"; break;\r\n      case \"VALOR\": result = entrega.meta.valor + \"\"; break;\r\n      case \"QUALITATIVO\": result = this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.meta.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getValorRealizado(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch (entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": result = entrega.realizado.porcentagem + \" %\"; break;\r\n      case \"QUANTIDADE\": result = entrega.realizado.quantitativo + \"\"; break;\r\n      case \"VALOR\": result = entrega.realizado.valor + \"\"; break;\r\n      case \"QUALITATIVO\": result = this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.realizado.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getValor(entregaValor: EntregaValor): any {\r\n    return typeof entregaValor.porcentagem != \"undefined\" ? entregaValor.porcentagem :\r\n      typeof entregaValor.qualitativo != \"undefined\" ? entregaValor.qualitativo :\r\n        typeof entregaValor.quantitativo != \"undefined\" ? entregaValor.quantitativo :\r\n          typeof entregaValor.valor != \"undefined\" ? entregaValor.valor : 0;\r\n  }\r\n\r\n  public getEntregaValor(entrega: Entrega, valor: any): EntregaValor {\r\n    let result: EntregaValor = {};\r\n    if (entrega.tipo_indicador == \"PORCENTAGEM\") result.porcentagem = valor;\r\n    if (entrega.tipo_indicador == \"QUALITATIVO\") result.qualitativo = valor;\r\n    if (entrega.tipo_indicador == \"QUANTIDADE\") result.quantitativo = valor;\r\n    if (entrega.tipo_indicador == \"VALOR\") result.valor = valor;\r\n    return result;\r\n  }\r\n\r\n  public isPorcentagem(entrega: PlanoEntregaEntrega): boolean {\r\n    return entrega.entrega?.tipo_indicador == \"PORCENTAGEM\";\r\n  }\r\n\r\n  /**\r\n   * Informa se o plano de entregas repassado como parâmetro está ativo, ou seja: é um plano válido (não foi deletado, não foi cancelado,\r\n   * não foi arquivado) e possui o status ATIVO.\r\n   * @param planoEntrega \r\n   * @returns \r\n   */\r\n  public isAtivo(planoEntrega: PlanoEntrega): boolean {\r\n    return this.isValido(planoEntrega) && planoEntrega.status == 'ATIVO';\r\n  }\r\n\r\n  /**\r\n   * Informa se o plano de entregas repassado como parâmetro é válido, ou seja, não foi deletado, não foi cancelado nem foi arquivado.\r\n   * @param planoEntrega \r\n   * @returns \r\n   */\r\n  public isValido(planoEntrega: PlanoEntrega): boolean {\r\n    return !planoEntrega.deleted_at && planoEntrega.status != 'CANCELADO' && !planoEntrega.data_arquivamento;\r\n  }\r\n\r\n  /**\r\n   * Informa a situação do plano de entregas repassado como parâmetro, ou seja, se foi EXCLUIDO ou ARQUIVADO, ou, caso contrário, o seu status atual.\r\n   * @param planoEntrega \r\n   * @returns \r\n   */\r\n  public situacaoPlano(planoEntrega: PlanoEntrega): string {\r\n    if (planoEntrega.deleted_at) return \"EXCLUIDO\";\r\n    else if (planoEntrega.data_arquivamento) return \"ARQUIVADO\";\r\n    else return planoEntrega.status!;\r\n  }\r\n\r\n}\r\n"],"names":["Base","TipoJustificativa","constructor","data","nome","initialization","PlanoEntregaService","lookup","getValorMeta","entrega","result","tipo_indicador","meta","porcentagem","quantitativo","valor","getValue","lista_qualitativos","qualitativo","getValorRealizado","realizado","getValor","entregaValor","getEntregaValor","isPorcentagem","isAtivo","planoEntrega","isValido","status","deleted_at","data_arquivamento","situacaoPlano","i0","ɵɵinject","i1","LookupService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}