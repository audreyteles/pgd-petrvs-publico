{"version":3,"sources":["./src/app/modules/cadastros/tipo-processo/tipo-processo-list/tipo-processo-list.component.ts","./src/app/modules/cadastros/tipo-processo/tipo-processo-list/tipo-processo-list.component.html","./src/app/modules/cadastros/tipo-processo/tipo-processo.module.ts","./src/app/models/tipo-processo.model.ts","./src/app/modules/cadastros/tipo-processo/tipo-processo-form/tipo-processo-form.component.ts","./src/app/modules/cadastros/tipo-processo/tipo-processo-form/tipo-processo-form.component.html","./src/app/modules/cadastros/tipo-processo/tipo-processo-routing.module.ts"],"names":[],"mappings":"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","file":"modules-cadastros-tipo-processo-tipo-processo-module.js","sourcesContent":["import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { TipoProcessoDaoService } from 'src/app/dao/tipo-processo-dao.service';\r\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\r\nimport { TipoProcesso } from 'src/app/models/tipo-processo.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tipo-processo-list',\r\n  templateUrl: './tipo-processo-list.component.html',\r\n  styleUrls: ['./tipo-processo-list.component.scss']\r\n})\r\nexport class TipoProcessoListComponent extends PageListBase<TipoProcesso, TipoProcessoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public allPages: ListenerAllPagesService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoProcesso, TipoProcessoDaoService);\r\n    /* Inicializações */\r\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\r\n    this.title = \"Tipos de \" + this.lex.noun(\"Processo\",true);\r\n    this.code=\"MOD_TIPO_PROC\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"}\r\n    });\r\n    if(this.gb.isEmbedded) {\r\n      this.toolbarButtons.push({\r\n        icon: \"bi bi-arrow-repeat\",\r\n        color: \"btn-outline-primary\",\r\n        label: \"Atualizar\",\r\n        onClick: this.atualizarPeloSei.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para exibir dados do tipo de processo\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_PROC_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o tipo de processo\r\n    if (this.auth.hasPermissionTo(\"MOD_TIPO_PROC_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public async atualizarPeloSei() {\r\n    try {\r\n      const lista = await this.allPages.getTiposProcessos();\r\n    } catch (error) {\r\n      this.dialog.alert(\"Erro ao consultar Sei\", \"Erro ao tentar obter a lista de Tipos de Processos do Sei!\");\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_PROC_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_PROC_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"'Nome ' + lex.noun('tipo de documento',false,true)\" controlName=\"nome\" placeholder=\"Nome...\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Código\" field=\"codigo\"></column>\r\n        <column title=\"Descrição\" field=\"nome\"></column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TipoProcessoRoutingModule } from './tipo-processo-routing.module';\r\nimport { TipoProcessoFormComponent } from './tipo-processo-form/tipo-processo-form.component';\r\nimport { TipoProcessoListComponent } from './tipo-processo-list/tipo-processo-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoProcessoFormComponent,\r\n    TipoProcessoListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoProcessoRoutingModule\r\n  ]\r\n})\r\nexport class TipoProcessoModule { }\r\n","import { LookupItem } from '../services/lookup.service';\r\nimport { Base } from './base.model';\r\n\r\nexport class TipoProcesso extends Base {\r\n    public nome: string = \"\"; /* Descrição do tipo de processo */\r\n    public codigo: string = \"\"; /* Codigo do tipo de processo */\r\n    public etiquetas: LookupItem[] = []; /* Etiquetas */\r\n    public checklist: LookupItem[] = []; /* Checklist */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoProcessoDaoService } from 'src/app/dao/tipo-processo-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoProcesso } from 'src/app/models/tipo-processo.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'app-tipo-processo-form',\r\n  templateUrl: './tipo-processo-form.component.html',\r\n  styleUrls: ['./tipo-processo-form.component.scss']\r\n})\r\nexport class TipoProcessoFormComponent extends PageFormBase<TipoProcesso, TipoProcessoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoProcesso, TipoProcessoDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      codigo: {default: \"\"},\r\n      etiquetas: {default: []},\r\n      checklist: {default: []},\r\n      etiqueta_texto: {default: \"\"},\r\n      etiqueta_icone: {default: null},\r\n      etiqueta_cor: {default: null},\r\n      checklist_texto: {default: \"\"},\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome', 'codigo'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoProcesso, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoProcesso());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoProcesso> {\r\n    return new Promise<TipoProcesso>((resolve, reject) => {\r\n      const tipoProcesso = this.util.fill(new TipoProcesso(), this.entity!);\r\n      resolve(this.util.fillForm(tipoProcesso, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public addItemHandleChecklist(): LookupItem | undefined {\r\n    let result = undefined;\r\n    const value = this.form!.controls.checklist_texto.value;\r\n    const key = this.util.textHash(value);\r\n    if(value?.length && this.util.validateLookupItem(this.form!.controls.checklist.value, key)) {\r\n      result = {\r\n        key: key,\r\n        value: this.form!.controls.checklist_texto.value\r\n      };\r\n      this.form!.controls.checklist_texto.setValue(\"\");\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    const value = this.form!.controls.etiqueta_texto.value;\r\n    const key = this.util.textHash(value);\r\n    if(value?.length && this.util.validateLookupItem(this.form!.controls.etiquetas.value, key)) {\r\n      result = {\r\n        key: key,\r\n        value: this.form!.controls.etiqueta_texto.value,\r\n        color: this.form!.controls.etiqueta_cor.value,\r\n        icon: this.form!.controls.etiqueta_icone.value\r\n      };\r\n      this.form!.controls.etiqueta_texto.setValue(\"\");\r\n      this.form!.controls.etiqueta_icone.setValue(null);\r\n      this.form!.controls.etiqueta_cor.setValue(null);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public titleEdit = (entity: TipoProcesso): string => {\r\n    return \"Editando \" + (entity?.nome || \"\"); //A analisar se fica melhor visivelmente com [] ou sem. Ex: Editando [Requerimento] ao invés de Editando Requerimento\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <div class=\"row\">\r\n        <input-text [size]=\"3\" label=\"Código\" controlName=\"codigo\"></input-text>\r\n        <input-text [size]=\"9\" label=\"Nome\" controlName=\"nome\"></input-text>\r\n    </div>\r\n    <div class=\"row\">\r\n        <input-multiselect label=\"Etiquetas\" controlName=\"etiquetas\" [size]=\"8\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n            <input-text [size]=\"5\" label=\"Texto\" controlName=\"etiqueta_texto\"></input-text>\r\n            <input-select [size]=\"3\" label=\"Ícone\" icon=\"fas fa-sign-out-alt\" controlName=\"etiqueta_icone\" liveSearch [items]=\"lookup.ICONES\"></input-select>\r\n            <input-color [size]=\"4\" label=\"Cor\" controlName=\"etiqueta_cor\"></input-color>\r\n        </input-multiselect>\r\n        <input-multiselect label=\"Checklists\" controlName=\"checklist\" [size]=\"4\" [addItemHandle]=\"addItemHandleChecklist.bind(this)\">\r\n            <input-text [size]=\"12\" controlName=\"checklist_texto\"></input-text>\r\n        </input-multiselect>\r\n    </div>\r\n</editable-form>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoProcessoFormComponent } from './tipo-processo-form/tipo-processo-form.component';\r\nimport { TipoProcessoListComponent } from './tipo-processo-list/tipo-processo-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoProcessoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Processo\" } },\r\n  { path: 'new', component: TipoProcessoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: TipoProcessoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: TipoProcessoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoProcessoRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}