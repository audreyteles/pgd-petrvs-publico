{"version":3,"file":"5177.js","mappings":"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","sources":["./src/app/dao/plano-entrega-entrega-progresso-dao.service.ts","./src/app/models/plano-entrega-entrega-progresso.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { DaoBaseService } from './dao-base.service';\nimport { PlanoEntregaEntregaProgresso } from '../models/plano-entrega-entrega-progresso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoEntregaEntregaProgressoDaoService extends DaoBaseService<PlanoEntregaEntregaProgresso> {\n\n  constructor(protected injector: Injector) { \n    super(\"PlanoEntregaEntregaProgresso\", injector);\n    this.inputSearchConfig.searchFields = [\"data_progresso\"];\n  }\n\n}\n\n","\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { HasMetaRealizado, PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport class PlanoEntregaEntregaProgresso extends Base implements HasMetaRealizado  {\r\n  public plano_entrega_entrega?: PlanoEntregaEntrega;\r\n  public entrega?: Entrega;\r\n  public usuario?: Usuario;\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public data_progresso: Date | null = null;\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n\r\n  public plano_entrega_entrega_id: string = '';\r\n  public usuario_id: string = '';                  \r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\n\r\nexport class PlanoEntrega extends Base implements HasStatus, HasAvaliacao {\r\n  public avaliacao?: Avaliacao;\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelos métodos arquivar/desarquivar/avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n  public avaliacoes: Avaliacao[] = [];\r\n\r\n  public unidade_id: string = '';\r\n  public avaliacao_id: string | null = null;\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\n\n@Component({\n  selector: 'plano-entrega-entregas-plano-trabalho',\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\n})\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\n\n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  private _entregaId!: string;\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n\n  public PlanosTrabalho!: PlanoTrabalho[];\n  public items: Usuario[] = [];\n  public loader: boolean = false;\n  \n\n  constructor(public injector: Injector){\n    super(injector);\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.join = [\"plano_trabalho.usuario\",\"plano_entrega_entrega.plano_entrega.unidade\"];\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\n  }\n\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public loadData() {\n    this.loader = true;\n    this.cdRef.detectChanges();\n    try {\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\n\n        response.forEach((item) => {\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\n          if (usuario) {\n            const usuarioId = usuario.id;\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\n            if (!usuarioExistente) {\n              usuarioExistente = {\n                ...usuario,\n                planos_trabalho: [],\n                initialization(data) {                  \n                },\n              };\n              this.items.push(usuarioExistente);\n            }\n\n            const planoTrabalhoId = item.plano_trabalho!.id;\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\n              (pt) => pt.id === planoTrabalhoId\n            );\n\n            if (!planoTrabalho) {\n              planoTrabalho = {\n                ...item.plano_trabalho!,\n                entregas: [],\n                initialization(data) {                  \n                },\n              };\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\n            }\n            const entrega: PlanoTrabalhoEntrega = {\n              ...item,\n              initialization(data) {\n                \n              },\n            };\n            planoTrabalho.entregas.push(entrega);\n          }\n        });\n\n      }).finally(() => {\n        this.loader = false;\n        this.cdRef.detectChanges();\n      })\n    } catch  (e){\n      console.log(\"Erro\")\n    }\n  }\n\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\n    return Math.round(forca * 100) / 100;\n  }\n\n  public planoAtivo(planos: PlanoTrabalho[]): PlanoTrabalho {\n    const planoAtivo = planos.find((plano) => plano.status === \"ATIVO\");\n    return planoAtivo || {} as PlanoTrabalho;\n  }\n}\n","<h5>Participantes:</h5>\n\n<grid #accordionUser [items]=\"items\" [loading]=\"loader\">\n  <columns>\n    <column type=\"expand\"  [expandTemplate]=\"columnExpandeEntregas\" [template]=\"usuarioSectionTitle\" [width]=\"40\">\n      \n      <ng-template let-row=\"row\" #usuarioSectionTitle>        \n      </ng-template>\n\n      <ng-template let-item=\"row\" #columnExpandeEntregas>\n        <h5>Entregas do plano:</h5> \n        <hr>\n        <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card mb-2\">\n          <div class=\"card-body\">\n            <grid [items]=\"plano.entregas\">\n              <columns>\n\n                <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\n                  <ng-template let-row=\"row\" #columnExpandedAtividades>\n                    <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\n                  </ng-template>\n                </column>\n\n                <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\n                  <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnPlano>\n                    <span class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</span>\n                  </ng-template>\n                </column>\n\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnOrigem>\n                      <div class=\"w-100 d-flex justify-content-center\">\n                          <div class=\"one-per-line\">\n                              <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\n                              <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\n                              <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\n                          </div>\n                      </div>\n                  </ng-template>\n                  \n\n              </column>\n\n\n                <column [titleTemplate]=\"titleForcaTrabalho\" [title]=\"'% CHD'\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\" [titleHint]=\"'% Carga Horária Disponível'\">\n                  <ng-template let-header=\"header\" #titleForcaTrabalho>\n                      <div class=\"text-center\">\n                          <!--<small><strong>% Força Trab.</strong></small><br>-->\n                          <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\n                      </div>\n                  </ng-template>\n                  <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\n                </column>\n\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\n                </column>\n\n                <column title=\"Status\" [template]=\"columnStatus\">\n                  <ng-template let-row=\"row\" #columnStatus>\n                      <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, plano.status)\"></badge>\n                  </ng-template>\n                </column>\n\n              </columns>\n            </grid>\n          </div>\n        </div>\n      </ng-template>\n    </column>  \n\n    <column [titleTemplate]=\"titleParticipante\" [template]=\"columnParticipante\">\n      <ng-template let-header=\"header\" #titleParticipante>\n          <b>Participante</b>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnParticipante>\n        <b>{{row.nome}}</b><br>\n        <small>{{row.apelido || \"\"}}</small>\n      </ng-template>\n    </column>\n\n    <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [title]=\"'% CHD'\" [titleHint]=\"'% Carga Horária Disponível'\">\n      <ng-template let-header=\"header\" #titleForcaTrabalho>\n          <!--<b>% Força Trab.</b>-->\n      </ng-template>\n      <ng-template let-row=\"row\" #columnForcaTrabalho>\n        <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) + '%'\"></badge></small>\n      </ng-template>\n    </column>\n  \n  </columns>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'plano-entrega-adesao',\n  templateUrl: './plano-entrega-form-adesao.component.html',\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\n})\n\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [];\n    this.modalWidth = 1000;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: \"\" },\n      data_fim: { default: \"\" },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      unidade_id: { default: this.auth.unidade?.id },\n      plano_entrega_id: { default: null },\n      programa_id: { default: null },\n      status: { default: \"HOMOLOGANDO\" }\n    }, this.cdRef, this.validate);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\n    if(planoEntrega){\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\n      this.form.controls.nome.setValue(planoEntrega.nome);\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\n    }\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result; \n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public onPlanoEntregaChange(event: Event){\n    if(this.form.controls.plano_entrega_id.value){\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\n    }\n  }\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row mb-4\">\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\n            -->\n            <separator></separator>\n        </div>\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n        </div>\n        <div class=\"row\">\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row mt-4\">\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\n                <div class=\"row\">\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n            </separator>\n        </div>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\nimport { NavigateResult } from 'src/app/services/navigate.service';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\nimport { Checklist } from 'src/app/models/atividade.model';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\n\n@Component({\n  selector: 'plano-entrega-form-entrega',\n  templateUrl: './plano-entrega-form-entrega.component.html',\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\n})\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\n\n  public planoEntrega?: PlanoEntrega;\n  public planejamentoDao: PlanejamentoDaoService;\n  public planejamentoId?: string;\n  public cadeiaValorId?: string;\n  public unidadeId?: string;\n  public orderBy?: QueryOrderBy[];\n  public formObjetivos: FormGroup;\n  public formProcessos: FormGroup;\n  public unidadeDao: UnidadeDaoService;\n  public entregaDao: EntregaDaoService;\n  public itensQualitativo: LookupItem[] = [];\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public idsUnidadesAscendentes: string[] = [];\n  public checklist: Checklist[] = [];\n  public formChecklist: FormGroup;\n  public etiquetas: LookupItem[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.modalWidth = 700;\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\n    this.form = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      meta: { default: 100 },\n      realizado: { default: null },\n      plano_entrega_id: { default: \"\" },\n      entrega_pai_id: { default: null },\n      entrega_id: { default: null },\n      progresso_esperado: { default: 100 },\n      progresso_realizado: { default: null },\n      unidade_id: { default: null },\n      destinatario: { default: null },\n      objetivos: { default: [] },\n      processos: { default: [] },\n      listaQualitativo: { default: [] },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      objetivo_id: { default: null },\n      objetivo: { default: null },\n      checklist: {default: []},\n      etiquetas: {default: []},\n      etiqueta: {default: \"\"},\n    }, this.cdRef, this.validate);\n    this.formObjetivos = this.fh.FormBuilder({\n      planejamento_objetivo_id: { default: null },\n    }, this.cdRef, this.validate);\n    this.formProcessos = this.fh.FormBuilder({\n      cadeia_processo_id: { default: null },\n    }, this.cdRef, this.validate);\n    this.formChecklist = this.fh.FormBuilder({\n      id: {default: \"\"},\n      texto: {default: \"\"},\n      checked: {default: false}\n    }, this.cdRef);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    let unidade: Unidade | null = null;\n    this.planoEntrega = this.metadata?.plano_entrega;\n    this.planejamentoId = this.metadata?.planejamento_id;\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\n    this.unidadeId = this.metadata?.unidade_id;\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) {\n        result = \"Obrigatório\";\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\n      }\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A unidade demandante é obrigatória\";\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A entrega é obrigatória\";\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    let inicio = this.form?.controls.data_inicio.value;\n    let fim = this.form?.controls.data_fim.value;\n    if(this.gridObjetivos?.editing) {\n      this.tabs!.active = \"OBJETIVOS\" ;\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if (this.gridProcessos?.editing) {\n      this.tabs!.active = \"PROCESSOS\";\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if(!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if(!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if(inicio > fim) {\n      return \"A data do fim não pode ser anterior à data do início!\";\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    this.onEntregaChange(form.value);\n    let {meta, realizado, ...entityWithout} = entity;\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\n    await this.unidade?.loadSearch(this.unidadeId);\n    await this.planejamento?.loadSearch(this.planejamentoId);\n    await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\n    let unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\n    this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\n    form.controls.objetivos.setValue(entity.objetivos);\n    form.controls.processos.setValue(entity.processos);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity!.unidade_id = this.auth.unidade!.id;\n    this.entity!.unidade = this.auth.unidade;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult> {\n    return new Promise<NavigateResult>((resolve, reject) => {\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\n      this.gridObjetivos?.confirm();\n      this.gridProcessos?.confirm();\n      let {meta, realizado, ...valueWithout} = this.form!.value;\n      entrega = this.util.fillForm(entrega, valueWithout);\n      entrega.unidade = this.unidade?.selectedEntity;\n      entrega.entrega = this.entrega?.selectedEntity;\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\n      resolve(new NavigateResult(entrega));\n    });\n  }\n\n  public onRealizadoChange(value: any, entrega?: Entrega) {\n    this.calculaRealizado();\n  }\n\n  public calculaRealizado() {\n    const meta = this.form?.controls.meta.value;\n    const realizado = this.form?.controls.realizado.value;\n    if (meta && realizado) {\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\n    }\n  }\n\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\n    return result;\n  }\n\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    return result;\n  }\n\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\n    return result;\n  }\n\n  public async addObjetivo() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeObjetivo(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveObjetivo(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async addProcesso() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeProcesso(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveProcesso(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaProcesso;\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async onEntregaChange(row: any) {\n    if (this.entrega && this.entrega.selectedItem) {\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\n      const tipoIndicador = entregaItem.tipo_indicador;\n      if(!this.form!.controls.descricao.value.length) {\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\n      }\n      switch (tipoIndicador) {\n        case 'QUALITATIVO':\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          break;\n        case 'VALOR':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'QUANTIDADE':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'PORCENTAGEM':\n          this.form?.controls.meta.setValue(100);\n          this.form?.controls.realizado.setValue(0);\n          break;\n        default:\n          break;\n      }\n      if (entregaItem.etiquetas) this.loadEtiquetas();\n      if (entregaItem.checklist) this.loadChecklist();\n      this.calculaRealizado();\n    }\n  } \n\n  public loadEtiquetas() {\n    this.etiquetas = this.util.merge(this.entrega?.selectedEntity.etiquetas, this.unidade?.selectedEntity.etiquetas, (a, b) => a.key == b.key);\n  }\n\n  public loadChecklist() {\n    const modeloEntrega = this.entrega?.selectedEntity as Entrega;\n    let checkAdd: Checklist[] = modeloEntrega.checklist.map(a => {\n      return {\n        id: a.id,\n        texto: a.texto,\n        checked: false\n      } as Checklist;\n    });\n    this.checklist = checkAdd || [];\n    this.form!.controls.checklist.setValue(checkAdd);\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    if(this.etiqueta && this.etiqueta.selectedItem) {\n      const item = this.etiqueta.selectedItem;\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\n      if(this.util.validateLookupItem(this.form!.controls.etiquetas.value, key)) {\n        result = {\n          key: key,\n          value: item.value,\n          color: item.color,\n          icon: item.icon\n        };\n        this.form!.controls.etiqueta.setValue(\"\");\n      }\n    }\n    return result;\n  };\n}\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\n            <div class=\"row\">\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-search #entrega [size]=\"12\" [label]=\"lex.translate('Modelo de Entrega')\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\n                    </div>\n                    <div class=\"row\">\n                        <input-text [size]=\"12\" label=\"Título/Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\" [attr.maxlength]=250 required></input-text>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\n                    </div>\n                </separator>\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250></input-text>\n                    </div>\n                </separator>\n                <separator title=\"Planejamento\"></separator>\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\n                    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\n                    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\n                </div>\n                <div class=\"row\">\n                    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\n                    <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\n                </div>\n                <separator title=\"Caracterização da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-multiselect label=\"Etiquetas\" controlName=\"etiquetas\" [size]=\"6\" [control]=\"form!.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                            <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" [control]=\"form!.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\n                        </input-multiselect>\n                        <div class=\"col-md-6\">\n                            <br><h5>Checklist</h5>\n                            <grid [control]=\"form!.controls.checklist\" [form]=\"formChecklist\" [hasAdd]=\"true\" [hasDelete]=\"true\" editable>\n                                <columns>\n                                    <!--<column type=\"switch\" title=\"Check\" field=\"checked\"></column>-->\n                                    <column type=\"text\" title=\"Texto\" field=\"texto\"></column>\n                                    <column type=\"options\"></column>\n                                </columns>\n                            </grid>\n                        </div>\n                    </div>\n                </separator>\n            </div>\n        </tab>\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\n                        <ng-template let-header=\"header\" #titleObjetivo>\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #columnObjetivo>\n                            <span>{{row.objetivo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editObjetivo>\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\"></column>\n                </columns>\n            </grid>\n        </tab>\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\n                        <ng-template let-header=\"header\" #titleProcessos>\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #processo>\n                            <span>{{row.processo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editProcesso>\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\n                </columns>\n            </grid>\n        </tab>\n    </tabs>\n</editable-form>","import { Component, Injector, ViewChild } from \"@angular/core\";\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\nimport { EditableFormComponent } from \"src/app/components/editable-form/editable-form.component\";\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\nimport { IIndexable } from \"src/app/models/base.model\";\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\nimport { PageFormBase } from \"src/app/modules/base/page-form-base\";\nimport { NavigateResult } from \"src/app/services/navigate.service\";\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\nimport { PlanoEntregaEntregaDaoService } from \"src/app/dao/plano-entrega-entrega-dao.service\";\nimport { PlanoEntregaEntrega } from \"src/app/models/plano-entrega-entrega.model\";\n\n@Component({\n  selector: 'plano-entrega-form-progresso',\n  templateUrl: './plano-entrega-form-progresso.component.html',\n  styleUrls: ['./plano-entrega-form-progresso.component.scss']\n})\nexport class PlanoEntregaFormProgressoComponent extends PageFormBase<PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n\n  public planoEntregaService: PlanoEntregaService;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public planoEntregaEntregaId?: string;\n  public planoEntregaEntrega?: PlanoEntregaEntrega | undefined;\n  \n  constructor(public injector: Injector) {   \n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.join = [\"plano_entrega_entrega.entrega\"];\n    \n    this.form = this.fh.FormBuilder({\n      data_progresso: { default: new Date() },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      meta: { default: 100 },\n      realizado: { default: null },\n      progresso_esperado: { default: 100 },\n      progresso_realizado: { default: null }, \n      usuario_id: {default: null},\n      plano_entrega_entrega_id: {default: null},     \n    }, this.cdRef, this.validate);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\")!;\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } \n\n    return result\n  }\n\n  public async loadData(entity: PlanoEntregaEntregaProgresso, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    let {meta, realizado, ...entityWithout} = entity;\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = new PlanoEntregaEntregaProgresso();\n    this.planoEntregaEntrega = this.planoEntregaEntregaId ? (await this.planoEntregaEntregaDao.getById(this.planoEntregaEntregaId, ['entrega']) as PlanoEntregaEntrega) : undefined;\n\n\n    this.entity!.usuario_id = this.auth.usuario!.id;\n    this.entity!.plano_entrega_entrega_id = this.planoEntregaEntrega?.id!;\n    this.entity!.plano_entrega_entrega = this.planoEntregaEntrega;\n    this.entity!.meta = this.planoEntregaEntrega?.meta!;\n    this.entity!.realizado = this.planoEntregaEntrega?.realizado!;\n    this.entity!.progresso_esperado = this.planoEntregaEntrega?.progresso_esperado!;\n    this.entity!.progresso_realizado = this.planoEntregaEntrega?.progresso_realizado!;\n    this.entity!.data_inicio = this.planoEntregaEntrega?.data_inicio!;\n    this.entity!.data_fim = this.planoEntregaEntrega?.data_fim!;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<PlanoEntregaEntregaProgresso> {\n    return new Promise<PlanoEntregaEntregaProgresso>((resolve, reject) => {\n      let progresso: PlanoEntregaEntregaProgresso = this.util.fill(new PlanoEntregaEntregaProgresso(), this.entity!);\n      let {meta, realizado, ...valueWithout} = this.form!.value;\n\n      progresso = this.util.fillForm(progresso, valueWithout);\n      progresso.meta = this.planoEntregaService.getEntregaValor(this.entity!.plano_entrega_entrega?.entrega!, meta);\n      progresso.realizado = this.planoEntregaService.getEntregaValor(this.entity!.plano_entrega_entrega?.entrega!, realizado);\n      \n      resolve(progresso);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntregaEntregaProgresso): string => {\n    return \"Editando \" + this.lex.translate(\"Progresso da entrega\") + ': ' + (entity?.entrega?.descricao || \"\");\n  }\n\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"data_progresso\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n  <div class=\"row\">\n    <input-datetime date [size]=\"4\" label=\"Data do progresso\" controlName=\"data_progresso\" required></input-datetime>\n    <input-datetime date [size]=\"4\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\n    <input-datetime date [size]=\"4\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\n  </div>\n\n  <div class=\"row\">\n    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entity?.plano_entrega_entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\n    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entity?.plano_entrega_entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\n  </div>\n\n  <div class=\"row\">\n    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\n    <input-number [size]=\"6\" label=\"Progresso Realizado\" controlName=\"progresso_realizado\" sufix=\"%\"></input-number>\n  </div>\n\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n\n@Component({\n  selector: 'app-plano-entrega-form',\n  templateUrl: './plano-entrega-form.component.html',\n  styleUrls: ['./plano-entrega-form.component.scss']\n})\n\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n  public maxPE: Number | undefined;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\", 'entregas.reacoes.usuario:id,nome,apelido'];\n    this.modalWidth = 1200;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      unidade_id: { default: \"\" },\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      programa_id: { default: null },\n      entregas: { default: [] },\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    const inicio = this.form?.controls.data_inicio.value;\n    const fim = this.form?.controls.data_fim.value;\n    const programa = this.programa?.selectedEntity as Programa;\n    if (!programa) {\n      return \"Obrigatório selecionar o programa\";\n    } else if (!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if (!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if (inicio > fim) {\n      return \"A data do fim não pode ser menor que a data do início!\";\n    } else {\n      const entregas = this.form!.controls.entregas.value || [];\n      for (let entrega of entregas) {\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\n      }\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = new PlanoEntrega();\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\n    this.entity.unidade = this.auth.unidade;\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    return result;\n  }\n\n  public onDataChange(){ this.sugereNome(); }\n\n  public onUnidadeChange(){ this.sugereNome(); }\n\n  public sugereNome() {\n    if(this.action == 'new') {\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\n    }\n  }\n\n  public somaDia(date: Date, days: number){\n    let result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  public onProgramaChange(){\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\n    const data=this.somaDia(this.entity!.data_inicio,dias);\n    this.form!.controls.data_fim.setValue(new Date(data));\n    this.dataFim?.change.emit();\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\n        </div>\n        <div class=\"row\">\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\n        </div>\n        <separator title=\"Entregas\"></separator>\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\"></plano-entrega-list-entrega>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\n\n@Component({\n  selector: 'app-plano-entrega-list-entrega-list',\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\n})\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public buttons: ToolbarButton[] = [];\n  public idsUnidadesAscendentes: string[] = [];\n  public planoEntregaService: PlanoEntregaService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.title = this.lex.translate(\"Entregas\");\n    this.filter = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      unidade_id: { default: \"\" },\n      destinatario: { default: \"\" },\n    });\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let form: any = filter.value;\n    let result: any[] = [];\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\n    if (form.unidade_id?.length) {  // unidade demandante\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.descricao?.length) {\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.destinatario?.length) {\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    return result;\n  }\n}\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\n    (select)=\"onSelect($event)\">\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row\"> \n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\n            <ng-template let-row=\"row\" #columnEntregaCliente>\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\n            <ng-template let-row=\"row\" #columnDatas>\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\n            <ng-template let-row=\"row\" #columnIndicador>\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\n                    <i class=\"bi bi-list-check\"></i>\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\n                </span>\n            </ng-template>\n        </column>\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\n            <ng-template let-row=\"row\" #columnMetaRealizado>\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\n            <ng-template let-row=\"row\" #columnProgresso>\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\n            </ng-template>\n        </column>\n        <column type=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() parent?: PageListBase<PlanoEntrega, PlanoEntregaDaoService>;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntrega | undefined) { super.entity = value; } get entity(): PlanoEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public formEdit: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public checklist?: Checklist[];\r\n  public selectable: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\", \"reacoes.usuario:id,nome,apelido\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n      etiquetas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n    this.formEdit = this.fh.FormBuilder({\r\n      progresso_realizado: { default: 0 },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: null }\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    const btns = [];\r\n    if(this.isDisabled) btns.push(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES));\r\n    if(this.execucao) btns.push({ label: \"Histórico de execução\", icon: \"bi bi-activity\", color: 'btn-outline-info', onClick: this.showProgresso.bind(this) });   \r\n    return btns;\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    //console.log(this.form?.controls.progresso_realizado.value);\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        this.dao!.delete(entrega).then(() => {\r\n          //this.grid!.query!.removeId(entrega.id);\r\n          this.items.splice(index, 1);\r\n          this.cdRef.detectChanges();\r\n          this.dialog.topAlert(\"Registro excluído com sucesso!\", 5000);\r\n        }).catch((error) => {\r\n          this.dialog.alert(\"Erro\", \"Erro ao excluir: \" + (error?.message ? error?.message : error));\r\n        });;\r\n      };\r\n    }\r\n    \r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public async showPlanejamento(objetivo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'objetivos', objetivo_id]}, { modal: true });\r\n  }\r\n\r\n  public async showCadeiaValor(processo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'processos', processo_id]}, {modal: true});\r\n  \r\n  }\r\n  public async showProgresso(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'progresso', entrega.id]}, {\r\n      modal: true, \r\n      modalClose: (modalResult) => { \r\n        this.parent?.refresh(this.entity?.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.formEdit.controls.etiqueta.setValue(null);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public async onColumnEtiquetasEdit(row: any) {\r\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\r\n    this.formEdit.controls.etiqueta.setValue(null);\r\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public async onColumnEtiquetasSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        etiquetas: this.formEdit.controls.etiquetas.value\r\n      });\r\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onEtiquetaConfigClick() {\r\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\r\n      modal: true, modalClose: (modalResult) => {\r\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  public async onColumnChecklistEdit(row: any) {\r\n    this.formEdit.controls.progresso_realizado.setValue(row.progresso_realizado);\r\n    this.checklist = this.util.clone(row.checklist);\r\n  }\r\n\r\n  public async onColumnChecklistSave(row: any) {\r\n    let realizado = Math.round(parseInt(this.planoEntregaService.getValorMeta(row)) * this.formEdit.controls.progresso_realizado.value/100);\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        progresso_realizado: this.formEdit.controls.progresso_realizado.value,\r\n        realizado: this.planoEntregaService.getEntregaValor(row.entrega, realizado),\r\n        checklist: this.checklist\r\n      });\r\n      row.progresso_realizado = this.formEdit.controls.progresso_realizado.value;\r\n      row.checklist = this.checklist;\r\n      if (typeof row.realizado.porcentagem != \"undefined\") {\r\n        row.realizado.porcentagem = realizado;\r\n      } else if (typeof row.realizado.quantitativo != \"undefined\") {\r\n        row.realizado.quantitativo = realizado;\r\n      } else if (typeof row.realizado.valor != \"undefined\") {\r\n        row.realizado.valor = realizado;\r\n      };\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }  \r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\" [selectable]=\"selectable\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge><br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n                <reaction [entity]=\"row\" origem=\"PLANO_ENTREGA_ENTREGA\" *ngIf=\"execucao\"></reaction>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnEtiquetas>\r\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\r\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                </input-multiselect>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column title=\"Progresso\\nChecklist\" [width]=\"100\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"200\" [template]=\"columnProgChecklist\" [editTemplate]=\"columnProgChecklist\" [columnEditTemplate]=\"selectable ? undefined : columnChecklistEdit\" [edit]=\"selectable ? undefined : onColumnChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnChecklistSave.bind(this)\" *ngIf=\"execucao\">\r\n            <ng-template let-row=\"row\" #columnProgChecklist>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\" collapse [collapsed]=\"true\">\r\n                    <table *ngIf=\"row.checklist?.length\">\r\n                        <tr *ngFor=\"let check of row.checklist\">\r\n                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\r\n                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </separator>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnChecklistEdit>\r\n                <!--<input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>-->\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"formEdit!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                <table *ngIf=\"row.checklist?.length\">\r\n                    <tr *ngFor=\"let check of checklist; let i = index\">\r\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\r\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                    </tr>\r\n                </table>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\">\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of row.objetivos\" class=\"objetivo d-flex align-items-center\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pObjetivo.objetivo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Modelo de Entrega\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { Change } from 'src/app/models/change.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-list-logs',\n  templateUrl: './plano-entrega-list-logs.component.html',\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\n})\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\n\n  public responsaveis: LookupItem[] = [];\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public planoEntrega?: PlanoEntrega;\n  public planoId: string = \"\";\n  public action: string = \"\";\n\n  constructor(public injector: Injector, dao: ChangeDaoService) {\n    super(injector, Change, ChangeDaoService);\n    /* Inicializações */\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.title = \"Logs de Planos de Entregas\";\n    this.filter = this.fh.FormBuilder({\n      responsavel_id: {default: \"\"},\n      data_inicio: {default: \"\"},\n      data_fim: {default: \"\"},\n      tipo: {default: \"\"}\n    });\n    this.orderBy = [['id', 'desc']];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // this.selectResponsaveis!.loading = true;\n    // this.dao?.showResponsaveis().then(responsaveis => {\n    //   this.responsaveis = responsaveis || [];\n    //   this.selectResponsaveis!.loading = false;\n    // });\n  }\n  \n  public filterClear(filter: FormGroup) {\n    filter.controls.responsavel_id.setValue(\"\");\n    filter.controls.data_inicio.setValue(\"\");\n    filter.controls.data_fim.setValue(\"\");\n    filter.controls.tipo.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\n    result.push([\"row_id\", \"==\", this.planoId]);\n    if(form.responsavel_id?.length){\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\n    };\n    if(form.data_inicio){\n      result.push([\"date_time\", \">=\", form.data_inicio]);\n    };\n    if(form.data_fim){\n      result.push([\"date_time\", \"<=\", form.data_fim]);\n    };\n    if(form.tipo?.length){\n      result.push([\"type\", \"==\", form.tipo]);\n    };\n    return result;\n  }\n\n  public preparaDelta(row: any): any[] {\n    this.action = row.type;\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\n    novoDelta.forEach((element: any[]) => {\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\n    });\n    return novoDelta;\n  }\n\n}\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\n    <toolbar></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \n            [items]=\"responsaveis\"></input-select>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\n        </div>\n    </filter>\n    <columns>\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\n            <ng-template let-row=\"row\" #columnResponsavel>\n                <span> {{row.responsavel}} </span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\n            <ng-template let-row=\"row\" #columnDataCriacao>\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\n            <ng-template #titleDiferenca let-header=\"header\">\n                <div class=\"row\">\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\n                </div>\n            </ng-template>\n            <ng-template #columnDiferenca let-row=\"row\">\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\n                    <table>\n                        <tbody> \n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\n                                <td width=\"150\">{{ dif[0] }}</td>\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\n                            </tr>\n                        </tbody>\n                    </table>                   \n                </separator>\n            </ng-template>\n          </column>\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { Component, Injector, Input, ViewChild } from \"@angular/core\";\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\nimport { GridComponent } from \"src/app/components/grid/grid.component\";\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\nimport { PageListBase } from \"src/app/modules/base/page-list-base\";\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\nimport { Base } from \"src/app/models/base.model\";\n\n@Component({\n  selector: 'app-plano-entrega-list-progresso',\n  templateUrl: './plano-entrega-list-progresso.component.html',\n  styleUrls: ['./plano-entrega-list-progresso.component.scss']\n})\nexport class PlanoEntregaListProgressoComponent extends PageListBase<PlanoEntregaEntregaProgresso,PlanoEntregaEntregaProgressoDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n \n  public planoEntregaEntregaId: string = \"\";\n  public planoEntregaService: PlanoEntregaService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.title = this.lex.translate(\"Histórico de execução\");\n    this.orderBy = [['data_progresso','desc']];\n    this.join = ['plano_entrega_entrega.entrega'];\n    this.filter = this.fh.FormBuilder({\n      data_inicial_progresso: {default: null},\n      data_final_progresso: {default: null},\n    });\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_PRO_EXCL\");\n  }\n\n  public onGridLoad(rows?: Base[]) {\n    (rows as PlanoEntregaEntregaProgresso[])?.forEach(x => x.entrega = x.plano_entrega_entrega?.entrega);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\") || \"\";\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;   \n    if(form.data_inicial_progresso) result.push([\"data_progresso\", \">=\", form.data_inicial_progresso]);\n    if(form.data_final_progresso) result.push([\"data_progresso\", \"<=\", form.data_final_progresso]);\n    result.push([\"plano_entrega_entrega_id\", \"==\", this.planoEntregaEntregaId]);\n    return result;\n  }\n\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_INCL')\" [hasEdit]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_EDT')\" [loadList]=\"onGridLoad.bind(this)\">\n  <toolbar *ngIf=\"!selectable\"></toolbar>\n  <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n    <div class=\"row\">\n      <input-datetime [size]=\"3\" noIcon label=\"Data inical do progresso\" controlName=\"data_inicial_progresso\" [control]=\"filter!.controls.data_inicial_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\n      <input-datetime [size]=\"3\" noIcon label=\"Data final do progresso\" controlName=\"data_final_progresso\" [control]=\"filter!.controls.data_final_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\n    </div>\n  </filter>\n  <columns>\n    <column [title]=\"'Data progresso'\" [template]=\"columnProgressoData\" [editTemplate]=\"columnProgressoData\">\n      <ng-template let-row=\"row\" #columnProgressoData>\n        <span *ngIf=\"row.data_progresso\"> {{dao!.getDateFormatted(row.data_progresso)}}</span>\n      </ng-template>\n    </column>\n    <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\n      <ng-template let-row=\"row\" #columnDatas>\n        <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\n        <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\n      </ng-template>\n    </column>\n    <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\">\n      <ng-template let-row=\"row\" #columnMetaRealizado>\n        <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\n        <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\n      </ng-template>\n    </column>\n    <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"columnProgresso\" [columnEditTemplate]=\"selectable ? undefined : columnProgresso\">\n      <ng-template let-row=\"row\" #columnProgresso>\n        <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\n      </ng-template>\n    </column>\n    <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\n  </columns>\n  <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { FullRoute } from 'src/app/services/navigate.service';\nimport { Base } from 'src/app/models/base.model';\nimport { Avaliacao } from 'src/app/models/avaliacao.model';\nimport { AvaliacaoDaoService } from 'src/app/dao/avaliacao-dao.service';\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-list',\n  templateUrl: './plano-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list.component.scss']\n})\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public showFilter: boolean = true;\n  public avaliacao: boolean = false;\n  public execucao: boolean = false;\n  public linha?: PlanoEntrega;\n  public unidadeDao: UnidadeDaoService;\n  public avaliacaoDao: AvaliacaoDaoService;\n  public planejamentoDao: PlanejamentoDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public unidadeSelecionada: Unidade;\n  public habilitarAdesaoToolbar: boolean = false;\n  public toolbarButtons: ToolbarButton[] = [];\n  public botoes: ToolbarButton[] = [];\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\n  public BOTAO_ALTERAR: ToolbarButton;\n  public BOTAO_ARQUIVAR: ToolbarButton;\n  public BOTAO_AVALIAR: ToolbarButton;\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_CONCLUIR: ToolbarButton;\n  public BOTAO_CONSULTAR: ToolbarButton;\n  public BOTAO_DESARQUIVAR: ToolbarButton;\n  public BOTAO_EXCLUIR: ToolbarButton;\n  public BOTAO_HOMOLOGAR: ToolbarButton;\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_LOGS: ToolbarButton;\n  public BOTAO_REATIVAR: ToolbarButton;\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_SUSPENDER: ToolbarButton;\n  public DATAS_FILTRO: LookupItem[] = [\n    { key: \"VIGENTE\", value: \"Vigente\" },\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\n    { key: \"INICIAM\", value: \"Iniciam\" },\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\n  ];\n  \n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.avaliacaoDao = injector.get<AvaliacaoDaoService>(AvaliacaoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.unidadeSelecionada = this.auth.unidade!;\n    /* Inicializações */\n    this.title = this.lex.translate('Planos de Entregas');\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      principais: { default: false },\n      arquivadas: { default: false },\n      nome: { default: '' },\n      data_filtro: { default: null },\n      data_filtro_inicio: { default: new Date() },\n      data_filtro_fim: { default: new Date() },\n      status: { default: '' },\n      unidade_id: { default: null },\n      unidades_filhas: { default: false },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n    }, this.cdRef, this.filterValidate);\n    this.join = [\n      'planejamento:id,nome',\n      'programa:id,nome',\n      'cadeia_valor:id,nome',\n      'unidade:id,sigla,path',\n      'entregas.entrega',\n      'entregas.objetivos.objetivo',\n      'entregas.processos.processo',\n      'entregas.unidade',\n      'entregas.comentarios.usuario:id,nome,apelido',\n      'entregas.reacoes.usuario:id,nome,apelido',\n      'unidade.gestor:id',\n      'unidade.gestor_substituto:id',\n      'unidade.unidade_pai',\n      'avaliacao'\n    ];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarAvaliacao.bind(this) };\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_PLANO, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\n      this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\n      this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.execucao = !!this.queryParams?.execucao;\n    this.avaliacao = !!this.queryParams?.avaliacao;\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\n    this.selectable = this.metadata?.selectable || this.selectable;\n    if (this.execucao) {\n      this.title = this.title + \" (Execução)\";\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\n      this.filter!.controls.principais.setValue(false);\n    }\n    if (this.avaliacao) {\n      this.title = this.title + \" (Avaliação)\";\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\n      this.filter!.controls.unidades_filhas.setValue(true);\n      this.filter!.controls.principais.setValue(false);\n    }\n    this.checaBotaoAderirToolbar();\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.auth.unidade != this.unidadeSelecionada) {\n      this.unidadeSelecionada = this.auth.unidade!;\n      this.checaBotaoAderirToolbar();\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onGridLoad(rows?: Base[]) {\n    const extra = (this.grid?.query || this.query!).extra;\n    if (rows && this.execucao) {\n      rows.forEach(v => {\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\n      });\n    }\n    rows?.forEach(v => {\n      let planoEntrega = v as PlanoEntrega;\n      if(planoEntrega.avaliacao) planoEntrega.avaliacao.tipo_avaliacao = extra?.tipos_avaliacoes?.find((x: TipoAvaliacao) => x.id == planoEntrega.avaliacao!.tipo_avaliacao_id);\n    });\n  }\n\n  public checaBotaoAderirToolbar() {\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\n    this.habilitarAdesaoToolbar = condition1 && condition2;\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\n    /*  (RI_PENT_1)\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\n    */\n  }\n\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public filterValidate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\n      result = \"Maior que fim\";\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\n      result = \"Menor que início\";\n    }\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    filter.controls.data_filtro.setValue(null);\n    filter.controls.data_filtro_inicio.setValue(new Date());\n    filter.controls.data_filtro_fim.setValue(new Date());\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.planejamento_id.setValue(null);\n    filter.controls.cadeia_valor_id.setValue(null);\n    filter.controls.status.setValue(null);\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    /*\n        (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\n        - se ele for gestor:\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \n          - os ativos das unidades imediatamente subordinadas (w3);\n    */\n    if (this.filter?.controls.principais.value) {\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\n        if (w2?.length) w1[2].push(...w2);\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\n        result.push([\"or\", w1, w3]);\n      } else {\n        result.push(w1)\n      }\n    }\n    if (form.nome?.length) result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\n    if (form.data_filtro) {\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\n    }\n    if (form.unidade_id) result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    if (form.planejamento_id) result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\n    if (form.cadeia_valor_id) result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\n    if (form.status || this.avaliacao) result.push([\"status\", \"in\", form.status ? [form.status] : ['CONCLUIDO', 'AVALIADO']]);\n    if (form.unidades_filhas) result.push([\"unidades_filhas\", \"==\", true]);\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados.\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.cdRef.detectChanges();\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public onPrincipaisChange(event: Event) {\n    if (!this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);//invertido o default pelo !\n    this.grid!.reloadFilter();\n  }\n\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\n      case 'INCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\n        break;\n      case 'HOMOLOGANDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\n        break;\n      case 'ATIVO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\n        break;\n      case 'CONCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\n        break;\n      case 'SUSPENSO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\n        break;\n      case 'AVALIADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        break;\n      case 'ARQUIVADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\n        break;\n      case 'CANCELADO':\n        break;\n    }\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\n    return result;\n  }\n\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    this.linha = row;\n    this.botoes.forEach(botao => {\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\n    });\n    return result;\n  }\n\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\n    switch (botao) {\n      case this.BOTAO_ADERIR_OPTION:\n        /*         \n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\n          - o plano estiver com o status Ativo; e\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\n        */\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\n      case this.BOTAO_ALTERAR:\n        /*\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\n          - o Plano de Entregas precisa estar com o status INCLUIDO, HOMOLOGANDO ou ATIVO, e\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\n        */\n        let condicao0 = ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega));\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && condicao0 && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\n      case this.BOTAO_ARQUIVAR:\n        /*\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_AVALIAR:\n        /*\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\n              - sugerir arquivamento automático (vide RI_PENT_A); \n        */\n        let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\n      case this.BOTAO_CANCELAR_AVALIACAO:\n        /*\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status AVALIADO, e\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\n      case this.BOTAO_CANCELAR_CONCLUSAO:\n        /*\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\n      case this.BOTAO_CANCELAR_PLANO:\n        /*\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n      case this.BOTAO_CONCLUIR:\n        /*\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\n      case this.BOTAO_CONSULTAR:\n        /*\n          (RN_PENT_V) CONSULTAR\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\n      case this.BOTAO_DESARQUIVAR:\n        /*\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\n          - o plano precisa estar arquivado, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_EXCLUIR:\n        /*\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\n      case this.BOTAO_HOMOLOGAR:\n        /*\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\n        */\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\n        let condition2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\n      case this.BOTAO_LOGS:\n        /*\n        \n        */\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n      case this.BOTAO_REATIVAR:\n        /*\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\n          - o plano precisa estar com o status SUSPENSO, e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\n      case this.BOTAO_SUSPENDER:\n        /*\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n    }\n    return false;\n  }\n\n  public arquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Arquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public avaliar(planoEntrega: PlanoEntrega) {\n    this.go.navigate({route: ['gestao', 'plano-entrega', planoEntrega.id, 'avaliar']}, {\n      modal: true, \n      metadata: { planoEntrega: planoEntrega },\n      modalClose: (modalResult?: Avaliacao) => {\n        if(modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id, [\"avaliacao.tipo_avaliacao.notas\"]).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n          /*consolidacao.status = \"AVALIADO\";\n          consolidacao.avaliacao_id = modalResult.id;\n          consolidacao.avaliacao = modalResult;\n          this.refreshConsolidacao(consolidacao);*/\n        }\n      }\n    });\n  }\n\n  public async cancelarAvaliacao(planoEntrega: PlanoEntrega) {\n    /*this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\n      title: \"Cancelar Avaliação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });*/\n    this.submitting = true;\n    try {\n      let response = await this.avaliacaoDao!.cancelarAvaliacao(planoEntrega.avaliacao!.id);\n      if(response) {\n        (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n          this.checaBotaoAderirToolbar();\n        });\n        /*consolidacao.status = \"CONCLUIDO\";\n        consolidacao.avaliacao_id = null;\n        consolidacao.avaliacao = undefined;\n        this.refreshConsolidacao(consolidacao);*/\n      }\n    } catch (error: any) {\n      this.error(error.message || error);\n    } finally {\n      this.submitting = false;\n    }\n  }\n\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\n      title: \"Cancelar Conclusão\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\n      title: \"Cancelar Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\n      title: \"Cancelar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public concluir(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\n      title: \"Concluir Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public desarquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: false}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Desarquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public homologar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\n      title: \"Homologar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\n      title: \"Liberar para Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public reativar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\n      title: \"Reativar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\n      title: \"Retirar de Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public suspender(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\n      title: \"Suspender Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public canAdd() {\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\n    /*\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\n     */\n  }\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch *ngIf=\"!avaliacao\" [size]=\"2\" labelPosition=\"left\" label=\"Vinculados\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores sob sua gerência.'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"4\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" [filter]=\"avaliacao ? ['CONCLUIDO', 'AVALIADO'] : undefined\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"3\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"3\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n            <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [parent]=\"this\" [disabled]=\"avaliacao || !botaoAtendeCondicoes(BOTAO_ALTERAR, row)\" [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome || \"\"}}</span><br>\r\n                <badge *ngIf=\"row.programa\" [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value && row.unidade\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Status\\nAvaliação'\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\r\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\r\n                <avaliar-nota-badge *ngIf=\"row.avaliacao\" [align]=\"'left'\" [tipoAvaliacao]=\"row.avaliacao.tipo_avaliacao\" [nota]=\"row.avaliacao.nota\"></avaliar-nota-badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoDao?: PlanejamentoObjetivoDaoService;\r\n  public processoDao?: CadeiaValorProcessoDaoService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n  public objetivo!: PlanejamentoObjetivo;\r\n  public processo!: CadeiaValorProcesso;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.objetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.processoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n    if(this.objetivoId){\r\n      this.objetivoDao?.getById(this.objetivoId, [\"planejamento\"]).then(obj => {\r\n        this.objetivo = obj!\r\n      })\r\n    }\r\n    if(this.processoId){\r\n      this.processoDao?.getById(this.processoId, ['cadeia_valor']).then(processo => {\r\n        this.processo = processo!\r\n      })\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<ng-container *ngIf=\"objetivo\">\r\n    <planejamento-show [planejamento]=\"objetivo.planejamento\" *ngIf=\"objetivo.planejamento\"></planejamento-show>\r\n    <div class=\"objetivos arrow_box w-100\">\r\n        <h5>Objetivo:</h5>\r\n        <h6>{{objetivo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"processo\">\r\n    <div class=\"planejamento arrow_box first-box w-100\" *ngIf=\"processo.cadeia_valor\">\r\n        <h6>Cadeia de valor:</h6>\r\n        <h4>{{processo.cadeia_valor.nome}}</h4>        \r\n    </div>\r\n    <div class=\"procesos arrow_box w-100\">\r\n        <h5>Processo:</h5>\r\n        <h6>{{processo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\"\r\n        [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\"\r\n                [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\"\r\n                [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\"\r\n                [control]=\"filter!.controls.data_inicio\"\r\n                labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\"\r\n                [control]=\"filter!.controls.data_fim\"\r\n                labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                {{row.descricao}}<br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.plano_entrega.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\"\r\n                        [label]=\"row.plano_entrega.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\"\r\n                        [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column [title]=\"'Meta'\" [width]=\"200\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"entregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"entregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\"\r\n                    color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <!--LAYOUT ANTIGO\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    -->\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { AvaliarComponent } from '../../uteis/avaliar/avaliar.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: ':planoEntregaId/avaliar', component: AvaliarComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Avaliar Plano de Entrega\" } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id', component: PlanoEntregaListProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Progressos da entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/new', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/:id/edit', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-valor-meta-input',\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\n})\nexport class PlanoEntregaValorMetaInputComponent {\n  @HostBinding('class') class = 'form-group';\n  @Input() entrega?: Entrega;\n  @Input() icon: string = \"\";\n  @Input() label?: string;\n  @Input() labelInfo: string = \"\";\n  @Input() disabled?: string;\n  @Input() control?: AbstractControl;\n  @Input() change?: (value: any, entrega?: Entrega) => void;\n  @Input() set size(size: number) {\n    if (size != this._size) {\n      this._size = size;\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\n    }\n  }\n  public get size(): number {\n    return this._size || 12;\n  }\n\n  private _size: number = 0;\n\n  public checkTipoIndicador(tipos: string[]): boolean {\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\n  }\n\n  public onValueChange(event: Event) {\n    if (this.change) this.change(this.control?.value, this.entrega);\n  }\n}\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent,\r\n    PlanoEntregaListProgressoComponent,\r\n    PlanoEntregaFormProgressoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { Atividade } from 'src/app/models/atividade.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'plano-trabalho-entrega-atividades',\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\n})\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\n\n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  private _entregaId!: string;\n  public AtividadeDao: AtividadeDaoService;\n  public items: Atividade[] = [];\n\n  public loader: boolean = false;\n\n  constructor(public injector: Injector){\n    super(injector);\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\n    this.join = ['unidade', 'usuario','demandante', 'reacoes.usuario:id,nome,apelido']\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public loadData() {\n    this.loader = true;\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId],[\"unidades_subordinadas\", \"==\", true]], join: this.join}).asPromise().then(response => {\n      this.items = response\n    }).finally(()=> {\n      this.loader = false;\n    })\n  }\n\n}\n","<h5>{{lex.translate(\"Atividades\")}}:</h5>\n<grid [items]=\"items\" [loading]=\"loader\">\n  <columns>\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \n          <b>Descrição</b>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n        <reaction [entity]=\"row\" origem=\"ATIVIDADE\"></reaction>\n      </ng-template>\n    </column>\n\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnPessoas>\n          <div class=\"text-nowrap\">\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\n          </div>\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\n      </ng-template>\n    </column>\n\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n      </ng-template>\n    </column>\n\n  </columns>\n</grid>\n"],"names":["DaoBaseService","PlanoEntregaEntregaProgressoDaoService","constructor","injector","inputSearchConfig","searchFields","_","i0","ɵɵinject","Injector","_2","factory","ɵfac","providedIn","Base","PlanoEntregaEntregaProgresso","data","data_inicio","Date","data_fim","data_progresso","homologado","meta","realizado","progresso_esperado","progresso_realizado","plano_entrega_entrega_id","usuario_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","arquivar","status","avaliacoes","unidade_id","avaliacao_id","plano_entrega_id","planejamento_id","cadeia_valor_id","programa_id","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PageFrameBase","PlanoTrabalhoService","ɵɵelement","ɵɵproperty","row_r37","id","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r22","PlanoTrabalhoDao","getDateFormatted","plano_r16","ɵɵtextInterpolate","row_r42","plano_entrega_entrega","plano_entrega","unidade","sigla","ctx_r43","entityService","getIcon","orgao","ɵɵtemplate","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_4_Template","ctx_r26","planoTrabalhoService","tipoEntrega","entity","titulo","cor","length","ctx_r28","totalForcaTrabalho","row_r49","forca_trabalho","row_r51","descricao","ctx_r36","lookup","getColor","PLANO_TRABALHO_STATUS","getValue","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_25_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_28_Template","ɵɵstyleMap","_r17","_r21","_r19","_r23","_r25","_r27","_r29","_r31","_r33","_r35","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_Template","item_r14","planos_trabalho","row_r55","apelido","ctx_r12","planoAtivo","row_r57","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","items","loader","get","PlanoTrabalhoEntregaDao","join","groupBy","field","label","ngOnInit","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","entrega","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","planos","plano","ɵɵdirectiveInject","selectors","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","rf","ctx","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_11_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_16_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_18_Template","_r3","_r1","_r5","_r7","_r9","_r11","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","lex","translate","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","metadata","controls","setValue","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","isModal","title","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","PlanoEntregaEntrega","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","ctx_r3","onRealizadoChange","bind","header_r15","row_r16","objetivo","_c12","_c11","ctx_r14","planejamentoId","planejamentoObjetivoDao","_c16","_c13","_c15","_c14","PlanoEntregaFormEntregaComponent_tab_39_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_39_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_39_ng_template_11_Template","ctx_r5","planejamentoDao","objetivos","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r13","header_r27","row_r28","processo","_c17","cadeiaValorId","cadeiaValorProcessoDao","_c18","_c19","PlanoEntregaFormEntregaComponent_tab_40_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_40_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_40_ng_template_11_Template","ctx_r6","processos","formProcessos","addProcesso","removeProcesso","saveProcesso","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","checklist","etiquetas","dao","validDateTime","gridObjetivos","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","entregaDao","planoEntregaEntregaDao","planoEntregaService","entrega_pai_id","entrega_id","destinatario","listaQualitativo","objetivo_id","etiqueta","formChecklist","texto","checked","unidadeId","onEntregaChange","entityWithout","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","generateUuid","_status","_this4","dialog","_this5","consolidado","inputObjetivo","selectedItem","_this6","_this7","_this8","inputProcesso","_this9","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","loadEtiquetas","loadChecklist","merge","modeloEntrega","checkAdd","addItemHandleEtiquetas","textHash","validateLookupItem","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_39_Template","PlanoEntregaFormEntregaComponent_tab_40_Template","_c20","_c22","_c21","_c23","PlanoEntregaFormProgressoComponent","planoEntregaEntregaId","urlParams","planoEntregaEntrega","progresso","PlanoEntregaFormProgressoComponent_Query","PlanoEntregaFormProgressoComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormProgressoComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_17_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","selectable","hasPermissionTo","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","_r8","_r10","rowsLimit","ChangeDetectorRef","separator_r23","text","row_r24","PlanoEntregaListEntregaComponent_ng_template_5_span_0_Template","row_r27","ctx_r30","PlanoEntregaListEntregaComponent_ng_template_10_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_4_Template","PlanoEntregaListEntregaComponent_ng_template_10_reaction_5_Template","ctx_r7","execucao","etiqueta_r39","PlanoEntregaListEntregaComponent_ng_template_13_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_15_Template_input_select_details_1_listener","ɵɵrestoreView","_r43","ctx_r42","ɵɵnextContext","ɵɵresetView","onEtiquetaConfigClick","ctx_r11","formEdit","ctx_r45","row_r44","ctx_r46","PlanoEntregaListEntregaComponent_ng_template_18_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_18_span_2_Template","ctx_r15","row_r50","ctx_r17","onRealizadaChange","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_table_1_tr_1_i_2_Template","check_r59","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_table_1_tr_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_table_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_Template","ctx_r66","i_r68","check_r67","PlanoEntregaListEntregaComponent_column_25_ng_template_3_table_2_tr_1_Template","ctx_r65","PlanoEntregaListEntregaComponent_column_25_ng_template_3_separator_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_3_table_2_Template","ctx_r54","row_r63","PlanoEntregaListEntregaComponent_column_25_ng_template_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_3_Template","_r51","ctx_r18","_r53","onColumnChecklistEdit","onColumnChecklistSave","PlanoEntregaListEntregaComponent_ng_template_27_separator_0_div_1_Template_button_click_1_listener","restoredCtx","_r75","pObjetivo_r73","$implicit","ctx_r74","showPlanejamento","PlanoEntregaListEntregaComponent_ng_template_27_separator_0_div_1_Template","ctx_r70","row_r69","PlanoEntregaListEntregaComponent_ng_template_27_separator_1_div_1_Template_button_click_1_listener","_r80","pProcesso_r78","ctx_r79","showCadeiaValor","PlanoEntregaListEntregaComponent_ng_template_27_separator_1_div_1_Template","ctx_r71","PlanoEntregaListEntregaComponent_ng_template_27_separator_0_Template","PlanoEntregaListEntregaComponent_ng_template_27_separator_1_Template","row_r82","PlanoEntregaListEntregaComponent_ng_template_30_badge_0_Template","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","isDisabled","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","btns","showProgresso","edit","index","_ref2","_x2","load","markAllAsTouched","valid","submitting","update","splice","topAlert","catch","alert","processo_id","_this10","parent","refresh","comentarios","onColumnEtiquetasEdit","_this11","tipo_atividade","config","onColumnEtiquetasSave","_this12","saved","params","_this13","clone","_this14","parseInt","porcentagem","quantitativo","valor","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_15_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_21_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","PlanoEntregaListEntregaComponent_column_25_Template","PlanoEntregaListEntregaComponent_ng_template_27_Template","PlanoEntregaListEntregaComponent_ng_template_30_Template","_r0","_r12","_r14","_r16","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","TIPO_LOG_CHANGE","ctx_r10","row_r9","PlanoEntregaListProgressoComponent_ng_template_8_span_0_Template","ctx_r13","PlanoEntregaListProgressoComponent_ng_template_11_span_0_Template","PlanoEntregaListProgressoComponent_ng_template_11_span_2_Template","PlanoEntregaListProgressoComponent","data_inicial_progresso","data_final_progresso","onGridLoad","rows","PlanoEntregaListProgressoComponent_Query","PlanoEntregaListProgressoComponent_Template_grid_select_0_listener","PlanoEntregaListProgressoComponent_toolbar_1_Template","PlanoEntregaListProgressoComponent_ng_template_8_Template","PlanoEntregaListProgressoComponent_ng_template_11_Template","PlanoEntregaListProgressoComponent_ng_template_14_Template","PlanoEntregaListProgressoComponent_ng_template_17_Template","AvaliacaoDaoService","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template_input_switch_change_0_listener","ctx_r24","onPrincipaisChange","ctx_r23","principais","noun","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","onAgruparChange","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template","toolbarButtons","agrupar","avaliacao","row_r32","PlanoEntregaListComponent_column_18_ng_template_1_span_0_Template","ctx_r31","botaoAtendeCondicoes","BOTAO_ALTERAR","row_r35","PlanoEntregaListComponent_column_18_ng_template_1_Template","PlanoEntregaListComponent_column_18_ng_template_3_Template","ctx_r4","_r28","_r30","header_r36","header_r38","ctx_r40","row_r39","ctx_r41","PlanoEntregaListComponent_ng_template_27_badge_3_Template","PlanoEntregaListComponent_ng_template_27_badge_4_Template","ɵɵstyleProp","ctx_r16","row_r45","ctx_r48","row_r47","ctx_r49","cadeia_valor","PlanoEntregaListComponent_ng_template_38_badge_0_Template","PlanoEntregaListComponent_ng_template_38_badge_1_Template","row_r52","tipo_avaliacao","nota","PlanoEntregaListComponent_ng_template_41_badge_2_Template","PlanoEntregaListComponent_ng_template_41_badge_3_Template","PlanoEntregaListComponent_ng_template_41_avaliar_nota_badge_4_Template","PLANO_ENTREGA_STATUS","data_arquivamento","deleted_at","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","DATAS_FILTRO","filterValidate","data_filtro_fim","data_filtro_inicio","w1","unidades","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","isGestorUnidade","w2","unidade_pai","w3","data_filtro","unidades_filhas","arquivadas","avaliacaoDao","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","BOTAO_ADERIR_TOOLBAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","extra","v","expand","tipos_avaliacoes","tipo_avaliacao_id","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botao","isLotacaoUsuario","intersection","start","end","condicao0","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_18_Template","PlanoEntregaListComponent_ng_template_20_Template","PlanoEntregaListComponent_ng_template_22_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_27_Template","PlanoEntregaListComponent_ng_template_30_Template","PlanoEntregaListComponent_ng_template_33_Template","PlanoEntregaListComponent_ng_template_36_Template","PlanoEntregaListComponent_ng_template_38_Template","PlanoEntregaListComponent_ng_template_41_Template","_r15","ɵɵelementContainerStart","PlanoEntregaMapaEntregasComponent_ng_container_0_planejamento_show_1_Template","ɵɵelementContainerEnd","PlanoEntregaMapaEntregasComponent_ng_container_1_div_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_3_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_4_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_0_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_2_Template","row_r22","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","entregaService","objetivoDao","processoDao","obj","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_container_0_Template","PlanoEntregaMapaEntregasComponent_ng_container_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_Template","PlanoEntregaMapaEntregasComponent_ng_template_20_Template","RouterModule","AuthGuard","ConfigResolver","AvaliarComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoEntregaRoutingModule","_3","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}