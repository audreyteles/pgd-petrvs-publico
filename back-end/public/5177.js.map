{"version":3,"file":"5177.js","mappings":"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","sources":["./src/app/dao/plano-entrega-entrega-progresso-dao.service.ts","./src/app/models/plano-entrega-entrega-progresso.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { PlanoEntregaEntregaProgresso } from '../models/plano-entrega-entrega-progresso.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaEntregaProgressoDaoService extends DaoBaseService<PlanoEntregaEntregaProgresso> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"PlanoEntregaEntregaProgresso\", injector);\r\n    this.inputSearchConfig.searchFields = [\"data_progresso\"];\r\n  }\r\n\r\n}\r\n\r\n","\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport class PlanoEntregaEntregaProgresso extends Base  {\r\n  public entrega?: PlanoEntregaEntrega;\r\n  public usuario?: Usuario;\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public data_progresso: Date | null = null;\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n\r\n  public plano_entrega_entrega_id: string = '';\r\n  public usuario_id: string = '';                  \r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\n\r\nexport class PlanoEntrega extends Base implements HasStatus, HasAvaliacao {\r\n  public avaliacao?: Avaliacao;\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelos métodos arquivar/desarquivar/avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n  public avaliacoes: Avaliacao[] = [];\r\n\r\n  public unidade_id: string = '';\r\n  public avaliacao_id: string | null = null;\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-entregas-plano-trabalho',\r\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\r\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\r\n})\r\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \r\n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\r\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n\r\n  public PlanosTrabalho!: PlanoTrabalho[];\r\n  public items: Usuario[] = [];\r\n  public loader: boolean = false;\r\n  \r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.join = [\"plano_trabalho.usuario\",\"plano_entrega_entrega.plano_entrega.unidade\"];\r\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\r\n\r\n        response.forEach((item) => {\r\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\r\n          if (usuario) {\r\n            const usuarioId = usuario.id;\r\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\r\n            if (!usuarioExistente) {\r\n              usuarioExistente = {\r\n                ...usuario,\r\n                planos_trabalho: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              this.items.push(usuarioExistente);\r\n            }\r\n\r\n            const planoTrabalhoId = item.plano_trabalho!.id;\r\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\r\n              (pt) => pt.id === planoTrabalhoId\r\n            );\r\n\r\n            if (!planoTrabalho) {\r\n              planoTrabalho = {\r\n                ...item.plano_trabalho!,\r\n                entregas: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\r\n            }\r\n            const entrega: PlanoTrabalhoEntrega = {\r\n              ...item,\r\n              initialization(data) {\r\n                \r\n              },\r\n            };\r\n            planoTrabalho.entregas.push(entrega);\r\n          }\r\n        });\r\n\r\n      }).finally(() => {\r\n        this.loader = false;\r\n        this.cdRef.detectChanges();\r\n      })\r\n    } catch  (e){\r\n      console.log(\"Erro\")\r\n    }\r\n  }\r\n\r\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n    return Math.round(forca * 100) / 100;\r\n  }\r\n\r\n  public planoAtivo(planos: PlanoTrabalho[]): PlanoTrabalho {\r\n    const planoAtivo = planos.find((plano) => plano.status === \"ATIVO\");\r\n    return planoAtivo || {} as PlanoTrabalho;\r\n  }\r\n\r\n\r\n}\r\n","<h5>Participantes:</h5>\r\n\r\n<grid #accordionUser [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column type=\"expand\"  [expandTemplate]=\"columnExpandeEntregas\" [template]=\"usuarioSectionTitle\" [width]=\"40\">\r\n      \r\n      <ng-template let-row=\"row\" #usuarioSectionTitle>        \r\n      </ng-template>\r\n\r\n      <ng-template let-item=\"row\" #columnExpandeEntregas>\r\n        <h5>Entregas do plano:</h5> \r\n        <hr>\r\n        <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card mb-2\">\r\n          <div class=\"card-body\">\r\n            <grid [items]=\"plano.entregas\">\r\n              <columns>\r\n\r\n                <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\r\n                  <ng-template let-row=\"row\" #columnExpandedAtividades>\r\n                    <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\r\n                  </ng-template>\r\n                </column>\r\n\r\n                <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\r\n                  <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnPlano>\r\n                    <span class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</span>\r\n                  </ng-template>\r\n                </column>\r\n\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\r\n                  <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnOrigem>\r\n                      <div class=\"w-100 d-flex justify-content-center\">\r\n                          <div class=\"one-per-line\">\r\n                              <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\r\n                              <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\r\n                              <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\r\n                          </div>\r\n                      </div>\r\n                  </ng-template>\r\n                  \r\n\r\n              </column>\r\n\r\n\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [title]=\"'% CHD'\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\" [titleHint]=\"'% Carga Horária Disponível'\">\r\n                  <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                      <div class=\"text-center\">\r\n                          <!--<small><strong>% Força Trab.</strong></small><br>-->\r\n                          <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\r\n                      </div>\r\n                  </ng-template>\r\n                  <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                </column>\r\n\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\r\n                  <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\r\n                </column>\r\n\r\n                <column title=\"Status\" [template]=\"columnStatus\">\r\n                  <ng-template let-row=\"row\" #columnStatus>\r\n                      <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, plano.status)\"></badge>\r\n                  </ng-template>\r\n                </column>\r\n\r\n              </columns>\r\n            </grid>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </column>  \r\n\r\n    <column [titleTemplate]=\"titleParticipante\" [template]=\"columnParticipante\">\r\n      <ng-template let-header=\"header\" #titleParticipante>\r\n          <b>Participante</b>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnParticipante>\r\n        <b>{{row.nome}}</b><br>\r\n        <small>{{row.apelido || \"\"}}</small>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [title]=\"'% CHD'\" [titleHint]=\"'% Carga Horária Disponível'\">\r\n      <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n          <!--<b>% Força Trab.</b>-->\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnForcaTrabalho>\r\n        <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) + '%'\"></badge></small>\r\n      </ng-template>\r\n    </column>\r\n  \r\n  </columns>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-form-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1000;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: \"\" },\r\n      data_fim: { default: \"\" },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      unidade_id: { default: this.auth.unidade?.id },\r\n      plano_entrega_id: { default: null },\r\n      programa_id: { default: null },\r\n      status: { default: \"HOMOLOGANDO\" }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\r\n    if(planoEntrega){\r\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\r\n      this.form.controls.nome.setValue(planoEntrega.nome);\r\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\r\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\r\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result; \r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event){\r\n    if(this.form.controls.plano_entrega_id.value){\r\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\r\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\r\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\r\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\r\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\r\n    }\r\n  }\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row mb-4\">\r\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \r\n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\r\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\r\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\r\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \r\n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\r\n            -->\r\n            <separator></separator>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n            </separator>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-entrega',\r\n  templateUrl: './plano-entrega-form-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\r\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\r\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\r\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\r\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\r\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\r\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public planejamentoId?: string;\r\n  public cadeiaValorId?: string;\r\n  public unidadeId?: string;\r\n  public orderBy?: QueryOrderBy[];\r\n  public formObjetivos: FormGroup;\r\n  public formProcessos: FormGroup;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public itensQualitativo: LookupItem[] = [];\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\r\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public checklist: Checklist[] = [];\r\n  public formChecklist: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.modalWidth = 700;\r\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      realizado: { default: null },\r\n      plano_entrega_id: { default: \"\" },\r\n      entrega_pai_id: { default: null },\r\n      entrega_id: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null },\r\n      unidade_id: { default: null },\r\n      destinatario: { default: null },\r\n      objetivos: { default: [] },\r\n      processos: { default: [] },\r\n      listaQualitativo: { default: [] },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      objetivo_id: { default: null },\r\n      objetivo: { default: null },\r\n      checklist: {default: []},\r\n      etiquetas: {default: []},\r\n      etiqueta: {default: \"\"},\r\n    }, this.cdRef, this.validate);\r\n    this.formObjetivos = this.fh.FormBuilder({\r\n      planejamento_objetivo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formProcessos = this.fh.FormBuilder({\r\n      cadeia_processo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formChecklist = this.fh.FormBuilder({\r\n      id: {default: \"\"},\r\n      texto: {default: \"\"},\r\n      checked: {default: false}\r\n    }, this.cdRef);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    let unidade: Unidade | null = null;\r\n    this.planoEntrega = this.metadata?.plano_entrega;\r\n    this.planejamentoId = this.metadata?.planejamento_id;\r\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\r\n    this.unidadeId = this.metadata?.unidade_id;\r\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) {\r\n        result = \"Obrigatório\";\r\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\r\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\r\n      }\r\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A unidade demandante é obrigatória\";\r\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A entrega é obrigatória\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\r\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\r\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\r\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    let inicio = this.form?.controls.data_inicio.value;\r\n    let fim = this.form?.controls.data_fim.value;\r\n    if(this.gridObjetivos?.editing) {\r\n      this.tabs!.active = \"OBJETIVOS\" ;\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if (this.gridProcessos?.editing) {\r\n      this.tabs!.active = \"PROCESSOS\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if(!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if(!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if(inicio > fim) {\r\n      return \"A data do fim não pode ser anterior à data do início!\";\r\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\r\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\r\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\r\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.onEntregaChange(form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\r\n    await this.unidade?.loadSearch(this.unidadeId);\r\n    await this.planejamento?.loadSearch(this.planejamentoId);\r\n    await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\r\n    let unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\r\n    this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n    form.controls.objetivos.setValue(entity.objetivos);\r\n    form.controls.processos.setValue(entity.processos);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity!.unidade_id = this.auth.unidade!.id;\r\n    this.entity!.unidade = this.auth.unidade;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult> {\r\n    return new Promise<NavigateResult>((resolve, reject) => {\r\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\r\n      this.gridObjetivos?.confirm();\r\n      this.gridProcessos?.confirm();\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n      entrega = this.util.fillForm(entrega, valueWithout);\r\n      entrega.unidade = this.unidade?.selectedEntity;\r\n      entrega.entrega = this.entrega?.selectedEntity;\r\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\r\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\r\n      resolve(new NavigateResult(entrega));\r\n    });\r\n  }\r\n\r\n  public onRealizadoChange(value: any, entrega?: Entrega) {\r\n    this.calculaRealizado();\r\n  }\r\n\r\n  public calculaRealizado() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\r\n    return result;\r\n  }\r\n\r\n  public async addObjetivo() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeObjetivo(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveObjetivo(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\r\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\r\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\r\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async addProcesso() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeProcesso(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveProcesso(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaProcesso;\r\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\r\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\r\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async onEntregaChange(row: any) {\r\n    if (this.entrega && this.entrega.selectedItem) {\r\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\r\n      const tipoIndicador = entregaItem.tipo_indicador;\r\n      if(!this.form!.controls.descricao.value.length) {\r\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\r\n      }\r\n      switch (tipoIndicador) {\r\n        case 'QUALITATIVO':\r\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\r\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          break;\r\n        case 'VALOR':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'QUANTIDADE':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'PORCENTAGEM':\r\n          this.form?.controls.meta.setValue(100);\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (entregaItem.etiquetas) this.loadEtiquetas();\r\n      if (entregaItem.checklist) this.loadChecklist();\r\n      this.calculaRealizado();\r\n    }\r\n  } \r\n\r\n  public loadEtiquetas() {\r\n    this.etiquetas = this.util.merge(this.entrega?.selectedEntity.etiquetas, this.unidade?.selectedEntity.etiquetas, (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public loadChecklist() {\r\n    const modeloEntrega = this.entrega?.selectedEntity as Entrega;\r\n    let checkAdd: Checklist[] = modeloEntrega.checklist.map(a => {\r\n      return {\r\n        id: a.id,\r\n        texto: a.texto,\r\n        checked: false\r\n      } as Checklist;\r\n    });\r\n    this.checklist = checkAdd || [];\r\n    this.form!.controls.checklist.setValue(checkAdd);\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if(this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if(this.util.validateLookupItem(this.form!.controls.etiquetas.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.form!.controls.etiqueta.setValue(\"\");\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\r\n            <div class=\"row\">\r\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-search #entrega [size]=\"12\" label=\"lex.translate('Modelo de Entrega')\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-text [size]=\"12\" label=\"Título/Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\" [attr.maxlength]=250 required></input-text>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\r\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250></input-text>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Planejamento\"></separator>\r\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\r\n                    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n                    <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\r\n                </div>\r\n                <separator title=\"Caracterização da Entrega\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-multiselect label=\"Etiquetas\" controlName=\"etiquetas\" [size]=\"6\" [control]=\"form!.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                            <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" [control]=\"form!.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                        </input-multiselect>\r\n                        <div class=\"col-md-6\">\r\n                            <br><h5>Checklist</h5>\r\n                            <grid [control]=\"form!.controls.checklist\" [form]=\"formChecklist\" [hasAdd]=\"true\" [hasDelete]=\"true\" editable>\r\n                                <columns>\r\n                                    <!--<column type=\"switch\" title=\"Check\" field=\"checked\"></column>-->\r\n                                    <column type=\"text\" title=\"Texto\" field=\"texto\"></column>\r\n                                    <column type=\"options\"></column>\r\n                                </columns>\r\n                            </grid>\r\n                        </div>\r\n                    </div>\r\n                </separator>\r\n            </div>\r\n        </tab>\r\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\r\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \r\n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\r\n                        <ng-template let-header=\"header\" #titleObjetivo>\r\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #columnObjetivo>\r\n                            <span>{{row.objetivo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivo>\r\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\r\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\r\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\r\n                        <ng-template let-header=\"header\" #titleProcessos>\r\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #processo>\r\n                            <span>{{row.processo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editProcesso>\r\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>","import { Component, Injector, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { EditableFormComponent } from \"src/app/components/editable-form/editable-form.component\";\r\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\r\nimport { IIndexable } from \"src/app/models/base.model\";\r\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\r\nimport { PageFormBase } from \"src/app/modules/base/page-form-base\";\r\nimport { NavigateResult } from \"src/app/services/navigate.service\";\r\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\r\nimport { PlanoEntregaEntregaDaoService } from \"src/app/dao/plano-entrega-entrega-dao.service\";\r\nimport { PlanoEntregaEntrega } from \"src/app/models/plano-entrega-entrega.model\";\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-progresso',\r\n  templateUrl: './plano-entrega-form-progresso.component.html',\r\n  styleUrls: ['./plano-entrega-form-progresso.component.scss']\r\n})\r\nexport class PlanoEntregaFormProgressoComponent extends PageFormBase<PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaEntregaId?: string;\r\n  public planoEntregaEntrega?: PlanoEntregaEntrega | undefined;\r\n  \r\n  constructor(public injector: Injector) {   \r\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"entrega.entrega\"];\r\n    \r\n    this.form = this.fh.FormBuilder({\r\n      data_progresso: { default: new Date() },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      realizado: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null }, \r\n      usuario_id: {default: null},\r\n      plano_entrega_entrega_id: {default: null},     \r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\")!;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } \r\n\r\n    return result\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntregaProgresso, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntregaEntregaProgresso();\r\n    this.planoEntregaEntrega = this.planoEntregaEntregaId ? (await this.planoEntregaEntregaDao.getById(this.planoEntregaEntregaId, ['entrega']) as PlanoEntregaEntrega) : undefined;\r\n\r\n\r\n    this.entity!.usuario_id = this.auth.usuario!.id;\r\n    this.entity!.plano_entrega_entrega_id = this.planoEntregaEntrega?.id!;\r\n    this.entity!.entrega = this.planoEntregaEntrega;\r\n    this.entity!.meta = this.planoEntregaEntrega?.meta!;\r\n    this.entity!.realizado = this.planoEntregaEntrega?.realizado!;\r\n    this.entity!.progresso_esperado = this.planoEntregaEntrega?.progresso_esperado!;\r\n    this.entity!.progresso_realizado = this.planoEntregaEntrega?.progresso_realizado!;\r\n    this.entity!.data_inicio = this.planoEntregaEntrega?.data_inicio!;\r\n    this.entity!.data_fim = this.planoEntregaEntrega?.data_fim!;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<PlanoEntregaEntregaProgresso> {\r\n    return new Promise<PlanoEntregaEntregaProgresso>((resolve, reject) => {\r\n      let progresso: PlanoEntregaEntregaProgresso = this.util.fill(new PlanoEntregaEntregaProgresso(), this.entity!);\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n\r\n      progresso = this.util.fillForm(progresso, valueWithout);\r\n      progresso.meta = this.planoEntregaService.getEntregaValor(this.entity!.entrega?.entrega!, meta);\r\n      progresso.realizado = this.planoEntregaService.getEntregaValor(this.entity!.entrega?.entrega!, realizado);\r\n      \r\n      resolve(progresso);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntregaEntregaProgresso): string => {\r\n    return \"Editando \" + this.lex.translate(\"Progresso da entrega\") + ': ' + (entity?.entrega?.descricao || \"\");\r\n  }\r\n\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"data_progresso\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div class=\"row\">\r\n        <input-datetime date [size]=\"6\" label=\"Data do progresso\" controlName=\"data_progresso\"  required></input-datetime>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n      <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entity?.entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n      <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entity?.entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\"  labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n      <input-number [size]=\"6\" label=\"Progresso Realizado\" controlName=\"progresso_realizado\" sufix=\"%\"></input-number>\r\n    </div>\r\n    \r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\r\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\r\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n  public maxPE: Number | undefined;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\", 'entregas.reacoes.usuario:id,nome,apelido'];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      programa_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const programa = this.programa?.selectedEntity as Programa;\r\n    if (!programa) {\r\n      return \"Obrigatório selecionar o programa\";\r\n    } else if (!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if (!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if (inicio > fim) {\r\n      return \"A data do fim não pode ser menor que a data do início!\";\r\n    } else {\r\n      const entregas = this.form!.controls.entregas.value || [];\r\n      for (let entrega of entregas) {\r\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\r\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntrega();\r\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\r\n    this.entity.unidade = this.auth.unidade;\r\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\r\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\r\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public onDataChange(){ this.sugereNome(); }\r\n\r\n  public onUnidadeChange(){ this.sugereNome(); }\r\n\r\n  public sugereNome() {\r\n    if(this.action == 'new') {\r\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\r\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\r\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\r\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\r\n    }\r\n  }\r\n\r\n  public somaDia(date: Date, days: number){\r\n    let result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  public onProgramaChange(){\r\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\r\n    const data=this.somaDia(this.entity!.data_inicio,dias);\r\n    this.form!.controls.data_fim.setValue(new Date(data));\r\n    this.dataFim?.change.emit();\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\r\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\r\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator title=\"Entregas\"></separator>\r\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\"></plano-entrega-list-entrega>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega-list',\r\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public buttons: ToolbarButton[] = [];\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      unidade_id: { default: \"\" },\r\n      destinatario: { default: \"\" },\r\n    });\r\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let form: any = filter.value;\r\n    let result: any[] = [];\r\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\r\n    if (form.unidade_id?.length) {  // unidade demandante\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.destinatario?.length) {\r\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\r\n    (select)=\"onSelect($event)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\r\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <div class=\"row\"> \r\n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\r\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\r\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\r\n            <ng-template let-row=\"row\" #columnIndicador>\r\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\r\n                    <i class=\"bi bi-list-check\"></i>\r\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\r\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntrega | undefined) { super.entity = value; } get entity(): PlanoEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public formEdit: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public checklist?: Checklist[];\r\n  public selectable: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\", \"reacoes.usuario:id,nome,apelido\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n      etiquetas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n    this.formEdit = this.fh.FormBuilder({\r\n      progresso_realizado: { default: 0 },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: null }\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n    this.addOption(Object.assign({ onClick: this.showProgresso.bind(this) }, { label: \"Progresso\", icon: \"bi bi-activity\" }), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    return this.isDisabled ? [Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES)] : [];\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    //console.log(this.form?.controls.progresso_realizado.value);\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    console.log(row)\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        this.dao!.delete(entrega).then(() => {\r\n          //this.grid!.query!.removeId(entrega.id);\r\n          this.items.splice(index, 1);\r\n          this.cdRef.detectChanges();\r\n          this.dialog.topAlert(\"Registro excluído com sucesso!\", 5000);\r\n        }).catch((error) => {\r\n          this.dialog.alert(\"Erro\", \"Erro ao excluir: \" + (error?.message ? error?.message : error));\r\n        });;\r\n      };\r\n    }\r\n    \r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public async showPlanejamento(objetivo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'objetivos', objetivo_id]}, { modal: true });\r\n  }\r\n\r\n  public async showCadeiaValor(processo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'processos', processo_id]}, {modal: true});\r\n  \r\n  }\r\n  public async showProgresso(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'progresso', entrega.id]}, {\r\n      modal: true, \r\n      modalClose: (modalResult) => { \r\n        \r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.formEdit.controls.etiqueta.setValue(null);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public async onColumnEtiquetasEdit(row: any) {\r\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\r\n    this.formEdit.controls.etiqueta.setValue(null);\r\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public async onColumnEtiquetasSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        etiquetas: this.formEdit.controls.etiquetas.value\r\n      });\r\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onEtiquetaConfigClick() {\r\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\r\n      modal: true, modalClose: (modalResult) => {\r\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  public async onColumnChecklistEdit(row: any) {\r\n    this.formEdit.controls.progresso_realizado.setValue(row.progresso_realizado);\r\n    this.checklist = this.util.clone(row.checklist);\r\n  }\r\n\r\n  public async onColumnChecklistSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        progresso_realizado: this.formEdit.controls.progresso_realizado.value,\r\n        checklist: this.checklist\r\n      });\r\n      row.progresso_realizado = this.formEdit.controls.progresso_realizado.value;\r\n      row.checklist = this.checklist;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }  \r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\" [selectable]=\"selectable\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge><br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n                <reaction [entity]=\"row\" origem=\"PLANO_ENTREGA_ENTREGA\"></reaction>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnEtiquetas>\r\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\r\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                </input-multiselect>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column title=\"Progresso\\nChecklist\" [width]=\"100\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"200\" [template]=\"columnProgChecklist\" [editTemplate]=\"columnProgChecklist\" [columnEditTemplate]=\"selectable ? undefined : columnChecklistEdit\" [edit]=\"selectable ? undefined : onColumnChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnChecklistSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnProgChecklist>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\" collapse [collapsed]=\"true\">\r\n                    <table *ngIf=\"row.checklist?.length\">\r\n                        <tr *ngFor=\"let check of row.checklist\">\r\n                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\r\n                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </separator>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnChecklistEdit>\r\n                <!--<input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>-->\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"formEdit!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                <table *ngIf=\"row.checklist?.length\">\r\n                    <tr *ngFor=\"let check of checklist; let i = index\">\r\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\r\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                    </tr>\r\n                </table>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\">\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of row.objetivos\" class=\"objetivo d-flex align-items-center\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pObjetivo.objetivo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Modelo de Entrega\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { Change } from 'src/app/models/change.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-logs',\r\n  templateUrl: './plano-entrega-list-logs.component.html',\r\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\r\n})\r\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\r\n\r\n  public responsaveis: LookupItem[] = [];\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planoId: string = \"\";\r\n  public action: string = \"\";\r\n\r\n  constructor(public injector: Injector, dao: ChangeDaoService) {\r\n    super(injector, Change, ChangeDaoService);\r\n    /* Inicializações */\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.title = \"Logs de Planos de Entregas\";\r\n    this.filter = this.fh.FormBuilder({\r\n      responsavel_id: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      tipo: {default: \"\"}\r\n    });\r\n    this.orderBy = [['id', 'desc']];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\r\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    // this.selectResponsaveis!.loading = true;\r\n    // this.dao?.showResponsaveis().then(responsaveis => {\r\n    //   this.responsaveis = responsaveis || [];\r\n    //   this.selectResponsaveis!.loading = false;\r\n    // });\r\n  }\r\n  \r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.responsavel_id.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(\"\");\r\n    filter.controls.data_fim.setValue(\"\");\r\n    filter.controls.tipo.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\r\n    result.push([\"row_id\", \"==\", this.planoId]);\r\n    if(form.responsavel_id?.length){\r\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\r\n    };\r\n    if(form.data_inicio){\r\n      result.push([\"date_time\", \">=\", form.data_inicio]);\r\n    };\r\n    if(form.data_fim){\r\n      result.push([\"date_time\", \"<=\", form.data_fim]);\r\n    };\r\n    if(form.tipo?.length){\r\n      result.push([\"type\", \"==\", form.tipo]);\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public preparaDelta(row: any): any[] {\r\n    this.action = row.type;\r\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\r\n    novoDelta.forEach((element: any[]) => {\r\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\r\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\r\n    });\r\n    return novoDelta;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\r\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\r\n    <toolbar></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \r\n            [items]=\"responsaveis\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\r\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\r\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\r\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnResponsavel>\r\n                <span> {{row.responsavel}} </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\r\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnDataCriacao>\r\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\r\n            <ng-template #titleDiferenca let-header=\"header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #columnDiferenca let-row=\"row\">\r\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\r\n                    <table>\r\n                        <tbody> \r\n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\r\n                                <td width=\"150\">{{ dif[0] }}</td>\r\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\r\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>                   \r\n                </separator>\r\n            </ng-template>\r\n          </column>\r\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, Input, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { GridComponent } from \"src/app/components/grid/grid.component\";\r\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\r\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\r\nimport { PageListBase } from \"src/app/modules/base/page-list-base\";\r\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-progresso',\r\n  templateUrl: './plano-entrega-list-progresso.component.html',\r\n  styleUrls: ['./plano-entrega-list-progresso.component.scss']\r\n})\r\nexport class PlanoEntregaListProgressoComponent extends PageListBase<PlanoEntregaEntregaProgresso,PlanoEntregaEntregaProgressoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n \r\n  public planoEntregaEntregaId: string = \"\";\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Progresso da entrega\");\r\n    this.orderBy = [['data_progresso','desc']];\r\n    this.join = ['entrega.entrega']\r\n\r\n    this.filter = this.fh.FormBuilder({\r\n      data_inicial_progresso: {default: null},\r\n      data_final_progresso: {default: null},\r\n    });\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_PRO_EXCL\");\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;   \r\n    if(form.data_inicial_progresso) result.push([\"data_progresso\", \">=\", form.data_inicial_progresso]);\r\n    if(form.data_final_progresso) result.push([\"data_progresso\", \"<=\", form.data_final_progresso]);\r\n    result.push([\"plano_entrega_entrega_id\", \"==\", this.planoEntregaEntregaId]);\r\n    return result;\r\n  }\r\n\r\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n  [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_INCL')\"\r\n  [hasEdit]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_EDT')\">\r\n  <toolbar *ngIf=\"!selectable\"></toolbar>\r\n  <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\"\r\n    [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\"\r\n    [collapsed]=\"!selectable && filterCollapsed\">\r\n    <div class=\"row\">\r\n      <input-datetime [size]=\"3\" noIcon label=\"Data inical do progresso\" controlName=\"data_inicial_progresso\"\r\n        [control]=\"filter!.controls.data_inicial_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\r\n\r\n        <input-datetime [size]=\"3\" noIcon label=\"Data final do progresso\" controlName=\"data_final_progresso\"\r\n        [control]=\"filter!.controls.data_final_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\r\n        \r\n    </div>\r\n  </filter>\r\n  <columns>\r\n\r\n    <column [title]=\"'Data progresso'\" [template]=\"columnProgressoData\" [editTemplate]=\"columnProgressoData\">\r\n      <ng-template let-row=\"row\" #columnProgressoData>\r\n        <span *ngIf=\"row.data_progresso\"> {{dao!.getDateFormatted(row.data_progresso)}}</span>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n      <ng-template let-row=\"row\" #columnDatas>\r\n        <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n        <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\">\r\n      <ng-template let-row=\"row\" #columnMetaRealizado>\r\n        <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row.entrega)\" color=\"light\"\r\n          hint=\"Planejada\"></badge><br>\r\n        <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row.entrega)\" color=\"light\"\r\n          hint=\"Realizada\"></badge>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"columnProgresso\"\r\n      [columnEditTemplate]=\"selectable ? undefined : columnProgresso\">\r\n      <ng-template let-row=\"row\" #columnProgresso>\r\n        <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n  </columns>\r\n  <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { Avaliacao } from 'src/app/models/avaliacao.model';\r\nimport { AvaliacaoDaoService } from 'src/app/dao/avaliacao-dao.service';\r\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public showFilter: boolean = true;\r\n  public avaliacao: boolean = false;\r\n  public execucao: boolean = false;\r\n  public linha?: PlanoEntrega;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public avaliacaoDao: AvaliacaoDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public unidadeSelecionada: Unidade;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public botoes: ToolbarButton[] = [];\r\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\r\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\r\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_AVALIAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_CONCLUIR: ToolbarButton;\r\n  public BOTAO_CONSULTAR: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_EXCLUIR: ToolbarButton;\r\n  public BOTAO_HOMOLOGAR: ToolbarButton;\r\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_LOGS: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    { key: \"VIGENTE\", value: \"Vigente\" },\r\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\r\n    { key: \"INICIAM\", value: \"Iniciam\" },\r\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\r\n  ];\r\n  \r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.avaliacaoDao = injector.get<AvaliacaoDaoService>(AvaliacaoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.unidadeSelecionada = this.auth.unidade!;\r\n    /* Inicializações */\r\n    this.title = this.lex.translate('Planos de Entregas');\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      principais: { default: true },\r\n      arquivadas: { default: false },\r\n      nome: { default: '' },\r\n      data_filtro: { default: null },\r\n      data_filtro_inicio: { default: new Date() },\r\n      data_filtro_fim: { default: new Date() },\r\n      status: { default: '' },\r\n      unidade_id: { default: null },\r\n      unidades_filhas: { default: false },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\r\n      'planejamento:id,nome',\r\n      'programa:id,nome',\r\n      'cadeia_valor:id,nome',\r\n      'unidade:id,sigla,path',\r\n      'entregas.entrega',\r\n      'entregas.objetivos.objetivo',\r\n      'entregas.processos.processo',\r\n      'entregas.unidade',\r\n      'entregas.comentarios.usuario:id,nome,apelido',\r\n      'entregas.reacoes.usuario:id,nome,apelido',\r\n      'unidade.gestor:id',\r\n      'unidade.gestor_substituto:id',\r\n      'unidade.unidade_pai',\r\n      'avaliacao'\r\n    ];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_PLANO, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\r\n      this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\r\n      this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\r\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.execucao = !!this.queryParams?.execucao;\r\n    this.avaliacao = !!this.queryParams?.avaliacao;\r\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\r\n    this.selectable = this.metadata?.selectable || this.selectable;\r\n    if (this.execucao) {\r\n      this.title = this.title + \" (Execução)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    if (this.avaliacao) {\r\n      this.title = this.title + \" (Avaliação)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.unidades_filhas.setValue(true);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    this.checaBotaoAderirToolbar();\r\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.auth.unidade != this.unidadeSelecionada) {\r\n      this.unidadeSelecionada = this.auth.unidade!;\r\n      this.checaBotaoAderirToolbar();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onGridLoad(rows?: Base[]) {\r\n    const extra = (this.grid?.query || this.query!).extra;\r\n    if (rows && this.execucao) {\r\n      rows.forEach(v => {\r\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\r\n      });\r\n    }\r\n    rows?.forEach(v => {\r\n      let planoEntrega = v as PlanoEntrega;\r\n      if(planoEntrega.avaliacao) planoEntrega.avaliacao.tipo_avaliacao = extra?.tipos_avaliacoes?.find((x: TipoAvaliacao) => x.id == planoEntrega.avaliacao!.tipo_avaliacao_id);\r\n    });\r\n  }\r\n\r\n  public checaBotaoAderirToolbar() {\r\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\r\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\r\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\r\n    /*  (RI_PENT_1)\r\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\r\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \r\n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\r\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\r\n    */\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\r\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\r\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    /*\r\n        (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\r\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\r\n        - se ele for gestor:\r\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \r\n          - os ativos das unidades imediatamente subordinadas (w3);\r\n    */\r\n    if (this.filter?.controls.principais.value) {\r\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\r\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\r\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\r\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\r\n        if (w2?.length) w1[2].push(...w2);\r\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\r\n        result.push([\"or\", w1, w3]);\r\n      } else {\r\n        result.push(w1)\r\n      }\r\n    }\r\n    if (form.nome?.length) result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    if (form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if (form.unidade_id) result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    if (form.planejamento_id) result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    if (form.cadeia_valor_id) result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    if (form.status || this.avaliacao) result.push([\"status\", \"in\", form.status ? [form.status] : ['CONCLUIDO', 'AVALIADO']]);\r\n    if (form.unidades_filhas) result.push([\"unidades_filhas\", \"==\", true]);\r\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados.\r\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public onPrincipaisChange(event: Event) {\r\n    if (this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);\r\n    this.grid!.reloadFilter();\r\n  }\r\n\r\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\r\n        break;\r\n      case 'ATIVO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\r\n        break;\r\n      case 'SUSPENSO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\r\n        break;\r\n      case 'AVALIADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        break;\r\n      case 'ARQUIVADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\r\n        break;\r\n      case 'CANCELADO':\r\n        break;\r\n    }\r\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.linha = row;\r\n    this.botoes.forEach(botao => {\r\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\r\n    switch (botao) {\r\n      case this.BOTAO_ADERIR_OPTION:\r\n        /*         \r\n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\r\n          - o plano estiver com o status Ativo; e\r\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\r\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\r\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\r\n        */\r\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\r\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\r\n          - o Plano de Entregas precisa estar com o status INCLUIDO, HOMOLOGANDO ou ATIVO, e\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\r\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\r\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\r\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\r\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\r\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\r\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\r\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\r\n        */\r\n        let condicao0 = ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega));\r\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\r\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\r\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && condicao0 && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_AVALIAR:\r\n        /*\r\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\r\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\r\n              - sugerir arquivamento automático (vide RI_PENT_A); \r\n        */\r\n        let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\r\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\r\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\r\n      case this.BOTAO_CANCELAR_AVALIACAO:\r\n        /*\r\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO, e\r\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\r\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\r\n      case this.BOTAO_CANCELAR_CONCLUSAO:\r\n        /*\r\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\r\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\r\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\r\n      case this.BOTAO_CANCELAR_PLANO:\r\n        /*\r\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n      case this.BOTAO_CONCLUIR:\r\n        /*\r\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\r\n      case this.BOTAO_CONSULTAR:\r\n        /*\r\n          (RN_PENT_V) CONSULTAR\r\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\r\n          - o plano precisa estar arquivado, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_EXCLUIR:\r\n        /*\r\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\r\n      case this.BOTAO_HOMOLOGAR:\r\n        /*\r\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\r\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\r\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\r\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\r\n        */\r\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\r\n        let condition2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\r\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\r\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\r\n      case this.BOTAO_LOGS:\r\n        /*\r\n        \r\n        */\r\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\r\n          - o plano precisa estar com o status SUSPENSO, e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Arquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', planoEntrega.id, 'avaliar']}, {\r\n      modal: true, \r\n      metadata: { planoEntrega: planoEntrega },\r\n      modalClose: (modalResult?: Avaliacao) => {\r\n        if(modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id, [\"avaliacao.tipo_avaliacao.notas\"]).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n          /*consolidacao.status = \"AVALIADO\";\r\n          consolidacao.avaliacao_id = modalResult.id;\r\n          consolidacao.avaliacao = modalResult;\r\n          this.refreshConsolidacao(consolidacao);*/\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public async cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    /*this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\r\n      title: \"Cancelar Avaliação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });*/\r\n    this.submitting = true;\r\n    try {\r\n      let response = await this.avaliacaoDao!.cancelarAvaliacao(planoEntrega.avaliacao!.id);\r\n      if(response) {\r\n        (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n          this.checaBotaoAderirToolbar();\r\n        });\r\n        /*consolidacao.status = \"CONCLUIDO\";\r\n        consolidacao.avaliacao_id = null;\r\n        consolidacao.avaliacao = undefined;\r\n        this.refreshConsolidacao(consolidacao);*/\r\n      }\r\n    } catch (error: any) {\r\n      this.error(error.message || error);\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\r\n      title: \"Cancelar Conclusão\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\r\n      title: \"Cancelar Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\r\n      title: \"Cancelar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\r\n      title: \"Concluir Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: false}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Desarquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\r\n      title: \"Homologar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\r\n      title: \"Liberar para Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\r\n      title: \"Reativar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\r\n      title: \"Retirar de Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\r\n      title: \"Suspender Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public canAdd() {\r\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\r\n    /*\r\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\r\n     */\r\n  }\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch *ngIf=\"!avaliacao\" [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores das geridas por ele'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"4\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" [filter]=\"avaliacao ? ['CONCLUIDO', 'AVALIADO'] : undefined\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"3\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"3\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n            <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [disabled]=\"avaliacao || !botaoAtendeCondicoes(BOTAO_ALTERAR, row)\" [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome || \"\"}}</span><br>\r\n                <badge *ngIf=\"row.programa\" [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value && row.unidade\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Status\\nAvaliação'\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\r\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\r\n                <avaliar-nota-badge *ngIf=\"row.avaliacao\" [align]=\"'left'\" [tipoAvaliacao]=\"row.avaliacao.tipo_avaliacao\" [nota]=\"row.avaliacao.nota\"></avaliar-nota-badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoDao?: PlanejamentoObjetivoDaoService;\r\n  public processoDao?: CadeiaValorProcessoDaoService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n  public objetivo!: PlanejamentoObjetivo;\r\n  public processo!: CadeiaValorProcesso;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.objetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.processoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n    if(this.objetivoId){\r\n      this.objetivoDao?.getById(this.objetivoId, [\"planejamento\"]).then(obj => {\r\n        this.objetivo = obj!\r\n      })\r\n    }\r\n    if(this.processoId){\r\n      this.processoDao?.getById(this.processoId, ['cadeia_valor']).then(processo => {\r\n        this.processo = processo!\r\n      })\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<ng-container *ngIf=\"objetivo\">\r\n    <planejamento-show [planejamento]=\"objetivo.planejamento\" *ngIf=\"objetivo.planejamento\"></planejamento-show>\r\n    <div class=\"objetivos arrow_box w-100\">\r\n        <h5>Objetivo:</h5>\r\n        <h6>{{objetivo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"processo\">\r\n    <div class=\"planejamento arrow_box first-box w-100\" *ngIf=\"processo.cadeia_valor\">\r\n        <h6>Cadeia de valor:</h6>\r\n        <h4>{{processo.cadeia_valor.nome}}</h4>        \r\n    </div>\r\n    <div class=\"procesos arrow_box w-100\">\r\n        <h5>Processo:</h5>\r\n        <h6>{{processo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\"\r\n        [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\"\r\n                [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\"\r\n                [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\"\r\n                [control]=\"filter!.controls.data_inicio\"\r\n                labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\"\r\n                [control]=\"filter!.controls.data_fim\"\r\n                labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                {{row.descricao}}<br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.plano_entrega.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\"\r\n                        [label]=\"row.plano_entrega.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\"\r\n                        [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column [title]=\"'Meta'\" [width]=\"200\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"entregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"entregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\"\r\n                    color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <!--LAYOUT ANTIGO\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    -->\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { AvaliarComponent } from '../../uteis/avaliar/avaliar.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: ':planoEntregaId/avaliar', component: AvaliarComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Avaliar Plano de Entrega\" } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id', component: PlanoEntregaListProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Progressos da entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/new', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/:id/edit', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-valor-meta-input',\r\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\r\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\r\n})\r\nexport class PlanoEntregaValorMetaInputComponent {\r\n  @HostBinding('class') class = 'form-group';\r\n  @Input() entrega?: Entrega;\r\n  @Input() icon: string = \"\";\r\n  @Input() label?: string;\r\n  @Input() labelInfo: string = \"\";\r\n  @Input() disabled?: string;\r\n  @Input() control?: AbstractControl;\r\n  @Input() change?: (value: any, entrega?: Entrega) => void;\r\n  @Input() set size(size: number) {\r\n    if (size != this._size) {\r\n      this._size = size;\r\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\r\n    }\r\n  }\r\n  public get size(): number {\r\n    return this._size || 12;\r\n  }\r\n\r\n  private _size: number = 0;\r\n\r\n  public checkTipoIndicador(tipos: string[]): boolean {\r\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\r\n  }\r\n\r\n  public onValueChange(event: Event) {\r\n    if (this.change) this.change(this.control?.value, this.entrega);\r\n  }\r\n}\r\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent,\r\n    PlanoEntregaListProgressoComponent,\r\n    PlanoEntregaFormProgressoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-entrega-atividades',\r\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\r\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\r\n})\r\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\r\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public AtividadeDao: AtividadeDaoService;\r\n  public items: Atividade[] = [];\r\n\r\n  public loader: boolean = false;\r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.join = ['unidade', 'usuario','demandante']\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\r\n      this.items = response\r\n    }).finally(()=> {\r\n      this.loader = false;\r\n    })\r\n  }\r\n\r\n}\r\n","<h5>Atividades:</h5>\r\n<grid [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\r\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \r\n          <b>Descrição</b>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\r\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\r\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\r\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\r\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnPessoas>\r\n          <div class=\"text-nowrap\">\r\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\r\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n          </div>\r\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\r\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\r\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n\r\n  </columns>\r\n</grid>\r\n"],"names":["DaoBaseService","PlanoEntregaEntregaProgressoDaoService","constructor","injector","inputSearchConfig","searchFields","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoEntregaEntregaProgresso","data","data_inicio","Date","data_fim","data_progresso","homologado","meta","realizado","progresso_esperado","progresso_realizado","plano_entrega_entrega_id","usuario_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","arquivar","status","avaliacoes","unidade_id","avaliacao_id","plano_entrega_id","planejamento_id","cadeia_valor_id","programa_id","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PageFrameBase","PlanoTrabalhoService","ɵɵelement","ɵɵproperty","row_r37","id","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r22","PlanoTrabalhoDao","getDateFormatted","plano_r16","ɵɵtextInterpolate","row_r42","plano_entrega_entrega","plano_entrega","unidade","sigla","ctx_r43","entityService","getIcon","orgao","ɵɵtemplate","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_4_Template","ctx_r26","planoTrabalhoService","tipoEntrega","entity","titulo","cor","length","ctx_r28","totalForcaTrabalho","row_r49","forca_trabalho","row_r51","descricao","ctx_r36","lookup","getColor","PLANO_TRABALHO_STATUS","getValue","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_25_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_28_Template","ɵɵstyleMap","_r17","_r21","_r19","_r23","_r25","_r27","_r29","_r31","_r33","_r35","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_Template","item_r14","planos_trabalho","row_r55","apelido","ctx_r12","planoAtivo","row_r57","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","items","loader","get","PlanoTrabalhoEntregaDao","join","groupBy","field","label","ngOnInit","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","entrega","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","planos","plano","ɵɵdirectiveInject","selectors","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","rf","ctx","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_11_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_16_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_18_Template","_r3","_r1","_r5","_r7","_r9","_r11","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","lex","translate","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","metadata","controls","setValue","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","isModal","title","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","PlanoEntregaEntrega","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","ctx_r3","onRealizadoChange","bind","header_r15","row_r16","objetivo","_c12","_c11","ctx_r14","planejamentoId","planejamentoObjetivoDao","_c16","_c13","_c15","_c14","PlanoEntregaFormEntregaComponent_tab_39_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_39_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_39_ng_template_11_Template","ctx_r5","planejamentoDao","objetivos","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r13","header_r27","row_r28","processo","_c17","cadeiaValorId","cadeiaValorProcessoDao","_c18","_c19","PlanoEntregaFormEntregaComponent_tab_40_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_40_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_40_ng_template_11_Template","ctx_r6","processos","formProcessos","addProcesso","removeProcesso","saveProcesso","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","checklist","etiquetas","dao","validDateTime","gridObjetivos","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","entregaDao","planoEntregaEntregaDao","planoEntregaService","entrega_pai_id","entrega_id","destinatario","listaQualitativo","objetivo_id","etiqueta","formChecklist","texto","checked","unidadeId","onEntregaChange","entityWithout","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","generateUuid","_status","_this4","dialog","_this5","consolidado","inputObjetivo","selectedItem","_this6","_this7","_this8","inputProcesso","_this9","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","loadEtiquetas","loadChecklist","merge","modeloEntrega","checkAdd","addItemHandleEtiquetas","textHash","validateLookupItem","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_39_Template","PlanoEntregaFormEntregaComponent_tab_40_Template","_c20","_c22","_c21","_c23","PlanoEntregaFormProgressoComponent","planoEntregaEntregaId","urlParams","planoEntregaEntrega","progresso","PlanoEntregaFormProgressoComponent_Query","PlanoEntregaFormProgressoComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormProgressoComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_17_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","selectable","hasPermissionTo","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","_r8","_r10","rowsLimit","ChangeDetectorRef","separator_r26","text","row_r27","PlanoEntregaListEntregaComponent_ng_template_5_span_0_Template","row_r30","row_r31","ctx_r33","PlanoEntregaListEntregaComponent_ng_template_10_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_4_Template","etiqueta_r40","PlanoEntregaListEntregaComponent_ng_template_13_badge_0_Template","row_r38","PlanoEntregaListEntregaComponent_ng_template_15_Template_input_select_details_1_listener","ɵɵrestoreView","_r44","ɵɵnextContext","ɵɵresetView","onEtiquetaConfigClick","ctx_r11","formEdit","ctx_r46","row_r45","ctx_r47","PlanoEntregaListEntregaComponent_ng_template_18_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_18_span_2_Template","ctx_r15","row_r50","ctx_r17","onRealizadaChange","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_table_1_tr_1_i_2_Template","check_r56","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_table_1_tr_1_Template","row_r52","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_table_1_Template","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_Template","ctx_r63","i_r65","check_r64","PlanoEntregaListEntregaComponent_ng_template_28_table_2_tr_1_Template","ctx_r62","PlanoEntregaListEntregaComponent_ng_template_28_separator_1_Template","PlanoEntregaListEntregaComponent_ng_template_28_table_2_Template","ctx_r21","row_r60","PlanoEntregaListEntregaComponent_ng_template_31_separator_0_div_1_Template_button_click_1_listener","restoredCtx","_r72","pObjetivo_r70","$implicit","ctx_r71","showPlanejamento","PlanoEntregaListEntregaComponent_ng_template_31_separator_0_div_1_Template","ctx_r67","row_r66","PlanoEntregaListEntregaComponent_ng_template_31_separator_1_div_1_Template_button_click_1_listener","_r77","pProcesso_r75","ctx_r76","showCadeiaValor","PlanoEntregaListEntregaComponent_ng_template_31_separator_1_div_1_Template","ctx_r68","PlanoEntregaListEntregaComponent_ng_template_31_separator_0_Template","PlanoEntregaListEntregaComponent_ng_template_31_separator_1_Template","row_r79","PlanoEntregaListEntregaComponent_ng_template_34_badge_0_Template","ctx_r25","execucao","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","showProgresso","isDisabled","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","edit","index","_ref2","_x2","load","markAllAsTouched","valid","submitting","update","splice","topAlert","catch","alert","processo_id","_this10","comentarios","onColumnEtiquetasEdit","_this11","tipo_atividade","config","onColumnEtiquetasSave","_this12","saved","params","onColumnChecklistEdit","_this13","clone","onColumnChecklistSave","_this14","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_15_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_21_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","PlanoEntregaListEntregaComponent_ng_template_26_Template","PlanoEntregaListEntregaComponent_ng_template_28_Template","PlanoEntregaListEntregaComponent_ng_template_31_Template","PlanoEntregaListEntregaComponent_ng_template_34_Template","_r0","_r12","_r14","_r16","_r18","_r20","_r22","_r24","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","TIPO_LOG_CHANGE","ctx_r10","row_r9","PlanoEntregaListProgressoComponent_ng_template_8_span_0_Template","ctx_r13","PlanoEntregaListProgressoComponent_ng_template_11_span_0_Template","PlanoEntregaListProgressoComponent_ng_template_11_span_2_Template","PlanoEntregaListProgressoComponent","data_inicial_progresso","data_final_progresso","PlanoEntregaListProgressoComponent_Query","PlanoEntregaListProgressoComponent_Template_grid_select_0_listener","PlanoEntregaListProgressoComponent_toolbar_1_Template","PlanoEntregaListProgressoComponent_ng_template_8_Template","PlanoEntregaListProgressoComponent_ng_template_11_Template","PlanoEntregaListProgressoComponent_ng_template_14_Template","PlanoEntregaListProgressoComponent_ng_template_17_Template","AvaliacaoDaoService","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template_input_switch_change_0_listener","ctx_r24","onPrincipaisChange","ctx_r23","principais","noun","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","onAgruparChange","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template","toolbarButtons","agrupar","avaliacao","row_r32","PlanoEntregaListComponent_column_18_ng_template_1_span_0_Template","ctx_r31","botaoAtendeCondicoes","BOTAO_ALTERAR","row_r35","PlanoEntregaListComponent_column_18_ng_template_1_Template","PlanoEntregaListComponent_column_18_ng_template_3_Template","ctx_r4","_r28","_r30","header_r36","header_r38","ctx_r40","row_r39","ctx_r41","PlanoEntregaListComponent_ng_template_27_badge_3_Template","PlanoEntregaListComponent_ng_template_27_badge_4_Template","ɵɵstyleProp","row_r44","ctx_r16","ctx_r48","row_r47","ctx_r49","cadeia_valor","PlanoEntregaListComponent_ng_template_38_badge_0_Template","PlanoEntregaListComponent_ng_template_38_badge_1_Template","tipo_avaliacao","nota","PlanoEntregaListComponent_ng_template_41_badge_2_Template","PlanoEntregaListComponent_ng_template_41_badge_3_Template","PlanoEntregaListComponent_ng_template_41_avaliar_nota_badge_4_Template","PLANO_ENTREGA_STATUS","data_arquivamento","deleted_at","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","DATAS_FILTRO","filterValidate","data_filtro_fim","data_filtro_inicio","w1","unidades","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","isGestorUnidade","w2","unidade_pai","w3","data_filtro","unidades_filhas","arquivadas","avaliacaoDao","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","refresh","BOTAO_ADERIR_TOOLBAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","onGridLoad","rows","extra","v","expand","tipos_avaliacoes","tipo_avaliacao_id","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botao","isLotacaoUsuario","intersection","start","end","condicao0","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_18_Template","PlanoEntregaListComponent_ng_template_20_Template","PlanoEntregaListComponent_ng_template_22_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_27_Template","PlanoEntregaListComponent_ng_template_30_Template","PlanoEntregaListComponent_ng_template_33_Template","PlanoEntregaListComponent_ng_template_36_Template","PlanoEntregaListComponent_ng_template_38_Template","PlanoEntregaListComponent_ng_template_41_Template","_r15","ɵɵelementContainerStart","PlanoEntregaMapaEntregasComponent_ng_container_0_planejamento_show_1_Template","ɵɵelementContainerEnd","PlanoEntregaMapaEntregasComponent_ng_container_1_div_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_3_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_4_Template","ctx_r18","PlanoEntregaMapaEntregasComponent_ng_template_17_span_0_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_2_Template","row_r22","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","entregaService","objetivoDao","processoDao","obj","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_container_0_Template","PlanoEntregaMapaEntregasComponent_ng_container_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_Template","PlanoEntregaMapaEntregasComponent_ng_template_20_Template","RouterModule","AuthGuard","ConfigResolver","AvaliarComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r7","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}