{"version":3,"file":"5177.js","mappings":"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","sources":["./src/app/dao/plano-entrega-entrega-progresso-dao.service.ts","./src/app/models/plano-entrega-entrega-progresso.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-detalhes/plano-entrega-entrega-detalhes.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-detalhes/plano-entrega-entrega-detalhes.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-vinculadas/plano-entrega-entregas-vinculadas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-vinculadas/plano-entrega-entregas-vinculadas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { PlanoEntregaEntregaProgresso } from '../models/plano-entrega-entrega-progresso.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaEntregaProgressoDaoService extends DaoBaseService<PlanoEntregaEntregaProgresso> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"PlanoEntregaEntregaProgresso\", injector);\r\n    this.inputSearchConfig.searchFields = [\"data_progresso\"];\r\n  }\r\n\r\n}\r\n\r\n","\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { HasMetaRealizado, PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport class PlanoEntregaEntregaProgresso extends Base implements HasMetaRealizado  {\r\n  public plano_entrega_entrega?: PlanoEntregaEntrega;\r\n  public entrega?: Entrega;\r\n  public usuario?: Usuario;\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public data_progresso: Date | null = null;\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n\r\n  public plano_entrega_entrega_id: string = '';\r\n  public usuario_id: string = '';                  \r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\n\r\nexport class PlanoEntrega extends Base implements HasStatus, HasAvaliacao {\r\n  public avaliacao?: Avaliacao;\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelos métodos arquivar/desarquivar/avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n  public avaliacoes: Avaliacao[] = [];\r\n\r\n  public unidade_id: string = '';\r\n  public avaliacao_id: string | null = null;\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector } from \"@angular/core\";\nimport { PlanoEntregaEntregaDaoService } from \"src/app/dao/plano-entrega-entrega-dao.service\";\nimport { PlanoEntregaEntrega } from \"src/app/models/plano-entrega-entrega.model\";\nimport { PlanoEntrega } from \"src/app/models/plano-entrega.model\";\nimport { PageFrameBase } from \"src/app/modules/base/page-frame-base\";\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\n\n@Component({\n  selector: 'plano-entrega-entrega-detalhes',\n  templateUrl: './plano-entrega-entrega-detalhes.component.html',\n  styleUrls: ['./plano-entrega-entrega-detalhes.component.scss']\n})\nexport class PlanoEntregaEntregaDetalhesComponent extends PageFrameBase {\n  public planoEntrega?: PlanoEntrega;\n  public entrega?: PlanoEntregaEntrega;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public planoEntregaService: PlanoEntregaService;\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n  }\n  \n  public ngOnInit() {\n    super.ngOnInit();\n    this.entrega = this.metadata?.entrega;\n  }\n\n  public async showPlanejamento(objetivo_id: string){\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'objetivos', objetivo_id]}, { modal: true });\n  }\n\n  public async showCadeiaValor(processo_id: string){\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'processos', processo_id]}, {modal: true});  \n  }\n\n}","<tabs #detalhesEntrega right [title]=\"isModal ? '' : title\">\n  <tab key=\"INFOS\" icon=\"bi bi-info-lg\" label=\"Informações\"></tab>\n  <tab key=\"VINCULOS\" icon=\"bi bi-arrow-down-up\" label=\"Vínculos\"></tab>\n  <tab key=\"PARTICIPANTES\" icon=\"bi bi-people\" label=\"Participantes\"></tab>\n</tabs>\n\n\n\n<div *ngIf=\"detalhesEntrega.active == 'INFOS'\" class=\"\" style=\"min-height: 400px;\">\n  <div class=\"mb-2\">\n    <badge *ngFor=\"let etiqueta of entrega?.etiquetas\" [lookup]=\"etiqueta\"></badge>\n  </div>\n  <h5>{{entrega?.descricao}}</h5>\n  <small>{{entrega?.descricao_entrega}}</small>\n  <hr>\n  \n  <p>Período: <small>{{planoEntregaEntregaDao!.getDateFormatted(entrega?.data_inicio)}} até {{planoEntregaEntregaDao!.getDateFormatted(entrega?.data_fim)}}</small></p>\n  <div class=\"d-flex\">\n    <p class=\"me-2\">Demandante: <badge *ngIf=\"entrega?.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"entrega?.unidade?.sigla\"></badge></p>\n    <p>Destinatário: <badge *ngIf=\"entrega?.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"entrega?.destinatario\"></badge></p>\n  </div>\n\n  <h5 class=\"text-center\">{{lex.translate('Metas')}}</h5>\n  <small class=\"d-block text-center mb-2\">{{entrega?.descricao_meta}}</small>\n  <div class=\"d-flex justify-content-center\" *ngIf=\"entrega\">\n    <div>\n      <b>Planejada</b><br>\n      <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(entrega)\" color=\"light\" hint=\"Planejada\"></badge>\n    </div>\n    \n    <div class=\"vr mx-5\"></div>\n\n    <div>\n      <b>Executada</b><br>\n      <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(entrega)\" color=\"light\" hint=\"Realizada\"></badge>\n    </div>\n  </div>\n\n  <div class=\"mt-3\" *ngIf=\"entrega?.objetivos?.length\">\n    <h5 class=\"text-center mb-2\">{{lex.translate('Objetivos')}}</h5>\n    <div class=\"card\">\n      <ul class=\"list-group list-group-flush\">\n        <li *ngFor=\"let pObjetivo of entrega?.objetivos\" class=\"list-group-item\">\n            <div class=\"d-flex justify-content-between align-items-center\" *ngIf=\"pObjetivo.objetivo\">\n              <small>{{pObjetivo.objetivo.nome}}</small>\n              <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.id)\"><i class=\"bi bi-eye\"></i></button>\n            </div>\n          </li>\n      </ul>\n    </div>\n  </div>\n\n\n  <div class=\"mt-3\" *ngIf=\"entrega?.processos?.length\">\n    <h5 class=\"text-center mb-2\">{{lex.translate('Processos')}}</h5>\n    <div class=\"card\">\n      <ul class=\"list-group list-group-flush\">\n        <li *ngFor=\"let pProcesso of entrega?.processos\" class=\"list-group-item\">\n            <div class=\"d-flex justify-content-between align-items-center\" *ngIf=\"pProcesso.processo\">\n              <small>{{pProcesso.processo.nome}}</small>\n              <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.id)\"><i class=\"bi bi-eye\"></i></button>\n            </div>\n          </li>\n      </ul>\n    </div>\n  </div>\n\n    \n\n</div>\n\n<div *ngIf=\"detalhesEntrega.active == 'VINCULOS' && entrega\" style=\"min-height: 400px;\">\n  <plano-entrega-entregas-vinculadas [entregaId]=\"entrega.id\"></plano-entrega-entregas-vinculadas>  \n</div>\n\n<div *ngIf=\"detalhesEntrega.active == 'PARTICIPANTES' && entrega\" class=\"row\" style=\"min-height: 400px;\">\n  <plano-entrega-entregas-plano-trabalho [entregaId]=\"entrega.id\"></plano-entrega-entregas-plano-trabalho>\n</div>","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-entregas-plano-trabalho',\r\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\r\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\r\n})\r\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \r\n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\r\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n\r\n  public PlanosTrabalho!: PlanoTrabalho[];\r\n  public items: Usuario[] = [];\r\n  public loader: boolean = false;\r\n  \r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.join = [\"plano_trabalho.usuario\",\"plano_entrega_entrega.plano_entrega.unidade\"];\r\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId], ['planoTrabalho.status', 'in', ['ATIVO', 'CONCLUIDO', 'AVALIADO']]], join: this.join}).asPromise().then(response => {\r\n\r\n        response.forEach((item) => {\r\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\r\n          if (usuario) {\r\n            const usuarioId = usuario.id;\r\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\r\n            if (!usuarioExistente) {\r\n              usuarioExistente = {\r\n                ...usuario,\r\n                planos_trabalho: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              this.items.push(usuarioExistente);\r\n            }\r\n\r\n            const planoTrabalhoId = item.plano_trabalho!.id;\r\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\r\n              (pt) => pt.id === planoTrabalhoId\r\n            );\r\n\r\n            if (!planoTrabalho) {\r\n              planoTrabalho = {\r\n                ...item.plano_trabalho!,\r\n                entregas: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\r\n            }\r\n            const entrega: PlanoTrabalhoEntrega = {\r\n              ...item,\r\n              initialization(data) {\r\n                \r\n              },\r\n            };\r\n            planoTrabalho.entregas.push(entrega);\r\n          }\r\n        });\r\n\r\n      }).finally(() => {\r\n        this.loader = false;\r\n        this.cdRef.detectChanges();\r\n      })\r\n    } catch  (e){\r\n      console.log(\"Erro\")\r\n    }\r\n  }\r\n\r\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n    return Math.round(forca * 100) / 100;\r\n  }\r\n\r\n  public planoAtivo(planos: PlanoTrabalho[]): PlanoTrabalho {\r\n    const planoAtivo = planos.find((plano) => plano.status === \"ATIVO\");\r\n    return planoAtivo || {} as PlanoTrabalho;\r\n  }\r\n}\r\n","<grid #accordionUser [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column type=\"expand\"  [expandTemplate]=\"columnExpandeEntregas\" [template]=\"usuarioSectionTitle\" [width]=\"40\">\r\n      \r\n      <ng-template let-row=\"row\" #usuarioSectionTitle>        \r\n      </ng-template>\r\n\r\n      <ng-template let-item=\"row\" #columnExpandeEntregas>\r\n        <h5>Entregas do plano:</h5> \r\n        <hr>\r\n        <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card mb-2\">\r\n          <div class=\"card-body\">\r\n            <grid [items]=\"plano.entregas\">\r\n              <columns>\r\n\r\n                <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\r\n                  <ng-template let-row=\"row\" #columnExpandedAtividades>\r\n                    <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\r\n                  </ng-template>\r\n                </column>\r\n\r\n                <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\r\n                  <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnPlano>\r\n                    <span class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</span>\r\n                  </ng-template>\r\n                </column>\r\n\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\r\n                  <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnOrigem>\r\n                      <div class=\"w-100 d-flex justify-content-center\">\r\n                          <div class=\"one-per-line\">\r\n                              <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\r\n                              <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\r\n                              <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\r\n                          </div>\r\n                      </div>\r\n                  </ng-template>\r\n                  \r\n\r\n              </column>\r\n\r\n\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [title]=\"'% CHD'\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\" [titleHint]=\"'% Carga Horária Disponível'\">\r\n                  <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                      <div class=\"text-center\">\r\n                          <!--<small><strong>% Força Trab.</strong></small><br>-->\r\n                          <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\r\n                      </div>\r\n                  </ng-template>\r\n                  <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                </column>\r\n\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\r\n                  <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\r\n                </column>\r\n\r\n                <column title=\"Status\" [template]=\"columnStatus\">\r\n                  <ng-template let-row=\"row\" #columnStatus>\r\n                      <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, plano.status)\"></badge>\r\n                  </ng-template>\r\n                </column>\r\n\r\n              </columns>\r\n            </grid>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </column>  \r\n\r\n    <column [titleTemplate]=\"titleParticipante\" [template]=\"columnParticipante\">\r\n      <ng-template let-header=\"header\" #titleParticipante>\r\n          <b>Participante</b>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnParticipante>\r\n        <b>{{row.nome}}</b><br>\r\n        <small>{{row.apelido || \"\"}}</small>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [title]=\"'% CHD'\" [titleHint]=\"'% Carga Horária Disponível'\">\r\n      <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n          <!--<b>% Força Trab.</b>-->\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnForcaTrabalho>\r\n        <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) + '%'\"></badge></small>\r\n      </ng-template>\r\n    </column>\r\n  \r\n  </columns>\r\n</grid>","import { Component, Injector, Input } from \"@angular/core\";\nimport { TreeNode } from \"primeng/api\";\nimport { PlanoEntregaEntregaDaoService } from \"src/app/dao/plano-entrega-entrega-dao.service\";\nimport { PlanoEntregaEntrega } from \"src/app/models/plano-entrega-entrega.model\";\nimport { PageFrameBase } from \"src/app/modules/base/page-frame-base\";\n\n@Component({\n  selector: 'plano-entrega-entregas-vinculadas',\n  templateUrl: './plano-entrega-entregas-vinculadas.component.html',\n  styleUrls: ['./plano-entrega-entregas-vinculadas.component.scss']\n})\nexport class PlanoEntregaEntregasVinculadasComponent extends PageFrameBase { \n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  public loader: boolean = false;\n  private _entregaId!: string;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public entregasVinculadas: TreeNode[] = [];\n\n  constructor(public injector: Injector){\n    super(injector);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.join = [\"unidade\"];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public async loadData() {\n    this.loader = true;\n    try {\n      this.entregasVinculadas = await this.planoEntregaEntregaDao.hierarquia(this._entregaId)\n      this.cdRef.detectChanges();\n      this.loader = false;      \n    } catch  (e){\n      console.log(\"Erro\")\n    }\n  }\n\n  public async showDetalhes(entrega: PlanoEntregaEntrega){\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"detalhes\"]}, {\n      metadata: {\n        entrega: entrega\n      }\n    });    \n  }\n}","<p-organizationChart [value]=\"entregasVinculadas\" *ngIf=\"entregasVinculadas.length\">\n  <ng-template let-node pTemplate=\"default\">\n    <div class=\"p-2\">{{ node.label }}</div>\n    <badge *ngIf=\"node.data?.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"node.data?.unidade?.sigla\"></badge><br>\n    <button class=\"btn btn-sm\" (click)=\"showDetalhes(node.data)\" title=\"Detalhes da entrega\"><i class=\"bi bi-eye\"></i></button>\n  </ng-template>\n</p-organizationChart>\n\n<div class=\"d-flex justify-content-center my-2\" *ngIf=\"loader\">\n  <div class=\"spinner-border\" role=\"status\">\n      <span class=\"visually-hidden\"></span>\n  </div>\n</div>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-form-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1000;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: \"\" },\r\n      data_fim: { default: \"\" },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      unidade_id: { default: this.auth.unidade?.id },\r\n      plano_entrega_id: { default: null },\r\n      programa_id: { default: null },\r\n      status: { default: \"HOMOLOGANDO\" }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\r\n    if(planoEntrega){\r\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\r\n      this.form.controls.nome.setValue(planoEntrega.nome);\r\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\r\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\r\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result; \r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event){\r\n    if(this.form.controls.plano_entrega_id.value){\r\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\r\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\r\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\r\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\r\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\r\n    }\r\n  }\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row mb-4\">\r\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \r\n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\r\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\r\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\r\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \r\n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\r\n            -->\r\n            <separator></separator>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n            </separator>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-entrega',\r\n  templateUrl: './plano-entrega-form-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\r\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\r\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\r\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\r\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\r\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\r\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public planejamentoId?: string;\r\n  public cadeiaValorId?: string;\r\n  public unidadeId?: string;\r\n  public orderBy?: QueryOrderBy[];\r\n  public formObjetivos: FormGroup;\r\n  public formProcessos: FormGroup;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public itensQualitativo: LookupItem[] = [];\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\r\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public checklist: Checklist[] = [];\r\n  public formChecklist: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public etiquetasAscendentes: LookupItem[] = [];\r\n  public dataFim?: Date;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.modalWidth = 700;\r\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      descricao_entrega: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      descricao_meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      plano_entrega_id: { default: \"\" },\r\n      entrega_pai_id: { default: null },\r\n      entrega_id: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null },\r\n      unidade_id: { default: null },\r\n      destinatario: { default: null },\r\n      objetivos: { default: [] },\r\n      processos: { default: [] },\r\n      listaQualitativo: { default: [] },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      objetivo_id: { default: null },\r\n      objetivo: { default: null },\r\n      checklist: { default: [] },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: \"\" },\r\n    }, this.cdRef, this.validate);\r\n    this.formObjetivos = this.fh.FormBuilder({\r\n      planejamento_objetivo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formProcessos = this.fh.FormBuilder({\r\n      cadeia_processo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formChecklist = this.fh.FormBuilder({\r\n      id: { default: \"\" },\r\n      texto: { default: \"\" },\r\n      checked: { default: false }\r\n    }, this.cdRef);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    let unidade: Unidade | null = null;\r\n    this.planoEntrega = this.metadata?.plano_entrega;\r\n    this.planejamentoId = this.metadata?.planejamento_id;\r\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\r\n    this.unidadeId = this.metadata?.unidade_id;\r\n    if (this.metadata?.data_fim) this.dataFim = this.metadata?.data_fim;\r\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao', 'destinatario'].indexOf(controlName) >= 0) {\r\n      if (!control.value?.length) {\r\n        result = \"Obrigatório\";\r\n      } else if (this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\r\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\r\n      }\r\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A unidade demandante é obrigatória\";\r\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A entrega é obrigatória\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\r\n      if (!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\r\n      if (control.value?.length && this.gridObjetivos?.items.filter(x => x._status == \"ADD\").map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\r\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\r\n      if (!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\r\n      if (control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    let inicio = this.form?.controls.data_inicio.value;\r\n    let fim = this.form?.controls.data_fim.value;\r\n    if (this.gridObjetivos?.editing) {\r\n      this.tabs!.active = \"OBJETIVOS\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if (this.gridProcessos?.editing) {\r\n      this.tabs!.active = \"PROCESSOS\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if (!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if (!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if (inicio > fim) {\r\n      return \"A data do fim não pode ser anterior à data do início!\";\r\n    } else if (!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\r\n      return \"Data de inicio menor que a data de inicio \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\r\n    } else if (!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\r\n      return \"Data de fim maior que a data de fim \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.onEntregaChange(form.value);\r\n    let { meta, realizado, ...entityWithout } = entity;\r\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\r\n    await this.unidade?.loadSearch(this.unidadeId);\r\n    await this.planejamento?.loadSearch(this.planejamentoId);\r\n    await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\r\n    let unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\r\n    this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n    form.controls.objetivos.setValue(entity.objetivos);\r\n    form.controls.processos.setValue(entity.processos);\r\n    if (this.dataFim) form.controls.data_fim.setValue(this.dataFim);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity!.unidade_id = this.auth.unidade!.id;\r\n    this.entity!.unidade = this.auth.unidade;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public async onSaveEntrega() {\r\n    let error: any = undefined;\r\n    let save: boolean = true;\r\n    if(this.formValidation) {\r\n      try {\r\n        error = await this.formValidation(this.form!);\r\n      } catch (e: any) {\r\n        error = e; \r\n      }\r\n    }\r\n    if(this.form!.valid && !error){\r\n      if(this.action == \"edit\") {\r\n        let entity = (await this.saveData(this.form!.value)).modalResult as PlanoEntregaEntrega;\r\n        let planosImpactados: PlanoTrabalho[] = [];\r\n        entity._status = \"EDIT\";\r\n        this.loading = true;\r\n        try {\r\n          planosImpactados = await this.planoEntregaDao.planosImpactadosPorAlteracaoEntrega(entity);\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n        if(planosImpactados.length) {\r\n          let planos = planosImpactados.map(x => this.util.getDateFormatted(x.data_inicio) + \" - \" + this.util.getDateFormatted(x.data_fim) + \" - \" + x.unidade?.sigla + \": \" + x.usuario?.nome + \"\\n\");\r\n          save = await this.dialog.confirm(\"Altera assim mesmo?\", \"Caso prossiga com essa modificação os seguintes planos de trabalho serão repactuados automaticamente:\\n\\n\" + planos + \"\\n\" + \"Deseja prosseguir?\");\r\n        }\r\n    }\r\n      if(save) await this.onSaveData();\r\n    } else {\r\n      this.form!.markAllAsTouched();\r\n      if(error) this.error(error);\r\n    }\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult> {\r\n    return new Promise<NavigateResult>((resolve, reject) => {\r\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\r\n      this.gridObjetivos?.confirm();\r\n      this.gridProcessos?.confirm();\r\n      let { meta, realizado, ...valueWithout } = this.form!.value;\r\n      entrega = this.util.fillForm(entrega, valueWithout);\r\n      entrega.unidade = this.unidade?.selectedEntity;\r\n      entrega.entrega = this.entrega?.selectedEntity;\r\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\r\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\r\n      resolve(new NavigateResult(entrega));\r\n    });\r\n  }\r\n\r\n  public onRealizadoChange(value: any, entrega?: Entrega) {\r\n    this.calculaRealizado();\r\n  }\r\n\r\n  public calculaRealizado() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\r\n    return result;\r\n  }\r\n\r\n  public async addObjetivo() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeObjetivo(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveObjetivo(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\r\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\r\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\r\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async addProcesso() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeProcesso(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveProcesso(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaProcesso;\r\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\r\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\r\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async onEntregaChange(row: any) {\r\n    if (this.entrega && this.entrega.selectedItem) {\r\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\r\n      const tipoIndicador = entregaItem.tipo_indicador;\r\n      /**if(!this.form!.controls.descricao.value.length) {\r\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\r\n      }*/\r\n      switch (tipoIndicador) {\r\n        case 'QUALITATIVO':\r\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\r\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          break;\r\n        case 'VALOR':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'QUANTIDADE':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'PORCENTAGEM':\r\n          this.form?.controls.meta.setValue(100);\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      //if (entregaItem.etiquetas) this.loadEtiquetas();\r\n      this.loadEtiquetas();\r\n      if (entregaItem.checklist) this.loadChecklist();\r\n      this.calculaRealizado();\r\n    }\r\n  }\r\n\r\n  public async loadEtiquetas() {\r\n    if (!this.etiquetasAscendentes.filter(e => e.data == this.unidade?.selectedEntity.id).length) {\r\n      let ascendentes =  await this.carregaEtiquetasUnidadesAscendentes(this.unidade?.selectedEntity);\r\n      this.etiquetasAscendentes.push(...ascendentes);\r\n    }\r\n    this.etiquetas = this.util.merge(this.entrega?.selectedEntity.etiquetas, this.unidade?.selectedEntity.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.etiquetasAscendentes.filter(x => x.data == this.unidade?.selectedEntity.id), (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public async carregaEtiquetasUnidadesAscendentes(unidadeAtual: Unidade) {\r\n    let etiquetasUnidades: LookupItem[] = [];\r\n    let path = unidadeAtual.path.split(\"/\");\r\n    let unidades = await this.unidadeDao.query({ where: [\"id\", \"in\", path] }).asPromise();\r\n    unidades.forEach(un => {\r\n      etiquetasUnidades = this.util.merge(etiquetasUnidades, un.etiquetas, (a, b) => a.key == b.key);\r\n    });\r\n    etiquetasUnidades.forEach(e => e.data = unidadeAtual.id);\r\n    return etiquetasUnidades;\r\n  }\r\n\r\n  public loadChecklist() {\r\n    const modeloEntrega = this.entrega?.selectedEntity as Entrega;\r\n    let checkAdd: Checklist[] = modeloEntrega.checklist.map(a => {\r\n      return {\r\n        id: a.id,\r\n        texto: a.texto,\r\n        checked: false\r\n      } as Checklist;\r\n    });\r\n    this.checklist = checkAdd || [];\r\n    this.form!.controls.checklist.setValue(checkAdd);\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.form!.controls.etiquetas.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.form!.controls.etiqueta.setValue(\"\");\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"descricao\" (submit)=\"onSaveEntrega()\" (cancel)=\"onCancel()\">\r\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\r\n            <div class=\"row\">\r\n                <separator [title]=\"'Informações gerais da ' + lex.translate('entrega')\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-text [size]=\"12\" label=\"Título\" controlName=\"descricao\" [placeholder]=\"'Título da ' + lex.translate('entrega')\" [attr.maxlength]=250 required></input-text>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-textarea [size]=\"12\" [label]=\"'Descrição da ' + lex.translate('entrega')\" controlName=\"descricao_entrega\" [placeholder]=\"'Descreva a ' + lex.translate('entrega')\"></input-textarea>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"12\" [label]=\"'Vínculo com ' + lex.translate('entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\r\n                    </div>\r\n                    <separator [title]=\"'Etapas da ' + lex.translate('entrega')\" collapse [collapsed]=\"true\">\r\n                        <div class=\"row mt-4\">\r\n                            <!--div class=\"col-md-6\"-->\r\n                                <h5>Etapas</h5>\r\n                                <grid [control]=\"form!.controls.checklist\" [form]=\"formChecklist\" [hasAdd]=\"true\" [hasDelete]=\"true\" editable>\r\n                                    <columns>\r\n                                        <!--<column type=\"switch\" title=\"Check\" field=\"checked\"></column>-->\r\n                                        <column type=\"text\" title=\"Texto\" field=\"texto\"></column>\r\n                                        <column type=\"options\"></column>\r\n                                    </columns>\r\n                                </grid>\r\n                            <!--/div-->\r\n                        </div>\r\n                    </separator>\r\n                </separator>\r\n                <separator [title]=\"'Especificações da ' + lex.translate('entrega')\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\r\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250 required></input-text>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Planejamento\"></separator>\r\n                    <div class=\"row\">\r\n                        <input-search #entrega [size]=\"12\" [label]=\"lex.translate('Tipo de Meta')\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma meta do catálogo usando a lupa\" required></input-search>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-textarea [size]=\"12\" label=\"Descrição da meta\" controlName=\"descricao_meta\" placeholder=\"Descreva a meta\"></input-textarea>\r\n                    </div>\r\n                    <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\r\n                        <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                        <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n                        <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\r\n                    </div>\r\n                <separator [title]=\"'Caracterização da ' +  lex.translate('entrega')\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-multiselect label=\"Etiquetas\" controlName=\"etiquetas\" [size]=\"12\" [control]=\"form!.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                            <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" [control]=\"form!.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                        </input-multiselect>\r\n                    </div>\r\n                </separator>\r\n            </div>\r\n        </tab>\r\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\r\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \r\n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\r\n                        <ng-template let-header=\"header\" #titleObjetivo>\r\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #columnObjetivo>\r\n                            <span>{{row.objetivo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivo>\r\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\r\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\r\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\r\n                        <ng-template let-header=\"header\" #titleProcessos>\r\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #processo>\r\n                            <span>{{row.processo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editProcesso>\r\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>","import { Component, Injector, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { EditableFormComponent } from \"src/app/components/editable-form/editable-form.component\";\r\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\r\nimport { IIndexable } from \"src/app/models/base.model\";\r\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\r\nimport { PageFormBase } from \"src/app/modules/base/page-form-base\";\r\nimport { NavigateResult } from \"src/app/services/navigate.service\";\r\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\r\nimport { PlanoEntregaEntregaDaoService } from \"src/app/dao/plano-entrega-entrega-dao.service\";\r\nimport { PlanoEntregaEntrega } from \"src/app/models/plano-entrega-entrega.model\";\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-progresso',\r\n  templateUrl: './plano-entrega-form-progresso.component.html',\r\n  styleUrls: ['./plano-entrega-form-progresso.component.scss']\r\n})\r\nexport class PlanoEntregaFormProgressoComponent extends PageFormBase<PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaEntregaId?: string;\r\n  public planoEntregaEntrega?: PlanoEntregaEntrega | undefined;\r\n  \r\n  constructor(public injector: Injector) {   \r\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"plano_entrega_entrega.entrega\"];\r\n    \r\n    this.form = this.fh.FormBuilder({\r\n      data_progresso: { default: new Date() },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      realizado: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null }, \r\n      usuario_id: {default: null},\r\n      plano_entrega_entrega_id: {default: null},     \r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\")!;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } \r\n\r\n    return result\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntregaProgresso, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntregaEntregaProgresso();\r\n    this.planoEntregaEntrega = this.planoEntregaEntregaId ? (await this.planoEntregaEntregaDao.getById(this.planoEntregaEntregaId, ['entrega']) as PlanoEntregaEntrega) : undefined;\r\n\r\n\r\n    this.entity!.usuario_id = this.auth.usuario!.id;\r\n    this.entity!.plano_entrega_entrega_id = this.planoEntregaEntrega?.id!;\r\n    this.entity!.plano_entrega_entrega = this.planoEntregaEntrega;\r\n    this.entity!.meta = this.planoEntregaEntrega?.meta!;\r\n    this.entity!.realizado = this.planoEntregaEntrega?.realizado!;\r\n    this.entity!.progresso_esperado = this.planoEntregaEntrega?.progresso_esperado!;\r\n    this.entity!.progresso_realizado = this.planoEntregaEntrega?.progresso_realizado!;\r\n    this.entity!.data_inicio = this.planoEntregaEntrega?.data_inicio!;\r\n    this.entity!.data_fim = this.planoEntregaEntrega?.data_fim!;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<PlanoEntregaEntregaProgresso> {\r\n    return new Promise<PlanoEntregaEntregaProgresso>((resolve, reject) => {\r\n      let progresso: PlanoEntregaEntregaProgresso = this.util.fill(new PlanoEntregaEntregaProgresso(), this.entity!);\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n\r\n      progresso = this.util.fillForm(progresso, valueWithout);\r\n      progresso.meta = this.planoEntregaService.getEntregaValor(this.entity!.plano_entrega_entrega?.entrega!, meta);\r\n      progresso.realizado = this.planoEntregaService.getEntregaValor(this.entity!.plano_entrega_entrega?.entrega!, realizado);\r\n      \r\n      resolve(progresso);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntregaEntregaProgresso): string => {\r\n    return \"Editando \" + this.lex.translate(\"Progresso da entrega\") + ': ' + (entity?.entrega?.descricao || \"\");\r\n  }\r\n\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"data_progresso\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n  <div class=\"row\">\r\n    <input-datetime date [size]=\"4\" label=\"Data do progresso\" controlName=\"data_progresso\" required></input-datetime>\r\n    <input-datetime date [size]=\"4\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n    <input-datetime date [size]=\"4\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entity?.plano_entrega_entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entity?.plano_entrega_entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n    <input-number [size]=\"6\" label=\"Progresso Realizado\" controlName=\"progresso_realizado\" sufix=\"%\"></input-number>\r\n  </div>\r\n\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\r\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\r\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n  public maxPE: Number | undefined;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\", 'entregas.reacoes.usuario:id,nome,apelido'];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: new Date()},\r\n      data_fim: { default: new Date() },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      programa_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const programa = this.programa?.selectedEntity as Programa;\r\n    if (!programa) {\r\n      return \"Obrigatório selecionar o programa\";\r\n    } else if (!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if (!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if (inicio > fim) {\r\n      return \"A data do fim não pode ser menor que a data do início!\";\r\n    } else {\r\n      const entregas = this.form!.controls.entregas.value || [];\r\n      for (let entrega of entregas) {\r\n        if (!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\r\n        if (!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntrega();\r\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\r\n    this.entity.unidade = this.auth.unidade;\r\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\r\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\r\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public onDataChange(){ this.sugereNome(); }\r\n\r\n  public async onUnidadeChange(){\r\n   \r\n    const unidadeIdValue = this.form.controls['unidade_id'].value;\r\n    let unidade_id = unidadeIdValue? unidadeIdValue :  this.auth.unidade?.id ;\r\n    if(unidade_id){\r\n      try {\r\n        const permissaoIncluir = await this.planoEntregaDao.permissaoIncluir( unidade_id );\r\n      } catch (error: any) {\r\n        this.error(error);\r\n      }\r\n\r\n    }\r\n    this.sugereNome();\r\n}\r\n\r\n  public sugereNome() {\r\n    //if(this.action == 'new') {\r\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\r\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\r\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\r\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\r\n    //}\r\n  }\r\n\r\n  public somaDia(date: Date, days: number){\r\n    let result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  public onProgramaChange(){\r\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\r\n    const data=this.somaDia(this.entity!.data_inicio,dias);\r\n    if (!this.entity?.data_fim) {\r\n      this.form!.controls.data_fim.setValue(new Date(data));\r\n      this.dataFim?.change.emit();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\r\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\r\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator title=\"Entregas\"></separator>\r\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\" [dataFim]=\"form!.controls.data_fim.value\"></plano-entrega-list-entrega>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega-list',\r\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public buttons: ToolbarButton[] = [];\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      descricao_entrega: { default: \"\" },\r\n      unidade_id: { default: \"\" },\r\n      destinatario: { default: \"\" },\r\n    });\r\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\r\n    this.filter?.controls.unidade_id.setValue(this.idsUnidadesAscendentes[0]);\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let form: any = filter.value;\r\n    let result: any[] = [];\r\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\r\n    if (form.unidade_id?.length) {  // unidade demandante\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao_entrega\", \"like\", \"%\" + form.descricao_entrega.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.destinatario?.length) {\r\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\r\n    (select)=\"onSelect($event)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search [size]=\"4\" label=\"Unidade\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text [size]=\"4\" label=\"Título da entrega\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\r\n                placeholder=\"Título\" [attr.maxlength]=250></input-text>\r\n            <input-text [size]=\"4\" label=\"Descrição da entrega\" controlName=\"descricao_entrega\" [control]=\"filter!.controls.descricao_entrega\"\r\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <!--div class=\"row\">\r\n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search> \r\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\r\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\r\n        </div-->\r\n    </filter>\r\n    <columns>\r\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\r\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\r\n            <ng-template let-row=\"row\" #columnIndicador>\r\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\r\n                    <i class=\"bi bi-list-check\"></i>\r\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\r\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() parent?: PageListBase<PlanoEntrega, PlanoEntregaDaoService>;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntrega | undefined) { super.entity = value; } get entity(): PlanoEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() set dataFim(value: Date | undefined) {\r\n    if(this._dataFim != value) {\r\n      this._dataFim = value;\r\n  }\r\n  } get dataFim(): Date | undefined {\r\n    return this._dataFim;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n  private _dataFim?: Date;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public formEdit: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public etiquetasAscendentes: LookupItem[] = [];\r\n  public checklist?: Checklist[];\r\n  public selectable: boolean = false;\r\n  public unidadeDao: UnidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\", \"reacoes.usuario:id,nome,apelido\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n      etiquetas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n    this.formEdit = this.fh.FormBuilder({\r\n      progresso_realizado: { default: 0 },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: null }\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        data_fim: this.dataFim,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    const btns = [];\r\n    if(this.isDisabled) btns.push(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES));\r\n    if(this.execucao) btns.push({ label: \"Histórico de execução\", icon: \"bi bi-activity\", color: 'btn-outline-info', onClick: this.showProgresso.bind(this) });   \r\n    btns.push({ label: \"Detalhes\", icon: \"bi bi-eye\", color: 'btn-outline-success', onClick: this.showDetalhes.bind(this) });   \r\n    return btns;\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        this.dao!.delete(entrega).then(() => {\r\n          //this.grid!.query!.removeId(entrega.id);\r\n          this.items.splice(index, 1);\r\n          this.cdRef.detectChanges();\r\n          this.dialog.topAlert(\"Registro excluído com sucesso!\", 5000);\r\n        }).catch((error) => {\r\n          this.dialog.alert(\"Erro\", \"Erro ao excluir: \" + (error?.message ? error?.message : error));\r\n        });;\r\n      };\r\n    }\r\n    \r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public async showPlanejamento(objetivo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'objetivos', objetivo_id]}, { modal: true });\r\n  }\r\n\r\n  public async showCadeiaValor(processo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'processos', processo_id]}, {modal: true});  \r\n  }\r\n\r\n  public async showProgresso(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'progresso', entrega.id]}, {\r\n      modal: true, \r\n      modalClose: (modalResult) => { \r\n        this.parent?.refresh(this.entity?.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showDetalhes(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"detalhes\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });    \r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.formEdit.controls.etiqueta.setValue(null);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public async onColumnEtiquetasEdit(row: any) {\r\n    if (!this.etiquetasAscendentes.filter(e => e.data == row.unidade.id).length) {\r\n      let ascendentes =  await this.carregaEtiquetasUnidadesAscendentes(row.unidade);\r\n      this.etiquetasAscendentes.push(...ascendentes);\r\n    }\r\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\r\n    this.formEdit.controls.etiqueta.setValue(null);\r\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.etiquetasAscendentes.filter(x => x.data == row.unidade.id), (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public async carregaEtiquetasUnidadesAscendentes(unidadeAtual: Unidade) {\r\n    let etiquetasUnidades: LookupItem[] = [];\r\n    let path = unidadeAtual.path.split(\"/\");\r\n    let unidades = await this.unidadeDao.query({ where: [\"id\", \"in\", path] }).asPromise();\r\n    unidades.forEach(un => {\r\n      etiquetasUnidades = this.util.merge(etiquetasUnidades, un.etiquetas, (a, b) => a.key == b.key);\r\n    });\r\n    etiquetasUnidades.forEach(e => e.data = unidadeAtual.id);\r\n    return etiquetasUnidades;\r\n  }\r\n\r\n  public async onColumnEtiquetasSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        etiquetas: this.formEdit.controls.etiquetas.value\r\n      });\r\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onEtiquetaConfigClick() {\r\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\r\n      modal: true, modalClose: (modalResult) => {\r\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  public async onColumnChecklistEdit(row: any) {\r\n    this.formEdit.controls.progresso_realizado.setValue(row.progresso_realizado);\r\n    this.checklist = this.util.clone(row.checklist);\r\n  }\r\n\r\n  public async onColumnChecklistSave(row: any) {\r\n    let realizado = Math.round(parseInt(this.planoEntregaService.getValorMeta(row)) * this.formEdit.controls.progresso_realizado.value/100);\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        progresso_realizado: this.formEdit.controls.progresso_realizado.value,\r\n        realizado: this.planoEntregaService.getEntregaValor(row.entrega, realizado),\r\n        checklist: this.checklist\r\n      });\r\n      row.progresso_realizado = this.formEdit.controls.progresso_realizado.value;\r\n      row.checklist = this.checklist;\r\n      if (typeof row.realizado.porcentagem != \"undefined\") {\r\n        row.realizado.porcentagem = realizado;\r\n      } else if (typeof row.realizado.quantitativo != \"undefined\") {\r\n        row.realizado.quantitativo = realizado;\r\n      } else if (typeof row.realizado.valor != \"undefined\") {\r\n        row.realizado.valor = realizado;\r\n      };\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  public getObjetivos(row: any){\r\n    return row.objetivos.filter((x: any) => x._status != 'DELETE');\r\n  }\r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\" [selectable]=\"selectable\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <!--\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n        -->\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <h6>{{row.descricao}}</h6>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n                <reaction [entity]=\"row\" origem=\"PLANO_ENTREGA_ENTREGA\" *ngIf=\"execucao\"></reaction>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnEtiquetas>\r\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\r\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                </input-multiselect>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column title=\"Progresso\\nChecklist\" [width]=\"100\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"200\" [template]=\"columnProgChecklist\" [editTemplate]=\"columnProgChecklist\" [columnEditTemplate]=\"selectable ? undefined : columnChecklistEdit\" [edit]=\"selectable ? undefined : onColumnChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnChecklistSave.bind(this)\" *ngIf=\"execucao\">\r\n            <ng-template let-row=\"row\" #columnProgChecklist>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\" collapse [collapsed]=\"true\">\r\n                    <table *ngIf=\"row.checklist?.length\">\r\n                        <tr *ngFor=\"let check of row.checklist\">\r\n                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\r\n                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </separator>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnChecklistEdit>\r\n                <!--<input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>-->\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"formEdit!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                <table *ngIf=\"row.checklist?.length\">\r\n                    <tr *ngFor=\"let check of checklist; let i = index\">\r\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\r\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                    </tr>\r\n                </table>\r\n            </ng-template>\r\n        </column>\r\n        <!--\r\n        <column [title]=\"'  Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\" [icon]=\"'bi bi-info-circle'\"[hint]=\"'Objetivos do Planejamento Institucional vinculado ao Plano de Entregas e Processos da Cadeia de Valor vinculada ao Plano de Entregas'\" >\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of getObjetivos(row)\" class=\"objetivo d-flex align-items-center\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pObjetivo.objetivo?.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column> -->\r\n        <column [title]=\"lex.translate('Modelo de Entrega') + '\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { Change } from 'src/app/models/change.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-logs',\r\n  templateUrl: './plano-entrega-list-logs.component.html',\r\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\r\n})\r\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\r\n\r\n  public responsaveis: LookupItem[] = [];\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planoId: string = \"\";\r\n  public action: string = \"\";\r\n\r\n  constructor(public injector: Injector, dao: ChangeDaoService) {\r\n    super(injector, Change, ChangeDaoService);\r\n    /* Inicializações */\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.title = \"Logs de Planos de Entregas\";\r\n    this.filter = this.fh.FormBuilder({\r\n      responsavel_id: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      tipo: {default: \"\"}\r\n    });\r\n    this.orderBy = [['id', 'desc']];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\r\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    // this.selectResponsaveis!.loading = true;\r\n    // this.dao?.showResponsaveis().then(responsaveis => {\r\n    //   this.responsaveis = responsaveis || [];\r\n    //   this.selectResponsaveis!.loading = false;\r\n    // });\r\n  }\r\n  \r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.responsavel_id.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(\"\");\r\n    filter.controls.data_fim.setValue(\"\");\r\n    filter.controls.tipo.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\r\n    result.push([\"row_id\", \"==\", this.planoId]);\r\n    if(form.responsavel_id?.length){\r\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\r\n    };\r\n    if(form.data_inicio){\r\n      result.push([\"date_time\", \">=\", form.data_inicio]);\r\n    };\r\n    if(form.data_fim){\r\n      result.push([\"date_time\", \"<=\", form.data_fim]);\r\n    };\r\n    if(form.tipo?.length){\r\n      result.push([\"type\", \"==\", form.tipo]);\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public preparaDelta(row: any): any[] {\r\n    this.action = row.type;\r\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\r\n    novoDelta.forEach((element: any[]) => {\r\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\r\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\r\n    });\r\n    return novoDelta;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\r\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\r\n    <toolbar></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \r\n            [items]=\"responsaveis\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\r\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\r\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\r\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnResponsavel>\r\n                <span> {{row.responsavel}} </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\r\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnDataCriacao>\r\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\r\n            <ng-template #titleDiferenca let-header=\"header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #columnDiferenca let-row=\"row\">\r\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\r\n                    <table>\r\n                        <tbody> \r\n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\r\n                                <td width=\"150\">{{ dif[0] }}</td>\r\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\r\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>                   \r\n                </separator>\r\n            </ng-template>\r\n          </column>\r\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, Input, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { GridComponent } from \"src/app/components/grid/grid.component\";\r\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\r\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\r\nimport { PageListBase } from \"src/app/modules/base/page-list-base\";\r\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\r\nimport { Base } from \"src/app/models/base.model\";\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-progresso',\r\n  templateUrl: './plano-entrega-list-progresso.component.html',\r\n  styleUrls: ['./plano-entrega-list-progresso.component.scss']\r\n})\r\nexport class PlanoEntregaListProgressoComponent extends PageListBase<PlanoEntregaEntregaProgresso,PlanoEntregaEntregaProgressoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n \r\n  public planoEntregaEntregaId: string = \"\";\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Histórico de execução\");\r\n    this.orderBy = [['data_progresso','desc']];\r\n    this.join = ['plano_entrega_entrega.entrega'];\r\n    this.filter = this.fh.FormBuilder({\r\n      data_inicial_progresso: {default: null},\r\n      data_final_progresso: {default: null},\r\n    });\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_PRO_EXCL\");\r\n  }\r\n\r\n  public onGridLoad(rows?: Base[]) {\r\n    (rows as PlanoEntregaEntregaProgresso[])?.forEach(x => x.entrega = x.plano_entrega_entrega?.entrega);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;   \r\n    if(form.data_inicial_progresso) result.push([\"data_progresso\", \">=\", form.data_inicial_progresso]);\r\n    if(form.data_final_progresso) result.push([\"data_progresso\", \"<=\", form.data_final_progresso]);\r\n    result.push([\"plano_entrega_entrega_id\", \"==\", this.planoEntregaEntregaId]);\r\n    return result;\r\n  }\r\n\r\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_INCL')\" [hasEdit]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_EDT')\" [loadList]=\"onGridLoad.bind(this)\">\r\n  <toolbar *ngIf=\"!selectable\"></toolbar>\r\n  <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n    <div class=\"row\">\r\n      <input-datetime [size]=\"3\" noIcon label=\"Data inical do progresso\" controlName=\"data_inicial_progresso\" [control]=\"filter!.controls.data_inicial_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\r\n      <input-datetime [size]=\"3\" noIcon label=\"Data final do progresso\" controlName=\"data_final_progresso\" [control]=\"filter!.controls.data_final_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\r\n    </div>\r\n  </filter>\r\n  <columns>\r\n    <column [title]=\"'Data progresso'\" [template]=\"columnProgressoData\" [editTemplate]=\"columnProgressoData\">\r\n      <ng-template let-row=\"row\" #columnProgressoData>\r\n        <span *ngIf=\"row.data_progresso\"> {{dao!.getDateFormatted(row.data_progresso)}}</span>\r\n      </ng-template>\r\n    </column>\r\n    <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n      <ng-template let-row=\"row\" #columnDatas>\r\n        <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n        <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n      </ng-template>\r\n    </column>\r\n    <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\">\r\n      <ng-template let-row=\"row\" #columnMetaRealizado>\r\n        <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n        <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n      </ng-template>\r\n    </column>\r\n    <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"columnProgresso\" [columnEditTemplate]=\"selectable ? undefined : columnProgresso\">\r\n      <ng-template let-row=\"row\" #columnProgresso>\r\n        <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n    <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n  </columns>\r\n  <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { Avaliacao } from 'src/app/models/avaliacao.model';\r\nimport { AvaliacaoDaoService } from 'src/app/dao/avaliacao-dao.service';\r\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { UnidadeService } from 'src/app/services/unidade.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public showFilter: boolean = true;\r\n  public avaliacao: boolean = false;\r\n  public execucao: boolean = false;\r\n  public linha?: PlanoEntrega;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public avaliacaoDao: AvaliacaoDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public unidadeService: UnidadeService;\r\n  public unidadeSelecionada: Unidade;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public botoes: ToolbarButton[] = [];\r\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\r\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\r\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_AVALIAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_CONCLUIR: ToolbarButton;\r\n  public BOTAO_CONSULTAR: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_EXCLUIR: ToolbarButton;\r\n  public BOTAO_HOMOLOGAR: ToolbarButton;\r\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_LOGS: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    { key: \"VIGENTE\", value: \"Vigente\" },\r\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\r\n    { key: \"INICIAM\", value: \"Iniciam\" },\r\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\r\n  ];\r\n\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.avaliacaoDao = injector.get<AvaliacaoDaoService>(AvaliacaoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.unidadeService = injector.get<UnidadeService>(UnidadeService);\r\n    this.unidadeSelecionada = this.auth.unidade!;\r\n    this.code = \"MOD_PLANE\";\r\n    /* Inicializações */\r\n    this.title = this.lex.translate('Planos de Entregas');\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      principais: { default: false },\r\n      arquivadas: { default: false },\r\n      nome: { default: '' },\r\n      data_filtro: { default: null },\r\n      data_filtro_inicio: { default: new Date() },\r\n      data_filtro_fim: { default: new Date() },\r\n      status: { default: '' },\r\n      unidade_id: { default: null },\r\n      unidades_filhas: { default: false },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      meus_planos: { default: true },\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\r\n      'planejamento:id,nome',\r\n      'programa:id,nome',\r\n      'cadeia_valor:id,nome',\r\n      'unidade:id,sigla,path',\r\n      'entregas.entrega',\r\n      'entregas.objetivos.objetivo',\r\n      'entregas.processos.processo',\r\n      'entregas.unidade',\r\n      'entregas.comentarios.usuario:id,nome,apelido',\r\n      'entregas.reacoes.usuario:id,nome,apelido',\r\n      'unidade.gestor:id',\r\n      'unidade.gestores_substitutos:id',\r\n      'unidade.unidade_pai',\r\n      'avaliacao'\r\n    ];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_PLANO, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\r\n    this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\r\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\r\n  }\r\n\r\n  public storeFilter = (filter?: FormGroup) => {\r\n    const form = filter?.value;\r\n    return {\r\n      meus_planos: form.meus_planos,\r\n      arquivadas: form.arquivadas,\r\n      unidade_id: form.unidade_id,\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.execucao = !!this.queryParams?.execucao;\r\n    this.avaliacao = !!this.queryParams?.avaliacao;\r\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\r\n    this.selectable = this.metadata?.selectable || this.selectable;\r\n    if (this.execucao) {\r\n      this.title = this.title + \" (Execução)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    if (this.avaliacao) {\r\n      this.title = this.title + \" (Avaliação)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.unidades_filhas.setValue(true);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    this.checaBotaoAderirToolbar();\r\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.auth.unidade != this.unidadeSelecionada) {\r\n      this.unidadeSelecionada = this.auth.unidade!;\r\n      this.checaBotaoAderirToolbar();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onGridLoad(rows?: Base[]) {\r\n    const extra = (this.grid?.query || this.query!).extra;\r\n    if (rows && this.execucao) {\r\n      rows.forEach(v => {\r\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\r\n      });\r\n    }\r\n    rows?.forEach(v => {\r\n      let planoEntrega = v as PlanoEntrega;\r\n      if (planoEntrega.avaliacao) planoEntrega.avaliacao.tipo_avaliacao = extra?.tipos_avaliacoes?.find((x: TipoAvaliacao) => x.id == planoEntrega.avaliacao!.tipo_avaliacao_id);\r\n    });\r\n  }\r\n\r\n  public checaBotaoAderirToolbar() {\r\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\r\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition1 = this.unidadeService.isGestorUnidade() || this.unidadeService.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\r\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\r\n    /*  (RI_PENT_1)\r\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\r\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \r\n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\r\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\r\n    */\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\r\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\r\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    filter.controls.meus_planos.setValue(false);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    /*\r\n    (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\r\n    - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\r\n    - se ele for gestor:\r\n      - os ativos das unidades-pai de onde ele é gestor (w2), e \r\n      - os ativos das unidades imediatamente subordinadas (w3);\r\n    */\r\n    if (this.filter?.controls.principais.value) {\r\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\r\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\r\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.unidadeService.isGestorUnidade(x));\r\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\r\n        if (w2?.length) w1[2].push(...w2);\r\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\r\n        result.push([\"or\", w1, w3]);\r\n      } else {\r\n        result.push(w1)\r\n      }\r\n    }\r\n    if (this.filter?.controls.meus_planos.value) {\r\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\r\n      result.push(w1);\r\n    }\r\n    if (form.nome?.length) result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    if (form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if (form.unidade_id) result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    if (form.planejamento_id) result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    if (form.cadeia_valor_id) result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    if (this.isModal) {\r\n      result.push([\"status\", \"==\", \"ATIVO\"]);\r\n    } else if (form.status || this.avaliacao) {\r\n      result.push([\"status\", \"in\", form.status ? [form.status] : ['CONCLUIDO', 'AVALIADO']]);\r\n    }\r\n    if (form.unidades_filhas) result.push([\"unidades_filhas\", \"==\", true]);\r\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados.\r\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.cdRef.detectChanges();\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public onPrincipaisChange(event: Event) {\r\n    if (this.filter!.controls.principais.value) {\r\n      this.filter!.controls.unidade_id.setValue(null);\r\n      this.filter!.controls.meus_planos.setValue(false);\r\n    } else {\r\n      this.filter!.controls.meus_planos.setValue(true);\r\n    }\r\n    this.grid!.reloadFilter();\r\n  }\r\n\r\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\r\n        break;\r\n      case 'ATIVO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\r\n        break;\r\n      case 'SUSPENSO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\r\n        break;\r\n      case 'AVALIADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        break;\r\n      case 'ARQUIVADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\r\n        break;\r\n      case 'CANCELADO':\r\n        break;\r\n    }\r\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.linha = row;\r\n    this.botoes.forEach(botao => {\r\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\r\n    switch (botao) {\r\n      case this.BOTAO_ADERIR_OPTION:\r\n        /*         \r\n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\r\n          - o plano estiver com o status Ativo; e\r\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\r\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\r\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\r\n        */\r\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.unidadeService.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\r\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\r\n          - o Plano de Entregas precisa estar com o status INCLUIDO, HOMOLOGANDO ou ATIVO, e\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\r\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\r\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\r\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\r\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\r\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\r\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\r\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\r\n        */\r\n        let condicao0 = ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega));\r\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n        let condicao2 = this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\r\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\r\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && condicao0 && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_AVALIAR:\r\n        /*\r\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\r\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\r\n              - sugerir arquivamento automático (vide RI_PENT_A); \r\n        */\r\n        let condic1 = this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\r\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\r\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\r\n      case this.BOTAO_CANCELAR_AVALIACAO:\r\n        /*\r\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO, e\r\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\r\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\r\n      case this.BOTAO_CANCELAR_CONCLUSAO:\r\n        /*\r\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\r\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\r\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\r\n      case this.BOTAO_CANCELAR_PLANO:\r\n        /*\r\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n      case this.BOTAO_CONCLUIR:\r\n        /*\r\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\r\n      case this.BOTAO_CONSULTAR:\r\n        /*\r\n          (RN_PENT_V) CONSULTAR\r\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\r\n          - o plano precisa estar arquivado, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_EXCLUIR:\r\n        /*\r\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\r\n      case this.BOTAO_HOMOLOGAR:\r\n        /*\r\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\r\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\r\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\r\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\r\n        */\r\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\r\n        let condition2 = this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\r\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\r\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\r\n      case this.BOTAO_LOGS:\r\n        /*\r\n        \r\n        */\r\n        return this.unidadeService.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\r\n          - o plano precisa estar com o status SUSPENSO, e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, { arquivar: true }), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Arquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'avaliar'] }, {\r\n      modal: true,\r\n      metadata: { planoEntrega: planoEntrega },\r\n      modalClose: (modalResult?: Avaliacao) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id, [\"avaliacao.tipo_avaliacao.notas\"]).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n          /*consolidacao.status = \"AVALIADO\";\r\n          consolidacao.avaliacao_id = modalResult.id;\r\n          consolidacao.avaliacao = modalResult;\r\n          this.refreshConsolidacao(consolidacao);*/\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public async cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    /*this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\r\n      title: \"Cancelar Avaliação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });*/\r\n    this.submitting = true;\r\n    try {\r\n      let response = await this.avaliacaoDao!.cancelarAvaliacao(planoEntrega.avaliacao!.id);\r\n      if (response) {\r\n        (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n          this.checaBotaoAderirToolbar();\r\n        });\r\n        /*consolidacao.status = \"CONCLUIDO\";\r\n        consolidacao.avaliacao_id = null;\r\n        consolidacao.avaliacao = undefined;\r\n        this.refreshConsolidacao(consolidacao);*/\r\n      }\r\n    } catch (error: any) {\r\n      this.error(error.message || error);\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\r\n      title: \"Cancelar Conclusão\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\r\n      title: \"Cancelar Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, { arquivar: true }), novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\r\n      title: \"Cancelar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\r\n      title: \"Concluir Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, { arquivar: false }), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Desarquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\r\n      title: \"Homologar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\r\n      title: \"Liberar para Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\r\n      title: \"Reativar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\r\n      title: \"Retirar de Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\r\n      title: \"Suspender Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public canAdd() {\r\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\r\n    /*\r\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\r\n     */\r\n  }\r\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch *ngIf=\"!avaliacao\" [size]=\"2\" labelPosition=\"left\" label=\"Vinculados\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.translate('Unidades') + ' onde o ' + lex.translate('usuario') + ' é integrante, incluindo unidades superiores sob sua gerência.'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div *ngIf=\"isModal else naoEModal\">\r\n            <div class=\"row\">\r\n                <input-search #unidade [size]=\"6\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n            </div>\r\n        </div>\r\n        <ng-template #naoEModal>\r\n            <div class=\"row\">\r\n                <input-switch [size]=\"1\" label=\"Meus\" controlName=\"meus_planos\" [control]=\"filter!.controls.meus_planos\" labelInfo=\"Planos de entrega das unidade da qual sou integrante (Áreas de trabalho)\"></input-switch>\r\n                <input-text [size]=\"3\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n                <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" [filter]=\"avaliacao ? ['CONCLUIDO', 'AVALIADO'] : undefined\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n                <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-search #planejamento [size]=\"3\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n                <input-search #cadeiaValor [size]=\"3\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n            </div>\r\n        </ng-template>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [parent]=\"this\" [disabled]=\"avaliacao || !botaoAtendeCondicoes(BOTAO_ALTERAR, row)\" [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome || \"\"}}</span><br>\r\n                <badge *ngIf=\"row.programa\" [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value && row.unidade\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Status\\nAvaliação'\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\r\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\r\n                <avaliar-nota-badge *ngIf=\"row.avaliacao\" [align]=\"'left'\" [tipoAvaliacao]=\"row.avaliacao.tipo_avaliacao\" [nota]=\"row.avaliacao.nota\"></avaliar-nota-badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoDao?: PlanejamentoObjetivoDaoService;\r\n  public processoDao?: CadeiaValorProcessoDaoService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n  public objetivo!: PlanejamentoObjetivo;\r\n  public processo!: CadeiaValorProcesso;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.objetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.processoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n    if(this.objetivoId){\r\n      this.objetivoDao?.getById(this.objetivoId, [\"planejamento\"]).then(obj => {\r\n        this.objetivo = obj!\r\n      })\r\n    }\r\n    if(this.processoId){\r\n      this.processoDao?.getById(this.processoId, ['cadeia_valor']).then(processo => {\r\n        this.processo = processo!\r\n      })\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<ng-container *ngIf=\"objetivo\">\r\n    <planejamento-show [planejamento]=\"objetivo.planejamento\" *ngIf=\"objetivo.planejamento\"></planejamento-show>\r\n    <div class=\"objetivos arrow_box w-100\">\r\n        <h5>Objetivo:</h5>\r\n        <h6>{{objetivo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"processo\">\r\n    <div class=\"planejamento arrow_box first-box w-100\" *ngIf=\"processo.cadeia_valor\">\r\n        <h6>Cadeia de valor:</h6>\r\n        <h4>{{processo.cadeia_valor.nome}}</h4>        \r\n    </div>\r\n    <div class=\"procesos arrow_box w-100\">\r\n        <h5>Processo:</h5>\r\n        <h6>{{processo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\"\r\n        [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\"\r\n                [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\"\r\n                [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\"\r\n                [control]=\"filter!.controls.data_inicio\"\r\n                labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\"\r\n                [control]=\"filter!.controls.data_fim\"\r\n                labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                {{row.descricao}}<br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.plano_entrega.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\"\r\n                        [label]=\"row.plano_entrega.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\"\r\n                        [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column [title]=\"'Meta'\" [width]=\"200\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"entregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"entregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\"\r\n                    color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <!--LAYOUT ANTIGO\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    -->\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { AvaliarComponent } from '../../uteis/avaliar/avaliar.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\nimport { PlanoEntregaEntregaDetalhesComponent } from './plano-entrega-entrega-detalhes/plano-entrega-entrega-detalhes.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: ':planoEntregaId/avaliar', component: AvaliarComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Avaliar Plano de Entrega\" } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/detalhes', component: PlanoEntregaEntregaDetalhesComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Detalhes da entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id', component: PlanoEntregaListProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Progressos da entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/new', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/:id/edit', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-valor-meta-input',\r\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\r\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\r\n})\r\nexport class PlanoEntregaValorMetaInputComponent {\r\n  @HostBinding('class') class = 'form-group';\r\n  @Input() entrega?: Entrega;\r\n  @Input() icon: string = \"\";\r\n  @Input() label?: string;\r\n  @Input() labelInfo: string = \"\";\r\n  @Input() disabled?: string;\r\n  @Input() control?: AbstractControl;\r\n  @Input() change?: (value: any, entrega?: Entrega) => void;\r\n  @Input() set size(size: number) {\r\n    if (size != this._size) {\r\n      this._size = size;\r\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\r\n    }\r\n  }\r\n  public get size(): number {\r\n    return this._size || 12;\r\n  }\r\n\r\n  private _size: number = 0;\r\n\r\n  public checkTipoIndicador(tipos: string[]): boolean {\r\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\r\n  }\r\n\r\n  public onValueChange(event: Event) {\r\n    if (this.change) this.change(this.control?.value, this.entrega);\r\n  }\r\n}\r\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\nimport { PlanoEntregaEntregasVinculadasComponent } from './plano-entrega-entregas-vinculadas/plano-entrega-entregas-vinculadas.component';\r\nimport { PlanoEntregaEntregaDetalhesComponent } from './plano-entrega-entrega-detalhes/plano-entrega-entrega-detalhes.component';\r\nimport { OrganizationChartModule } from 'primeng/organizationchart';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent,\r\n    PlanoEntregaListProgressoComponent,\r\n    PlanoEntregaFormProgressoComponent,\r\n    PlanoEntregaEntregasVinculadasComponent,\r\n    PlanoEntregaEntregaDetalhesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    OrganizationChartModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-entrega-atividades',\r\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\r\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\r\n})\r\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\r\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public AtividadeDao: AtividadeDaoService;\r\n  public items: Atividade[] = [];\r\n\r\n  public loader: boolean = false;\r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.join = ['unidade', 'usuario','demandante', 'reacoes.usuario:id,nome,apelido']\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId],[\"unidades_subordinadas\", \"==\", true]], join: this.join}).asPromise().then(response => {\r\n      this.items = response\r\n    }).finally(()=> {\r\n      this.loader = false;\r\n    })\r\n  }\r\n\r\n}\r\n","<h5>{{lex.translate(\"Atividades\")}}:</h5>\r\n<grid [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\r\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \r\n          <b>Descrição</b>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\r\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n        <reaction [entity]=\"row\" origem=\"ATIVIDADE\"></reaction>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\r\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\r\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\r\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnPessoas>\r\n          <div class=\"text-nowrap\">\r\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\r\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n          </div>\r\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\r\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\r\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n\r\n  </columns>\r\n</grid>\r\n"],"names":["DaoBaseService","PlanoEntregaEntregaProgressoDaoService","constructor","injector","inputSearchConfig","searchFields","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoEntregaEntregaProgresso","data","data_inicio","Date","data_fim","data_progresso","homologado","meta","realizado","progresso_esperado","progresso_realizado","plano_entrega_entrega_id","usuario_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","arquivar","status","avaliacoes","unidade_id","avaliacao_id","plano_entrega_id","planejamento_id","cadeia_valor_id","programa_id","PlanoEntregaEntregaDaoService","PageFrameBase","PlanoEntregaService","ɵɵelement","ɵɵproperty","etiqueta_r10","ctx_r5","entityService","getIcon","entrega","unidade","sigla","ctx_r6","destinatario","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ctx_r7","planoEntregaService","getValorMeta","getValorRealizado","ɵɵlistener","PlanoEntregaEntregaDetalhesComponent_div_5_div_24_li_5_div_1_Template_button_click_3_listener","ɵɵrestoreView","_r16","pObjetivo_r12","ɵɵnextContext","$implicit","ctx_r14","ɵɵresetView","showPlanejamento","objetivo","id","ɵɵtextInterpolate","ɵɵtemplate","PlanoEntregaEntregaDetalhesComponent_div_5_div_24_li_5_div_1_Template","PlanoEntregaEntregaDetalhesComponent_div_5_div_24_li_5_Template","ctx_r8","lex","translate","objetivos","PlanoEntregaEntregaDetalhesComponent_div_5_div_25_li_5_div_1_Template_button_click_3_listener","_r23","pProcesso_r19","ctx_r21","showCadeiaValor","processo","PlanoEntregaEntregaDetalhesComponent_div_5_div_25_li_5_div_1_Template","PlanoEntregaEntregaDetalhesComponent_div_5_div_25_li_5_Template","ctx_r9","processos","PlanoEntregaEntregaDetalhesComponent_div_5_badge_2_Template","PlanoEntregaEntregaDetalhesComponent_div_5_badge_15_Template","PlanoEntregaEntregaDetalhesComponent_div_5_badge_18_Template","PlanoEntregaEntregaDetalhesComponent_div_5_div_23_Template","PlanoEntregaEntregaDetalhesComponent_div_5_div_24_Template","PlanoEntregaEntregaDetalhesComponent_div_5_div_25_Template","ctx_r1","etiquetas","descricao","descricao_entrega","ɵɵtextInterpolate2","planoEntregaEntregaDao","getDateFormatted","length","descricao_meta","ctx_r2","ctx_r3","PlanoEntregaEntregaDetalhesComponent","get","ngOnInit","metadata","objetivo_id","_this","_asyncToGenerator","go","navigate","route","modal","processo_id","_this2","ɵɵdirectiveInject","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","PlanoEntregaEntregaDetalhesComponent_Template","rf","ctx","PlanoEntregaEntregaDetalhesComponent_div_5_Template","PlanoEntregaEntregaDetalhesComponent_div_6_Template","PlanoEntregaEntregaDetalhesComponent_div_7_Template","isModal","title","_r0","active","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PlanoTrabalhoService","row_r37","ɵɵtextInterpolate1","ctx_r22","PlanoTrabalhoDao","plano_r16","row_r42","plano_entrega_entrega","plano_entrega","ctx_r43","orgao","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_15_badge_4_Template","ctx_r26","planoTrabalhoService","tipoEntrega","entity","titulo","cor","ctx_r28","totalForcaTrabalho","row_r49","forca_trabalho","row_r51","ctx_r36","lookup","getColor","PLANO_TRABALHO_STATUS","getValue","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_25_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_ng_template_28_Template","ɵɵstyleMap","_r17","_r21","_r19","_r25","_r27","_r29","_r31","_r33","_r35","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_div_3_Template","item_r14","planos_trabalho","row_r55","apelido","ctx_r12","planoAtivo","row_r57","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","items","loader","PlanoTrabalhoEntregaDao","join","groupBy","field","label","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","planos","plano","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_4_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_9_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_11_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_14_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_16_Template","_r3","_r1","_r5","_r7","_r9","_r11","ctx_r4","node_r3","PlanoEntregaEntregasVinculadasComponent_p_organizationChart_0_ng_template_1_badge_2_Template","PlanoEntregaEntregasVinculadasComponent_p_organizationChart_0_ng_template_1_Template_button_click_4_listener","restoredCtx","showDetalhes","PlanoEntregaEntregasVinculadasComponent_p_organizationChart_0_ng_template_1_Template","ctx_r0","entregasVinculadas","PlanoEntregaEntregasVinculadasComponent","hierarquia","inputs","PlanoEntregaEntregasVinculadasComponent_Template","PlanoEntregaEntregasVinculadasComponent_p_organizationChart_0_Template","PlanoEntregaEntregasVinculadasComponent_div_1_Template","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","controls","setValue","formValue","Object","assign","patchValue","util","fillForm","initializeData","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntrega","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","_r2","onRealizadoChange","bind","header_r15","row_r16","_c12","_c11","planejamentoId","planejamentoObjetivoDao","_c16","_c13","_c15","_c14","PlanoEntregaFormEntregaComponent_tab_43_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_43_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_43_ng_template_11_Template","planejamentoDao","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r13","header_r27","row_r28","_c17","cadeiaValorId","cadeiaValorProcessoDao","_c18","_c19","PlanoEntregaFormEntregaComponent_tab_44_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_44_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_44_ng_template_11_Template","formProcessos","addProcesso","removeProcesso","saveProcesso","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","checklist","etiquetasAscendentes","dao","validDateTime","gridObjetivos","filter","_status","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","hasPermissionTo","entregaDao","entrega_pai_id","entrega_id","listaQualitativo","etiqueta","formChecklist","texto","checked","unidadeId","dataFim","onEntregaChange","entityWithout","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","getValor","onSaveEntrega","error","save","valid","action","modalResult","planosImpactados","loading","planosImpactadosPorAlteracaoEntrega","dialog","confirm","markAllAsTouched","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","_this4","generateUuid","_this5","_this6","consolidado","inputObjetivo","selectedItem","_this7","_this8","_this9","inputProcesso","_this10","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","loadEtiquetas","loadChecklist","_this11","ascendentes","carregaEtiquetasUnidadesAscendentes","merge","config","unidadeAtual","_this12","etiquetasUnidades","unidades","un","modeloEntrega","checkAdd","addItemHandleEtiquetas","textHash","validateLookupItem","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_30_listener","PlanoEntregaFormEntregaComponent_div_34_Template","PlanoEntregaFormEntregaComponent_tab_43_Template","PlanoEntregaFormEntregaComponent_tab_44_Template","_c20","_c22","_c21","_c23","PlanoEntregaFormProgressoComponent","planoEntregaEntregaId","urlParams","planoEntregaEntrega","progresso","PlanoEntregaFormProgressoComponent_Query","PlanoEntregaFormProgressoComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormProgressoComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","unidadeIdValue","permissaoIncluir","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_16_span_0_Template","row_r17","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_10_Template","PlanoEntregaListEntregaListComponent_ng_template_13_Template","PlanoEntregaListEntregaListComponent_ng_template_16_Template","PlanoEntregaListEntregaListComponent_ng_template_19_Template","PlanoEntregaListEntregaListComponent_ng_template_22_Template","selectable","filterSubmit","filterCollapseChange","filterCollapsed","_r4","_r6","_r8","_r10","rowsLimit","ChangeDetectorRef","separator_r17","text","ctx_r19","PlanoEntregaListEntregaComponent_ng_template_5_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_5_badge_4_Template","PlanoEntregaListEntregaComponent_ng_template_5_reaction_5_Template","execucao","etiqueta_r27","PlanoEntregaListEntregaComponent_ng_template_8_badge_0_Template","row_r25","PlanoEntregaListEntregaComponent_ng_template_10_Template_input_select_details_1_listener","ctx_r30","onEtiquetaConfigClick","formEdit","ctx_r33","row_r32","ctx_r34","PlanoEntregaListEntregaComponent_ng_template_13_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_13_span_2_Template","ctx_r11","row_r38","ctx_r13","onRealizadaChange","PlanoEntregaListEntregaComponent_column_20_ng_template_1_separator_1_table_1_tr_1_i_2_Template","check_r47","PlanoEntregaListEntregaComponent_column_20_ng_template_1_separator_1_table_1_tr_1_Template","row_r43","PlanoEntregaListEntregaComponent_column_20_ng_template_1_separator_1_table_1_Template","PlanoEntregaListEntregaComponent_column_20_ng_template_1_separator_1_Template","ctx_r54","i_r56","check_r55","PlanoEntregaListEntregaComponent_column_20_ng_template_3_table_2_tr_1_Template","ctx_r53","PlanoEntregaListEntregaComponent_column_20_ng_template_3_separator_1_Template","PlanoEntregaListEntregaComponent_column_20_ng_template_3_table_2_Template","ctx_r42","PlanoEntregaListEntregaComponent_column_20_ng_template_1_Template","PlanoEntregaListEntregaComponent_column_20_ng_template_3_Template","_r39","_r41","onColumnChecklistEdit","onColumnChecklistSave","PlanoEntregaListEntregaComponent_ng_template_22_badge_0_Template","ctx_r16","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","_dataFim","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","isDisabled","add","modalClose","_ref","isNoPersist","message","_x","apply","arguments","btns","showProgresso","edit","index","_ref2","_x2","load","submitting","update","splice","topAlert","catch","alert","parent","refresh","comentarios","onColumnEtiquetasEdit","tipo_atividade","_this13","onColumnEtiquetasSave","_this14","saved","params","_this15","clone","_this16","parseInt","porcentagem","quantitativo","valor","getObjetivos","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_8_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_16_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_column_20_Template","PlanoEntregaListEntregaComponent_ng_template_22_Template","_r12","_r15","ChangeDaoService","Change","responsavel","getDateTimeFormatted","date_time","dif_r20","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","TIPO_LOG_CHANGE","ctx_r10","row_r9","PlanoEntregaListProgressoComponent_ng_template_8_span_0_Template","PlanoEntregaListProgressoComponent_ng_template_11_span_0_Template","PlanoEntregaListProgressoComponent_ng_template_11_span_2_Template","PlanoEntregaListProgressoComponent","data_inicial_progresso","data_final_progresso","onGridLoad","rows","PlanoEntregaListProgressoComponent_Query","PlanoEntregaListProgressoComponent_Template_grid_select_0_listener","PlanoEntregaListProgressoComponent_toolbar_1_Template","PlanoEntregaListProgressoComponent_ng_template_8_Template","PlanoEntregaListProgressoComponent_ng_template_11_Template","PlanoEntregaListProgressoComponent_ng_template_14_Template","PlanoEntregaListProgressoComponent_ng_template_17_Template","AvaliacaoDaoService","UnidadeService","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template_input_switch_change_0_listener","ctx_r24","onPrincipaisChange","ctx_r23","principais","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","onAgruparChange","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template","toolbarButtons","agrupar","avaliacao","data_filtro","DATAS_FILTRO","data_filtro_inicio","data_filtro_fim","meus_planos","PLANO_ENTREGA_STATUS","arquivadas","row_r36","PlanoEntregaListComponent_column_7_ng_template_1_span_0_Template","ctx_r35","botaoAtendeCondicoes","BOTAO_ALTERAR","row_r39","PlanoEntregaListComponent_column_7_ng_template_1_Template","PlanoEntregaListComponent_column_7_ng_template_3_Template","_r32","_r34","header_r40","row_r41","header_r42","ctx_r44","ctx_r45","PlanoEntregaListComponent_ng_template_16_badge_3_Template","PlanoEntregaListComponent_ng_template_16_badge_4_Template","ɵɵstyleProp","row_r48","ctx_r52","cadeia_valor","PlanoEntregaListComponent_ng_template_27_badge_0_Template","PlanoEntregaListComponent_ng_template_27_badge_1_Template","row_r56","tipo_avaliacao","nota","PlanoEntregaListComponent_ng_template_30_badge_2_Template","PlanoEntregaListComponent_ng_template_30_badge_3_Template","PlanoEntregaListComponent_ng_template_30_avaliar_nota_badge_4_Template","data_arquivamento","deleted_at","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","storeFilter","filterValidate","w1","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","unidadeService","isGestorUnidade","w2","unidade_pai","w3","unidades_filhas","avaliacaoDao","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","BOTAO_ADERIR_TOOLBAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","extra","v","expand","tipos_avaliacoes","tipo_avaliacao_id","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botao","isLotacaoUsuario","intersection","start","end","condicao0","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_div_3_Template","PlanoEntregaListComponent_ng_template_4_Template","PlanoEntregaListComponent_column_7_Template","PlanoEntregaListComponent_ng_template_9_Template","PlanoEntregaListComponent_ng_template_11_Template","PlanoEntregaListComponent_ng_template_14_Template","PlanoEntregaListComponent_ng_template_16_Template","PlanoEntregaListComponent_ng_template_19_Template","PlanoEntregaListComponent_ng_template_22_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_27_Template","PlanoEntregaListComponent_ng_template_30_Template","ɵɵelementContainerStart","PlanoEntregaMapaEntregasComponent_ng_container_0_planejamento_show_1_Template","ɵɵelementContainerEnd","PlanoEntregaMapaEntregasComponent_ng_container_1_div_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_3_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_4_Template","ctx_r18","PlanoEntregaMapaEntregasComponent_ng_template_17_span_0_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_2_Template","row_r22","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","entregaService","objetivoDao","processoDao","obj","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_container_0_Template","PlanoEntregaMapaEntregasComponent_ng_container_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_Template","PlanoEntregaMapaEntregasComponent_ng_template_20_Template","RouterModule","AuthGuard","ConfigResolver","AvaliarComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","OrganizationChartModule","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}