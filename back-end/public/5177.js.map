{"version":3,"file":"5177.js","mappings":"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","sources":["./src/app/dao/plano-entrega-entrega-progresso-dao.service.ts","./src/app/models/plano-entrega-entrega-progresso.model.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-progresso/plano-entrega-form-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-progresso/plano-entrega-list-progresso.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { DaoBaseService } from './dao-base.service';\r\nimport { PlanoEntregaEntregaProgresso } from '../models/plano-entrega-entrega-progresso.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaEntregaProgressoDaoService extends DaoBaseService<PlanoEntregaEntregaProgresso> {\r\n\r\n  constructor(protected injector: Injector) { \r\n    super(\"PlanoEntregaEntregaProgresso\", injector);\r\n    this.inputSearchConfig.searchFields = [\"data_progresso\"];\r\n  }\r\n\r\n}\r\n\r\n","\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { HasMetaRealizado, PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport class PlanoEntregaEntregaProgresso extends Base implements HasMetaRealizado  {\r\n  public plano_entrega_entrega?: PlanoEntregaEntrega;\r\n  public entrega?: Entrega;\r\n  public usuario?: Usuario;\r\n\r\n  public data_inicio: Date = new Date();\r\n  public data_fim: Date | null = null;\r\n  public data_progresso: Date | null = null;\r\n  public homologado: boolean = false;\r\n  public meta: EntregaValor = {};\r\n  public realizado: EntregaValor = {};\r\n  public progresso_esperado: number = 100;\r\n  public progresso_realizado: number = 0;\r\n\r\n  public plano_entrega_entrega_id: string = '';\r\n  public usuario_id: string = '';                  \r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\n\r\nexport class PlanoEntrega extends Base implements HasStatus, HasAvaliacao {\r\n  public avaliacao?: Avaliacao;\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelos métodos arquivar/desarquivar/avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n  public avaliacoes: Avaliacao[] = [];\r\n\r\n  public unidade_id: string = '';\r\n  public avaliacao_id: string | null = null;\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\r\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\r\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\r\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\r\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-entregas-plano-trabalho',\r\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\r\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\r\n})\r\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \r\n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\r\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\r\n  public planoTrabalhoService: PlanoTrabalhoService;\r\n\r\n  public PlanosTrabalho!: PlanoTrabalho[];\r\n  public items: Usuario[] = [];\r\n  public loader: boolean = false;\r\n  \r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\r\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\r\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\r\n    this.join = [\"plano_trabalho.usuario\",\"plano_entrega_entrega.plano_entrega.unidade\"];\r\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.cdRef.detectChanges();\r\n    try {\r\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\r\n\r\n        response.forEach((item) => {\r\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\r\n          if (usuario) {\r\n            const usuarioId = usuario.id;\r\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\r\n            if (!usuarioExistente) {\r\n              usuarioExistente = {\r\n                ...usuario,\r\n                planos_trabalho: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              this.items.push(usuarioExistente);\r\n            }\r\n\r\n            const planoTrabalhoId = item.plano_trabalho!.id;\r\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\r\n              (pt) => pt.id === planoTrabalhoId\r\n            );\r\n\r\n            if (!planoTrabalho) {\r\n              planoTrabalho = {\r\n                ...item.plano_trabalho!,\r\n                entregas: [],\r\n                initialization(data) {                  \r\n                },\r\n              };\r\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\r\n            }\r\n            const entrega: PlanoTrabalhoEntrega = {\r\n              ...item,\r\n              initialization(data) {\r\n                \r\n              },\r\n            };\r\n            planoTrabalho.entregas.push(entrega);\r\n          }\r\n        });\r\n\r\n      }).finally(() => {\r\n        this.loader = false;\r\n        this.cdRef.detectChanges();\r\n      })\r\n    } catch  (e){\r\n      console.log(\"Erro\")\r\n    }\r\n  }\r\n\r\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\r\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\r\n    return Math.round(forca * 100) / 100;\r\n  }\r\n\r\n  public planoAtivo(planos: PlanoTrabalho[]): PlanoTrabalho {\r\n    const planoAtivo = planos.find((plano) => plano.status === \"ATIVO\");\r\n    return planoAtivo || {} as PlanoTrabalho;\r\n  }\r\n}\r\n","<h5>Participantes:</h5>\r\n\r\n<grid #accordionUser [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column type=\"expand\"  [expandTemplate]=\"columnExpandeEntregas\" [template]=\"usuarioSectionTitle\" [width]=\"40\">\r\n      \r\n      <ng-template let-row=\"row\" #usuarioSectionTitle>        \r\n      </ng-template>\r\n\r\n      <ng-template let-item=\"row\" #columnExpandeEntregas>\r\n        <h5>Entregas do plano:</h5> \r\n        <hr>\r\n        <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card mb-2\">\r\n          <div class=\"card-body\">\r\n            <grid [items]=\"plano.entregas\">\r\n              <columns>\r\n\r\n                <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\r\n                  <ng-template let-row=\"row\" #columnExpandedAtividades>\r\n                    <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\r\n                  </ng-template>\r\n                </column>\r\n\r\n                <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\r\n                  <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnPlano>\r\n                    <span class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</span>\r\n                  </ng-template>\r\n                </column>\r\n\r\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\r\n                  <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnOrigem>\r\n                      <div class=\"w-100 d-flex justify-content-center\">\r\n                          <div class=\"one-per-line\">\r\n                              <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\r\n                              <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\r\n                              <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\r\n                          </div>\r\n                      </div>\r\n                  </ng-template>\r\n                  \r\n\r\n              </column>\r\n\r\n\r\n                <column [titleTemplate]=\"titleForcaTrabalho\" [title]=\"'% CHD'\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\" [titleHint]=\"'% Carga Horária Disponível'\">\r\n                  <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n                      <div class=\"text-center\">\r\n                          <!--<small><strong>% Força Trab.</strong></small><br>-->\r\n                          <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\r\n                      </div>\r\n                  </ng-template>\r\n                  <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\r\n                </column>\r\n\r\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\r\n                  <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\r\n                  <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\r\n                </column>\r\n\r\n                <column title=\"Status\" [template]=\"columnStatus\">\r\n                  <ng-template let-row=\"row\" #columnStatus>\r\n                      <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, plano.status)\"></badge>\r\n                  </ng-template>\r\n                </column>\r\n\r\n              </columns>\r\n            </grid>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </column>  \r\n\r\n    <column [titleTemplate]=\"titleParticipante\" [template]=\"columnParticipante\">\r\n      <ng-template let-header=\"header\" #titleParticipante>\r\n          <b>Participante</b>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnParticipante>\r\n        <b>{{row.nome}}</b><br>\r\n        <small>{{row.apelido || \"\"}}</small>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [title]=\"'% CHD'\" [titleHint]=\"'% Carga Horária Disponível'\">\r\n      <ng-template let-header=\"header\" #titleForcaTrabalho>\r\n          <!--<b>% Força Trab.</b>-->\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnForcaTrabalho>\r\n        <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) + '%'\"></badge></small>\r\n      </ng-template>\r\n    </column>\r\n  \r\n  </columns>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-form-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1000;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: \"\" },\r\n      data_fim: { default: \"\" },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      unidade_id: { default: this.auth.unidade?.id },\r\n      plano_entrega_id: { default: null },\r\n      programa_id: { default: null },\r\n      status: { default: \"HOMOLOGANDO\" }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\r\n    if(planoEntrega){\r\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\r\n      this.form.controls.nome.setValue(planoEntrega.nome);\r\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\r\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\r\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result; \r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event){\r\n    if(this.form.controls.plano_entrega_id.value){\r\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\r\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\r\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\r\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\r\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\r\n    }\r\n  }\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row mb-4\">\r\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \r\n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\r\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\r\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\r\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \r\n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\r\n            -->\r\n            <separator></separator>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\r\n                </div>\r\n            </separator>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\r\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-entrega',\r\n  templateUrl: './plano-entrega-form-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\r\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\r\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\r\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\r\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\r\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\r\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public planejamentoId?: string;\r\n  public cadeiaValorId?: string;\r\n  public unidadeId?: string;\r\n  public orderBy?: QueryOrderBy[];\r\n  public formObjetivos: FormGroup;\r\n  public formProcessos: FormGroup;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public itensQualitativo: LookupItem[] = [];\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\r\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public checklist: Checklist[] = [];\r\n  public formChecklist: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public dataFim?: Date;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.modalWidth = 700;\r\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      descricao_entrega: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      descricao_meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      plano_entrega_id: { default: \"\" },\r\n      entrega_pai_id: { default: null },\r\n      entrega_id: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null },\r\n      unidade_id: { default: null },\r\n      destinatario: { default: null },\r\n      objetivos: { default: [] },\r\n      processos: { default: [] },\r\n      listaQualitativo: { default: [] },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      objetivo_id: { default: null },\r\n      objetivo: { default: null },\r\n      checklist: {default: []},\r\n      etiquetas: {default: []},\r\n      etiqueta: {default: \"\"},\r\n    }, this.cdRef, this.validate);\r\n    this.formObjetivos = this.fh.FormBuilder({\r\n      planejamento_objetivo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formProcessos = this.fh.FormBuilder({\r\n      cadeia_processo_id: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    this.formChecklist = this.fh.FormBuilder({\r\n      id: {default: \"\"},\r\n      texto: {default: \"\"},\r\n      checked: {default: false}\r\n    }, this.cdRef);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    let unidade: Unidade | null = null;\r\n    this.planoEntrega = this.metadata?.plano_entrega;\r\n    this.planejamentoId = this.metadata?.planejamento_id;\r\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\r\n    this.unidadeId = this.metadata?.unidade_id;\r\n    this.dataFim = this.metadata?.data_fim;\r\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['descricao','destinatario'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) {\r\n        result = \"Obrigatório\";\r\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\r\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\r\n      }\r\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A unidade demandante é obrigatória\";\r\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"A entrega é obrigatória\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\r\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\r\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\r\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\r\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    let inicio = this.form?.controls.data_inicio.value;\r\n    let fim = this.form?.controls.data_fim.value;\r\n    if(this.gridObjetivos?.editing) {\r\n      this.tabs!.active = \"OBJETIVOS\" ;\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if (this.gridProcessos?.editing) {\r\n      this.tabs!.active = \"PROCESSOS\";\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if(!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if(!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if(inicio > fim) {\r\n      return \"A data do fim não pode ser anterior à data do início!\";\r\n    } else if(!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\r\n      return \"Data de inicio menor que a data de inicio \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\r\n    } else if(!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\r\n      return \"Data de fim maior que a data de fim \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.onEntregaChange(form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\r\n    await this.unidade?.loadSearch(this.unidadeId);\r\n    await this.planejamento?.loadSearch(this.planejamentoId);\r\n    await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\r\n    let unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\r\n    this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n    form.controls.objetivos.setValue(entity.objetivos);\r\n    form.controls.processos.setValue(entity.processos);\r\n    form.controls.data_fim.setValue(this.dataFim);\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity!.unidade_id = this.auth.unidade!.id;\r\n    this.entity!.unidade = this.auth.unidade;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult> {\r\n    return new Promise<NavigateResult>((resolve, reject) => {\r\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\r\n      this.gridObjetivos?.confirm();\r\n      this.gridProcessos?.confirm();\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n      entrega = this.util.fillForm(entrega, valueWithout);\r\n      entrega.unidade = this.unidade?.selectedEntity;\r\n      entrega.entrega = this.entrega?.selectedEntity;\r\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\r\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\r\n      resolve(new NavigateResult(entrega));\r\n    });\r\n  }\r\n\r\n  public onRealizadoChange(value: any, entrega?: Entrega) {\r\n    this.calculaRealizado();\r\n  }\r\n\r\n  public calculaRealizado() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\r\n    return result;\r\n  }\r\n\r\n  public async addObjetivo() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeObjetivo(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveObjetivo(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\r\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\r\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\r\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async addProcesso() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeProcesso(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveProcesso(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaEntregaProcesso;\r\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\r\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\r\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async onEntregaChange(row: any) {\r\n    if (this.entrega && this.entrega.selectedItem) {\r\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\r\n      const tipoIndicador = entregaItem.tipo_indicador;\r\n      /**if(!this.form!.controls.descricao.value.length) {\r\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\r\n      }*/\r\n      switch (tipoIndicador) {\r\n        case 'QUALITATIVO':\r\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\r\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\r\n          break;\r\n        case 'VALOR':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'QUANTIDADE':\r\n          this.form?.controls.meta.setValue('');\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        case 'PORCENTAGEM':\r\n          this.form?.controls.meta.setValue(100);\r\n          this.form?.controls.realizado.setValue(0);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      //if (entregaItem.etiquetas) this.loadEtiquetas();\r\n      this.loadEtiquetas();\r\n      if (entregaItem.checklist) this.loadChecklist();\r\n      this.calculaRealizado();\r\n    }\r\n  } \r\n\r\n  public loadEtiquetas() {\r\n    this.etiquetas = this.util.merge(this.entrega?.selectedEntity.etiquetas, this.unidade?.selectedEntity.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public loadChecklist() {\r\n    const modeloEntrega = this.entrega?.selectedEntity as Entrega;\r\n    let checkAdd: Checklist[] = modeloEntrega.checklist.map(a => {\r\n      return {\r\n        id: a.id,\r\n        texto: a.texto,\r\n        checked: false\r\n      } as Checklist;\r\n    });\r\n    this.checklist = checkAdd || [];\r\n    this.form!.controls.checklist.setValue(checkAdd);\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if(this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if(this.util.validateLookupItem(this.form!.controls.etiquetas.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.form!.controls.etiqueta.setValue(\"\");\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"descricao\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\r\n            <div class=\"row\">\r\n                <separator [title]=\"'Informações gerais da ' + lex.translate('entrega')\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-text [size]=\"12\" label=\"Título\" controlName=\"descricao\" [placeholder]=\"'Título da ' + lex.translate('entrega')\" [attr.maxlength]=250 required></input-text>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-textarea [size]=\"12\" [label]=\"'Descrição da ' + lex.translate('entrega')\" controlName=\"descricao_entrega\" [placeholder]=\"'Descreva a ' + lex.translate('entrega')\"></input-textarea>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"12\" [label]=\"'Vínculo com ' + lex.translate('entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\r\n                    </div>\r\n                    <separator [title]=\"'Etapas da ' + lex.translate('entrega')\" collapse [collapsed]=\"true\">\r\n                        <div class=\"row mt-4\">\r\n                            <!--div class=\"col-md-6\"-->\r\n                                <h5>Etapas</h5>\r\n                                <grid [control]=\"form!.controls.checklist\" [form]=\"formChecklist\" [hasAdd]=\"true\" [hasDelete]=\"true\" editable>\r\n                                    <columns>\r\n                                        <!--<column type=\"switch\" title=\"Check\" field=\"checked\"></column>-->\r\n                                        <column type=\"text\" title=\"Texto\" field=\"texto\"></column>\r\n                                        <column type=\"options\"></column>\r\n                                    </columns>\r\n                                </grid>\r\n                            <!--/div-->\r\n                        </div>\r\n                    </separator>\r\n                </separator>\r\n                <separator [title]=\"'Especificações da ' + lex.translate('entrega')\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\r\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250 required></input-text>\r\n                    </div>\r\n                </separator>\r\n                <separator title=\"Planejamento\"></separator>\r\n                    <div class=\"row\">\r\n                        <input-search #entrega [size]=\"12\" [label]=\"lex.translate('Tipo de Meta')\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma meta do catálogo usando a lupa\" required></input-search>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-textarea [size]=\"12\" label=\"Descrição da meta\" controlName=\"descricao_meta\" placeholder=\"Descreva a meta\"></input-textarea>\r\n                    </div>\r\n                    <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\r\n                        <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                        <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n                        <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\r\n                    </div>\r\n                <separator [title]=\"'Caracterização da ' +  lex.translate('entrega')\" collapse [collapsed]=\"false\">\r\n                    <div class=\"row\">\r\n                        <input-multiselect label=\"Etiquetas\" controlName=\"etiquetas\" [size]=\"12\" [control]=\"form!.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                            <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" [control]=\"form!.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                        </input-multiselect>\r\n                    </div>\r\n                </separator>\r\n            </div>\r\n        </tab>\r\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\r\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \r\n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\r\n                        <ng-template let-header=\"header\" #titleObjetivo>\r\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #columnObjetivo>\r\n                            <span>{{row.objetivo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivo>\r\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\r\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\r\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\r\n                <columns>\r\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\r\n                        <ng-template let-header=\"header\" #titleProcessos>\r\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #processo>\r\n                            <span>{{row.processo?.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editProcesso>\r\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>","import { Component, Injector, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { EditableFormComponent } from \"src/app/components/editable-form/editable-form.component\";\r\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\r\nimport { IIndexable } from \"src/app/models/base.model\";\r\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\r\nimport { PageFormBase } from \"src/app/modules/base/page-form-base\";\r\nimport { NavigateResult } from \"src/app/services/navigate.service\";\r\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\r\nimport { PlanoEntregaEntregaDaoService } from \"src/app/dao/plano-entrega-entrega-dao.service\";\r\nimport { PlanoEntregaEntrega } from \"src/app/models/plano-entrega-entrega.model\";\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-progresso',\r\n  templateUrl: './plano-entrega-form-progresso.component.html',\r\n  styleUrls: ['./plano-entrega-form-progresso.component.scss']\r\n})\r\nexport class PlanoEntregaFormProgressoComponent extends PageFormBase<PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaEntregaId?: string;\r\n  public planoEntregaEntrega?: PlanoEntregaEntrega | undefined;\r\n  \r\n  constructor(public injector: Injector) {   \r\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [\"plano_entrega_entrega.entrega\"];\r\n    \r\n    this.form = this.fh.FormBuilder({\r\n      data_progresso: { default: new Date() },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: 100 },\r\n      realizado: { default: null },\r\n      progresso_esperado: { default: 100 },\r\n      progresso_realizado: { default: null }, \r\n      usuario_id: {default: null},\r\n      plano_entrega_entrega_id: {default: null},     \r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\")!;\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\r\n      result = \"Obrigatório\";\r\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } \r\n\r\n    return result\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntregaProgresso, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    let {meta, realizado, ...entityWithout} = entity;\r\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\r\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\r\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntregaEntregaProgresso();\r\n    this.planoEntregaEntrega = this.planoEntregaEntregaId ? (await this.planoEntregaEntregaDao.getById(this.planoEntregaEntregaId, ['entrega']) as PlanoEntregaEntrega) : undefined;\r\n\r\n\r\n    this.entity!.usuario_id = this.auth.usuario!.id;\r\n    this.entity!.plano_entrega_entrega_id = this.planoEntregaEntrega?.id!;\r\n    this.entity!.plano_entrega_entrega = this.planoEntregaEntrega;\r\n    this.entity!.meta = this.planoEntregaEntrega?.meta!;\r\n    this.entity!.realizado = this.planoEntregaEntrega?.realizado!;\r\n    this.entity!.progresso_esperado = this.planoEntregaEntrega?.progresso_esperado!;\r\n    this.entity!.progresso_realizado = this.planoEntregaEntrega?.progresso_realizado!;\r\n    this.entity!.data_inicio = this.planoEntregaEntrega?.data_inicio!;\r\n    this.entity!.data_fim = this.planoEntregaEntrega?.data_fim!;\r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<PlanoEntregaEntregaProgresso> {\r\n    return new Promise<PlanoEntregaEntregaProgresso>((resolve, reject) => {\r\n      let progresso: PlanoEntregaEntregaProgresso = this.util.fill(new PlanoEntregaEntregaProgresso(), this.entity!);\r\n      let {meta, realizado, ...valueWithout} = this.form!.value;\r\n\r\n      progresso = this.util.fillForm(progresso, valueWithout);\r\n      progresso.meta = this.planoEntregaService.getEntregaValor(this.entity!.plano_entrega_entrega?.entrega!, meta);\r\n      progresso.realizado = this.planoEntregaService.getEntregaValor(this.entity!.plano_entrega_entrega?.entrega!, realizado);\r\n      \r\n      resolve(progresso);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntregaEntregaProgresso): string => {\r\n    return \"Editando \" + this.lex.translate(\"Progresso da entrega\") + ': ' + (entity?.entrega?.descricao || \"\");\r\n  }\r\n\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"data_progresso\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n  <div class=\"row\">\r\n    <input-datetime date [size]=\"4\" label=\"Data do progresso\" controlName=\"data_progresso\" required></input-datetime>\r\n    <input-datetime date [size]=\"4\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\r\n    <input-datetime date [size]=\"4\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entity?.plano_entrega_entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entity?.plano_entrega_entrega?.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n    <input-number [size]=\"6\" label=\"Progresso Realizado\" controlName=\"progresso_realizado\" sufix=\"%\"></input-number>\r\n  </div>\r\n\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\r\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\r\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\r\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n  public maxPE: Number | undefined;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\", 'entregas.reacoes.usuario:id,nome,apelido'];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      programa_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    const inicio = this.form?.controls.data_inicio.value;\r\n    const fim = this.form?.controls.data_fim.value;\r\n    const programa = this.programa?.selectedEntity as Programa;\r\n    if (!programa) {\r\n      return \"Obrigatório selecionar o programa\";\r\n    } else if (!this.dao?.validDateTime(inicio)) {\r\n      return \"Data de início inválida\";\r\n    } else if (!this.dao?.validDateTime(fim)) {\r\n      return \"Data de fim inválida\";\r\n    } else if (inicio > fim) {\r\n      return \"A data do fim não pode ser menor que a data do início!\";\r\n    } else {\r\n      const entregas = this.form!.controls.entregas.value || [];\r\n      for (let entrega of entregas) {\r\n        if (!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\r\n        if (!this.auth.hasPermissionTo(\"MOD_PENT_ENTR_EXTRPL\") && entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntrega();\r\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\r\n    this.entity.unidade = this.auth.unidade;\r\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\r\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\r\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public onDataChange(){ this.sugereNome(); }\r\n\r\n  public onUnidadeChange(){ this.sugereNome(); }\r\n\r\n  public sugereNome() {\r\n    if(this.action == 'new') {\r\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\r\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\r\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\r\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\r\n    }\r\n  }\r\n\r\n  public somaDia(date: Date, days: number){\r\n    let result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  public onProgramaChange(){\r\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\r\n    const data=this.somaDia(this.entity!.data_inicio,dias);\r\n    this.form!.controls.data_fim.setValue(new Date(data));\r\n    this.dataFim?.change.emit();\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\r\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\r\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\" (change)=\"onDataChange()\" required></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator title=\"Entregas\"></separator>\r\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\" [dataFim]=\"form!.controls.data_fim.value\"></plano-entrega-list-entrega>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega-list',\r\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public buttons: ToolbarButton[] = [];\r\n  public idsUnidadesAscendentes: string[] = [];\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      descricao_entrega: { default: \"\" },\r\n      unidade_id: { default: \"\" },\r\n      destinatario: { default: \"\" },\r\n    });\r\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\r\n    this.filter?.controls.unidade_id.setValue(this.idsUnidadesAscendentes[0]);\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let form: any = filter.value;\r\n    let result: any[] = [];\r\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\r\n    if (form.unidade_id?.length) {  // unidade demandante\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.descricao?.length) {\r\n      result.push([\"descricao_entrega\", \"like\", \"%\" + form.descricao_entrega.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    if (form.destinatario?.length) {\r\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\r\n    (select)=\"onSelect($event)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search [size]=\"4\" label=\"Unidade\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text [size]=\"4\" label=\"Título da entrega\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\r\n                placeholder=\"Título\" [attr.maxlength]=250></input-text>\r\n            <input-text [size]=\"4\" label=\"Descrição da entrega\" controlName=\"descricao_entrega\" [control]=\"filter!.controls.descricao_entrega\"\r\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n        <!--div class=\"row\">\r\n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search> \r\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\r\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\r\n        </div-->\r\n    </filter>\r\n    <columns>\r\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\r\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\r\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\r\n            <ng-template let-row=\"row\" #columnIndicador>\r\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\r\n                    <i class=\"bi bi-list-check\"></i>\r\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\r\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() parent?: PageListBase<PlanoEntrega, PlanoEntregaDaoService>;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntrega | undefined) { super.entity = value; } get entity(): PlanoEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() set dataFim(value: Date | undefined) {\r\n    if(this._dataFim != value) {\r\n      this._dataFim = value;\r\n  }\r\n  } get dataFim(): Date | undefined {\r\n    return this._dataFim;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n  private _dataFim?: Date;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public formEdit: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public checklist?: Checklist[];\r\n  public selectable: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\", \"reacoes.usuario:id,nome,apelido\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n      etiquetas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n    this.formEdit = this.fh.FormBuilder({\r\n      progresso_realizado: { default: 0 },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: null }\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        data_fim: this.dataFim,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    const btns = [];\r\n    if(this.isDisabled) btns.push(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES));\r\n    if(this.execucao) btns.push({ label: \"Histórico de execução\", icon: \"bi bi-activity\", color: 'btn-outline-info', onClick: this.showProgresso.bind(this) });   \r\n    return btns;\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    //console.log(this.form?.controls.progresso_realizado.value);\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        this.dao!.delete(entrega).then(() => {\r\n          //this.grid!.query!.removeId(entrega.id);\r\n          this.items.splice(index, 1);\r\n          this.cdRef.detectChanges();\r\n          this.dialog.topAlert(\"Registro excluído com sucesso!\", 5000);\r\n        }).catch((error) => {\r\n          this.dialog.alert(\"Erro\", \"Erro ao excluir: \" + (error?.message ? error?.message : error));\r\n        });;\r\n      };\r\n    }\r\n    \r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public async showPlanejamento(objetivo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'objetivos', objetivo_id]}, { modal: true });\r\n  }\r\n\r\n  public async showCadeiaValor(processo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'processos', processo_id]}, {modal: true});\r\n  \r\n  }\r\n  public async showProgresso(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'progresso', entrega.id]}, {\r\n      modal: true, \r\n      modalClose: (modalResult) => { \r\n        this.parent?.refresh(this.entity?.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.formEdit.controls.etiqueta.setValue(null);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public async onColumnEtiquetasEdit(row: any) {\r\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\r\n    this.formEdit.controls.etiqueta.setValue(null);\r\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public async onColumnEtiquetasSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        etiquetas: this.formEdit.controls.etiquetas.value\r\n      });\r\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onEtiquetaConfigClick() {\r\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\r\n      modal: true, modalClose: (modalResult) => {\r\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  public async onColumnChecklistEdit(row: any) {\r\n    this.formEdit.controls.progresso_realizado.setValue(row.progresso_realizado);\r\n    this.checklist = this.util.clone(row.checklist);\r\n  }\r\n\r\n  public async onColumnChecklistSave(row: any) {\r\n    let realizado = Math.round(parseInt(this.planoEntregaService.getValorMeta(row)) * this.formEdit.controls.progresso_realizado.value/100);\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        progresso_realizado: this.formEdit.controls.progresso_realizado.value,\r\n        realizado: this.planoEntregaService.getEntregaValor(row.entrega, realizado),\r\n        checklist: this.checklist\r\n      });\r\n      row.progresso_realizado = this.formEdit.controls.progresso_realizado.value;\r\n      row.checklist = this.checklist;\r\n      if (typeof row.realizado.porcentagem != \"undefined\") {\r\n        row.realizado.porcentagem = realizado;\r\n      } else if (typeof row.realizado.quantitativo != \"undefined\") {\r\n        row.realizado.quantitativo = realizado;\r\n      } else if (typeof row.realizado.valor != \"undefined\") {\r\n        row.realizado.valor = realizado;\r\n      };\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }  \r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\" [selectable]=\"selectable\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <h6>{{row.descricao}}</h6>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n                <reaction [entity]=\"row\" origem=\"PLANO_ENTREGA_ENTREGA\" *ngIf=\"execucao\"></reaction>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnEtiquetas>\r\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\r\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                </input-multiselect>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column title=\"Progresso\\nChecklist\" [width]=\"100\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"200\" [template]=\"columnProgChecklist\" [editTemplate]=\"columnProgChecklist\" [columnEditTemplate]=\"selectable ? undefined : columnChecklistEdit\" [edit]=\"selectable ? undefined : onColumnChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnChecklistSave.bind(this)\" *ngIf=\"execucao\">\r\n            <ng-template let-row=\"row\" #columnProgChecklist>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\" collapse [collapsed]=\"true\">\r\n                    <table *ngIf=\"row.checklist?.length\">\r\n                        <tr *ngFor=\"let check of row.checklist\">\r\n                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\r\n                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </separator>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnChecklistEdit>\r\n                <!--<input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>-->\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"formEdit!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                <table *ngIf=\"row.checklist?.length\">\r\n                    <tr *ngFor=\"let check of checklist; let i = index\">\r\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\r\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                    </tr>\r\n                </table>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'  Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\" [icon]=\"'bi bi-info-circle'\"[hint]=\"'Objetivos do Planejamento Institucional vinculado ao Plano de Entregas e Processos da Cadeia de Valor vinculada ao Plano de Entregas'\" >\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of row.objetivos\" class=\"objetivo d-flex align-items-center\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pObjetivo.objetivo?.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Modelo de Entrega\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { Change } from 'src/app/models/change.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-logs',\r\n  templateUrl: './plano-entrega-list-logs.component.html',\r\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\r\n})\r\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\r\n\r\n  public responsaveis: LookupItem[] = [];\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planoEntrega?: PlanoEntrega;\r\n  public planoId: string = \"\";\r\n  public action: string = \"\";\r\n\r\n  constructor(public injector: Injector, dao: ChangeDaoService) {\r\n    super(injector, Change, ChangeDaoService);\r\n    /* Inicializações */\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.title = \"Logs de Planos de Entregas\";\r\n    this.filter = this.fh.FormBuilder({\r\n      responsavel_id: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"},\r\n      tipo: {default: \"\"}\r\n    });\r\n    this.orderBy = [['id', 'desc']];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\r\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    // this.selectResponsaveis!.loading = true;\r\n    // this.dao?.showResponsaveis().then(responsaveis => {\r\n    //   this.responsaveis = responsaveis || [];\r\n    //   this.selectResponsaveis!.loading = false;\r\n    // });\r\n  }\r\n  \r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.responsavel_id.setValue(\"\");\r\n    filter.controls.data_inicio.setValue(\"\");\r\n    filter.controls.data_fim.setValue(\"\");\r\n    filter.controls.tipo.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\r\n    result.push([\"row_id\", \"==\", this.planoId]);\r\n    if(form.responsavel_id?.length){\r\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\r\n    };\r\n    if(form.data_inicio){\r\n      result.push([\"date_time\", \">=\", form.data_inicio]);\r\n    };\r\n    if(form.data_fim){\r\n      result.push([\"date_time\", \"<=\", form.data_fim]);\r\n    };\r\n    if(form.tipo?.length){\r\n      result.push([\"type\", \"==\", form.tipo]);\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public preparaDelta(row: any): any[] {\r\n    this.action = row.type;\r\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\r\n    novoDelta.forEach((element: any[]) => {\r\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\r\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\r\n    });\r\n    return novoDelta;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\r\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\r\n    <toolbar></toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \r\n            [items]=\"responsaveis\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\r\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\r\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\r\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnResponsavel>\r\n                <span> {{row.responsavel}} </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\r\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\r\n            <ng-template let-row=\"row\" #columnDataCriacao>\r\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\r\n            <ng-template #titleDiferenca let-header=\"header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\r\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #columnDiferenca let-row=\"row\">\r\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\r\n                    <table>\r\n                        <tbody> \r\n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\r\n                                <td width=\"150\">{{ dif[0] }}</td>\r\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\r\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>                   \r\n                </separator>\r\n            </ng-template>\r\n          </column>\r\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, Input, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { GridComponent } from \"src/app/components/grid/grid.component\";\r\nimport { PlanoEntregaEntregaProgressoDaoService } from \"src/app/dao/plano-entrega-entrega-progresso-dao.service\";\r\nimport { PlanoEntregaEntregaProgresso } from \"src/app/models/plano-entrega-entrega-progresso.model\";\r\nimport { PageListBase } from \"src/app/modules/base/page-list-base\";\r\nimport { PlanoEntregaService } from \"../plano-entrega.service\";\r\nimport { Base } from \"src/app/models/base.model\";\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-progresso',\r\n  templateUrl: './plano-entrega-list-progresso.component.html',\r\n  styleUrls: ['./plano-entrega-list-progresso.component.scss']\r\n})\r\nexport class PlanoEntregaListProgressoComponent extends PageListBase<PlanoEntregaEntregaProgresso,PlanoEntregaEntregaProgressoDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n \r\n  public planoEntregaEntregaId: string = \"\";\r\n  public planoEntregaService: PlanoEntregaService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntregaProgresso, PlanoEntregaEntregaProgressoDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.title = this.lex.translate(\"Histórico de execução\");\r\n    this.orderBy = [['data_progresso','desc']];\r\n    this.join = ['plano_entrega_entrega.entrega'];\r\n    this.filter = this.fh.FormBuilder({\r\n      data_inicial_progresso: {default: null},\r\n      data_final_progresso: {default: null},\r\n    });\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_PRO_EXCL\");\r\n  }\r\n\r\n  public onGridLoad(rows?: Base[]) {\r\n    (rows as PlanoEntregaEntregaProgresso[])?.forEach(x => x.entrega = x.plano_entrega_entrega?.entrega);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaEntregaId = this.urlParams!.get(\"entrega_id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;   \r\n    if(form.data_inicial_progresso) result.push([\"data_progresso\", \">=\", form.data_inicial_progresso]);\r\n    if(form.data_final_progresso) result.push([\"data_progresso\", \"<=\", form.data_final_progresso]);\r\n    result.push([\"plano_entrega_entrega_id\", \"==\", this.planoEntregaEntregaId]);\r\n    return result;\r\n  }\r\n\r\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_INCL')\" [hasEdit]=\"auth.hasPermissionTo('MOD_PENT_ENTR_PRO_EDT')\" [loadList]=\"onGridLoad.bind(this)\">\r\n  <toolbar *ngIf=\"!selectable\"></toolbar>\r\n  <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n    <div class=\"row\">\r\n      <input-datetime [size]=\"3\" noIcon label=\"Data inical do progresso\" controlName=\"data_inicial_progresso\" [control]=\"filter!.controls.data_inicial_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\r\n      <input-datetime [size]=\"3\" noIcon label=\"Data final do progresso\" controlName=\"data_final_progresso\" [control]=\"filter!.controls.data_final_progresso\" labelInfo=\"Data que foi registrado o progresso\"></input-datetime>\r\n    </div>\r\n  </filter>\r\n  <columns>\r\n    <column [title]=\"'Data progresso'\" [template]=\"columnProgressoData\" [editTemplate]=\"columnProgressoData\">\r\n      <ng-template let-row=\"row\" #columnProgressoData>\r\n        <span *ngIf=\"row.data_progresso\"> {{dao!.getDateFormatted(row.data_progresso)}}</span>\r\n      </ng-template>\r\n    </column>\r\n    <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n      <ng-template let-row=\"row\" #columnDatas>\r\n        <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n        <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n      </ng-template>\r\n    </column>\r\n    <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\">\r\n      <ng-template let-row=\"row\" #columnMetaRealizado>\r\n        <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n        <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n      </ng-template>\r\n    </column>\r\n    <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\" [editTemplate]=\"columnProgresso\" [columnEditTemplate]=\"selectable ? undefined : columnProgresso\">\r\n      <ng-template let-row=\"row\" #columnProgresso>\r\n        <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n    <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n  </columns>\r\n  <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { FullRoute } from 'src/app/services/navigate.service';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { Avaliacao } from 'src/app/models/avaliacao.model';\r\nimport { AvaliacaoDaoService } from 'src/app/dao/avaliacao-dao.service';\r\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { UnidadeService } from 'src/app/services/unidade.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public showFilter: boolean = true;\r\n  public avaliacao: boolean = false;\r\n  public execucao: boolean = false;\r\n  public linha?: PlanoEntrega;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public avaliacaoDao: AvaliacaoDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public unidadeService: UnidadeService;\r\n  public unidadeSelecionada: Unidade;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public botoes: ToolbarButton[] = [];\r\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\r\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\r\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_AVALIAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\r\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_CONCLUIR: ToolbarButton;\r\n  public BOTAO_CONSULTAR: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_EXCLUIR: ToolbarButton;\r\n  public BOTAO_HOMOLOGAR: ToolbarButton;\r\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_LOGS: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n  public DATAS_FILTRO: LookupItem[] = [\r\n    { key: \"VIGENTE\", value: \"Vigente\" },\r\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\r\n    { key: \"INICIAM\", value: \"Iniciam\" },\r\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\r\n  ];\r\n  \r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.avaliacaoDao = injector.get<AvaliacaoDaoService>(AvaliacaoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.unidadeService = injector.get<UnidadeService>(UnidadeService);\r\n    this.unidadeSelecionada = this.auth.unidade!;\r\n    this.code = \"MOD_PLANE\";\r\n    /* Inicializações */\r\n    this.title = this.lex.translate('Planos de Entregas');\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      principais: { default: false },\r\n      arquivadas: { default: false },\r\n      nome: { default: '' },\r\n      data_filtro: { default: null },\r\n      data_filtro_inicio: { default: new Date() },\r\n      data_filtro_fim: { default: new Date() },\r\n      status: { default: '' },\r\n      unidade_id: { default: null },\r\n      unidades_filhas: { default: false },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      meus_planos: { default: true },\r\n    }, this.cdRef, this.filterValidate);\r\n    this.join = [\r\n      'planejamento:id,nome',\r\n      'programa:id,nome',\r\n      'cadeia_valor:id,nome',\r\n      'unidade:id,sigla,path',\r\n      'entregas.entrega',\r\n      'entregas.objetivos.objetivo',\r\n      'entregas.processos.processo',\r\n      'entregas.unidade',\r\n      'entregas.comentarios.usuario:id,nome,apelido',\r\n      'entregas.reacoes.usuario:id,nome,apelido',\r\n      'unidade.gestor:id',\r\n      'unidade.gestores_substitutos:id',\r\n      'unidade.unidade_pai',\r\n      'avaliacao'\r\n    ];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\r\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_PLANO, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\r\n      this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\r\n      this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\r\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\r\n  }\r\n\r\n  public storeFilter = (filter?: FormGroup) => {\r\n    const form = filter?.value;\r\n    return {\r\n      meus_planos: form.meus_planos,\r\n      arquivadas: form.arquivadas,\r\n      unidade_id: form.unidade_id,\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.execucao = !!this.queryParams?.execucao;\r\n    this.avaliacao = !!this.queryParams?.avaliacao;\r\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\r\n    this.selectable = this.metadata?.selectable || this.selectable;\r\n    if (this.execucao) {\r\n      this.title = this.title + \" (Execução)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    if (this.avaliacao) {\r\n      this.title = this.title + \" (Avaliação)\";\r\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\r\n      this.filter!.controls.unidades_filhas.setValue(true);\r\n      this.filter!.controls.principais.setValue(false);\r\n    }\r\n    this.checaBotaoAderirToolbar();\r\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.auth.unidade != this.unidadeSelecionada) {\r\n      this.unidadeSelecionada = this.auth.unidade!;\r\n      this.checaBotaoAderirToolbar();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public onGridLoad(rows?: Base[]) {\r\n    const extra = (this.grid?.query || this.query!).extra;\r\n    if (rows && this.execucao) {\r\n      rows.forEach(v => {\r\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\r\n      });\r\n    }\r\n    rows?.forEach(v => {\r\n      let planoEntrega = v as PlanoEntrega;\r\n      if(planoEntrega.avaliacao) planoEntrega.avaliacao.tipo_avaliacao = extra?.tipos_avaliacoes?.find((x: TipoAvaliacao) => x.id == planoEntrega.avaliacao!.tipo_avaliacao_id);\r\n    });\r\n  }\r\n\r\n  public checaBotaoAderirToolbar() {\r\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\r\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition1 = this.unidadeService.isGestorUnidade() || this.unidadeService.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\r\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\r\n    /*  (RI_PENT_1)\r\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\r\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \r\n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\r\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\r\n    */\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\r\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\r\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\r\n  }\r\n\r\n  public filterValidate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\r\n      result = \"Maior que fim\";\r\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\r\n      result = \"Menor que início\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.data_filtro.setValue(null);\r\n    filter.controls.data_filtro_inicio.setValue(new Date());\r\n    filter.controls.data_filtro_fim.setValue(new Date());\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    filter.controls.meus_planos.setValue(false);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    /*\r\n        (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\r\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\r\n        - se ele for gestor:\r\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \r\n          - os ativos das unidades imediatamente subordinadas (w3);\r\n    */\r\n    if (this.filter?.controls.principais.value) {\r\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\r\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\r\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.unidadeService.isGestorUnidade(x));\r\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\r\n        if (w2?.length) w1[2].push(...w2);\r\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\r\n        result.push([\"or\", w1, w3]);\r\n      } else {\r\n        result.push(w1)\r\n      }\r\n    }\r\n    if (this.filter?.controls.meus_planos.value) {\r\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\r\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\r\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.unidadeService.isGestorUnidade(x));\r\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\r\n        if (w2?.length) w1[2].push(...w2);\r\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\r\n        result.push([\"or\", w1, w3]);\r\n      } else {\r\n        result.push(w1)\r\n      }\r\n    }\r\n    if (form.nome?.length) result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    if (form.data_filtro) {\r\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\r\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\r\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\r\n    }\r\n    if (form.unidade_id) result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    if (form.planejamento_id) result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    if (form.cadeia_valor_id) result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    if (this.isModal) {\r\n      result.push([\"status\", \"==\", \"ATIVO\"]);\r\n    } else if (form.status || this.avaliacao) {\r\n      result.push([\"status\", \"in\", form.status ? [form.status] : ['CONCLUIDO', 'AVALIADO']]);\r\n    } \r\n    if (form.unidades_filhas) result.push([\"unidades_filhas\", \"==\", true]);\r\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados.\r\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.cdRef.detectChanges();\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public onPrincipaisChange(event: Event) {\r\n    if (!this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);//invertido o default pelo !\r\n    this.grid!.reloadFilter();\r\n  }\r\n\r\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\r\n        break;\r\n      case 'ATIVO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\r\n        break;\r\n      case 'SUSPENSO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\r\n        break;\r\n      case 'AVALIADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\r\n        break;\r\n      case 'ARQUIVADO':\r\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\r\n        break;\r\n      case 'CANCELADO':\r\n        break;\r\n    }\r\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.linha = row;\r\n    this.botoes.forEach(botao => {\r\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\r\n    switch (botao) {\r\n      case this.BOTAO_ADERIR_OPTION:\r\n        /*         \r\n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\r\n          - o plano estiver com o status Ativo; e\r\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\r\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\r\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\r\n        */\r\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.unidadeService.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\r\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\r\n          - o Plano de Entregas precisa estar com o status INCLUIDO, HOMOLOGANDO ou ATIVO, e\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\r\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\r\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\r\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\r\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\r\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\r\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\r\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\r\n        */\r\n        let condicao0 = ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega));\r\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n        let condicao2 = this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\r\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\r\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && condicao0 && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_AVALIAR:\r\n        /*\r\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\r\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\r\n              - sugerir arquivamento automático (vide RI_PENT_A); \r\n        */\r\n        let condic1 = this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\r\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\r\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\r\n      case this.BOTAO_CANCELAR_AVALIACAO:\r\n        /*\r\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO, e\r\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\r\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\r\n      case this.BOTAO_CANCELAR_CONCLUSAO:\r\n        /*\r\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\r\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\r\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\r\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\r\n      case this.BOTAO_CANCELAR_PLANO:\r\n        /*\r\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\r\n      case this.BOTAO_CONCLUIR:\r\n        /*\r\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e\r\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\r\n      case this.BOTAO_CONSULTAR:\r\n        /*\r\n          (RN_PENT_V) CONSULTAR\r\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\r\n        */\r\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\r\n          - o plano precisa estar arquivado, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_EXCLUIR:\r\n        /*\r\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\r\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\r\n        */\r\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\r\n      case this.BOTAO_HOMOLOGAR:\r\n        /*\r\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\r\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\r\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\r\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\r\n        */\r\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\r\n        let condition2 = this.unidadeService.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\r\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\r\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\r\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\r\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\r\n      case this.BOTAO_LOGS:\r\n        /*\r\n        \r\n        */\r\n        return this.unidadeService.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\r\n          - o plano precisa estar com o status SUSPENSO, e\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\r\n        */\r\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO, e:\r\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\r\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\r\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\r\n        */\r\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.unidadeService.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Arquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', planoEntrega.id, 'avaliar']}, {\r\n      modal: true, \r\n      metadata: { planoEntrega: planoEntrega },\r\n      modalClose: (modalResult?: Avaliacao) => {\r\n        if(modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id, [\"avaliacao.tipo_avaliacao.notas\"]).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n          /*consolidacao.status = \"AVALIADO\";\r\n          consolidacao.avaliacao_id = modalResult.id;\r\n          consolidacao.avaliacao = modalResult;\r\n          this.refreshConsolidacao(consolidacao);*/\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public async cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    /*this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\r\n      title: \"Cancelar Avaliação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });*/\r\n    this.submitting = true;\r\n    try {\r\n      let response = await this.avaliacaoDao!.cancelarAvaliacao(planoEntrega.avaliacao!.id);\r\n      if(response) {\r\n        (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n          this.checaBotaoAderirToolbar();\r\n        });\r\n        /*consolidacao.status = \"CONCLUIDO\";\r\n        consolidacao.avaliacao_id = null;\r\n        consolidacao.avaliacao = undefined;\r\n        this.refreshConsolidacao(consolidacao);*/\r\n      }\r\n    } catch (error: any) {\r\n      this.error(error.message || error);\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\r\n      title: \"Cancelar Conclusão\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\r\n      title: \"Cancelar Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\r\n      title: \"Cancelar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\r\n      title: \"Concluir Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: false}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\r\n      title: \"Desarquivar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\r\n      title: \"Homologar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\r\n      title: \"Liberar para Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\r\n      title: \"Reativar Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\r\n      title: \"Retirar de Homologação\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    this.go.navigate(this.routeStatus, {\r\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\r\n      title: \"Suspender Plano de Entregas\",\r\n      modalClose: (modalResult) => {\r\n        if (modalResult) {\r\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\r\n            this.checaBotaoAderirToolbar();\r\n          });\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public canAdd() {\r\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\r\n    /*\r\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\r\n     */\r\n  }\r\n}","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch *ngIf=\"!avaliacao\" [size]=\"2\" labelPosition=\"left\" label=\"Vinculados\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.translate('Unidades') + ' onde o ' + lex.translate('usuario') + ' é integrante, incluindo unidades superiores sob sua gerência.'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div *ngIf=\"isModal else naoEModal\">\r\n            <div class=\"row\">\r\n                <input-search #unidade [size]=\"6\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n            </div>\r\n        </div>\r\n        <ng-template #naoEModal>\r\n            <div class=\"row\">\r\n                <input-switch [size]=\"1\" label=\"Meus\" controlName=\"meus_planos\" [control]=\"filter!.controls.meus_planos\" labelInfo=\"Planos de entrega da unidade da qual faço parte da gestão\"></input-switch>\r\n                <input-text [size]=\"3\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n                <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" [filter]=\"avaliacao ? ['CONCLUIDO', 'AVALIADO'] : undefined\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n                <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input-search #planejamento [size]=\"3\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n                <input-search #cadeiaValor [size]=\"3\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n                <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n            </div>\r\n        </ng-template>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [parent]=\"this\" [disabled]=\"avaliacao || !botaoAtendeCondicoes(BOTAO_ALTERAR, row)\" [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome || \"\"}}</span><br>\r\n                <badge *ngIf=\"row.programa\" [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value && row.unidade\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Status\\nAvaliação'\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\r\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\r\n                <avaliar-nota-badge *ngIf=\"row.avaliacao\" [align]=\"'left'\" [tipoAvaliacao]=\"row.avaliacao.tipo_avaliacao\" [nota]=\"row.avaliacao.nota\"></avaliar-nota-badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoDao?: PlanejamentoObjetivoDaoService;\r\n  public processoDao?: CadeiaValorProcessoDaoService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n  public objetivo!: PlanejamentoObjetivo;\r\n  public processo!: CadeiaValorProcesso;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.objetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.processoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n    if(this.objetivoId){\r\n      this.objetivoDao?.getById(this.objetivoId, [\"planejamento\"]).then(obj => {\r\n        this.objetivo = obj!\r\n      })\r\n    }\r\n    if(this.processoId){\r\n      this.processoDao?.getById(this.processoId, ['cadeia_valor']).then(processo => {\r\n        this.processo = processo!\r\n      })\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<ng-container *ngIf=\"objetivo\">\r\n    <planejamento-show [planejamento]=\"objetivo.planejamento\" *ngIf=\"objetivo.planejamento\"></planejamento-show>\r\n    <div class=\"objetivos arrow_box w-100\">\r\n        <h5>Objetivo:</h5>\r\n        <h6>{{objetivo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"processo\">\r\n    <div class=\"planejamento arrow_box first-box w-100\" *ngIf=\"processo.cadeia_valor\">\r\n        <h6>Cadeia de valor:</h6>\r\n        <h4>{{processo.cadeia_valor.nome}}</h4>        \r\n    </div>\r\n    <div class=\"procesos arrow_box w-100\">\r\n        <h5>Processo:</h5>\r\n        <h6>{{processo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\"\r\n        [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\"\r\n                [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\"\r\n                [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\"\r\n                [control]=\"filter!.controls.data_inicio\"\r\n                labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\"\r\n                [control]=\"filter!.controls.data_fim\"\r\n                labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                {{row.descricao}}<br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.plano_entrega.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\"\r\n                        [label]=\"row.plano_entrega.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\"\r\n                        [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column [title]=\"'Meta'\" [width]=\"200\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"entregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"entregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\"\r\n                    color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <!--LAYOUT ANTIGO\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    -->\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { AvaliarComponent } from '../../uteis/avaliar/avaliar.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: ':planoEntregaId/avaliar', component: AvaliarComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Avaliar Plano de Entrega\" } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id', component: PlanoEntregaListProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Progressos da entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/new', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/progresso/:entrega_id/:id/edit', component: PlanoEntregaFormProgressoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Progresso entrega do Plano de Entregas\", modal: true } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-valor-meta-input',\r\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\r\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\r\n})\r\nexport class PlanoEntregaValorMetaInputComponent {\r\n  @HostBinding('class') class = 'form-group';\r\n  @Input() entrega?: Entrega;\r\n  @Input() icon: string = \"\";\r\n  @Input() label?: string;\r\n  @Input() labelInfo: string = \"\";\r\n  @Input() disabled?: string;\r\n  @Input() control?: AbstractControl;\r\n  @Input() change?: (value: any, entrega?: Entrega) => void;\r\n  @Input() set size(size: number) {\r\n    if (size != this._size) {\r\n      this._size = size;\r\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\r\n    }\r\n  }\r\n  public get size(): number {\r\n    return this._size || 12;\r\n  }\r\n\r\n  private _size: number = 0;\r\n\r\n  public checkTipoIndicador(tipos: string[]): boolean {\r\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\r\n  }\r\n\r\n  public onValueChange(event: Event) {\r\n    if (this.change) this.change(this.control?.value, this.entrega);\r\n  }\r\n}\r\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\r\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\nimport { PlanoEntregaListProgressoComponent } from './plano-entrega-list-progresso/plano-entrega-list-progresso.component';\r\nimport { PlanoEntregaFormProgressoComponent } from './plano-entrega-form-progresso/plano-entrega-form-progresso.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent,\r\n    PlanoEntregaListProgressoComponent,\r\n    PlanoEntregaFormProgressoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\r\nimport { Atividade } from 'src/app/models/atividade.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-trabalho-entrega-atividades',\r\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\r\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\r\n})\r\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\r\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\r\n\r\n  @Input() set entregaId(value: string) {\r\n    if(this._entregaId != value) {\r\n      this._entregaId = value;\r\n    }\r\n  }  \r\n  get entregaId(): string {\r\n    return this._entregaId;\r\n  }\r\n\r\n  private _entregaId!: string;\r\n  public AtividadeDao: AtividadeDaoService;\r\n  public items: Atividade[] = [];\r\n\r\n  public loader: boolean = false;\r\n\r\n  constructor(public injector: Injector){\r\n    super(injector);\r\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\r\n    this.join = ['unidade', 'usuario','demandante', 'reacoes.usuario:id,nome,apelido']\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.loader = true;\r\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId],[\"unidades_subordinadas\", \"==\", true]], join: this.join}).asPromise().then(response => {\r\n      this.items = response\r\n    }).finally(()=> {\r\n      this.loader = false;\r\n    })\r\n  }\r\n\r\n}\r\n","<h5>{{lex.translate(\"Atividades\")}}:</h5>\r\n<grid [items]=\"items\" [loading]=\"loader\">\r\n  <columns>\r\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\r\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \r\n          <b>Descrição</b>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\r\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\r\n        <reaction [entity]=\"row\" origem=\"ATIVIDADE\"></reaction>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\r\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\r\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\r\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\r\n      </ng-template>\r\n      <ng-template let-row=\"row\" #columnPessoas>\r\n          <div class=\"text-nowrap\">\r\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\r\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\r\n          </div>\r\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\r\n      </ng-template>\r\n    </column>\r\n\r\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\r\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\r\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\r\n      </ng-template>\r\n    </column>\r\n\r\n  </columns>\r\n</grid>\r\n"],"names":["DaoBaseService","PlanoEntregaEntregaProgressoDaoService","constructor","injector","inputSearchConfig","searchFields","i0","ɵɵinject","Injector","factory","ɵfac","providedIn","Base","PlanoEntregaEntregaProgresso","data","data_inicio","Date","data_fim","data_progresso","homologado","meta","realizado","progresso_esperado","progresso_realizado","plano_entrega_entrega_id","usuario_id","initialization","PlanoEntrega","entregas","status_historico","nome","metadados","undefined","arquivar","status","avaliacoes","unidade_id","avaliacao_id","plano_entrega_id","planejamento_id","cadeia_valor_id","programa_id","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PageFrameBase","PlanoTrabalhoService","ɵɵelement","ɵɵproperty","row_r37","id","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r22","PlanoTrabalhoDao","getDateFormatted","plano_r16","ɵɵtextInterpolate","row_r42","plano_entrega_entrega","plano_entrega","unidade","sigla","ctx_r43","entityService","getIcon","orgao","ɵɵtemplate","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_4_Template","ctx_r26","planoTrabalhoService","tipoEntrega","entity","titulo","cor","length","ctx_r28","totalForcaTrabalho","row_r49","forca_trabalho","row_r51","descricao","ctx_r36","lookup","getColor","PLANO_TRABALHO_STATUS","getValue","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_25_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_28_Template","ɵɵstyleMap","_r17","_r21","_r19","_r23","_r25","_r27","_r29","_r31","_r33","_r35","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_Template","item_r14","planos_trabalho","row_r55","apelido","ctx_r12","planoAtivo","row_r57","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","items","loader","get","PlanoTrabalhoEntregaDao","join","groupBy","field","label","ngOnInit","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","entrega","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","planos","plano","ɵɵdirectiveInject","selectors","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","rf","ctx","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_11_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_16_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_18_Template","_r3","_r1","_r5","_r7","_r9","_r11","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","lex","translate","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","metadata","controls","setValue","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","isModal","title","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","PlanoEntregaEntrega","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","_r2","ctx_r3","onRealizadoChange","bind","header_r15","row_r16","objetivo","_c12","_c11","ctx_r14","planejamentoId","planejamentoObjetivoDao","_c16","_c13","_c15","_c14","PlanoEntregaFormEntregaComponent_tab_43_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_43_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_43_ng_template_11_Template","ctx_r5","planejamentoDao","objetivos","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r13","header_r27","row_r28","processo","_c17","cadeiaValorId","cadeiaValorProcessoDao","_c18","_c19","PlanoEntregaFormEntregaComponent_tab_44_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_44_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_44_ng_template_11_Template","ctx_r6","processos","formProcessos","addProcesso","removeProcesso","saveProcesso","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","checklist","etiquetas","dao","validDateTime","gridObjetivos","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","hasPermissionTo","entregaDao","planoEntregaEntregaDao","planoEntregaService","descricao_entrega","descricao_meta","entrega_pai_id","entrega_id","destinatario","listaQualitativo","objetivo_id","etiqueta","formChecklist","texto","checked","unidadeId","dataFim","onEntregaChange","entityWithout","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","generateUuid","_status","_this4","dialog","_this5","consolidado","inputObjetivo","selectedItem","_this6","_this7","_this8","inputProcesso","_this9","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","loadEtiquetas","loadChecklist","merge","config","modeloEntrega","checkAdd","addItemHandleEtiquetas","textHash","validateLookupItem","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_30_listener","PlanoEntregaFormEntregaComponent_div_34_Template","PlanoEntregaFormEntregaComponent_tab_43_Template","PlanoEntregaFormEntregaComponent_tab_44_Template","_c20","_c22","_c21","_c23","PlanoEntregaFormProgressoComponent","planoEntregaEntregaId","urlParams","planoEntregaEntrega","progresso","PlanoEntregaFormProgressoComponent_Query","PlanoEntregaFormProgressoComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormProgressoComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_16_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_10_Template","PlanoEntregaListEntregaListComponent_ng_template_13_Template","PlanoEntregaListEntregaListComponent_ng_template_16_Template","PlanoEntregaListEntregaListComponent_ng_template_19_Template","PlanoEntregaListEntregaListComponent_ng_template_22_Template","selectable","filterSubmit","filterCollapseChange","filterCollapsed","_r4","_r6","_r8","_r10","rowsLimit","ChangeDetectorRef","separator_r23","text","row_r24","PlanoEntregaListEntregaComponent_ng_template_5_span_0_Template","row_r27","ctx_r29","PlanoEntregaListEntregaComponent_ng_template_10_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_4_Template","PlanoEntregaListEntregaComponent_ng_template_10_reaction_5_Template","ctx_r7","execucao","etiqueta_r37","PlanoEntregaListEntregaComponent_ng_template_13_badge_0_Template","row_r35","PlanoEntregaListEntregaComponent_ng_template_15_Template_input_select_details_1_listener","ɵɵrestoreView","_r41","ctx_r40","ɵɵnextContext","ɵɵresetView","onEtiquetaConfigClick","ctx_r11","formEdit","ctx_r44","PlanoEntregaListEntregaComponent_ng_template_18_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_18_span_2_Template","ctx_r15","row_r47","row_r48","ctx_r17","onRealizadaChange","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_table_1_tr_1_i_2_Template","check_r57","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_table_1_tr_1_Template","row_r53","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_table_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_1_separator_1_Template","ctx_r64","i_r66","check_r65","PlanoEntregaListEntregaComponent_column_25_ng_template_3_table_2_tr_1_Template","ctx_r63","PlanoEntregaListEntregaComponent_column_25_ng_template_3_separator_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_3_table_2_Template","ctx_r52","row_r61","PlanoEntregaListEntregaComponent_column_25_ng_template_1_Template","PlanoEntregaListEntregaComponent_column_25_ng_template_3_Template","_r49","ctx_r18","_r51","onColumnChecklistEdit","onColumnChecklistSave","PlanoEntregaListEntregaComponent_ng_template_27_separator_0_div_1_Template_button_click_1_listener","restoredCtx","_r73","pObjetivo_r71","$implicit","ctx_r72","showPlanejamento","PlanoEntregaListEntregaComponent_ng_template_27_separator_0_div_1_Template","ctx_r68","row_r67","PlanoEntregaListEntregaComponent_ng_template_27_separator_1_div_1_Template_button_click_1_listener","_r78","pProcesso_r76","ctx_r77","showCadeiaValor","PlanoEntregaListEntregaComponent_ng_template_27_separator_1_div_1_Template","ctx_r69","PlanoEntregaListEntregaComponent_ng_template_27_separator_0_Template","PlanoEntregaListEntregaComponent_ng_template_27_separator_1_Template","row_r80","PlanoEntregaListEntregaComponent_ng_template_30_badge_0_Template","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","_dataFim","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","isDisabled","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","btns","showProgresso","edit","index","_ref2","_x2","load","markAllAsTouched","valid","submitting","update","splice","topAlert","catch","alert","processo_id","_this10","parent","refresh","comentarios","onColumnEtiquetasEdit","_this11","tipo_atividade","onColumnEtiquetasSave","_this12","saved","params","_this13","clone","_this14","parseInt","porcentagem","quantitativo","valor","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_15_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_21_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","PlanoEntregaListEntregaComponent_column_25_Template","PlanoEntregaListEntregaComponent_ng_template_27_Template","PlanoEntregaListEntregaComponent_ng_template_30_Template","_r0","_r12","_r14","_r16","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","TIPO_LOG_CHANGE","ctx_r10","row_r9","PlanoEntregaListProgressoComponent_ng_template_8_span_0_Template","ctx_r13","PlanoEntregaListProgressoComponent_ng_template_11_span_0_Template","PlanoEntregaListProgressoComponent_ng_template_11_span_2_Template","PlanoEntregaListProgressoComponent","data_inicial_progresso","data_final_progresso","onGridLoad","rows","PlanoEntregaListProgressoComponent_Query","PlanoEntregaListProgressoComponent_Template_grid_select_0_listener","PlanoEntregaListProgressoComponent_toolbar_1_Template","PlanoEntregaListProgressoComponent_ng_template_8_Template","PlanoEntregaListProgressoComponent_ng_template_11_Template","PlanoEntregaListProgressoComponent_ng_template_14_Template","PlanoEntregaListProgressoComponent_ng_template_17_Template","AvaliacaoDaoService","UnidadeService","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template_input_switch_change_0_listener","ctx_r24","onPrincipaisChange","ctx_r23","principais","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","onAgruparChange","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template","toolbarButtons","agrupar","avaliacao","data_filtro","DATAS_FILTRO","data_filtro_inicio","data_filtro_fim","meus_planos","PLANO_ENTREGA_STATUS","arquivadas","row_r36","PlanoEntregaListComponent_column_7_ng_template_1_span_0_Template","ctx_r35","botaoAtendeCondicoes","BOTAO_ALTERAR","row_r39","PlanoEntregaListComponent_column_7_ng_template_1_Template","PlanoEntregaListComponent_column_7_ng_template_3_Template","ctx_r4","_r32","_r34","header_r40","row_r41","header_r42","row_r43","ctx_r45","PlanoEntregaListComponent_ng_template_16_badge_3_Template","PlanoEntregaListComponent_ng_template_16_badge_4_Template","ɵɵstyleProp","ctx_r16","ctx_r53","cadeia_valor","PlanoEntregaListComponent_ng_template_27_badge_0_Template","PlanoEntregaListComponent_ng_template_27_badge_1_Template","row_r56","tipo_avaliacao","nota","PlanoEntregaListComponent_ng_template_30_badge_2_Template","PlanoEntregaListComponent_ng_template_30_badge_3_Template","PlanoEntregaListComponent_ng_template_30_avaliar_nota_badge_4_Template","data_arquivamento","deleted_at","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","storeFilter","filterValidate","w1","unidades","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","unidadeService","isGestorUnidade","w2","unidade_pai","w3","unidades_filhas","avaliacaoDao","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","BOTAO_ADERIR_TOOLBAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","extra","v","expand","tipos_avaliacoes","tipo_avaliacao_id","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botao","isLotacaoUsuario","intersection","start","end","condicao0","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_div_3_Template","PlanoEntregaListComponent_ng_template_4_Template","PlanoEntregaListComponent_column_7_Template","PlanoEntregaListComponent_ng_template_9_Template","PlanoEntregaListComponent_ng_template_11_Template","PlanoEntregaListComponent_ng_template_14_Template","PlanoEntregaListComponent_ng_template_16_Template","PlanoEntregaListComponent_ng_template_19_Template","PlanoEntregaListComponent_ng_template_22_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_27_Template","PlanoEntregaListComponent_ng_template_30_Template","_r15","ɵɵelementContainerStart","PlanoEntregaMapaEntregasComponent_ng_container_0_planejamento_show_1_Template","ɵɵelementContainerEnd","PlanoEntregaMapaEntregasComponent_ng_container_1_div_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_3_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_4_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_0_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_2_Template","row_r22","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","entregaService","objetivoDao","processoDao","obj","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_container_0_Template","PlanoEntregaMapaEntregasComponent_ng_container_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_Template","PlanoEntregaMapaEntregasComponent_ng_template_20_Template","RouterModule","AuthGuard","ConfigResolver","AvaliarComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoEntregaRoutingModule","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}