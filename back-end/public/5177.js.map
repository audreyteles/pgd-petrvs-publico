{"version":3,"file":"5177.js","mappings":"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","sources":["./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-logs/plano-entrega-list-logs.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.ts","./src/app/modules/gestao/plano-entrega/plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component.html"],"sourcesContent":["import { StatusDockerConfig } from '../modules/gestao/atividade/atividade-list-kanban/atividade-list-kanban.component';\r\nimport { Avaliacao, HasAvaliacao } from './avaliacao.model';\r\nimport { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { HasStatus, StatusJustificativa } from './status-justificativa.model';\r\nimport { Unidade } from './unidade.model';\r\nimport { Usuario } from './usuario.model';\r\n\r\nexport type PlanoEntregaStatus = 'INCLUIDO' | 'HOMOLOGANDO' | 'ATIVO' | 'CONCLUIDO' | 'AVALIADO' | 'SUSPENSO' | 'CANCELADO';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluido: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\n\r\nexport class PlanoEntrega extends Base implements HasStatus, HasAvaliacao {\r\n  public avaliacao?: Avaliacao;\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega?: PlanoEntrega;                              // Plano de Entrega ao qual aderiu\r\n  public criacao_usuario?: Usuario;                                 // Usuário que criou o plano de entregas\r\n  public cancelamento_usuario?: Usuario;                            // Usuário que cancelou o plano de entregas\r\n  public entregas: PlanoEntregaEntrega[] = [];                      // Entregas que compõem o plano de entregas\r\n  public status_historico: StatusJustificativa[] = [];              // Mudanças de status sofridas pelo plano de entregas (histórico)\r\n\r\n  public data_inicio: Date = new Date();                            // Data inicial do plano de entrega\r\n  public data_fim: Date | null = null;                              // Data final do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public data_arquivamento?: Date | null;\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public arquivar: boolean = false;                                 // Campo virtual utilizado pelos métodos arquivar/desarquivar/avaliar\r\n  public status: PlanoEntregaStatus = \"INCLUIDO\";                   // Status atual do plano de entregas\r\n  public avaliacoes: Avaliacao[] = [];\r\n\r\n  public unidade_id: string = '';\r\n  public avaliacao_id: string | null = null;\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n    \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PlanoTrabalhoService } from '../../plano-trabalho/plano-trabalho.service';\nimport { AccordionComponent } from 'src/app/components/accordion/accordion.component';\n\n@Component({\n  selector: 'plano-entrega-entregas-plano-trabalho',\n  templateUrl: './plano-entrega-entregas-plano-trabalho.component.html',\n  styleUrls: ['./plano-entrega-entregas-plano-trabalho.component.scss']\n})\nexport class PlanoEntregaEntregasPlanoTrabalhoComponent extends PageFrameBase {  \n  @ViewChild('accordionUser', { static: false }) public accordionUser?: AccordionComponent;\n\n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  private _entregaId!: string;\n  public PlanoTrabalhoDao: PlanoTrabalhoDaoService;\n  public PlanoTrabalhoEntregaDao: PlanoTrabalhoEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n\n  public PlanosTrabalho!: PlanoTrabalho[];\n  public items: Usuario[] = [];\n  public loader: boolean = false;\n  \n\n  constructor(public injector: Injector){\n    super(injector);\n    this.PlanoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.PlanoTrabalhoEntregaDao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.join = [\"plano_trabalho.usuario\",\"plano_entrega_entrega.plano_entrega.unidade\"];\n    this.groupBy = [{ field: \"plano_trabalho.usuario\", label: \"Usuário\"}];\n  }\n\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public loadData() {\n    this.loader = true;\n    this.cdRef.detectChanges();\n    try {\n      this.PlanoTrabalhoEntregaDao.query({where: [[\"plano_entrega_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\n\n        response.forEach((item) => {\n          const usuario: Usuario = item.plano_trabalho!.usuario!;\n          if (usuario) {\n            const usuarioId = usuario.id;\n            let usuarioExistente = this.items.find((u) => u.id === usuarioId);\n            if (!usuarioExistente) {\n              usuarioExistente = {\n                ...usuario,\n                planos_trabalho: [],\n                initialization(data) {                  \n                },\n              };\n              this.items.push(usuarioExistente);\n            }\n\n            const planoTrabalhoId = item.plano_trabalho!.id;\n            let planoTrabalho = usuarioExistente.planos_trabalho!.find(\n              (pt) => pt.id === planoTrabalhoId\n            );\n\n            if (!planoTrabalho) {\n              planoTrabalho = {\n                ...item.plano_trabalho!,\n                entregas: [],\n                initialization(data) {                  \n                },\n              };\n              usuarioExistente.planos_trabalho!.push(planoTrabalho);\n            }\n            const entrega: PlanoTrabalhoEntrega = {\n              ...item,\n              initialization(data) {\n                \n              },\n            };\n            planoTrabalho.entregas.push(entrega);\n          }\n        });\n\n      }).finally(() => {\n        this.loader = false;\n        this.cdRef.detectChanges();\n      })\n    } catch  (e){\n      console.log(\"Erro\")\n    }\n  }\n\n  public totalForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\n    const forca = entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\n    return Math.round(forca * 100) / 100;\n  }\n\n  public planoAtivo(planos: PlanoTrabalho[]): PlanoTrabalho {\n    const planoAtivo = planos.find((plano) => plano.status === \"ATIVO\");\n    return planoAtivo || {} as PlanoTrabalho;\n  }\n\n\n}\n","<h5>Participantes:</h5>\n\n<grid #accordionUser [items]=\"items\" [loading]=\"loader\">\n  <columns>\n    <column type=\"expand\"  [expandTemplate]=\"columnExpandeEntregas\" [template]=\"usuarioSectionTitle\" [width]=\"40\">\n      \n      <ng-template let-row=\"row\" #usuarioSectionTitle>        \n      </ng-template>\n\n      <ng-template let-item=\"row\" #columnExpandeEntregas>\n        <h5>Entregas do plano:</h5> \n        <hr>\n        <div *ngFor=\"let plano of item.planos_trabalho\" class=\"card mb-2\">\n          <div class=\"card-body\">\n            <grid [items]=\"plano.entregas\">\n              <columns>\n\n                <column type=\"expand\"  [expandTemplate]=\"columnExpandedAtividades\" [style]=\"'vertical-align:middle'\">\n                  <ng-template let-row=\"row\" #columnExpandedAtividades>\n                    <plano-trabalho-entrega-atividades [entregaId]=\"row.id\"></plano-trabalho-entrega-atividades>\n                  </ng-template>\n                </column>\n\n                <column  [template]=\"columnPlano\" [titleTemplate]=\"titlePlano\" >\n                  <ng-template let-header=\"header\" #titlePlano><div class=\"text-center\"><span><strong>Plano de trabalho</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnPlano>\n                    <span class=\"d-block text-center\">{{PlanoTrabalhoDao!.getDateFormatted(plano.data_inicio)}} <br>{{ \" até \"+PlanoTrabalhoDao!.getDateFormatted(plano.data_fim)}}</span>\n                  </ng-template>\n                </column>\n\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [verticalAlign]=\"'middle'\" [width]=\"300\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnOrigem>\n                      <div class=\"w-100 d-flex justify-content-center\">\n                          <div class=\"one-per-line\">\n                              <badge [label]=\"planoTrabalhoService.tipoEntrega(row, entity).titulo\" [color]=\"planoTrabalhoService.tipoEntrega(row, entity).cor\"></badge>\n                              <badge *ngIf=\"row.plano_entrega_entrega_id?.length\" [label]=\"row.plano_entrega_entrega?.plano_entrega?.unidade?.sigla || 'Desconhecido'\" [icon]=\"entityService.getIcon('Unidade')\" color=\"primary\"></badge>\n                              <badge *ngIf=\"row.orgao?.length\" [label]=\"row.orgao\" icon=\"bi bi-box-arrow-down-left\" color=\"warning\"></badge>\n                          </div>\n                      </div>\n                  </ng-template>\n                  \n\n              </column>\n\n\n                <column [titleTemplate]=\"titleForcaTrabalho\" [title]=\"'% CHD'\" [template]=\"columnForcaTrabalho\" [width]=\"125\" [align]=\"'center'\" [titleHint]=\"'% Carga Horária Disponível'\">\n                  <ng-template let-header=\"header\" #titleForcaTrabalho>\n                      <div class=\"text-center\">\n                          <!--<small><strong>% Força Trab.</strong></small><br>-->\n                          <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(plano.entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(plano.entregas) + '%'\"></badge></small>\n                      </div>\n                  </ng-template>\n                  <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\n                </column>\n\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [verticalAlign]=\"'middle'\" [align]=\"'center'\">\n                  <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento/Descrição dos Trabalhos</strong></span></div></ng-template>\n                  <ng-template let-row=\"row\" #columnDescricao><small class=\"text-center\">{{ row.descricao }}</small></ng-template>\n                </column>\n\n                <column title=\"Status\" [template]=\"columnStatus\">\n                  <ng-template let-row=\"row\" #columnStatus>\n                      <badge [color]=\"lookup.getColor(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_TRABALHO_STATUS, plano.status)\" [label]=\"lookup.getValue(lookup.PLANO_TRABALHO_STATUS, plano.status)\"></badge>\n                  </ng-template>\n                </column>\n\n              </columns>\n            </grid>\n          </div>\n        </div>\n      </ng-template>\n    </column>  \n\n    <column [titleTemplate]=\"titleParticipante\" [template]=\"columnParticipante\">\n      <ng-template let-header=\"header\" #titleParticipante>\n          <b>Participante</b>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnParticipante>\n        <b>{{row.nome}}</b><br>\n        <small>{{row.apelido || \"\"}}</small>\n      </ng-template>\n    </column>\n\n    <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [title]=\"'% CHD'\" [titleHint]=\"'% Carga Horária Disponível'\">\n      <ng-template let-header=\"header\" #titleForcaTrabalho>\n          <!--<b>% Força Trab.</b>-->\n      </ng-template>\n      <ng-template let-row=\"row\" #columnForcaTrabalho>\n        <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho(planoAtivo(row.planos_trabalho).entregas) + '%'\"></badge></small>\n      </ng-template>\n    </column>\n  \n  </columns>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n@Component({\n  selector: 'plano-entrega-adesao',\n  templateUrl: './plano-entrega-form-adesao.component.html',\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\n})\n\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [];\n    this.modalWidth = 1000;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: \"\" },\n      data_fim: { default: \"\" },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      unidade_id: { default: this.auth.unidade?.id },\n      plano_entrega_id: { default: null },\n      programa_id: { default: null },\n      status: { default: \"HOMOLOGANDO\" }\n    }, this.cdRef, this.validate);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\n    if(planoEntrega){\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\n      this.form.controls.nome.setValue(planoEntrega.nome);\n      this.form.controls.data_inicio.setValue(planoEntrega.data_inicio);\n      this.form.controls.data_fim.setValue(planoEntrega.data_fim);\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\n    }\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result; \n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public onPlanoEntregaChange(event: Event){\n    if(this.form.controls.plano_entrega_id.value){\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedEntity.nome);\n      this.form.controls.data_inicio.setValue(this.planoEntrega?.selectedEntity.data_inicio);\n      this.form.controls.data_fim.setValue(this.planoEntrega?.selectedEntity.data_fim);\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedEntity.planejamento_id);\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedEntity.cadeia_valor_id);\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedEntity.programa_id);\n    }\n  }\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"plano_entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row mb-4\">\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_pai_id, status: 'ATIVO'}}}\"\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_pai_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\" required></input-search>\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\n            -->\n            <separator></separator>\n        </div>\n        <div class=\"row\">\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n        </div>\n        <div class=\"row\">\n            <input-search disabled [size]=\"9\" [label]=\"lex.translate('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row mt-4\">\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\n                <div class=\"row\">\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n                <div class=\"row\">\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\n                    <input-datetime disabled [size]=\"3\" controlName=\"data_fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entrega')\"></input-datetime>\n                </div>\n            </separator>\n        </div>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\nimport { NavigateResult } from 'src/app/services/navigate.service';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\nimport { PlanoEntregaEntregaObjetivo } from 'src/app/models/plano-entrega-entrega-objetivo.model';\nimport { PlanoEntregaEntregaProcesso } from 'src/app/models/plano-entrega-entrega-processo.model';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { QueryOrderBy } from 'src/app/dao/dao-base.service';\nimport { Checklist } from 'src/app/models/atividade.model';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\n\n@Component({\n  selector: 'plano-entrega-form-entrega',\n  templateUrl: './plano-entrega-form-entrega.component.html',\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\n})\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\n\n  public planoEntrega?: PlanoEntrega;\n  public planejamentoDao: PlanejamentoDaoService;\n  public planejamentoId?: string;\n  public cadeiaValorId?: string;\n  public unidadeId?: string;\n  public orderBy?: QueryOrderBy[];\n  public formObjetivos: FormGroup;\n  public formProcessos: FormGroup;\n  public unidadeDao: UnidadeDaoService;\n  public entregaDao: EntregaDaoService;\n  public itensQualitativo: LookupItem[] = [];\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public idsUnidadesAscendentes: string[] = [];\n  public checklist: Checklist[] = [];\n  public formChecklist: FormGroup;\n  public etiquetas: LookupItem[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.modalWidth = 700;\n    this.join = [\"entrega\", \"objetivos.objetivo\", \"processos.processo\"];\n    this.form = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      meta: { default: 100 },\n      realizado: { default: null },\n      plano_entrega_id: { default: \"\" },\n      entrega_pai_id: { default: null },\n      entrega_id: { default: null },\n      progresso_esperado: { default: 100 },\n      progresso_realizado: { default: null },\n      unidade_id: { default: null },\n      destinatario: { default: null },\n      objetivos: { default: [] },\n      processos: { default: [] },\n      listaQualitativo: { default: [] },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      objetivo_id: { default: null },\n      objetivo: { default: null },\n      checklist: {default: []},\n      etiquetas: {default: []},\n      etiqueta: {default: \"\"},\n    }, this.cdRef, this.validate);\n    this.formObjetivos = this.fh.FormBuilder({\n      planejamento_objetivo_id: { default: null },\n    }, this.cdRef, this.validate);\n    this.formProcessos = this.fh.FormBuilder({\n      cadeia_processo_id: { default: null },\n    }, this.cdRef, this.validate);\n    this.formChecklist = this.fh.FormBuilder({\n      id: {default: \"\"},\n      texto: {default: \"\"},\n      checked: {default: false}\n    }, this.cdRef);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    let unidade: Unidade | null = null;\n    this.planoEntrega = this.metadata?.plano_entrega;\n    this.planejamentoId = this.metadata?.planejamento_id;\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\n    this.unidadeId = this.metadata?.unidade_id;\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega; \n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) {\n        result = \"Obrigatório\";\n      } else if(this.entrega!.selectedEntity && (this.entrega!.selectedEntity as Entrega).descricao == control.value) {\n        result = \"É necessário incrementar ou modificar a descrição da entrega\";\n      }\n    } else if (['progresso_realizado', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['progresso_esperado', 'meta'].indexOf(controlName) >= 0 && !(control.value > 0 || control.value?.length > 0)) {\n      result = \"Obrigatório\";\n    } else if (['unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A unidade demandante é obrigatória\";\n    } else if (['entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"A entrega é obrigatória\";\n    } else if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    } else if (['planejamento_objetivo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O objetivo do planejamento é obrigatório\";\n      if(control.value?.length && this.gridObjetivos?.items.map(x => x.planejamento_objetivo_id).includes(this.formObjetivos.controls.planejamento_objetivo_id.value)) result = \"Este objetivo está em duplicidade!\";\n    } else if (['cadeia_processo_id'].indexOf(controlName) >= 0) {\n      if(!control.value?.length) result = \"O processo da cadeia de valor é obrigatório\";\n      if(control.value?.length && this.gridProcessos?.items.map(x => x.cadeia_processo_id).includes(this.formProcessos.controls.cadeia_processo_id.value)) result = \"Este processo está em duplicidade!\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    let inicio = this.form?.controls.data_inicio.value;\n    let fim = this.form?.controls.data_fim.value;\n    if(this.gridObjetivos?.editing) {\n      this.tabs!.active = \"OBJETIVOS\" ;\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if (this.gridProcessos?.editing) {\n      this.tabs!.active = \"PROCESSOS\";\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    if(!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if(!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if(inicio > fim) {\n      return \"A data do fim não pode ser anterior à data do início!\";\n    } else if(this.planoEntrega && inicio < this.planoEntrega.data_inicio) {\n      return \"Data de inicio menor que a data de inicio\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_inicio);\n    } else if(this.planoEntrega && this.planoEntrega.data_fim && fim > this.planoEntrega.data_fim) {\n      return \"Data de fim maior que a data de fim\" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(this.planoEntrega.data_fim);\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    this.onEntregaChange(form.value);\n    let {meta, realizado, ...entityWithout} = entity;\n    await this.entrega?.loadSearch(entity.entrega || formValue.entrega_id, false);\n    await this.unidade?.loadSearch(this.unidadeId);\n    await this.planejamento?.loadSearch(this.planejamentoId);\n    await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\n    let unidade = this.unidadeId?.length ? (await this.unidadeDao.getById(this.unidadeId!) as Unidade) : null;\n    this.idsUnidadesAscendentes = unidade?.path?.split('/').slice(1) || [];\n    form.patchValue(this.util.fillForm(formValue, entityWithout));\n    form.controls.meta.setValue(this.planoEntregaService.getValor(entity.meta));\n    form.controls.realizado.setValue(this.planoEntregaService.getValor(entity.realizado));\n    form.controls.objetivos.setValue(entity.objetivos);\n    form.controls.processos.setValue(entity.processos);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity!.unidade_id = this.auth.unidade!.id;\n    this.entity!.unidade = this.auth.unidade;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult> {\n    return new Promise<NavigateResult>((resolve, reject) => {\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\n      this.gridObjetivos?.confirm();\n      this.gridProcessos?.confirm();\n      let {meta, realizado, ...valueWithout} = this.form!.value;\n      entrega = this.util.fillForm(entrega, valueWithout);\n      entrega.unidade = this.unidade?.selectedEntity;\n      entrega.entrega = this.entrega?.selectedEntity;\n      entrega.meta = this.planoEntregaService.getEntregaValor(entrega.entrega!, meta);\n      entrega.realizado = this.planoEntregaService.getEntregaValor(entrega.entrega!, realizado);\n      resolve(new NavigateResult(entrega));\n    });\n  }\n\n  public onRealizadoChange(value: any, entrega?: Entrega) {\n    this.calculaRealizado();\n  }\n\n  public calculaRealizado() {\n    const meta = this.form?.controls.meta.value;\n    const realizado = this.form?.controls.realizado.value;\n    if (meta && realizado) {\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\n    }\n  }\n\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\n    return result;\n  }\n\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\n    return result;\n  }\n\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\n    return result;\n  }\n\n  public async addObjetivo() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeObjetivo(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveObjetivo(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaObjetivo;\n    if (form!.controls.planejamento_objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\n      consolidado.planejamento_objetivo_id = form!.controls.planejamento_objetivo_id.value;\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async addProcesso() {\n    return {\n      id: this.dao!.generateUuid(),\n      _status: \"ADD\"\n    } as IIndexable;\n  }\n\n  public async removeProcesso(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) row._status = \"DELETE\";\n    return false;\n  }\n\n  public async saveProcesso(form: FormGroup, row: any) {\n    let consolidado = row as PlanoEntregaEntregaProcesso;\n    if (form!.controls.cadeia_processo_id.value.length && this.inputProcesso!.selectedItem) {\n      consolidado.cadeia_processo_id = form!.controls.cadeia_processo_id.value;\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\n      return consolidado;\n    }\n    return undefined;\n  }\n\n  public async onEntregaChange(row: any) {\n    if (this.entrega && this.entrega.selectedItem) {\n      const entregaItem = this.entrega?.selectedEntity as Entrega;\n      const tipoIndicador = entregaItem.tipo_indicador;\n      if(!this.form!.controls.descricao.value.length) {\n        this.form!.controls.descricao.setValue(entregaItem?.descricao || \"\");\n      }\n      switch (tipoIndicador) {\n        case 'QUALITATIVO':\n          this.itensQualitativo = entregaItem.lista_qualitativos || [];\n          this.form?.controls.meta.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          this.form?.controls.realizado.setValue(this.itensQualitativo.length ? this.itensQualitativo[0].key : null);\n          break;\n        case 'VALOR':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'QUANTIDADE':\n          this.form?.controls.meta.setValue('');\n          this.form?.controls.realizado.setValue(0);\n          break;\n        case 'PORCENTAGEM':\n          this.form?.controls.meta.setValue(100);\n          this.form?.controls.realizado.setValue(0);\n          break;\n        default:\n          break;\n      }\n      if (entregaItem.etiquetas) this.loadEtiquetas();\n      if (entregaItem.checklist) this.loadChecklist();\n      this.calculaRealizado();\n    }\n  } \n\n  public loadEtiquetas() {\n    this.etiquetas = this.util.merge(this.entrega?.selectedEntity.etiquetas, this.unidade?.selectedEntity.etiquetas, (a, b) => a.key == b.key);\n  }\n\n  public loadChecklist() {\n    const modeloEntrega = this.entrega?.selectedEntity as Entrega;\n    let checkAdd: Checklist[] = modeloEntrega.checklist.map(a => {\n      return {\n        id: a.id,\n        texto: a.texto,\n        checked: false\n      } as Checklist;\n    });\n    this.checklist = checkAdd || [];\n    this.form!.controls.checklist.setValue(checkAdd);\n  }\n\n  public addItemHandleEtiquetas(): LookupItem | undefined {\n    let result = undefined;\n    if(this.etiqueta && this.etiqueta.selectedItem) {\n      const item = this.etiqueta.selectedItem;\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\n      if(this.util.validateLookupItem(this.form!.controls.etiquetas.value, key)) {\n        result = {\n          key: key,\n          value: item.value,\n          color: item.color,\n          icon: item.icon\n        };\n        this.form!.controls.etiqueta.setValue(\"\");\n      }\n    }\n    return result;\n  };\n}\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entrega_id\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\n            <div class=\"row\">\n                <separator title=\"Vínculos da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-search #entrega [size]=\"12\" label=\"Modelo de Entrega\" controlName=\"entrega_id\" [dao]=\"entregaDao\" (change)=\"onEntregaChange($event)\" placeholder=\"Selecione ou cadastre uma entrega do catálogo usando a lupa\" required></input-search>\n                    </div>\n                    <div class=\"row\">\n                        <input-text [size]=\"12\" label=\"Título/Detalhamento\" controlName=\"descricao\" placeholder=\"Descreva melhor a entrega\" [attr.maxlength]=250 required></input-text>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"12\" [label]=\"lex.translate('Entrega') + ' de ' + lex.translate('plano de entrega') + ' superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\" [where]=\"['plano_entrega.unidade_id', 'in', idsUnidadesAscendentes]\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entregaList']}\" [metadata]=\"{'idsUnidadesAscendentes': idsUnidadesAscendentes}\"></input-search>\n                    </div>\n                </separator>\n                <separator title=\"Especificações da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Plano de Entregas')\" required></input-datetime>\n                        <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Plano de Entregas') + '(Estimativa Inicial)'\" required></input-datetime>\n                    </div>\n                    <div class=\"row\">\n                        <input-search [size]=\"6\" #unidade label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" required></input-search>\n                        <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [attr.maxlength]=250></input-text>\n                    </div>\n                </separator>\n                <separator title=\"Planejamento\"></separator>\n                <div *ngIf=\"this.entrega?.selectedEntity\" class=\"row\">\n                    <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\n                    <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"entrega?.selectedEntity\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Valor Inicial\" [change]=\"onRealizadoChange.bind(this)\" labelInfo=\"Valor da meta verificado no início do plano de entrega\"></plano-entrega-valor-meta-input>\n                </div>\n                <div class=\"row\">\n                    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\n                    <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\n                </div>\n                <separator title=\"Caracterização da Entrega\" collapse [collapsed]=\"false\">\n                    <div class=\"row\">\n                        <input-multiselect label=\"Etiquetas\" controlName=\"etiquetas\" [size]=\"6\" [control]=\"form!.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\n                            <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" [control]=\"form!.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\n                        </input-multiselect>\n                        <div class=\"col-md-6\">\n                            <br><h5>Checklist</h5>\n                            <grid [control]=\"form!.controls.checklist\" [form]=\"formChecklist\" [hasAdd]=\"true\" [hasDelete]=\"true\" editable>\n                                <columns>\n                                    <!--<column type=\"switch\" title=\"Check\" field=\"checked\"></column>-->\n                                    <column type=\"text\" title=\"Texto\" field=\"texto\"></column>\n                                    <column type=\"options\"></column>\n                                </columns>\n                            </grid>\n                        </div>\n                    </div>\n                </separator>\n            </div>\n        </tab>\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [orderBy]=\"orderBy\" \n                [hasDelete]=\"true\" [hasEdit]=\"true\" [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleObjetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\n                        <ng-template let-header=\"header\" #titleObjetivo>\n                            <order by=\"objetivo.nome\" [header]=\"header\">Objetivos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #columnObjetivo>\n                            <span>{{row.objetivo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editObjetivo>\n                            <input-search [size]=\"12\" #inputObjetivo controlName=\"planejamento_objetivo_id\" [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\"></column>\n                </columns>\n            </grid>\n        </tab>\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [orderBy]=\"orderBy\" [hasDelete]=\"true\" [hasEdit]=\"true\"\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\n                <columns>\n                    <column [titleTemplate]=\"titleProcessos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\n                        <ng-template let-header=\"header\" #titleProcessos>\n                            <order by=\"processo.nome\" [header]=\"header\">Processos</order>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #processo>\n                            <span>{{row.processo?.nome}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editProcesso>\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"cadeia_processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\n                        </ng-template>\n                    </column>\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\n                </columns>\n            </grid>\n        </tab>\n    </tabs>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputDatetimeComponent } from 'src/app/components/input/input-datetime/input-datetime.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputTextComponent } from 'src/app/components/input/input-text/input-text.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n\n@Component({\n  selector: 'app-plano-entrega-form',\n  templateUrl: './plano-entrega-form.component.html',\n  styleUrls: ['./plano-entrega-form.component.scss']\n})\n\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\n  @ViewChild('unidade', { static: true }) public unidade?: InputSearchComponent;\n  @ViewChild('nome', { static: true }) public nomePE?: InputTextComponent;\n  @ViewChild('data_fim', { static: true }) public dataFim?: InputDatetimeComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public form: FormGroup;\n  public maxPE: Number | undefined;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.join = [\"entregas.entrega\", \"entregas.objetivos.objetivo\", \"entregas.processos.processo\", \"entregas.unidade\", \"unidade\", 'entregas.reacoes.usuario:id,nome,apelido'];\n    this.modalWidth = 1200;\n    this.form = this.fh.FormBuilder({\n      nome: { default: \"\" },\n      data_inicio: { default: new Date() },\n      data_fim: { default: new Date() },\n      unidade_id: { default: \"\" },\n      plano_entrega_id: { default: null },  // até o momento, um plano de entrega não poderá estar vinculado a outro (adesão de Plano de Entrega)\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n      programa_id: { default: null },\n      entregas: { default: [] },\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    if (['data_inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    if (['data_fim'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\n      result = \"Inválido\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    const inicio = this.form?.controls.data_inicio.value;\n    const fim = this.form?.controls.data_fim.value;\n    const programa = this.programa?.selectedEntity as Programa;\n    if (!programa) {\n      return \"Obrigatório selecionar o programa\";\n    } else if (!this.dao?.validDateTime(inicio)) {\n      return \"Data de início inválida\";\n    } else if (!this.dao?.validDateTime(fim)) {\n      return \"Data de fim inválida\";\n    } else if (inicio > fim) {\n      return \"A data do fim não pode ser menor que a data do início!\";\n    } else {\n      const entregas = this.form!.controls.entregas.value || [];\n      for (let entrega of entregas) {\n        if (entrega.data_inicio < inicio) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data inicial anterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(inicio);\n        if (entrega.data_fim > fim) return \"A \" + this.lex.translate(\"entrega\") + \" '\" + entrega.descricao + \"' possui data fim posterior à \" + this.lex.translate(\"do Plano de Entrega\") + \": \" + this.util.getDateFormatted(fim);\n      }\n    }\n    return undefined;\n  }\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = new PlanoEntrega();\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\n    this.entity.unidade = this.auth.unidade;\n    const di = new Date(this.entity.data_inicio).toLocaleDateString();\n    const df= this.entity.data_fim ? new Date(this.entity.data_fim).toLocaleDateString() : new Date().toLocaleDateString();\n    this.entity.nome = this.auth.unidade!.sigla + \" - \" + di + \" - \" + df;\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\n    return new Promise<PlanoEntrega>((resolve, reject) => {\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\n      resolve(planoEntrega);\n    });\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Entregas\") + ': ' + (entity?.nome || \"\");\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    return result;\n  }\n\n  public onDataChange(){ this.sugereNome(); }\n\n  public onUnidadeChange(){ this.sugereNome(); }\n\n  public sugereNome() {\n    if(this.action == 'new') {\n      const sigla = this.unidade?.selectedItem ? this.unidade?.selectedItem?.entity.sigla : this.auth.unidade?.sigla;\n      const di = new Date(this.form!.controls.data_inicio.value).toLocaleDateString();\n      const df = this.form!.controls.data_fim.value ? \" - \" + new Date(this.form!.controls.data_fim.value).toLocaleDateString() : '';\n      this.form!.controls.nome.setValue(sigla + \" - \" + di + df);\n    }\n  }\n\n  public somaDia(date: Date, days: number){\n    let result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  public onProgramaChange(){\n    const dias=(this.programa?.selectedEntity as Programa)?.prazo_max_plano_entrega;\n    const data=this.somaDia(this.entity!.data_inicio,dias);\n    this.form!.controls.data_fim.setValue(new Date(data));\n    this.dataFim?.change.emit();\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"entregas\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\" (change)=\"onUnidadeChange()\" required></input-search>\n            <input-search #programa [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\" (change)=\"onProgramaChange()\" required></input-search>\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"data_inicio\" [labelInfo]=\"'Início ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\n            <input-datetime date [size]=\"2\" #data_fim label=\"Fim\" controlName=\"data_fim\" [labelInfo]=\"'Fim ' + lex.translate('Planejamento Institucional')\" (change)=\"onDataChange()\" required></input-datetime>\n        </div>\n        <div class=\"row\">\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n            <input-search #planejamento [size]=\"4\" [emptyValue]=\"null\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\n            <input-search #cadeiaValor [size]=\"4\" [emptyValue]=\"null\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\n        </div>\n        <separator title=\"Entregas\"></separator>\n        <plano-entrega-list-entrega #entregas noPersist [disabled]=\"formDisabled\" [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" [unidadeId]=\"form!.controls.unidade_id.value\"></plano-entrega-list-entrega>\n    </div>\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\n\n@Component({\n  selector: 'app-plano-entrega-list-entrega-list',\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\n})\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public buttons: ToolbarButton[] = [];\n  public idsUnidadesAscendentes: string[] = [];\n  public planoEntregaService: PlanoEntregaService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.title = this.lex.translate(\"Entregas\");\n    this.filter = this.fh.FormBuilder({\n      descricao: { default: \"\" },\n      unidade_id: { default: \"\" },\n      destinatario: { default: \"\" },\n    });\n    this.join = [\"entrega:id,nome\",\"entrega_pai:id,descricao\",\"unidade:id,sigla\"];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.idsUnidadesAscendentes = this.metadata?.idsUnidadesAscendentes || this.idsUnidadesAscendentes;\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let form: any = filter.value;\n    let result: any[] = [];\n    if(this.idsUnidadesAscendentes.length) result.push([\"plano_entrega.unidade_id\", \"in\", this.idsUnidadesAscendentes]);\n    if (form.unidade_id?.length) {  // unidade demandante\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.descricao?.length) {\n      result.push([\"descricao\", \"like\", \"%\" + form.descricao.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    if (form.destinatario?.length) {\n      result.push([\"destinatario\", \"like\", \"%\" + form.destinatario.trim().replace(\" \", \"%\") + \"%\"]);\n    }\n    return result;\n  }\n}\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\n    (select)=\"onSelect($event)\">\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\n                placeholder=\"Descrição\" [attr.maxlength]=250></input-text>\n        </div>\n        <div class=\"row\"> \n                <input-search [size]=\"6\" label=\"Unidade demandante\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\n                placeholder=\"Destinatário\" [attr.maxlength]=250></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\n            <ng-template let-row=\"row\" #columnEntregaCliente>\n                <badge icon=\"bi bi-textarea-t\" [label]=\"row.descricao || '(não informado)'\" color=\"light\"></badge><br>\n                <badge [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla || '(não informado)'\" color=\"success\"></badge><br>\n                <badge icon=\"bi bi-mailbox\" [label]=\"row.destinatario || '(não informado)'\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\n            <ng-template let-row=\"row\" #columnDatas>\n                <span>{{dao!.getDateFormatted(row.data_inicio)}}<br>{{dao!.getDateFormatted(row.data_fim)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\n            <ng-template let-row=\"row\" #columnIndicador>\n                <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\n                    <i class=\"bi bi-list-check\"></i>\n                    {{row.entrega.nome || row.entrega_pai.descricao}}\n                </span>\n            </ng-template>\n        </column>\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\n            <ng-template let-row=\"row\" #columnMetaRealizado>\n                <badge [label]=\"planoEntregaService.getValorMeta(row)\" color=\"light\"></badge><br>\n                <badge [label]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\"></badge>\n            </ng-template>\n        </column>\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\n            <ng-template let-row=\"row\" #columnProgresso>\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\n            </ng-template>\n        </column>\n        <column type=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\r\nimport { LookupItem } from 'src/app/services/lookup.service';\r\nimport { Checklist } from 'src/app/models/atividade.model';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('etiqueta', { static: false }) public etiqueta?: InputSelectComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() disabled: boolean = false;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntrega | undefined) { super.entity = value; } get entity(): PlanoEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planejamento e remove-los\r\n      // será removido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n  @Input() set unidadeId(value: string | undefined) {\r\n    if(this._unidadeId != value) {\r\n      this._unidadeId = value;\r\n      // TODO: verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get unidadeId(): string | undefined {\r\n    return this._unidadeId;\r\n  }\r\n  @Input() execucao: boolean = false;\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  private _unidadeId?: string;\r\n\r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n  public planoEntregaService: PlanoEntregaService;\r\n  public formEdit: FormGroup;\r\n  public etiquetas: LookupItem[] = [];\r\n  public checklist?: Checklist[];\r\n  public selectable: boolean = false;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.join = [\"unidade\", \"entrega\", \"reacoes.usuario:id,nome,apelido\"];\r\n    this.code = \"MOD_PENT\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      data_inicio: { default: new Date() },\r\n      data_fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      unidade_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n      etiquetas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n    this.formEdit = this.fh.FormBuilder({\r\n      progresso_realizado: { default: 0 },\r\n      etiquetas: { default: [] },\r\n      etiqueta: { default: null }\r\n    });\r\n    // Testa se o usuário possui permissão para exibir dados da entrega do plano de entregas\r\n    this.addOption(Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES), \"MOD_PENT\");\r\n    this.addOption(Object.assign({ onClick: this.delete.bind(this) }, this.OPTION_EXCLUIR), \"MOD_PENT_ENTR_EXCL\");\r\n    this.addOption(Object.assign({ onClick: this.showLogs.bind(this) }, this.OPTION_LOGS), \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public get isDisabled(): boolean {\r\n    return this.formDisabled || this.disabled;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult, this.join));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    return !this.execucao && !this.isDisabled ? this.options : [];\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    return this.isDisabled ? [Object.assign({ onClick: this.consult.bind(this) }, this.OPTION_INFORMACOES)] : [];\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    //console.log(this.form?.controls.progresso_realizado.value);\r\n    if(this.execucao) {\r\n      this.grid!.edit(entrega);\r\n    } else {\r\n      entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n      let index = this.items.indexOf(entrega);\r\n      this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n        metadata: {\r\n          plano_entrega: this.entity!,\r\n          planejamento_id: this.planejamentoId,\r\n          cadeia_valor_id: this.cadeiaValorId,\r\n          unidade_id: this.unidadeId,\r\n          entrega: entrega,\r\n        },\r\n        modalClose: async (modalResult) => {\r\n          if (modalResult) {\r\n            if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n            this.items[index] = modalResult;\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public async load(form: FormGroup, row: any) {\r\n    console.log(row)\r\n    this.form!.patchValue(row);\r\n    this.form!.controls.meta.setValue(this.planoEntregaService.getValor(row.meta));\r\n    this.form!.controls.realizado.setValue(this.planoEntregaService.getValor(row.realizado));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async save(form: FormGroup, row: any) {    \r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (form.valid) {\r\n      this.submitting = true;\r\n      try {\r\n        result = await this.dao?.update(row.id, {\r\n          realizado: this.planoEntregaService.getEntregaValor(row.entrega, form.controls.realizado.value),\r\n          progresso_realizado: form.controls.progresso_realizado.value\r\n        }, this.join);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        this.dao!.delete(entrega).then(() => {\r\n          //this.grid!.query!.removeId(entrega.id);\r\n          this.items.splice(index, 1);\r\n          this.cdRef.detectChanges();\r\n          this.dialog.topAlert(\"Registro excluído com sucesso!\", 5000);\r\n        }).catch((error) => {\r\n          this.dialog.alert(\"Erro\", \"Erro ao excluir: \" + (error?.message ? error?.message : error));\r\n        });;\r\n      };\r\n    }\r\n    \r\n  }\r\n\r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', entrega.id, \"consult\"]}, {\r\n      metadata: {\r\n        plano_entrega: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        unidade_id: this.unidadeId,\r\n        entrega: entrega\r\n      }\r\n    });\r\n  }\r\n\r\n  public async showLogs(entrega: PlanoEntregaEntrega){\r\n    this.go.navigate({ route: ['logs', 'change', entrega.id, 'consult'] })\r\n  }\r\n\r\n  public async showPlanejamento(objetivo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'objetivos', objetivo_id]}, { modal: true });\r\n  }\r\n\r\n  public async showCadeiaValor(processo_id: string){\r\n    this.go.navigate({route: ['gestao', 'plano-entrega', 'entrega', 'processos', processo_id]}, {modal: true});\r\n  }\r\n\r\n  public refreshComentarios(modalResult: any) {\r\n    /* Atualiza os comentários após ser salvo pela própria tela de comentarios (persistent) */\r\n    let row: PlanoEntregaEntrega | undefined = this.items.find(x => x.id == modalResult.id);\r\n    if(row) row.comentarios = modalResult.comentarios || [];\r\n  }\r\n\r\n  public onRealizadaChange() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if (meta && realizado) {\r\n      let totalRealizado = !isNaN(realizado) ? ((realizado / meta) * 100).toFixed(0) || 0 : 0;\r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public addItemHandleEtiquetas(): LookupItem | undefined {\r\n    let result = undefined;\r\n    if (this.etiqueta && this.etiqueta.selectedItem) {\r\n      const item = this.etiqueta.selectedItem;\r\n      const key = item.key?.length ? item.key : this.util.textHash(item.value);\r\n      if (this.util.validateLookupItem(this.formEdit.controls.etiqueta.value, key)) {\r\n        result = {\r\n          key: key,\r\n          value: item.value,\r\n          color: item.color,\r\n          icon: item.icon\r\n        };\r\n        this.formEdit.controls.etiqueta.setValue(null);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public async onColumnEtiquetasEdit(row: any) {\r\n    this.formEdit.controls.etiquetas.setValue(row.etiquetas);\r\n    this.formEdit.controls.etiqueta.setValue(null);\r\n    this.etiquetas = this.util.merge(row.tipo_atividade?.etiquetas, row.unidade?.etiquetas, (a, b) => a.key == b.key);\r\n    this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n  }\r\n\r\n  public async onColumnEtiquetasSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        etiquetas: this.formEdit.controls.etiquetas.value\r\n      });\r\n      row.etiquetas = this.formEdit.controls.etiquetas.value;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public onEtiquetaConfigClick() {\r\n    this.go.navigate({ route: [\"configuracoes\", \"preferencia\", \"usuario\", this.auth.usuario!.id], params: { etiquetas: true } }, {\r\n      modal: true, modalClose: (modalResult) => {\r\n        this.etiquetas = this.util.merge(this.etiquetas, this.auth.usuario!.config?.etiquetas, (a, b) => a.key == b.key);\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  public async onColumnChecklistEdit(row: any) {\r\n    this.formEdit.controls.progresso_realizado.setValue(row.progresso_realizado);\r\n    this.checklist = this.util.clone(row.checklist);\r\n  }\r\n\r\n  public async onColumnChecklistSave(row: any) {\r\n    try {\r\n      const saved = await this.dao!.update(row.id, {\r\n        progresso_realizado: this.formEdit.controls.progresso_realizado.value,\r\n        checklist: this.checklist\r\n      });\r\n      row.progresso_realizado = this.formEdit.controls.progresso_realizado.value;\r\n      row.checklist = this.checklist;\r\n      return !!saved;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }  \r\n}\r\n","<grid [items]=\"items\" [form]=\"form!\" [groupTemplate]=\"groupEntregas\" [minHeight]=\"300\" [editable]=\"isDisabled ? undefined : 'true'\" \r\n    [hasAdd]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_INCL') && !execucao\" [add]=\"add.bind(this)\" \r\n    [hasEdit]=\"!isDisabled && auth.hasPermissionTo('MOD_PENT_ENTR_EDT')\" [load]=\"load.bind(this)\" [save]=\"save.bind(this)\" [selectable]=\"selectable\">\r\n    <ng-template let-separator=\"separator\" #groupEntregas>\r\n        <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n            <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n        </span>\r\n    </ng-template>\r\n    <columns>\r\n        <column type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-entregas-plano-trabalho [entregaId]=\"row.id\"></plano-entrega-entregas-plano-trabalho>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <badge *ngIf=\"row.descricao\" color=\"light\" icon=\"bi bi-textarea-t\" [label]=\"row.descricao\"></badge><br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\" [label]=\"row.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\" [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n                <reaction [entity]=\"row\" origem=\"PLANO_ENTREGA_ENTREGA\"></reaction>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Etiquetas'\" [width]=\"100\" [template]=\"columnEtiquetas\" [editTemplate]=\"columnEtiquetas\" [columnEditTemplate]=\"selectable ? undefined : columnEtiquetasEdit\" [edit]=\"selectable ? undefined : onColumnEtiquetasEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnEtiquetasSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnEtiquetas>\r\n                <badge *ngFor=\"let etiqueta of row.etiquetas\" [lookup]=\"etiqueta\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnEtiquetasEdit>\r\n                <input-multiselect controlName=\"etiquetas\" [size]=\"12\" [control]=\"formEdit.controls.etiquetas\" [addItemHandle]=\"addItemHandleEtiquetas.bind(this)\">\r\n                    <input-select [size]=\"12\" #etiqueta controlName=\"etiqueta\" nullable itemNull=\"- Selecione -\" detailsButton detailsButtonIcon=\"bi bi-tools\" (details)=\"onEtiquetaConfigClick()\" [control]=\"formEdit.controls.etiqueta\" [items]=\"etiquetas\"></input-select>\r\n                </input-multiselect>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta'\" [width]=\"100\" [template]=\"columnMetaRealizado\" [editTemplate]=\"editMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"planoEntregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"planoEntregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editMetaRealizado>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-graph-up-arrow\" [entrega]=\"row.entrega\" disabled [size]=\"6\" [control]=\"form!.controls.meta\" label=\"Meta\"></plano-entrega-valor-meta-input>\r\n                <plano-entrega-valor-meta-input icon=\"bi bi-check-lg\" [entrega]=\"row.entrega\" [size]=\"6\" [control]=\"form!.controls.realizado\" label=\"Realizada\" [change]=\"onRealizadaChange.bind(this)\"></plano-entrega-valor-meta-input>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column title=\"Progresso\\nChecklist\" [width]=\"100\" [template]=\"columnProgresso\" [editTemplate]=\"editProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #editProgresso>\r\n                <input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"form!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso\\nChecklist'\" [width]=\"200\" [template]=\"columnProgChecklist\" [editTemplate]=\"columnProgChecklist\" [columnEditTemplate]=\"selectable ? undefined : columnChecklistEdit\" [edit]=\"selectable ? undefined : onColumnChecklistEdit.bind(this)\" [save]=\"selectable ? undefined : onColumnChecklistSave.bind(this)\">\r\n            <ng-template let-row=\"row\" #columnProgChecklist>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\" color=\"success\"></progress-bar>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\" collapse [collapsed]=\"true\">\r\n                    <table *ngIf=\"row.checklist?.length\">\r\n                        <tr *ngFor=\"let check of row.checklist\">\r\n                            <td><i *ngIf=\"check.checked\" class=\"bi bi-check-circle\"></i></td>\r\n                            <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </separator>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnChecklistEdit>\r\n                <!--<input-number [size]=\"12\" disabled label=\"Esperado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_esperado\" [control]=\"form!.controls.progresso_esperado\" labelInfo=\"Progresso de execução (% Esperado)\"></input-number>-->\r\n                <input-number [size]=\"12\" label=\"Realizado\" sufix=\"%\" icon=\"bi bi-clock\" controlName=\"progresso_realizado\" [control]=\"formEdit!.controls.progresso_realizado\" labelInfo=\"Progresso de execução (% Concluído)\"></input-number>\r\n                <separator *ngIf=\"row.checklist?.length\" small title=\"Checklist\"></separator>\r\n                <table *ngIf=\"row.checklist?.length\">\r\n                    <tr *ngFor=\"let check of checklist; let i = index\">\r\n                        <td><input-switch [size]=\"12\" scale=\"small\" [source]=\"checklist\" [path]=\"i + '.checked'\"></input-switch></td>\r\n                        <td class=\"micro-text fw-ligh\">{{check.texto}}</td>\r\n                    </tr>\r\n                </table>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Objetivos/Processos'\" [width]=\"200\" [template]=\"columnObjProc\" [editTemplate]=\"columnObjProc\">\r\n            <ng-template let-row=\"row\" #columnObjProc>\r\n                <separator [title]=\"lex.translate('Objetivos')\" *ngIf=\"row.objetivos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pObjetivo of row.objetivos\" class=\"objetivo d-flex align-items-center\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showPlanejamento(pObjetivo.objetivo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pObjetivo.objetivo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n                <separator [title]=\"lex.translate('Processos')\" *ngIf=\"row.processos?.length\" collapse [collapsed]=\"true\">\r\n                    <div *ngFor=\"let pProcesso of row.processos\" class=\"objetivo\">\r\n                        <button class=\"btn btn-sm btn-outline-info me-2\" (click)=\"showCadeiaValor(pProcesso.processo.id)\"><i class=\"bi bi-eye\"></i></button>\r\n                        <small>{{pProcesso.processo.nome}}</small>\r\n                    </div>\r\n                </separator>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Modelo de Entrega\\nComentários'\" [template]=\"columnEntregaCometario\" [editTemplate]=\"columnEntregaCometario\">\r\n            <ng-template let-row=\"row\" #columnEntregaCometario>\r\n                <badge *ngIf=\"row.entrega\" color=\"light\" icon=\"bi bi-list-check\" [label]=\"row.entrega?.nome\"></badge>\r\n                <comentarios-widget [entity]=\"row\" [selectable]=\"!execucao || !!grid?.editing\" origem=\"PLANO_ENTREGA_ENTREGA\" [grid]=\"grid\" [save]=\"refreshComentarios.bind(this)\"></comentarios-widget>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\" [dynamicOptions]=\"dynamicOptions.bind(this)\"></column>\r\n    </columns>\r\n</grid>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { ChangeDaoService } from 'src/app/dao/change-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { Change } from 'src/app/models/change.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-list-logs',\n  templateUrl: './plano-entrega-list-logs.component.html',\n  styleUrls: ['./plano-entrega-list-logs.component.scss']\n})\nexport class PlanoEntregaListLogsComponent extends PageListBase<Change, ChangeDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('selectResponsaveis', { static: false }) public selectResponsaveis?: InputSelectComponent;\n\n  public responsaveis: LookupItem[] = [];\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public planoEntrega?: PlanoEntrega;\n  public planoId: string = \"\";\n  public action: string = \"\";\n\n  constructor(public injector: Injector, dao: ChangeDaoService) {\n    super(injector, Change, ChangeDaoService);\n    /* Inicializações */\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.title = \"Logs de Planos de Entregas\";\n    this.filter = this.fh.FormBuilder({\n      responsavel_id: {default: \"\"},\n      data_inicio: {default: \"\"},\n      data_fim: {default: \"\"},\n      tipo: {default: \"\"}\n    });\n    this.orderBy = [['id', 'desc']];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.planoId = this.urlParams?.get(\"id\") || \"\";\n    this.planoEntregaDao.getById(this.planoId).then(plano => this.planoEntrega = plano!);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // this.selectResponsaveis!.loading = true;\n    // this.dao?.showResponsaveis().then(responsaveis => {\n    //   this.responsaveis = responsaveis || [];\n    //   this.selectResponsaveis!.loading = false;\n    // });\n  }\n  \n  public filterClear(filter: FormGroup) {\n    filter.controls.responsavel_id.setValue(\"\");\n    filter.controls.data_inicio.setValue(\"\");\n    filter.controls.data_fim.setValue(\"\");\n    filter.controls.tipo.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    result.push([\"table_name\", \"==\", \"planos_entregas\"]);\n    result.push([\"row_id\", \"==\", this.planoId]);\n    if(form.responsavel_id?.length){\n      result.push([\"user_id\", \"==\", form.responsavel_id == \"null\" ? null : form.responsavel_id]);\n    };\n    if(form.data_inicio){\n      result.push([\"date_time\", \">=\", form.data_inicio]);\n    };\n    if(form.data_fim){\n      result.push([\"date_time\", \"<=\", form.data_fim]);\n    };\n    if(form.tipo?.length){\n      result.push([\"type\", \"==\", form.tipo]);\n    };\n    return result;\n  }\n\n  public preparaDelta(row: any): any[] {\n    this.action = row.type;\n    let novoDelta = row.delta instanceof Array ? row.delta : Object.entries(row.delta);\n    novoDelta.forEach((element: any[]) => {\n      if(element[1] instanceof Date) element[1] = new Date(element[1]).toUTCString();\n      if(element.length > 2 && element[2] instanceof Date) element[2] = new Date(element[2]).toUTCString();\n    });\n    return novoDelta;\n  }\n\n}\n","<grid [dao]=\"dao\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\">\n    <span><strong>{{ planoEntrega?.numero + ' - ' + planoEntrega?.nome }}</strong></span>\n    <toolbar></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-select #selectResponsaveis label=\"Responsável pelo registro\" controlName=\"responsavel_id\" [control]=\"filter!.controls.responsavel_id\" \n            [items]=\"responsaveis\"></input-select>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"4\" datetime label=\"Início\" controlName=\"data_inicio\" [control]=\"filter!.controls.data_inicio\" labelInfo=\"Início dos registros\"></input-datetime>\n            <input-datetime [size]=\"4\" datetime label=\"Fim\" controlName=\"data_fim\" [control]=\"filter!.controls.data_fim\" labelInfo=\"Fim dos registros\"></input-datetime>\n            <input-select [size]=\"4\" label=\"Tipo\" icon=\"bi bi-arrow-up-right-circle\" controlName=\"tipo\" [control]=\"filter!.controls.tipo\" [items]=\"lookup.TIPO_LOG_CHANGE\" itemTodos=\"Todos\" valueTodos=\"\"></input-select>\n        </div>\n    </filter>\n    <columns>\n        <column [titleTemplate]=\"titleResponsavel\" [template]=\"columnResponsavel\">\n            <ng-template #titleResponsavel let-header=\"header\"><strong>Responsável</strong></ng-template>\n            <ng-template let-row=\"row\" #columnResponsavel>\n                <span> {{row.responsavel}} </span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDataCriacao\" [template]=\"columnDataCriacao\">\n            <ng-template #titleDataCriacao let-header=\"header\"><strong>Criado em</strong></ng-template>\n            <ng-template let-row=\"row\" #columnDataCriacao>\n                <span>{{ util.getDateTimeFormatted(row.date_time) }}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleDiferenca\" [template]=\"columnDiferenca\">\n            <ng-template #titleDiferenca let-header=\"header\">\n                <div class=\"row\">\n                    <div class=\"col align-bottom\" width=\"150\"><strong>Atributos</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Atuais</strong></div>\n                    <div class=\"col\" width=\"250\"><strong>Valores<br>Anteriores</strong></div>\n                </div>\n            </ng-template>\n            <ng-template #columnDiferenca let-row=\"row\">\n                <separator title=\"(ver detalhes)\" [collapse]=\"'collapse'\" [collapsed]=\"true\">\n                    <table>\n                        <tbody> \n                            <tr *ngFor=\"let dif of preparaDelta(row)\">\n                                <td width=\"150\">{{ dif[0] }}</td>\n                                <td width=\"250\">{{ (action == 'EDIT' || action == 'ADD') ? dif[1] : '' }}</td>\n                                <td width=\"250\">{{ action == 'EDIT' ? dif[2] : (action == 'ADD' ? '' : dif[1]) }}</td>\n                            </tr>\n                        </tbody>\n                    </table>                   \n                </separator>\n            </ng-template>\n          </column>\n        <column title=\"Tipo de Operação\" field=\"type\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\nimport { FullRoute } from 'src/app/services/navigate.service';\nimport { Base } from 'src/app/models/base.model';\nimport { Avaliacao } from 'src/app/models/avaliacao.model';\nimport { AvaliacaoDaoService } from 'src/app/dao/avaliacao-dao.service';\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-list',\n  templateUrl: './plano-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list.component.scss']\n})\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public showFilter: boolean = true;\n  public avaliacao: boolean = false;\n  public execucao: boolean = false;\n  public linha?: PlanoEntrega;\n  public unidadeDao: UnidadeDaoService;\n  public avaliacaoDao: AvaliacaoDaoService;\n  public planejamentoDao: PlanejamentoDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planoEntregaService: PlanoEntregaService;\n  public unidadeSelecionada: Unidade;\n  public habilitarAdesaoToolbar: boolean = false;\n  public toolbarButtons: ToolbarButton[] = [];\n  public botoes: ToolbarButton[] = [];\n  public routeStatus: FullRoute = { route: [\"uteis\", \"status\"] };\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\n  public BOTAO_ALTERAR: ToolbarButton;\n  public BOTAO_ARQUIVAR: ToolbarButton;\n  public BOTAO_AVALIAR: ToolbarButton;\n  public BOTAO_CANCELAR_PLANO: ToolbarButton;\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_CONCLUIR: ToolbarButton;\n  public BOTAO_CONSULTAR: ToolbarButton;\n  public BOTAO_DESARQUIVAR: ToolbarButton;\n  public BOTAO_EXCLUIR: ToolbarButton;\n  public BOTAO_HOMOLOGAR: ToolbarButton;\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_LOGS: ToolbarButton;\n  public BOTAO_REATIVAR: ToolbarButton;\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\n  public BOTAO_SUSPENDER: ToolbarButton;\n  public DATAS_FILTRO: LookupItem[] = [\n    { key: \"VIGENTE\", value: \"Vigente\" },\n    { key: \"NAOVIGENTE\", value: \"Não vigente\" },\n    { key: \"INICIAM\", value: \"Iniciam\" },\n    { key: \"FINALIZAM\", value: \"Finalizam\" }\n  ];\n  \n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.avaliacaoDao = injector.get<AvaliacaoDaoService>(AvaliacaoDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planoEntregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    this.unidadeSelecionada = this.auth.unidade!;\n    /* Inicializações */\n    this.title = this.lex.translate('Planos de Entregas');\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      principais: { default: true },\n      arquivadas: { default: false },\n      nome: { default: '' },\n      data_filtro: { default: null },\n      data_filtro_inicio: { default: new Date() },\n      data_filtro_fim: { default: new Date() },\n      status: { default: '' },\n      unidade_id: { default: null },\n      unidades_filhas: { default: false },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n    }, this.cdRef, this.filterValidate);\n    this.join = [\n      'planejamento:id,nome',\n      'programa:id,nome',\n      'cadeia_valor:id,nome',\n      'unidade:id,sigla,path',\n      'entregas.entrega',\n      'entregas.objetivos.objetivo',\n      'entregas.processos.processo',\n      'entregas.unidade',\n      'entregas.comentarios.usuario:id,nome,apelido',\n      'entregas.reacoes.usuario:id,nome,apelido',\n      'unidade.gestor:id',\n      'unidade.gestor_substituto:id',\n      'unidade.unidade_pai',\n      'avaliacao'\n    ];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", color: \"btn-outline-info\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\n    this.BOTAO_CANCELAR_PLANO = { label: \"Cancelar plano\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarPlano.bind(this) };\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CANCELADO\"), onClick: this.cancelarAvaliacao.bind(this) };\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\n    this.BOTAO_LOGS = { label: \"Logs\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['logs', 'change', planoEntrega.id, 'consult'] }) };\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUIDO\"), onClick: this.retirarHomologacao.bind(this) };\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\n    this.botoes = [this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_PLANO, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO,\n      this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO,\n      this.BOTAO_LOGS, this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\n    //this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR,\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.execucao = !!this.queryParams?.execucao;\n    this.avaliacao = !!this.queryParams?.avaliacao;\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\n    this.selectable = this.metadata?.selectable || this.selectable;\n    if (this.execucao) {\n      this.title = this.title + \" (Execução)\";\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\n      this.filter!.controls.principais.setValue(false);\n    }\n    if (this.avaliacao) {\n      this.title = this.title + \" (Avaliação)\";\n      this.filter!.controls.unidade_id.setValue(this.auth.unidadeGestor()?.id || null);\n      this.filter!.controls.unidades_filhas.setValue(true);\n      this.filter!.controls.principais.setValue(false);\n    }\n    this.checaBotaoAderirToolbar();\n    //this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);  // Adesão de plano suspensa, por enquanto\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.auth.unidade != this.unidadeSelecionada) {\n      this.unidadeSelecionada = this.auth.unidade!;\n      this.checaBotaoAderirToolbar();\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onGridLoad(rows?: Base[]) {\n    const extra = (this.grid?.query || this.query!).extra;\n    if (rows && this.execucao) {\n      rows.forEach(v => {\n        if ([\"ATIVO\", \"SUSPENSO\"].includes((v as PlanoEntrega).status)) this.grid!.expand(v.id);\n      });\n    }\n    rows?.forEach(v => {\n      let planoEntrega = v as PlanoEntrega;\n      if(planoEntrega.avaliacao) planoEntrega.avaliacao.tipo_avaliacao = extra?.tipos_avaliacoes?.find((x: TipoAvaliacao) => x.id == planoEntrega.avaliacao!.tipo_avaliacao_id);\n    });\n  }\n\n  public checaBotaoAderirToolbar() {\n    /* let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().length ? this.planosEntregasAtivosUnidadePai().map(x => x.id) : [];\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"));\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\n    this.habilitarAdesaoToolbar = condition1 && condition2;\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar; */\n    /*  (RI_PENT_1)\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \n        possuir a capacidade \"MOD_PENT_ADR\" (RN_PENT_2_4); e\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\n    */\n  }\n\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\n    return this.auth.unidade?.unidade_pai?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\n    return this.auth?.unidade?.planos_entrega?.filter(x => this.planoEntregaService.isAtivo(x)) || [];\n  }\n\n  public filterValidate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (controlName == \"data_filtro_inicio\" && control.value > this.filter?.controls.data_filtro_fim.value) {\n      result = \"Maior que fim\";\n    } else if (controlName == \"data_filtro_fim\" && control.value < this.filter?.controls.data_filtro_inicio.value) {\n      result = \"Menor que início\";\n    }\n    return result;\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    filter.controls.data_filtro.setValue(null);\n    filter.controls.data_filtro_inicio.setValue(new Date());\n    filter.controls.data_filtro_fim.setValue(new Date());\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.planejamento_id.setValue(null);\n    filter.controls.cadeia_valor_id.setValue(null);\n    filter.controls.status.setValue(null);\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    /*\n        (RI_PENT_B) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\n        - os válidos das unidades onde ele possui algum vínculo (áreas de trabalho) (w1), e\n        - se ele for gestor:\n          - os ativos das unidades-pai de onde ele é gestor (w2), e \n          - os ativos das unidades imediatamente subordinadas (w3);\n    */\n    if (this.filter?.controls.principais.value) {\n      let w1: [string, string, string[]] = [\"unidade_id\", \"in\", (this.auth.unidades || []).map(u => u.id)];\n      if (this.auth.isGestorAlgumaAreaTrabalho()) {\n        let unidadesUsuarioEhGestor = this.auth.unidades?.filter(x => this.auth.isGestorUnidade(x));\n        let w2: string[] | undefined = unidadesUsuarioEhGestor?.map(u => u.unidade_pai?.id || \"\").filter(x => x.length);\n        if (w2?.length) w1[2].push(...w2);\n        let w3 = [\"unidade.unidade_pai_id\", \"in\", unidadesUsuarioEhGestor?.map(u => u.id)];\n        result.push([\"or\", w1, w3]);\n      } else {\n        result.push(w1)\n      }\n    }\n    if (form.nome?.length) result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\n    if (form.data_filtro) {\n      result.push([\"data_filtro\", \"==\", form.data_filtro]);\n      result.push([\"data_filtro_inicio\", \"==\", form.data_filtro_inicio]);\n      result.push([\"data_filtro_fim\", \"==\", form.data_filtro_fim]);\n    }\n    if (form.unidade_id) result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    if (form.planejamento_id) result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\n    if (form.cadeia_valor_id) result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\n    if (form.status || this.avaliacao) result.push([\"status\", \"in\", form.status ? [form.status] : ['CONCLUIDO', 'AVALIADO']]);\n    if (form.unidades_filhas) result.push([\"unidades_filhas\", \"==\", true]);\n    //  (RI_PENT_C) Por padrão, os planos de entregas retornados na listagem do grid são os que não foram arquivados.\n    result.push([\"incluir_arquivados\", \"==\", this.filter!.controls.arquivadas.value]);\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public onPrincipaisChange(event: Event) {\n    if (this.filter!.controls.principais.value) this.filter!.controls.unidade_id.setValue(null);\n    this.grid!.reloadFilter();\n  }\n\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\n    switch (this.planoEntregaService.situacaoPlano(planoEntrega)) {\n      case 'INCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\n        break;\n      case 'HOMOLOGANDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR);\n        break;\n      case 'ATIVO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR);\n        break;\n      case 'CONCLUIDO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR);\n        break;\n      case 'SUSPENSO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR);\n        break;\n      case 'AVALIADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_ARQUIVAR, row)) result.push(this.BOTAO_ARQUIVAR);\n        break;\n      case 'ARQUIVADO':\n        if (this.botaoAtendeCondicoes(this.BOTAO_DESARQUIVAR, row)) result.push(this.BOTAO_DESARQUIVAR);\n        break;\n      case 'CANCELADO':\n        break;\n    }\n    if (!result.length) result.push(this.BOTAO_CONSULTAR);\n    return result;\n  }\n\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    this.linha = row;\n    this.botoes.forEach(botao => {\n      if (this.botaoAtendeCondicoes(botao, row)) result.push(botao);\n    });\n    return result;\n  }\n\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\n    switch (botao) {\n      case this.BOTAO_ADERIR_OPTION:\n        /*         \n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\n          - o plano estiver com o status Ativo; e\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADR\" ; e\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\n        */\n        return !this.execucao && (this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_pai_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoUsuario(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADR\"))) &&\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.data_inicio, end: x.data_fim! }, { start: planoEntrega.data_inicio, end: planoEntrega.data_fim! }])).length == 0));\n      case this.BOTAO_ALTERAR:\n        /*\n          (RN_PENT_L) Para ALTERAR um plano de entregas:\n          - o Plano de Entregas precisa estar com o status INCLUIDO, HOMOLOGANDO ou ATIVO, e\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT\", o plano de entregas precisa ser válido (ou seja, nem deletado, nem arquivado e com status diferente de 'CANCELADO'), e:\n                - o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da Unidade do plano, ou esta ser sua Unidade de lotação; ou\n                - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B) e possuir a capacidade \"MOD_PENT_EDT_FLH\"; (RN_PENT_C) ou\n                - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B); ou\n                - o plano de entregas precisa estar com o status ATIVO, a Unidade do plano precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\".\n                - o usuário precisa possuir também a capacidade \"MOD_PENT_QQR_UND\";\n          (RN_PENT_AE) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\", o plano de entregas voltará ao status \"HOMOLOGANDO\";\n          (RN_PENT_AF) Se a alteração for feita com o plano de entregas no status ATIVO e o usuário logado possuir a capacidade \"MOD_PENT_EDT_ATV_ATV\", o plano de entregas permanecerá no status \"ATIVO\";\n        */\n        let condicao0 = ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega));\n        let condicao1 = ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n        let condicao2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\");\n        let condicao3 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        let condicao4 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\", \"MOD_PENT_EDT_ATV_ATV\"]);\n        let condicao5 = this.auth.hasPermissionTo(\"MOD_PENT_QQR_UND\");\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EDT\") && condicao0 && this.planoEntregaService.isValido(planoEntrega) && (condicao1 || condicao2 || condicao3 || condicao4 || condicao5);\n      case this.BOTAO_ARQUIVAR:\n        /*\n          (RN_PENT_N) Para ARQUIVAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO ou AVALIADO, não ter sido arquivado, e:\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return ['CONCLUIDO', 'AVALIADO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_AVALIAR:\n        /*\n          (RN_PENT_O) Para AVALIAR um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n              - o usuário logado precisa possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B); ou\n              - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_AVAL\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente da Unidade do plano (Unidade A e superiores), e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\n              - sugerir arquivamento automático (vide RI_PENT_A); \n        */\n        let condic1 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condic2 = this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!);\n        let condic3 = this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL\");\n        let condic4 = this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (condic1 || condic2 || condic3 || condic4);\n      case this.BOTAO_CANCELAR_AVALIACAO:\n        /*\n          (RN_PENT_R) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status AVALIADO, e\n          - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n          - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_AVAL\"; ou\n          - possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para a Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || this.auth.isIntegrante('AVALIADOR_PLANO_ENTREGA', planoEntrega.unidade!.id!));\n      case this.BOTAO_CANCELAR_CONCLUSAO:\n        /*\n          (RN_PENT_S) Para CANCELAR a CONCLUSÃO de um plano de entregas:\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n          - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"**MOD_PENT_CANC_CONCL\";        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_T) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B), ou\n            - a Unidade-pai (Unidade A) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_CANC_HOMOL\"; ou\n            - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A) da Unidade do plano (Unidade B);\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id) || (this.auth.isLotacaoUsuario(planoEntrega.unidade?.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL\")) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!));\n      case this.BOTAO_CANCELAR_PLANO:\n        /*\n          (RN_PENT_P) Para CANCELAR UM PLANO DE ENTREGAS:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_CNC\", o plano precisa estar em um dos seguintes status: INCLUIDO, HOMOLOGANDO, ATIVO ou CONCLUIDO; e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT_CNC\") && ['INCLUIDO', 'HOMOLOGANDO', 'ATIVO', 'CONCLUIDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade?.id) || this.auth.isLotacaoUsuario(planoEntrega.unidade));\n      case this.BOTAO_CONCLUIR:\n        /*\n          (RN_PENT_U) Para CONCLUIR um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e\n            - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n            - a Unidade do plano (Unidade B) precisa ser sua Unidade de lotação e o usuário logado precisa possuir a capacidade \"MOD_PENT_CONC\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONC\")));\n      case this.BOTAO_CONSULTAR:\n        /*\n          (RN_PENT_V) CONSULTAR\n          - todos os participantes podem visualizar todos os planos de entrega, desde que possuam a capacidade \"MOD_PENT\" (RN_PENT_F, RN_PENT_I);\n        */\n        return this.auth.hasPermissionTo(\"MOD_PENT\");\n      case this.BOTAO_DESARQUIVAR:\n        /*\n          (RN_PENT_W) Para DESARQUIVAR um plano de entregas:\n          - o plano precisa estar arquivado, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_ARQ\";\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ARQUIVADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\n      case this.BOTAO_EXCLUIR:\n        /*\n          (RN_PENT_X) Para EXCLUIR um plano de entregas:\n          - o usuário logado precisa possuir a capacidade \"MOD_PENT_EXCL\", o plano precisa estar com o status INCLUIDO ou HOMOLOGANDO; e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado;\n        */\n        return !this.execucao && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\") && ['INCLUIDO', 'HOMOLOGANDO'].includes(this.planoEntregaService.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isLotacaoUsuario(planoEntrega.unidade));;\n      case this.BOTAO_HOMOLOGAR:\n        /*\n          (RN_PENT_Y) Para HOMOLOGAR um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade-pai (Unidade A) da Unidade do plano (Unidade B); (RN_PENT_C), ou\n              - a Unidade-pai (Unidade A) for a Unidade de lotação do usuário logado e ele possuir a capacidade \"MOD_PENT_HOMOL\", ou\n              - o usuário logado precisa possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a Unidade-pai (Unidade A); (RN_PENT_E)\n          - A homologação do plano de entregas não se aplica à Unidade instituidora.\n        */\n        let condition1 = this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO';\n        let condition2 = this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_pai_id);\n        let condition3 = this.auth.isLotacaoUsuario(planoEntrega.unidade!.unidade_pai) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL\");\n        let condition4 = this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_pai_id!);\n        return !this.execucao && condition1 && (condition2 || condition3 || condition4);\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AA) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status INCLUIDO, conter ao menos uma entrega (RN_PENT_D), e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_LIB_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'INCLUIDO' && planoEntrega.entregas.length > 0 && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\")));\n      case this.BOTAO_LOGS:\n        /*\n        \n        */\n        return this.auth.isGestorUnidade(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\n      case this.BOTAO_REATIVAR:\n        /*\n          (RN_PENT_AC) Para REATIVAR um plano de entregas:\n          - o plano precisa estar com o status SUSPENSO, e\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_RTV\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RTV\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\n        /*\n          (RN_PENT_AB) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\n          - o plano precisa estar com o status HOMOLOGANDO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B); ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e este possuir a capacidade \"MOD_PENT_RET_HOMOL\"\n        */\n        return !this.execucao && this.planoEntregaService.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")));\n      case this.BOTAO_SUSPENDER:\n        /*\n          (RN_PENT_AD) Para SUSPENDER um plano de entregas:\n          - o plano precisa estar com o status ATIVO, e:\n              - o usuário logado precisa ser gestor da Unidade do plano (Unidade B), ou\n              - a Unidade do plano (Unidade B) precisa ser a Unidade de lotação do usuário logado, e ele possuir a capacidade \"MOD_PENT_SUSP\"; ou\n              - o usuário logado precisa ser gestor de alguma Unidade da linha hierárquica ascendente (Unidade A e superiores) da Unidade do plano (Unidade B);\n        */\n        return this.planoEntregaService.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoUsuario(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\")) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));\n    }\n    return false;\n  }\n\n  public arquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Arquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public avaliar(planoEntrega: PlanoEntrega) {\n    this.go.navigate({route: ['gestao', 'plano-entrega', planoEntrega.id, 'avaliar']}, {\n      modal: true, \n      metadata: { planoEntrega: planoEntrega },\n      modalClose: (modalResult?: Avaliacao) => {\n        if(modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id, [\"avaliacao.tipo_avaliacao.notas\"]).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n          /*consolidacao.status = \"AVALIADO\";\n          consolidacao.avaliacao_id = modalResult.id;\n          consolidacao.avaliacao = modalResult;\n          this.refreshConsolidacao(consolidacao);*/\n        }\n      }\n    });\n  }\n\n  public async cancelarAvaliacao(planoEntrega: PlanoEntrega) {\n    /*this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.cancelarAvaliacao.bind(this.dao) },\n      title: \"Cancelar Avaliação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });*/\n    this.submitting = true;\n    try {\n      let response = await this.avaliacaoDao!.cancelarAvaliacao(planoEntrega.avaliacao!.id);\n      if(response) {\n        (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n          this.checaBotaoAderirToolbar();\n        });\n        /*consolidacao.status = \"CONCLUIDO\";\n        consolidacao.avaliacao_id = null;\n        consolidacao.avaliacao = undefined;\n        this.refreshConsolidacao(consolidacao);*/\n      }\n    } catch (error: any) {\n      this.error(error.message || error);\n    } finally {\n      this.submitting = false;\n    }\n  }\n\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.cancelarConclusao.bind(this.dao) },\n      title: \"Cancelar Conclusão\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.cancelarHomologacao.bind(this.dao) },\n      title: \"Cancelar Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public cancelarPlano(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({}, planoEntrega, {arquivar: true}), novoStatus: \"CANCELADO\", onClick: this.dao!.cancelarPlano.bind(this.dao) },\n      title: \"Cancelar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public concluir(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"CONCLUIDO\", onClick: this.dao!.concluir.bind(this.dao) },\n      title: \"Concluir Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public desarquivar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: Object.assign({},planoEntrega, {arquivar: false}), novoStatus: planoEntrega.status, onClick: this.dao!.arquivar.bind(this.dao) },\n      title: \"Desarquivar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public homologar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.homologar.bind(this.dao) },\n      title: \"Homologar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"HOMOLOGANDO\", onClick: this.dao!.liberarHomologacao.bind(this.dao) },\n      title: \"Liberar para Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public reativar(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"ATIVO\", onClick: this.dao!.reativar.bind(this.dao) },\n      title: \"Reativar Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"INCLUIDO\", onClick: this.dao!.retirarHomologacao.bind(this.dao) },\n      title: \"Retirar de Homologação\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public suspender(planoEntrega: PlanoEntrega) {\n    this.go.navigate(this.routeStatus, {\n      metadata: { tipo: \"PlanoEntrega\", entity: planoEntrega, novoStatus: \"SUSPENSO\", onClick: this.dao!.suspender.bind(this.dao) },\n      title: \"Suspender Plano de Entregas\",\n      modalClose: (modalResult) => {\n        if (modalResult) {\n          (this.grid?.query || this.query!).refreshId(planoEntrega.id).then(() => {\n            this.checaBotaoAderirToolbar();\n          });\n        };\n      }\n    });\n  }\n\n  public canAdd() {\n    return this.auth.hasPermissionTo('MOD_PENT_INCL');\n    /*\n    - (RN_PENT_Z) ... O usuário logado precisa possuir a capacidade \"MOD_PENT_INCL\"\n     */\n  }\n}\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"canAdd()\"\r\n    [hasEdit]=\"false\" [loadList]=\"onGridLoad.bind(this)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch *ngIf=\"!avaliacao\" [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\" [control]=\"filter!.controls.principais\" (change)=\"onPrincipaisChange($event)\" [labelInfo]=\"lex.noun('Unidade', true) + ' onde o ' + lex.noun('usuario') + ' é integrante, incluindo unidades superiores das geridas por ele'\"></input-switch>\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"4\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.translate('plano de entrega')\" [attr.maxlength]=250></input-text>\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [control]=\"filter!.controls.status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" [filter]=\"avaliacao ? ['CONCLUIDO', 'AVALIADO'] : undefined\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n            <input-switch [size]=\"1\" label=\"Arq.\" controlName=\"arquivadas\" [control]=\"filter!.controls.arquivadas\" labelInfo=\"Listar também os planos de entregas arquivados\"></input-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"3\" [control]=\"filter!.controls.planejamento_id\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"3\" [control]=\"filter!.controls.cadeia_valor_id\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-select [size]=\"2\" label=\"Data\" itemTodos=\"- Nenhum -\" [valueTodos]=\"null\" controlName=\"data_filtro\" [control]=\"filter!.controls.data_filtro\" [items]=\"DATAS_FILTRO\"></input-select>\r\n            <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Início\" controlName=\"data_filtro_inicio\" [control]=\"filter!.controls.data_filtro_inicio\" labelInfo=\"Data início do período\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date [disabled]=\"filter!.controls.data_filtro.value == null ? 'true' : undefined\" label=\"Fim\" controlName=\"data_filtro_fim\" [control]=\"filter!.controls.data_filtro_fim\" labelInfo=\"Data fim do período\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-list-check\" [align]=\"'center'\" [hint]=\"lex.translate('Entrega')\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-list-check\"></i> {{row.entregas?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [disabled]=\"avaliacao || !botaoAtendeCondicoes(BOTAO_ALTERAR, row)\" [entity]=\"row\" [execucao]=\"execucao\" [cdRef]=\"cdRef\" [planejamentoId]=\"row.planejamento_id\" [cadeiaValorId]=\"row.cadeia_valor_id\" [unidadeId]=\"row.unidade_id\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleNomeProgramaUnidade\" [template]=\"columnNome\">\r\n            <ng-template let-header=\"header\" #titleNomeProgramaUnidade>\r\n                <order by=\"nome\" [header]=\"header\">Nome</order><br>\r\n                Programa{{ !filter!.controls.agrupar.value ? ' - Unidade' : ''}}\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome}}</span><br>\r\n                <badge [icon]=\"entityService.getIcon('Programa')\" [label]=\"row.programa.nome\" color=\"light\"></badge>\r\n                <badge *ngIf=\"!filter!.controls.agrupar.value\" color=\"secondary\" [icon]=\"entityService.getIcon(lex.translate('unidade'))\" [label]=\"row.unidade.sigla\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"data_inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.data_inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"data_fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeia_valor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeia_valor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Status\\nAvaliação'\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge><br>\r\n                <badge *ngIf=\"row.data_arquivamento\" color=\"warning\" icon=\"bi bi-inboxes\" label=\"Arquivado\"></badge>\r\n                <badge *ngIf=\"row.deleted_at\" color=\"danger\" icon=\"bi bi-trash3\" label=\"Excluído\"></badge>\r\n                <avaliar-nota-badge *ngIf=\"row.avaliacao\" [align]=\"'left'\" [tipoAvaliacao]=\"row.avaliacao.tipo_avaliacao\" [nota]=\"row.avaliacao.nota\"></avaliar-nota-badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoDao?: PlanejamentoObjetivoDaoService;\r\n  public processoDao?: CadeiaValorProcessoDaoService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n  public objetivo!: PlanejamentoObjetivo;\r\n  public processo!: CadeiaValorProcesso;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    this.objetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.processoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n\r\n    /* Inicializações */\r\n    this.join = [\"plano_entrega.unidade\"];\r\n    this.title = this.lex.translate(\"Entregas\");\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      data_inicio: {default: null},\r\n      data_fim: {default: null}\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n    if(this.objetivoId){\r\n      this.objetivoDao?.getById(this.objetivoId, [\"planejamento\"]).then(obj => {\r\n        this.objetivo = obj!\r\n      })\r\n    }\r\n    if(this.processoId){\r\n      this.processoDao?.getById(this.processoId, ['cadeia_valor']).then(processo => {\r\n        this.processo = processo!\r\n      })\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.data_inicio.setValue(null);\r\n    filter.controls.data_fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.data_inicio) result.push([\"data_inicio\", \">=\", form.data_inicio]);\r\n    if(form.data_fim) result.push([\"data_fim\", \"<=\", form.data_fim]);\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<ng-container *ngIf=\"objetivo\">\r\n    <planejamento-show [planejamento]=\"objetivo.planejamento\" *ngIf=\"objetivo.planejamento\"></planejamento-show>\r\n    <div class=\"objetivos arrow_box w-100\">\r\n        <h5>Objetivo:</h5>\r\n        <h6>{{objetivo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"processo\">\r\n    <div class=\"planejamento arrow_box first-box w-100\" *ngIf=\"processo.cadeia_valor\">\r\n        <h6>Cadeia de valor:</h6>\r\n        <h4>{{processo.cadeia_valor.nome}}</h4>        \r\n    </div>\r\n    <div class=\"procesos arrow_box w-100\">\r\n        <h5>Processo:</h5>\r\n        <h6>{{processo.nome}}</h6>\r\n    </div>\r\n</ng-container>\r\n\r\n<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\"\r\n        [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [control]=\"filter!.controls.unidade_id\" controlName=\"unidade_id\"\r\n                [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" [control]=\"filter!.controls.entrega_id\" controlName=\"entrega_id\"\r\n                [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"data_inicio\"\r\n                [control]=\"filter!.controls.data_inicio\"\r\n                labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"data_fim\"\r\n                [control]=\"filter!.controls.data_fim\"\r\n                labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n\r\n        <column [title]=\"'Entrega\\nDemandante/Destinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                {{row.descricao}}<br>\r\n                <span class=\"d-block\">\r\n                    <badge *ngIf=\"row.plano_entrega.unidade\" color=\"light\" [icon]=\"entityService.getIcon('Unidade')\"\r\n                        [label]=\"row.plano_entrega.unidade.sigla\"></badge>\r\n                    <badge *ngIf=\"row.destinatario?.length\" color=\"light\" icon=\"bi bi-mailbox\"\r\n                        [label]=\"row.destinatario\"></badge>\r\n                </span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span *ngIf=\"row.data_inicio\"> {{dao!.getDateFormatted(row.data_inicio)}}</span><br>\r\n                <span *ngIf=\"row.data_fim\"> {{dao!.getDateFormatted(row.data_fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <!--<column [title]=\"'Meta'\" [width]=\"200\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <badge icon=\"bi bi-graph-up-arrow\" [textValue]=\"entregaService.getValorMeta(row)\" color=\"light\" hint=\"Planejada\"></badge><br>\r\n                <badge icon=\"bi bi-check-lg\" [textValue]=\"entregaService.getValorRealizado(row)\" color=\"light\" hint=\"Realizada\"></badge>\r\n            </ng-template>\r\n        </column>-->\r\n        <column [title]=\"'Progresso'\" [width]=\"200\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" [goal]=\"row.progresso_esperado\"\r\n                    color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n\r\n        <!--LAYOUT ANTIGO\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.data_inicio)}} - {{util.getDateFormatted(row.data_fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.translate('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    -->\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { AvaliarComponent } from '../../uteis/avaliar/avaliar.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entregas\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Entregas\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Entregas\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Entregas\", modal: true } },\r\n  { path: ':id/logs', component: PlanoEntregaListLogsComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Logs de Alterações em Planos de Entregas\", modal: true } },\r\n  { path: ':planoEntregaId/avaliar', component: AvaliarComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Avaliar Plano de Entrega\" } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/:id/consult', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta entrega do Plano de Entregas\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão a Plano de Entregas\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Entrega } from 'src/app/models/entrega.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-valor-meta-input',\n  templateUrl: './plano-entrega-valor-meta-input.component.html',\n  styleUrls: ['./plano-entrega-valor-meta-input.component.scss']\n})\nexport class PlanoEntregaValorMetaInputComponent {\n  @HostBinding('class') class = 'form-group';\n  @Input() entrega?: Entrega;\n  @Input() icon: string = \"\";\n  @Input() label?: string;\n  @Input() labelInfo: string = \"\";\n  @Input() disabled?: string;\n  @Input() control?: AbstractControl;\n  @Input() change?: (value: any, entrega?: Entrega) => void;\n  @Input() set size(size: number) {\n    if (size != this._size) {\n      this._size = size;\n      this.class = this.class.replace(/\\scol\\-md\\-[0-9]+/g, \"\") + \" col-md-\" + size;\n    }\n  }\n  public get size(): number {\n    return this._size || 12;\n  }\n\n  private _size: number = 0;\n\n  public checkTipoIndicador(tipos: string[]): boolean {\n    return tipos.includes(this.entrega?.tipo_indicador || \"\");\n  }\n\n  public onValueChange(event: Event) {\n    if (this.change) this.change(this.control?.value, this.entrega);\n  }\n}\n","<input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Porcentagem'\" [control]=\"control\" sufix=\"%\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\n<input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Numérico'\" [control]=\"control\"  (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-number>\n<input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [disabled]=\"disabled\" [icon]=\"icon\" [label]=\"label || 'Qualitativo'\" [control]=\"control\" [items]=\"entrega?.lista_qualitativos || []\" (change)=\"onValueChange($event)\" [labelInfo]=\"labelInfo\" required></input-select>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\nimport { PlanoEntregaListLogsComponent } from './plano-entrega-list-logs/plano-entrega-list-logs.component';\r\nimport { UteisModule } from '../../uteis/uteis.module';\r\nimport { PlanoEntregaValorMetaInputComponent } from './plano-entrega-valor-meta-input/plano-entrega-valor-meta-input.component';\r\nimport { PlanoEntregaEntregasPlanoTrabalhoComponent } from './plano-entrega-entregas-plano-trabalho/plano-entrega-entregas-plano-trabalho.component';\r\nimport { PlanoTrabalhoEntregaAtividadesComponent } from './plano-trabalho-entrega-atividades/plano-trabalho-entrega-atividades.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent,\r\n    PlanoEntregaListLogsComponent,\r\n    PlanoEntregaValorMetaInputComponent,\r\n    PlanoEntregaEntregasPlanoTrabalhoComponent,\r\n    PlanoTrabalhoEntregaAtividadesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule,\r\n    UteisModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { Atividade } from 'src/app/models/atividade.model';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\n\n@Component({\n  selector: 'plano-trabalho-entrega-atividades',\n  templateUrl: './plano-trabalho-entrega-atividades.component.html',\n  styleUrls: ['./plano-trabalho-entrega-atividades.component.scss']\n})\nexport class PlanoTrabalhoEntregaAtividadesComponent extends PageFrameBase {\n  @ViewChild('listaAtividades', { static: false }) public listaAtividades?: GridComponent;\n\n  @Input() set entregaId(value: string) {\n    if(this._entregaId != value) {\n      this._entregaId = value;\n    }\n  }  \n  get entregaId(): string {\n    return this._entregaId;\n  }\n\n  private _entregaId!: string;\n  public AtividadeDao: AtividadeDaoService;\n  public items: Atividade[] = [];\n\n  public loader: boolean = false;\n\n  constructor(public injector: Injector){\n    super(injector);\n    this.AtividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\n    this.join = ['unidade', 'usuario','demandante']\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  public loadData() {\n    this.loader = true;\n    this.AtividadeDao.query({where: [[\"plano_trabalho_entrega_id\", \"==\", this._entregaId]], join: this.join}).asPromise().then(response => {\n      this.items = response\n    }).finally(()=> {\n      this.loader = false;\n    })\n  }\n\n}\n","<h5>Atividades:</h5>\n<grid [items]=\"items\" [loading]=\"loader\">\n  <columns>\n    <column [titleTemplate]=\"titleIdAtividadeDescricao\" [template]=\"columnAtividadeDescricao\">\n      <ng-template let-header=\"header\" #titleIdAtividadeDescricao>          \n          <b>Descrição</b>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnAtividadeDescricao>\n        <span class=\"micro-text fw-ligh atividade-descricao\">{{row.descricao}}</span>\n      </ng-template>\n    </column>\n\n    <column [titleTemplate]=\"titleUnResponsavelDemandante\" [template]=\"columnPessoas\">\n      <ng-template let-header=\"header\" #titleUnResponsavelDemandante>\n          Un./<order by=\"usuario.nome\" [header]=\"header\">Responsável</order><br>\n          <order by=\"demandante.nome\" [header]=\"header\">Demandante</order>\n      </ng-template>\n      <ng-template let-row=\"row\" #columnPessoas>\n          <div class=\"text-nowrap\">\n              <badge icon=\"bi bi-briefcase\" color=\"light\" [label]=\"row.unidade.sigla\"></badge>\n              <badge [icon]=\"'bi ' + (row.usuario?.nome?.length ? 'bi-person-check' : 'bi-person-x')\" color=\"light\" [label]=\"util.apelidoOuNome(row.usuario, true) || '(Não atribuído)'\" [hint]=\"'Responsável: ' + (row.usuario?.nome || 'Não atribuido a nenhum usuário')\"></badge>\n          </div>\n          <badge icon=\"bi bi-cursor\" color=\"light\" [label]=\"util.apelidoOuNome(row.demandante, true) || 'Desconhecido'\" [hint]=\"'Demandante: ' + (row.demandante?.nome || 'Desconhecido')\"></badge>\n      </ng-template>\n    </column>\n\n    <column [title]=\"'Progresso'\" [width]=\"200\"[template]=\"columnProgressoEtiquetasChecklist\">\n      <ng-template let-row=\"row\" #columnProgressoEtiquetasChecklist>\n        <progress-bar [value]=\"row.progresso\" color=\"success\"></progress-bar>\n      </ng-template>\n    </column>\n\n  </columns>\n</grid>\n"],"names":["Base","PlanoEntrega","constructor","data","entregas","status_historico","data_inicio","Date","data_fim","nome","metadados","undefined","arquivar","status","avaliacoes","unidade_id","avaliacao_id","plano_entrega_id","planejamento_id","cadeia_valor_id","programa_id","initialization","PlanoTrabalhoDaoService","PlanoTrabalhoEntregaDaoService","PageFrameBase","PlanoTrabalhoService","i0","ɵɵelement","ɵɵproperty","row_r37","id","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r22","PlanoTrabalhoDao","getDateFormatted","plano_r16","ɵɵtextInterpolate","row_r42","plano_entrega_entrega","plano_entrega","unidade","sigla","ctx_r43","entityService","getIcon","orgao","ɵɵtemplate","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_3_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_badge_4_Template","ctx_r26","planoTrabalhoService","tipoEntrega","entity","titulo","cor","plano_entrega_entrega_id","length","ctx_r28","totalForcaTrabalho","row_r49","forca_trabalho","row_r51","descricao","ctx_r36","lookup","getColor","PLANO_TRABALHO_STATUS","getValue","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_5_Template","ɵɵtemplateRefExtractor","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_10_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_15_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_18_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_20_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_23_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_25_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_ng_template_28_Template","ɵɵstyleMap","_r17","_r21","_r19","_r23","_r25","_r27","_r29","_r31","_r33","_r35","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_div_3_Template","item_r14","planos_trabalho","row_r55","apelido","ctx_r12","planoAtivo","row_r57","PlanoEntregaEntregasPlanoTrabalhoComponent","entregaId","value","_entregaId","injector","items","loader","get","PlanoTrabalhoEntregaDao","join","groupBy","field","label","ngOnInit","loadData","cdRef","detectChanges","query","where","asPromise","then","response","forEach","item","usuario","plano_trabalho","usuarioId","usuarioExistente","find","u","push","planoTrabalhoId","planoTrabalho","pt","entrega","finally","e","console","log","forca","map","x","reduce","a","b","Math","round","planos","plano","_","ɵɵdirectiveInject","Injector","_2","selectors","viewQuery","PlanoEntregaEntregasPlanoTrabalhoComponent_Query","rf","ctx","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_6_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_8_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_11_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_13_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_16_Template","PlanoEntregaEntregasPlanoTrabalhoComponent_ng_template_18_Template","_r3","_r1","_r5","_r7","_r9","_r11","EditableFormComponent","GridComponent","InputSearchComponent","CadeiaValorDaoService","PlanejamentoDaoService","PlanoEntregaDaoService","ProgramaDaoService","UnidadeDaoService","PageFormBase","PlanoEntregaFormAdesaoComponent","validate","control","controlName","result","indexOf","titleEdit","lex","translate","unidadeDao","programaDao","planoEntregaDao","cadeiaValorDao","planejamentoInstitucionalDao","modalWidth","form","fh","FormBuilder","default","auth","planoEntrega","metadata","controls","setValue","_this","_asyncToGenerator","formValue","Object","assign","patchValue","util","fillForm","initializeData","_this2","saveData","_this3","Promise","resolve","reject","fill","onPlanoEntregaChange","event","selectedEntity","PlanoEntregaFormAdesaoComponent_Query","ɵɵlistener","PlanoEntregaFormAdesaoComponent_Template_editable_form_submit_0_listener","onSaveData","PlanoEntregaFormAdesaoComponent_Template_editable_form_cancel_0_listener","onCancel","PlanoEntregaFormAdesaoComponent_Template_input_search_change_3_listener","$event","formDisabled","isModal","title","ɵɵpureFunction2","_c3","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c2","_c1","unidade_pai_id","_c6","_c4","_c5","ɵɵattribute","PlanoEntregaEntregaDaoService","PlanoEntregaEntrega","EntregaDaoService","PlanejamentoObjetivoDaoService","CadeiaValorProcessoDaoService","NavigateResult","PlanoEntregaService","ctx_r3","meta","realizado","onRealizadoChange","bind","header_r15","row_r16","objetivo","_c12","_c11","ctx_r14","planejamentoId","planejamentoObjetivoDao","_c16","_c13","_c15","_c14","PlanoEntregaFormEntregaComponent_tab_39_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_39_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_39_ng_template_11_Template","ctx_r5","planejamentoDao","objetivos","formObjetivos","orderBy","addObjetivo","removeObjetivo","saveObjetivo","_r13","header_r27","row_r28","processo","_c17","cadeiaValorId","cadeiaValorProcessoDao","_c18","_c19","PlanoEntregaFormEntregaComponent_tab_40_ng_template_7_Template","PlanoEntregaFormEntregaComponent_tab_40_ng_template_9_Template","PlanoEntregaFormEntregaComponent_tab_40_ng_template_11_Template","ctx_r6","processos","formProcessos","addProcesso","removeProcesso","saveProcesso","dynamicButtonsProcessos","PlanoEntregaFormEntregaComponent","itensQualitativo","idsUnidadesAscendentes","checklist","etiquetas","dao","validDateTime","gridObjetivos","planejamento_objetivo_id","includes","gridProcessos","cadeia_processo_id","formValidation","inicio","fim","editing","tabs","active","entregaDao","planoEntregaEntregaDao","planoEntregaService","entrega_pai_id","entrega_id","progresso_esperado","progresso_realizado","destinatario","listaQualitativo","objetivo_id","etiqueta","formChecklist","texto","checked","unidadeId","onEntregaChange","entityWithout","loadSearch","planejamento","cadeiaValor","getById","path","split","slice","getValor","confirm","valueWithout","getEntregaValor","calculaRealizado","totalRealizado","isNaN","toFixed","dynamicOptionsObjetivos","row","icon","color","onClick","dynamicButtonsObjetivos","generateUuid","_status","_this4","dialog","_this5","consolidado","inputObjetivo","selectedItem","_this6","_this7","_this8","inputProcesso","_this9","entregaItem","tipoIndicador","tipo_indicador","lista_qualitativos","key","loadEtiquetas","loadChecklist","merge","modeloEntrega","checkAdd","addItemHandleEtiquetas","textHash","validateLookupItem","PlanoEntregaFormEntregaComponent_Query","PlanoEntregaFormEntregaComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormEntregaComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormEntregaComponent_Template_input_search_change_7_listener","PlanoEntregaFormEntregaComponent_div_22_Template","PlanoEntregaFormEntregaComponent_tab_39_Template","PlanoEntregaFormEntregaComponent_tab_40_Template","_c20","_c22","_c21","_c23","PlanoEntregaFormComponent","programa","di","toLocaleDateString","df","filter","dynamicButtons","onDataChange","sugereNome","onUnidadeChange","action","somaDia","date","days","setDate","getDate","onProgramaChange","dias","prazo_max_plano_entrega","dataFim","change","emit","PlanoEntregaFormComponent_Query","PlanoEntregaFormComponent_Template_editable_form_submit_0_listener","PlanoEntregaFormComponent_Template_editable_form_cancel_0_listener","PlanoEntregaFormComponent_Template_input_search_change_3_listener","PlanoEntregaFormComponent_Template_input_search_change_5_listener","PlanoEntregaFormComponent_Template_input_datetime_change_7_listener","PlanoEntregaFormComponent_Template_input_datetime_change_8_listener","PageListBase","ctx_r0","ctx_r1","buttons","row_r12","row_r13","row_r14","entrega_pai","PlanoEntregaListEntregaListComponent_ng_template_17_span_0_Template","ctx_r9","getValorMeta","row_r17","getValorRealizado","row_r18","PlanoEntregaListEntregaListComponent","filterWhere","trim","replace","dynamicOptions","go","navigate","route","modal","filterClear","PlanoEntregaListEntregaListComponent_Query","PlanoEntregaListEntregaListComponent_h3_0_Template","PlanoEntregaListEntregaListComponent_Template_grid_select_1_listener","onSelect","PlanoEntregaListEntregaListComponent_toolbar_2_Template","PlanoEntregaListEntregaListComponent_ng_template_11_Template","PlanoEntregaListEntregaListComponent_ng_template_14_Template","PlanoEntregaListEntregaListComponent_ng_template_17_Template","PlanoEntregaListEntregaListComponent_ng_template_20_Template","PlanoEntregaListEntregaListComponent_ng_template_23_Template","selectable","hasPermissionTo","filterSubmit","filterCollapseChange","filterCollapsed","_r2","_r4","_r6","_r8","_r10","rowsLimit","ChangeDetectorRef","separator_r26","text","row_r27","PlanoEntregaListEntregaComponent_ng_template_5_span_0_Template","row_r30","row_r31","ctx_r33","PlanoEntregaListEntregaComponent_ng_template_10_badge_0_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_3_Template","PlanoEntregaListEntregaComponent_ng_template_10_badge_4_Template","etiqueta_r40","PlanoEntregaListEntregaComponent_ng_template_13_badge_0_Template","row_r38","PlanoEntregaListEntregaComponent_ng_template_15_Template_input_select_details_1_listener","ɵɵrestoreView","_r44","ɵɵnextContext","ɵɵresetView","onEtiquetaConfigClick","ctx_r11","formEdit","ctx_r46","row_r45","ctx_r47","PlanoEntregaListEntregaComponent_ng_template_18_span_0_Template","PlanoEntregaListEntregaComponent_ng_template_18_span_2_Template","ctx_r15","row_r50","ctx_r17","onRealizadaChange","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_table_1_tr_1_i_2_Template","check_r56","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_table_1_tr_1_Template","row_r52","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_table_1_Template","PlanoEntregaListEntregaComponent_ng_template_26_separator_1_Template","ctx_r63","i_r65","check_r64","PlanoEntregaListEntregaComponent_ng_template_28_table_2_tr_1_Template","ctx_r62","PlanoEntregaListEntregaComponent_ng_template_28_separator_1_Template","PlanoEntregaListEntregaComponent_ng_template_28_table_2_Template","ctx_r21","row_r60","PlanoEntregaListEntregaComponent_ng_template_31_separator_0_div_1_Template_button_click_1_listener","restoredCtx","_r72","pObjetivo_r70","$implicit","ctx_r71","showPlanejamento","PlanoEntregaListEntregaComponent_ng_template_31_separator_0_div_1_Template","ctx_r67","row_r66","PlanoEntregaListEntregaComponent_ng_template_31_separator_1_div_1_Template_button_click_1_listener","_r77","pProcesso_r75","ctx_r76","showCadeiaValor","PlanoEntregaListEntregaComponent_ng_template_31_separator_1_div_1_Template","ctx_r68","PlanoEntregaListEntregaComponent_ng_template_31_separator_0_Template","PlanoEntregaListEntregaComponent_ng_template_31_separator_1_Template","row_r79","PlanoEntregaListEntregaComponent_ng_template_34_badge_0_Template","ctx_r25","execucao","grid","refreshComentarios","PlanoEntregaListEntregaComponent","noPersist","_planejamentoId","_cadeiaValorId","_unidadeId","gridControl","disabled","entityToControl","options","planoEntregaId","code","addOption","consult","OPTION_INFORMACOES","delete","OPTION_EXCLUIR","showLogs","OPTION_LOGS","urlParams","isDisabled","add","modalClose","_ref","modalResult","isNoPersist","save","error","message","_x","apply","arguments","edit","index","_ref2","_x2","load","markAllAsTouched","valid","submitting","update","splice","topAlert","catch","alert","processo_id","comentarios","onColumnEtiquetasEdit","_this10","tipo_atividade","config","onColumnEtiquetasSave","_this11","saved","params","onColumnChecklistEdit","_this12","clone","onColumnChecklistSave","_this13","PlanoEntregaListEntregaComponent_Query","PlanoEntregaListEntregaComponent_ng_template_1_Template","PlanoEntregaListEntregaComponent_ng_template_5_Template","PlanoEntregaListEntregaComponent_ng_template_7_Template","PlanoEntregaListEntregaComponent_ng_template_10_Template","PlanoEntregaListEntregaComponent_ng_template_13_Template","PlanoEntregaListEntregaComponent_ng_template_15_Template","PlanoEntregaListEntregaComponent_ng_template_18_Template","PlanoEntregaListEntregaComponent_ng_template_21_Template","PlanoEntregaListEntregaComponent_ng_template_23_Template","PlanoEntregaListEntregaComponent_ng_template_26_Template","PlanoEntregaListEntregaComponent_ng_template_28_Template","PlanoEntregaListEntregaComponent_ng_template_31_Template","PlanoEntregaListEntregaComponent_ng_template_34_Template","_r0","_r12","_r14","_r16","_r18","_r20","_r22","_r24","ChangeDaoService","Change","responsavel","ctx_r8","getDateTimeFormatted","date_time","dif_r20","ctx_r19","PlanoEntregaListLogsComponent_ng_template_27_tr_3_Template","preparaDelta","PlanoEntregaListLogsComponent","responsaveis","planoId","responsavel_id","tipo","ngAfterViewInit","type","novoDelta","delta","Array","entries","element","toUTCString","i1","PlanoEntregaListLogsComponent_Query","PlanoEntregaListLogsComponent_ng_template_15_Template","PlanoEntregaListLogsComponent_ng_template_17_Template","PlanoEntregaListLogsComponent_ng_template_20_Template","PlanoEntregaListLogsComponent_ng_template_22_Template","PlanoEntregaListLogsComponent_ng_template_25_Template","PlanoEntregaListLogsComponent_ng_template_27_Template","numero","TIPO_LOG_CHANGE","AvaliacaoDaoService","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template_input_switch_change_0_listener","ctx_r24","onPrincipaisChange","ctx_r23","principais","noun","PlanoEntregaListComponent_toolbar_1_Template_input_switch_change_1_listener","onAgruparChange","PlanoEntregaListComponent_toolbar_1_input_switch_2_Template","toolbarButtons","agrupar","avaliacao","row_r32","PlanoEntregaListComponent_column_18_ng_template_1_span_0_Template","ctx_r31","botaoAtendeCondicoes","BOTAO_ALTERAR","row_r35","PlanoEntregaListComponent_column_18_ng_template_1_Template","PlanoEntregaListComponent_column_18_ng_template_3_Template","ctx_r4","_r28","_r30","header_r36","header_r38","ctx_r10","ctx_r40","row_r39","PlanoEntregaListComponent_ng_template_27_badge_4_Template","ɵɵstyleProp","ctx_r16","row_r43","cadeia_valor","PlanoEntregaListComponent_ng_template_38_badge_0_Template","PlanoEntregaListComponent_ng_template_38_badge_1_Template","tipo_avaliacao","nota","PlanoEntregaListComponent_ng_template_41_badge_2_Template","PlanoEntregaListComponent_ng_template_41_badge_3_Template","PlanoEntregaListComponent_ng_template_41_avaliar_nota_badge_4_Template","PLANO_ENTREGA_STATUS","data_arquivamento","deleted_at","PlanoEntregaListComponent","showFilter","habilitarAdesaoToolbar","botoes","routeStatus","DATAS_FILTRO","filterValidate","data_filtro_fim","data_filtro_inicio","w1","unidades","isGestorAlgumaAreaTrabalho","unidadesUsuarioEhGestor","isGestorUnidade","w2","unidade_pai","w3","data_filtro","unidades_filhas","arquivadas","avaliacaoDao","unidadeSelecionada","BOTAO_ADERIR_OPTION","linha","refresh","BOTAO_ADERIR_TOOLBAR","modalRefreshId","BOTAO_ARQUIVAR","BOTAO_AVALIAR","avaliar","BOTAO_CANCELAR_PLANO","cancelarPlano","BOTAO_CANCELAR_AVALIACAO","cancelarAvaliacao","BOTAO_CANCELAR_CONCLUSAO","cancelarConclusao","BOTAO_CANCELAR_HOMOLOGACAO","cancelarHomologacao","BOTAO_CONCLUIR","concluir","BOTAO_CONSULTAR","BOTAO_DESARQUIVAR","desarquivar","BOTAO_EXCLUIR","BOTAO_HOMOLOGAR","homologar","BOTAO_LIBERAR_HOMOLOGACAO","liberarHomologacao","BOTAO_LOGS","BOTAO_REATIVAR","reativar","BOTAO_RETIRAR_HOMOLOGACAO","retirarHomologacao","BOTAO_SUSPENDER","suspender","queryParams","unidadeGestor","checaBotaoAderirToolbar","ngAfterContentChecked","onGridLoad","rows","extra","v","expand","tipos_avaliacoes","tipo_avaliacao_id","planosEntregasAtivosUnidadePai","planos_entrega","isAtivo","planosEntregasAtivosUnidadeSelecionada","reloadFilter","situacaoPlano","botao","isLotacaoUsuario","intersection","start","end","condicao0","condicao1","condicao2","condicao3","isIntegrante","condicao4","condicao5","isValido","condic1","condic2","condic3","condic4","isGestorLinhaAscendente","condition1","condition2","condition3","condition4","novoStatus","refreshId","canAdd","PlanoEntregaListComponent_Query","PlanoEntregaListComponent_Template_grid_select_0_listener","PlanoEntregaListComponent_toolbar_1_Template","PlanoEntregaListComponent_column_18_Template","PlanoEntregaListComponent_ng_template_20_Template","PlanoEntregaListComponent_ng_template_22_Template","PlanoEntregaListComponent_ng_template_25_Template","PlanoEntregaListComponent_ng_template_27_Template","PlanoEntregaListComponent_ng_template_30_Template","PlanoEntregaListComponent_ng_template_33_Template","PlanoEntregaListComponent_ng_template_36_Template","PlanoEntregaListComponent_ng_template_38_Template","PlanoEntregaListComponent_ng_template_41_Template","_r15","ɵɵelementContainerStart","PlanoEntregaMapaEntregasComponent_ng_container_0_planejamento_show_1_Template","ɵɵelementContainerEnd","PlanoEntregaMapaEntregasComponent_ng_container_1_div_1_Template","ctx_r13","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_3_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_badge_4_Template","ctx_r18","PlanoEntregaMapaEntregasComponent_ng_template_17_span_0_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_span_2_Template","row_r22","PlanoEntregaMapaEntregasComponent","objetivoId","processoId","entregaService","objetivoDao","processoDao","obj","PlanoEntregaMapaEntregasComponent_Query","PlanoEntregaMapaEntregasComponent_ng_container_0_Template","PlanoEntregaMapaEntregasComponent_ng_container_1_Template","PlanoEntregaMapaEntregasComponent_ng_template_14_Template","PlanoEntregaMapaEntregasComponent_ng_template_17_Template","PlanoEntregaMapaEntregasComponent_ng_template_20_Template","RouterModule","AuthGuard","ConfigResolver","AvaliarComponent","routes","component","canActivate","runGuardsAndResolvers","PlanoEntregaRoutingModule","_3","forChild","imports","exports","PlanoEntregaValorMetaInputComponent_input_number_0_Template_input_number_change_0_listener","onValueChange","labelInfo","PlanoEntregaValorMetaInputComponent_input_number_1_Template_input_number_change_0_listener","PlanoEntregaValorMetaInputComponent_input_select_2_Template_input_select_change_0_listener","ctx_r7","ctx_r2","PlanoEntregaValorMetaInputComponent","class","_size","size","checkTipoIndicador","tipos","hostVars","hostBindings","PlanoEntregaValorMetaInputComponent_HostBindings","PlanoEntregaValorMetaInputComponent_input_number_0_Template","PlanoEntregaValorMetaInputComponent_input_number_1_Template","PlanoEntregaValorMetaInputComponent_input_select_2_Template","CommonModule","ComponentsModule","PlanejamentoModule","CadeiaValorModule","UteisModule","PlanoTrabalhoEntregaAtividadesComponent","PlanoEntregaModule","declarations","AtividadeDaoService","row_r11","header_r12","apelidoOuNome","demandante","progresso","AtividadeDao","PlanoTrabalhoEntregaAtividadesComponent_Query","PlanoTrabalhoEntregaAtividadesComponent_ng_template_5_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_7_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_10_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_12_Template","PlanoTrabalhoEntregaAtividadesComponent_ng_template_15_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}