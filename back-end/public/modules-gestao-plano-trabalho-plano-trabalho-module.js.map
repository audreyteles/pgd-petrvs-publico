{"version":3,"sources":["./src/app/models/plano-trabalho-entrega.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho.module.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form-termo/plano-trabalho-form-termo.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-form/plano-trabalho-form.component.html","./src/app/models/plano-trabalho-atividade.model.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.ts","./src/app/modules/gestao/plano-trabalho/plano-trabalho-list-entrega/plano-trabalho-list-entrega.component.html","./src/app/modules/gestao/plano-trabalho/plano-trabalho-routing.module.ts"],"names":[],"mappings":"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","file":"modules-gestao-plano-trabalho-plano-trabalho-module.js","sourcesContent":["import { Base } from './base.model';\r\nimport { Entrega } from './entrega.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { PlanoTrabalho } from './plano-trabalho.model';\r\n\r\nexport class PlanoTrabalhoEntrega extends Base {\r\n    public plano_trabalho?: PlanoTrabalho;\r\n    public entrega?: Entrega;\r\n    public plano_entrega_entrega?: PlanoEntregaEntrega;\r\n\r\n    public descricao: string = \"\";\r\n    public forca_trabalho: number = 1;\r\n\r\n    public plano_trabalho_id: string = \"\";\r\n    public entrega_id: string | null = null;\r\n    public plano_entrega_entrega_id: string | null = null;\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlanoTrabalhoRoutingModule } from './plano-trabalho-routing.module';\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UteisModule } from '../../uteis/uteis.module';\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\n\n\n@NgModule({\n  declarations: [\n    PlanoTrabalhoFormComponent,\n    PlanoTrabalhoListComponent,\n    PlanoTrabalhoListEntregaComponent,\n    PlanoTrabalhoFormTermoComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    PlanoTrabalhoRoutingModule,\n    UteisModule\n  ]\n})\nexport class PlanoTrabalhoModule { }\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { SeiKeys } from 'src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { TipoDocumento } from 'src/app/models/tipo-documento.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { NavigateResult } from 'src/app/services/navigate.service';\n\n@Component({\n  selector: 'plano-trabalho-form-termo',\n  templateUrl: './plano-trabalho-form-termo.component.html',\n  styleUrls: ['./plano-trabalho-form-termo.component.scss']\n})\n\nexport class PlanoTrabalhoFormTermoComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  @ViewChild('programa', { static: false }) public programa?: InputSearchComponent;\n  @ViewChild('tipoDocumento', { static: false }) public tipoDocumento?: InputSearchComponent;\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public documentoDao: DocumentoDaoService;\n  public tipoDocumentoDao: TipoDocumentoDaoService;\n  public allPages: ListenerAllPagesService;\n  public processo?: SeiKeys;\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.join = [\"unidade\", \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos\", \"atividades.atividade\"];\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n\n    this.form = this.fh.FormBuilder({\n      carga_horaria: {default: \"\"},\n      tempo_total: {default: \"\"},\n      tempo_proporcional: {default: \"\"},\n      data_inicio_vigencia: {default: new Date()},\n      data_fim_vigencia: {default: new Date()},\n      programa_id: {default: \"\"},\n      usuario_id: {default: \"\"},\n      unidade_id: {default: \"\"},\n      documento_id: {default: \"\"},\n      documentos: {default: []},\n      tipo_documento_id: {default: \"\"},\n      numero_processo: {default: \"\"},\n      vinculadas: {default: true},\n      tipo_modalidade_id: {default: \"\"},\n      forma_contagem_carga_horaria: {default: \"DIA\"}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == \"tipo_documento_id\" && !control?.value?.length && this.form?.controls?.numero_processo?.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    if(!this.tipoDocumento?.searchObj && form?.controls.tipo_documento_id.value?.length) {\n      return \"Aguarde o carregamento do tipo de documento\";\n    }\n    return undefined;\n  } \n\n  public onVinculadasChange(event: Event) {\n    this.cdRef.detectChanges();\n  }\n\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    formValue = this.util.fillForm(formValue, entity);\n    await Promise.all ([\n      this.unidade!.loadSearch(entity.unidade || entity.unidade_id),\n      this.usuario!.loadSearch(entity.usuario || entity.usuario_id),\n      this.programa!.loadSearch(entity.programa || entity.programa_id),\n      this.tipoModalidade!.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id)\n    ]);\n    if(this.processo) {\n      formValue.id_processo = this.processo.id_processo;\n      formValue.numero_processo = this.processo.numero_processo;\n    }\n    formValue.data_inicio = this.auth.hora;\n    form.patchValue(formValue);\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.entity = (await this.dao!.getById(this.metadata.plano_trabalho.id, this.join))!;\n    this.processo = this.metadata?.processo;\n    await this.loadData(this.entity!, form);\n  }\n\n  public saveData(form: IIndexable): Promise<NavigateResult | undefined> {\n    return new Promise<NavigateResult | undefined>((resolve, reject) => {\n      //if(this.processo) {\n      resolve(new NavigateResult(Object.assign(this.form!.value, {\n        /* TODO Gerar documento do TCR\n        termo: this.termo!.conteudo,\n        atividades_termo_adesao: this.termo!.atividades.map((x: { nome: string; }) => this.util.removeAcentos(x.nome.toLowerCase())),*/\n        codigo_tipo_documento: (this.tipoDocumento?.searchObj as TipoDocumento)?.codigo\n      })));\n      /*} else {\n        const documento = Object.assign(new Documento(), {\n          especie: \"TERMO_ADESAO\",\n          conteudo: this.termo!.conteudo,\n          plano_id: this.entity!.id,\n          status: \"GERADO\"\n        });\n        this.documentoDao.save(documento).then(doc => resolve(undefined)).catch(reject);\n      }*/\n    });\n  }\n\n  public get formaContagemCargaHoraria(): UnitWorkload {\n    const forma = this.form?.controls.forma_contagem_carga_horaria?.value || \"DIA\";\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\n  }\n\n  public titleEdit = (entity: PlanoTrabalho): string => {\n    return \"Editando \" + this.lex.translate(\"TCR\") + ' ' + this.lex.translate(\"do Plano de Trabalho\") + ': ' + (entity?.usuario?.nome || \"\");\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <separator [title]=\"lex.translate('Plano de trabalho')\" collapse [collapsed]=\"false\">\n        <div class=\"row\">\n            <input-search #programa [size]=\"6\" disabled controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\n            <input-search #usuario [size]=\"6\" disabled  controlName=\"usuario_id\" [dao]=\"usuarioDao\"></input-search>\n        </div>\n        <div class=\"row\">\n            <input-search #unidade [size]=\"5\" disabled controlName=\"unidade_id\" [dao]=\"unidadeDao\" ></input-search>\n            <input-search #tipoModalidade disabled [size]=\"3\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\n            <input-text numbers disabled [size]=\"2\" label=\"% prod.\" icon=\"bi bi-hourglass-split\" controlName=\"ganho_produtividade\" [control]=\"form!.controls.ganho_produtividade\" [labelInfo]=\"'Percentual de ganho de produtividade (Será descontado do ' + lex.translate('tempo pactuado')+')'\"></input-text>\n            <input-display [size]=\"2\" label=\"H. Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-display>\n        </div>\n        <div class=\"row\">\n            <input-datetime [size]=\"3\" disabled label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" labelInfo=\"Início da Vigência do Programa\"></input-datetime>\n            <input-datetime [size]=\"3\" disabled label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" labelInfo=\"Final da Vigência do Programa\"></input-datetime>\n            <input-workload [size]=\"3\" disabled [unit]=\"formaContagemCargaHoraria\" label=\"C. Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" labelInfo=\"Carga horária do usuário\"></input-workload>\n            <input-display [size]=\"3\" label=\"H. Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-display>\n        </div>\n    </separator>\n    <div class=\"row\">\n        <input-datetime [size]=\"3\" disabled label=\"Data e hora\" controlName=\"data_inicio\" [control]=\"form!.controls.data_inicio\" labelInfo=\"Data de cadastro do termo\"></input-datetime>\n        <input-text [label]=\"'Número ' + lex.translate('Processo')\" [size]=\"3\" controlName=\"numero_processo\" [control]=\"form!.controls.numero_processo\" disabled labelInfo=\"Número do processo, com a formatação de origem\"></input-text>\n        <input-search [size]=\"4\" #tipoDocumento [disabled]=\"!form!.controls.numero_processo.value?.length ? 'true' : undefined\" controlName=\"tipo_documento_id\" [dao]=\"tipoDocumentoDao\"></input-search>\n        <input-switch label=\"Vinculadas\" [disabled]=\"entity?.atividades?.length ? 'true' : undefined\" [size]=\"2\" controlName=\"vinculadas\" [control]=\"form!.controls.vinculadas\" (change)=\"onVinculadasChange($event)\" labelInfo=\"Se inclui as atividades das unidades vinculadas a unidade do plano\"></input-switch>\n    </div>\n    <!--separator title=\"Pré-visualização do termo de adesão\" collapse [collapsed]=\"true\">\n        <plano-termo-adesao #termo [plano]=\"entity\" [vinculadas]=\"!!form?.controls?.vinculadas?.value\"></plano-termo-adesao>\n    </separator/-->\n</editable-form>\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { SelectItem } from 'src/app/components/input/input-base';\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { UnitWorkload } from 'src/app/components/input/input-workload/input-workload.component';\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { AtividadeDaoService } from 'src/app/dao/atividade-dao.service';\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { ListenerAllPagesService } from 'src/app/listeners/listener-all-pages.service';\nimport { Atividade } from 'src/app/models/atividade.model';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { Documento } from 'src/app/models/documento.model';\nimport { PlanoTrabalhoAtividade } from 'src/app/models/plano-trabalho-atividade.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { Programa } from 'src/app/models/programa.model';\nimport { Template } from 'src/app/models/template.model';\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\nimport { Unidade } from 'src/app/models/unidade.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { DocumentoService } from 'src/app/modules/uteis/documentos/documento.service';\nimport { DocumentosComponent } from 'src/app/modules/uteis/documentos/documentos.component';\nimport { CalendarService, Efemerides } from 'src/app/services/calendar.service';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { PlanoTrabalhoService } from '../plano-trabalho.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { TemplateDataset, TemplateService } from 'src/app/modules/uteis/templates/template.service';\n\n@Component({\n  selector: 'plano-trabalho-form',\n  templateUrl: './plano-trabalho-form.component.html',\n  styleUrls: ['./plano-trabalho-form.component.scss']\n})\n\nexport class PlanoTrabalhoFormComponent extends PageFormBase<PlanoTrabalho, PlanoTrabalhoDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild('gridAtividades', { static: false }) public gridAtividades?: GridComponent;\n  @ViewChild('gridDocumentos', { static: false }) public gridDocumentos?: GridComponent;\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\n  @ViewChild('usuario', { static: false }) public usuario?: InputSearchComponent;\n  @ViewChild('tipoModalidade', { static: false }) public tipoModalidade?: InputSearchComponent;\n  @ViewChild('planoEntrega', { static: false }) public planoEntrega?: InputSearchComponent;\n  @ViewChild('atividade', { static: false }) public atividade?: InputSearchComponent;\n  @ViewChild('entrega', { static: false }) public entrega?: InputSelectComponent;\n  @ViewChild('documentos', { static: false }) public documentos?: DocumentosComponent;\n\n  public formAtividades: FormGroup;\n  public formEntregas: FormGroup;\n  public programaDao: ProgramaDaoService;\n  public usuarioDao: UsuarioDaoService;\n  public unidadeDao: UnidadeDaoService;\n  public atividadeDao: AtividadeDaoService;\n  public documentoDao: DocumentoDaoService;\n  public documentoService: DocumentoService;\n  public templateService: TemplateService;\n  public allPages: ListenerAllPagesService;\n  public calendar: CalendarService;\n  public tipoModalidadeDao: TipoModalidadeDaoService;\n  public planoEntregaDao: PlanoEntregaDaoService;\n  public planoTrabalhoService: PlanoTrabalhoService;\n  public horasTotais?: Efemerides;\n  public horasParciais?: Efemerides;\n  public planoDataset: TemplateDataset[];\n  public documentoId?: string;\n  public entregas: LookupItem[] = [];\n  public programa?: Programa;\n  public unidade?: Unidade;\n\n  private _datasource: any;\n  private _entityDocumentos: PlanoTrabalho = new PlanoTrabalho();\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoTrabalho, PlanoTrabalhoDaoService);\n    this.join = [\"unidade.entidade\", \"entregas.entrega\", \"entregas.plano_entrega_entrega:id,plano_entrega_id\", \"plano_entrega.entregas.entrega\", \"plano_entrega.unidade.entidade\", \"plano_entrega.programa\", \n                \"usuario\", \"programa.template_tcr\", \"tipo_modalidade\", \"documento\", \"documentos.assinaturas.usuario:id,nome,apelido\", \"atividades.atividade\", \"entregas.plano_entrega_entrega.entrega\"];\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.atividadeDao = injector.get<AtividadeDaoService>(AtividadeDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.documentoService = injector.get<DocumentoService>(DocumentoService);\n    this.templateService = injector.get<TemplateService>(TemplateService);\n    this.calendar = injector.get<CalendarService>(CalendarService);\n    this.allPages = injector.get<ListenerAllPagesService>(ListenerAllPagesService);\n    this.tipoModalidadeDao = injector.get<TipoModalidadeDaoService>(TipoModalidadeDaoService);\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\n    this.planoTrabalhoService = injector.get<PlanoTrabalhoService>(PlanoTrabalhoService);\n    this.modalWidth = 1200;\n    this.planoDataset = this.dao!.dataset();\n    this.form = this.fh.FormBuilder({\n      carga_horaria: {default: \"\"},\n      tempo_total: {default: \"\"},\n      tempo_proporcional: {default: \"\"},\n      data_inicio_vigencia: {default: new Date()},\n      data_fim_vigencia: {default: new Date()},\n      usuario_id: {default: \"\"},\n      plano_entrega_id: {default: \"\"},\n      documento_id: {default: null},\n      documentos: {default: []},\n      atividades: {default: []},\n      entregas: {default: []},\n      tipo_modalidade_id: {default: \"\"},\n      forma_contagem_carga_horaria: {default: \"DIA\"},\n      editar_texto_complementar_unidade: {default: false},\n      editar_texto_complementar_usuario: {default: false},\n      unidade_texto_complementar: {default: \"\"},\n      usuario_texto_complementar: {default: \"\"}\n    }, this.cdRef, this.validate);\n    this.formAtividades = this.fh.FormBuilder({\n      atividade_id: {default: \"\"}\n    }, this.cdRef, this.validateAtividades);\n    this.formEntregas = this.fh.FormBuilder({\n      nome: {default: \"\"},\n      entrega_id: {default: \"\"}\n    }, this.cdRef, this.validateEntregas);\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    const segment = (this.url ? this.url[this.url.length-1]?.path : \"\") || \"\";\n    this.action = [\"termos\"].includes(segment) ? segment : this.action;\n  }\n\n  public get datasource(): any {\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\n    let data = this.dao!.datasource(this._entityDocumentos);\n    /* Atualiza os campos de texto complementar do usuário e da unidade */\n    data.usuario.texto_complementar_plano = this.form!.controls.usuario_texto_complementar.value || \"\";\n    data.unidade.texto_complementar_plano = this.form!.controls.unidade_texto_complementar.value || \"\";\n    if(JSON.stringify(data) != this.JSON.stringify(this._datasource)) {\n      this._datasource = data;\n      /* Se o termo for um documento obrigatório, então será gerado um termo automaticamente */\n      this.documentoId = undefined;\n      if(this.programa?.termo_obrigatorio) {\n        this.documentoId = this.form!.controls.documento_id.value;\n        let documentos: Documento[] = this.form!.controls.documentos.value || [];\n        let documento = documentos?.find((x: Documento) => x.id == this.documentoId);\n        if(!this.documentoId?.length || !documento || documento.assinaturas?.length || documento.tipo == \"LINK\") {\n          this.documentoId = this.dao?.generateUuid(),\n          documentos.push(new Documento({\n            id: this.documentoId, \n            tipo: \"HTML\",\n            especie: \"TCR\",\n            titulo: \"Termo de Ciência e Responsabilidade\",\n            conteudo: this.templateService.renderTemplate(this.programa.template_tcr?.conteudo || \"\", this._datasource),\n            status: \"GERADO\",\n            _status: \"ADD\",\n            template: this.programa.template_tcr?.conteudo,\n            dataset: this.dao!.dataset(),\n            datasource: this._datasource,\n            entidade_id: this.auth.entidade?.id,\n            plano_trabalho_id: this.entity?.id,\n            template_id: this.programa.template_tcr_id\n          }));\n          this.form!.controls.documento_id.setValue(this.documentoId);\n          this.form!.controls.documentos.setValue(documentos);\n        }\n      }\n    }\n    return this._datasource;\n  }\n\n  public get template(): Template | undefined {\n    /* _entityDocumentos é atualizado pelo angular na chamada do get entityDocumentos() */\n    return this.planoTrabalhoService.template(this._entityDocumentos);\n  }\n\n  public get isTermos(): boolean {\n    return this.action == \"termos\";\n  }\n\n  public validateAtividades = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == 'atividade_id' && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }\n\n  public validateEntregas = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == 'entrega_id' && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    return result;\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n    if(['usuario_id', 'plano_entrega_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }\n    if(['carga_horaria'].indexOf(controlName) >= 0 && !control.value) {\n      result = \"Valor não pode ser zero.\";\n    } \n    if(['data_inicio_vigencia', 'data_fim_vigencia'].includes(controlName)) {\n      if(!this.util.isDataValid(control.value)) {\n        result = \"Inválido\";\n      }\n    } else if(this.programa && controlName == 'data_inicio_vigencia' && (control.value as Date).getTime() < this.programa!.data_inicio_vigencia.getTime()) {\n        result = \"Menor que programa\";\n    } else if(this.programa && controlName == 'data_fim_vigencia' && (control.value as Date).getTime() > this.programa!.data_fim_vigencia.getTime()) {\n        result = \"Maior que programa\";\n    } \n\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    if(this.gridAtividades?.editing) {\n      this.tabs!.active = \"ATIVIDADES\";\n      return \"Salve ou cancele o registro atual em edição\";\n    }\n    // Validar se o unidade & programa & plano de entrega são interlidados\n    // Validar se as entregas pertencem ao plano de entregas da unidade\n    // Validar o período está dentro do plano de entregas\n    // Validar se o usuários está habilitado no programa\n    return undefined;\n  };\n\n  public updateEntregas(planoEntrega: PlanoEntrega | undefined) {\n    this.entregas = planoEntrega?.entregas?.map(x => Object.assign({}, { key: x.id, value: x.entrega?.nome || x.descricao, data: x })) || [];\n  }\n\n  public onPlanoEntregaSelect(selected: SelectItem) {\n    let planoEntrega = selected.entity as PlanoEntrega;\n    this.updateEntregas(planoEntrega);\n    this.form?.controls.data_inicio_vigencia.updateValueAndValidity();\n    this.form?.controls.data_fim_vigencia.updateValueAndValidity();\n    this.programa = planoEntrega?.programa as Programa;\n    this.unidade = planoEntrega?.unidade as Unidade;\n    this.form!.controls.forma_contagem_carga_horaria.setValue(this.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\");\n    this.form!.controls.unidade_texto_complementar.setValue(this.unidade?.texto_complementar_plano || \"\");\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public onUsuarioSelect(selected: SelectItem) {\n    this.form!.controls.usuario_texto_complementar.setValue((selected.entity as Usuario)?.texto_complementar_plano || \"\");\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public onDataInicioChange(event: Event) {\n    this.calculaTempos();\n  }\n\n  public onDataFimChange(event: Event) {\n    this.calculaTempos();\n  }\n\n  public onCargaHorariaChenge(event: Event) {\n    this.calculaTempos();\n  }\n\n  public calculaTempos() {\n    const inicio = this.form?.controls.data_inicio_vigencia.value;\n    const fim = this.form?.controls.data_fim_vigencia.value;\n    const carga = this.form?.controls.carga_horaria.value || 8;\n    const usuario = this.usuario?.searchObj as Usuario;\n    if(usuario && this.unidade && this.util.isDataValid(inicio) && this.util.isDataValid(fim)) {\n      this.calendar.loadFeriadosCadastrados(this.unidade.id).then((feriados) => {\n        this.horasTotais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], []);\n        this.horasParciais = this.calendar.calculaDataTempoUnidade(inicio, fim, carga, this.unidade!, \"ENTREGA\", [], usuario.afastamentos);\n        this.form?.controls.tempo_total.setValue(this.horasTotais.tempoUtil);\n        this.form?.controls.tempo_proporcional.setValue(this.horasParciais.tempoUtil);\n      });\n    }\n  }\n\n  public async loadData(entity: PlanoTrabalho, form: FormGroup) {\n    this.updateEntregas(entity.plano_entrega);\n    await Promise.all([\n      this.calendar.loadFeriadosCadastrados(entity.unidade_id),\n      this.usuario?.loadSearch(entity.usuario || entity.usuario_id),\n      this.tipoModalidade?.loadSearch(entity.tipo_modalidade || entity.tipo_modalidade_id),\n      this.planoEntrega?.loadSearch(entity.plano_entrega || entity.plano_entrega_id)\n    ]);\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    let documento = entity.documentos.find(x => x.id == entity.documento_id);\n    if(documento) this._datasource = documento.datasource;\n    this.calculaTempos();\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    if(this.isTermos) {\n      this.entity = (await this.dao!.getById(this.urlParams!.get(\"id\")!, this.join))!;\n    } else {\n      this.entity = new PlanoTrabalho();\n      this.entity.carga_horaria = this.auth.entidade?.carga_horaria_padrao || 8;\n      this.entity.forma_contagem_carga_horaria = this.auth.entidade?.forma_contagem_carga_horaria || \"DIA\";\n    }\n    await this.loadData(this.entity, this.form!);\n  }\n\n  /* Atividades */  \n  public async addAtividades() {\n    return new PlanoTrabalhoAtividade({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\n  }\n\n  public async loadAtividades(form: FormGroup, row: any) {\n    form.controls.atividade_id.setValue(row.atividade_id);\n  }\n\n  public async removeAtividades(row: any) {\n    row._status = \"DELETE\";\n    return false;\n  }\n \n  public async saveAtividades(form: FormGroup, row: any) {\n    row.atividade_id = form.controls.atividade_id.value;\n    row.atividade = this.atividade?.searchObj as Atividade;\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\n    /*this.dialog.showSppinerOverlay(\"Carregando dados da atividade...\");\n    try {\n      row.atividade = await this.atividadeDao?.getById(row.atividade_id)!;\n    } finally {\n      this.dialog.closeSppinerOverlay();\n    }*/\n    return row;\n  }\n\n  /* Entregas */\n  public async addEntregas() {\n    return new PlanoTrabalhoEntrega({ plano_trabalho_id: this.entity?.id, _status: \"ADD\" }) as IIndexable;\n  }\n\n  public async loadEntregas(form: FormGroup, row: any) {\n    form.controls.entrega_id.setValue(row.entrega_id);\n    form.controls.nome.setValue(row.nome);\n  }\n\n  public async removeEntregas(row: any) {\n    row._status = \"DELETE\";\n    return false;\n  }\n \n  public async saveEntregas(form: FormGroup, row: any) {\n    row.entrega_id = form.controls.entrega_id.value;\n    row.entrega = this.entrega?.selectedItem?.data as PlanoTrabalhoEntrega;\n    row.nome = form.controls.nome.value;\n    row._status = row._status == \"ADD\" ? row._status : \"EDIT\";\n    return row;\n  }\n\n  /* Gera o objeto entity baseado nas informações atuais do formulário para ser utilizado por Documentos */\n  public get entityDocumentos(): PlanoTrabalho {\n    let plano = this.loadEntity();\n    /* Remove campo de documentos para comparar */\n    plano.documentos = [];\n    this._entityDocumentos.documentos = [];\n    if(JSON.stringify(plano) != JSON.stringify(this._entityDocumentos)) {\n      this._entityDocumentos = plano;  \n    }\n    /* Atribui novamente o campo de documentos */\n    this._entityDocumentos.documentos = this.form!.controls.documentos.value;\n    return this._entityDocumentos;\n  }\n\n  /* Cria um objeto Plano baseado nos dados do formulário */\n  public loadEntity(): PlanoTrabalho {\n    let plano: PlanoTrabalho = this.util.fill(new PlanoTrabalho(), this.entity!);\n    plano = this.util.fillForm(plano, this.form!.value);\n    plano.usuario = this.usuario!.searchObj as Usuario;\n    plano.unidade = (this.entity?.unidade || this.unidade) as Unidade;\n    plano.programa = (this.entity?.programa || this.programa) as Programa;\n    plano.tipo_modalidade = this.tipoModalidade!.searchObj as TipoModalidade;\n    return plano;\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoTrabalho | boolean> {\n    let plano = this.loadEntity();\n    /* Confirma dados do documento */\n    this.documentos?.saveData();\n    plano.documentos = plano.documentos.filter((documento: Documento) => {\n      return [\"ADD\", \"EDIT\", \"DELETE\"].includes(documento._status || \"\")\n    });\n    /* Salva separadamente as informações do plano */\n    this.submitting = true;\n    try {\n      this.entity = await this.dao!.save(plano);\n      if(this.form!.controls.editar_texto_complementar_unidade.value) {\n        await this.unidadeDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.unidade_texto_complementar.value});\n      }\n      if(this.form!.controls.editar_texto_complementar_usuario.value) {\n        await this.usuarioDao.update(plano.unidade_id, {texto_complementar_plano: this.form!.controls.usuario_texto_complementar.value});\n      }\n    } finally {\n      this.submitting = false;\n    }\n    return true;\n  }\n\n  public titleEdit = (entity: PlanoTrabalho): string => {\n    return \"Editando \" + this.lex.translate(\"Plano de Trabalho\") + ': ' + (entity?.usuario?.apelido || \"\");\n  }\n\n  public documentoDynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let documento: Documento = row as Documento;\n\n    if(this.isTermos && this.planoTrabalhoService.needSign(this.entity, documento)) {\n      result.push({hint: \"Assinar\", icon: \"bi bi-pen\", onClick: this.signDocumento.bind(this) });\n    }\n    result.push({hint: \"Preview\", icon: \"bi bi-zoom-in\", onClick: ((documento: Documento) => { this.dialog.html({title: \"Termo de adesão\", modalWidth: 1000}, documento.conteudo || \"\"); }).bind(this) });\n\n    return result;\n  }\n\n  /*public needSign(documento: Documento): boolean {\n    const tipoModalidade = this.entity!.tipo_modalidade!; //(this.tipoModalidade?.searchObj as TipoModalidade);\n    const usuario = this.entity!.usuario!; // (this.usuario?.searchObj as Usuario);\n    const unidade = this.entity!.unidade!; // (this.unidade?.searchObj as Unidade);\n    const entidade = unidade?.entidade;\n    const alredySigned = !!documento.assinaturas.find(x => x.usuario_id == this.auth.usuario!.id);\n    let ids: string[] = [];\n    if(tipoModalidade?.exige_assinatura && usuario) ids.push(usuario.id);\n    if(tipoModalidade?.exige_assinatura_gestor_unidade && unidade) ids.push(unidade.gestor_id || \"\", unidade.gestor_substituto_id || \"\");\n    if(tipoModalidade?.exige_assinatura_gestor_entidade && entidade) ids.push(entidade.gestor_id || \"\", entidade.gestor_substituto_id || \"\");\n    return !alredySigned && tipoModalidade && ids.includes(this.auth.usuario!.id);\n  }*/\n\n  public async signDocumento(documento: Documento) {\n    await this.documentoService.sign([documento]);\n    this.cdRef.detectChanges();\n    /*this.dialog.confirm(\"Assinar\", \"Deseja realmente assinar o documento?\").then(response => {\n      if(response) {\n        this.loading = true;\n        this.documentoDao.assinar([documento.id]).then(response => {\n          if(response?.length) {\n            let documentos = (this.form!.controls.documentos.value || []) as Documento[];\n            let found = documentos.find(x => x.id == documento?.id);\n            if(found) found.assinaturas = response[0].assinaturas;\n            this.form!.controls.documentos.setValue(documentos);\n            this.gridDocumentos?.reset();\n          }\n        }).finally(() => this.loading = false);\n      }\n    });*/\n  }\n\n  public get formaContagemCargaHoraria(): UnitWorkload {\n    //const forma = (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria || this.auth.unidade?.entidade?.forma_contagem_carga_horaria || \"DIA\";\n    //console.log(\"FORMA: \", (this.unidade?.searchObj as Unidade)?.entidade?.forma_contagem_carga_horaria, this.auth.unidade?.entidade?.forma_contagem_carga_horaria);\n    const forma = this.form?.controls.forma_contagem_carga_horaria.value || \"DIA\";\n    return forma == \"DIA\" ? \"day\" : forma == \"SEMANA\" ? \"week\" : \"mouth\";\n  }\n\n  public onFormaContagemCargaHorariaChange(unit: UnitWorkload) {\n    this.form!.controls.forma_contagem_carga_horaria.setValue(unit == \"day\" ? \"DIA\" : unit == \"week\" ? \"SEMANA\" : \"MES\");\n  }\n\n  public async addDocumento() {\n    const documento = new Documento();\n    documento.id = this.dao!.generateUuid();\n    documento.plano_trabalho_id = this.entity!.id;\n    documento.especie = \"TCR\";\n    documento._status = \"ADD\";\n    this.go.navigate({route: ['gestao', 'plano', 'termo']}, {metadata: {documento: documento, plano_trabalho: this.entity}, modalClose: (modalResult) => {\n      if(modalResult) {\n        (async () => {\n          let documentos = (this.form!.controls.documentos.value || []) as Documento[];\n          if(this.isTermos) {\n            this.clearErros();\n            this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\n            try {\n              modalResult = await this.documentoDao.save(Object.assign(new Documento(), {\n                especie: \"TCR\",\n                conteudo: modalResult?.termo,\n                plano_trabalho_id: this.entity!.id,\n                status: \"GERADO\"\n              }), [\"assinaturas.usuario:id,nome,apelido\"]);\n            } catch (error: any) {\n              this.error(error.message ? error.message : error);\n              modalResult = undefined;\n            } finally {\n              this.dialog.closeSppinerOverlay();\n            }\n          }\n          if(modalResult) {\n            documentos.push(modalResult);\n            this.form!.controls.documentos.setValue(documentos);\n            this.dialog.showSppinerOverlay(\"Recarregando dados do plano\");\n            await this.initializeData(this.form!);\n            this.dialog.closeSppinerOverlay();\n          }\n          this.cdRef.detectChanges();\n        })();\n      }\n    }});\n    return undefined;\n  }\n\n  public isVigente(documento: Documento): boolean {\n    return this.form!.controls.documento_id.value == documento.id;\n  }\n\n  public onProcessoClick(row: any) {\n    this.allPages.openDocumentoSei(row.id_processo, row.id_documento);\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [noButtons]=\"isTermos ? 'true' : undefined\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form>(submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\n    <tabs #tabs display right [hidden]=\"isTermos ? 'true' : undefined\" [title]=\"!isModal ? title : ''\">\n        <tab key=\"DADOS\" label=\"Dados\">\n            <div class=\"row\">\n                <!-- (RI_PTR_1) No formulário de inclusão/edição de um plano de trabalho, o input-search de plano de entregas deve ficar desabilitado nas edições e habilitado apenas nas inclusões; -->\n                <input-search #planoEntrega [size]=\"6\" [disabled]=\"action == 'new' ? undefined : 'true'\" controlName=\"plano_entrega_id\" [dao]=\"planoEntregaDao\" [join]=\"['entregas.entrega','unidade.entidade','programa.template_tcr']\" (select)=\"onPlanoEntregaSelect($event)\"></input-search>\n                <input-search #usuario [size]=\"6\" controlName=\"usuario_id\" [dao]=\"usuarioDao\" [join]=\"['afastamentos']\" (select)=\"onUsuarioSelect($event)\"></input-search>\n            </div>\n            <div class=\"row\">\n                <input-datetime [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"data_inicio_vigencia\" [control]=\"form!.controls.data_inicio_vigencia\" (change)=\"onDataInicioChange($event)\" labelInfo=\"'Início da Vigência do '+ lex.translate('Plano de trabalho')\"></input-datetime>\n                <input-datetime [size]=\"3\" label=\"Final\" icon=\"bi bi-calendar-date\" controlName=\"data_fim_vigencia\" [control]=\"form!.controls.data_fim_vigencia\" (change)=\"onDataFimChange($event)\" labelInfo=\"'Final da Vigência do ' +lex.translate('Plano de trabalho')\"></input-datetime>\n                <input-search #tipoModalidade [size]=\"6\" controlName=\"tipo_modalidade_id\" [dao]=\"tipoModalidadeDao\"></input-search>\n            </div>\n            <ng-container *ngIf=\"tipoModalidade!.selectedItem?.entity?.plano_trabalho_calcula_horas\">\n                <div class=\"row\">\n                    <input-workload [size]=\"4\" [unit]=\"formaContagemCargaHoraria\" label=\"Carga Horária\" icon=\"bi bi-hourglass-split\" controlName=\"carga_horaria\" [control]=\"form!.controls.carga_horaria\" [unitChange]=\"onFormaContagemCargaHorariaChange.bind(this)\" (change)=\"onCargaHorariaChenge($event)\" labelInfo=\"Carga horária do usuário (Máx.: diária 24 horas; semana 24*5=240 horas; mensal 24*20=480 horas)\"></input-workload>\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Totais\" icon=\"bi bi-clock\" controlName=\"tempo_total\" [control]=\"form!.controls.tempo_total\" labelInfo=\"Horas úteis de trabalho no período de vigência considerando a carga horária, feriados e fins de semana\"></input-timer>\n                    <input-timer onlyHours disabled [size]=\"4\" label=\"Horas Parciais\" icon=\"bi bi-clock\" controlName=\"tempo_proporcional\" [control]=\"form!.controls.tempo_proporcional\" labelInfo=\"Total de horas menos os afastamentos.\"></input-timer>\n                </div>\n                <separator *ngIf=\"horasTotais\" title=\"Cálculos das horas totais\" collapse>\n                    <calendar-efemerides [efemerides]=\"horasTotais\" [partial]=\"false\"></calendar-efemerides>\n                </separator>\n                <separator *ngIf=\"horasParciais\" title=\"Cálculos das horas parciais\" collapse>\n                    <calendar-efemerides [efemerides]=\"horasParciais\"></calendar-efemerides>\n                </separator>\n            </ng-container>\n            <separator [title]=\"lex.translate('Entrega') + lex.translate('plano de trabalho')\">\n                <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega') + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\n                <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\n                    <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\n                        <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\n                    </editable-form>\n                </div>\n            </separator>\n        </tab>\n        <!--tab key=\"ENTREGAS\" [label]=\"lex.translate('Entrega', true)\">\n            <top-alert *ngIf=\"!form!.controls.plano_entrega_id.value?.length\" type=\"warning\" [message]=\"'Antes de incluir ' + lex.translate('entrega',true) + ' neste ' + lex.translate('Plano de Trabalho') + ', é necessário selecionar um ' + lex.translate('Plano de Entregas') + '!'\"></top-alert>\n            <div *ngIf=\"form!.controls.plano_entrega_id.value?.length\">\n                <editable-form [form]=\"formEntregas!\"  [noButtons]=\"'true'\">\n                    <plano-trabalho-list-entrega noPersist [entity]=\"entity\" [entregasDoPlanoEntrega]=\"entregas\"></plano-trabalho-list-entrega>\n                </editable-form>\n            </div>\n        </tab//-->\n        <tab *ngIf=\"checkFilled(['usuario_id'])\" key=\"MENSAGENS\" label=\"Texto Complementar\">\n            <separator [title]=\"'Texto complementar da '+ lex.translate('unidade')\">\n                <input-switch controlName=\"editar_texto_complementar_unidade\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar na '+ lex.translate('unidade')\"></input-switch>\n                <input-editor controlName=\"unidade_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_unidade.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\n            </separator>\n            <separator title=\"Texto complementar do usuario\">\n                <input-switch controlName=\"editar_texto_complementar_usuario\" [size]=\"12\" scale=\"small\" labelPosition=\"right\" [label]=\"'Editar texto complementar do '+ lex.translate('usuário')\"></input-switch>\n                <input-editor controlName=\"usuario_texto_complementar\" [disabled]=\"form!.controls.editar_texto_complementar_usuario.value ? undefined : 'true'\" [dataset]=\"planoDataset\"></input-editor>\n            </separator>\n        </tab>\n        <tab *ngIf=\"checkFilled(['usuario_id', 'tipo_modalidade_id'])\" key=\"TERMO\" label=\"Termo\">\n            <!--top-alert *ngIf=\"!isTermos\" type=\"warning\" message=\"Para [INSERIR] ou [ASSINAR] termos escolha opção Termos de adesão na tela de listagem, ou utilize o Sei\"></top-alert/-->\n            <div clss=\"row\">\n                <documentos #documentos [entity]=\"entityDocumentos\" noPersist [cdRef]=\"cdRef\" [needSign]=\"planoTrabalhoService.needSign\" [extraTags]=\"planoTrabalhoService.extraTags\" especie=\"TCR\" \n                    [editingId]=\"documentoId\" [datasource]=\"datasource\" [template]=\"template\"></documentos>\n                <!--grid [control]=\"form!.controls.documentos\" #gridDocumentos [disabled]=\"undefined\" #documentos [hasEdit]=\"false\" [hasDelete]=\"false\" [hasAdd]=\"isTermos\" [add]=\"isTermos ? addDocumento.bind(this) : undefined\" editable>\n                    <columns>\n                        <column title=\"Data\" [template]=\"dataInicio\">\n                            <ng-template let-row=\"row\" #dataInicio>\n                                <span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data da inclusão\">\n                                    <i class=\"bi bi-calendar-plus\"></i>\n                                    {{util.getDateTimeFormatted(row.data_inicio)}}\n                                </span>\n                                <span *ngIf=\"row.data_fim\" class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Data substituição\">\n                                    <i class=\"bi bi-calendar-x\"></i>\n                                    {{util.getDateTimeFormatted(row.data_fim)}}\n                                </span>\n                            </ng-template>\n                        </column>\n                        <column title=\"Documento Sei\" [template]=\"documento\">\n                            <ng-template let-row=\"row\" #documento>\n                                <span *ngIf=\"row.numero_processo?.length\" class=\"badge bg-light text-dark\" [attr.role]=\"row.numero_processo?.length ? 'button' : undefined\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" (click)=\"onProcessoClick(row)\" [title]=\"allPages.getButtonTitle(row.numero_processo, row.numero_documento)\">\n                                    <i [class]=\"'bi ' + (row.numero_processo?.length ? 'bi bi-folder-symlink' : 'bi bi-x-lg')\"></i>\n                                    {{row.numero_processo?.length ? row.numero_processo : \"Não atribuído\"}}\n                                    <small *ngIf=\"row.numero_documento?.length\"><br>Sei nº {{row.numero_documento}}</small>\n                                </span>\n                            </ng-template>\n                        </column>\n                        <column title=\"Status\" [template]=\"vigente\">\n                            <ng-template let-row=\"row\" #vigente>\n                                <badge [color]=\"lookup.getColor(lookup.DOCUMENTO_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.DOCUMENTO_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.DOCUMENTO_STATUS, row.status)\"></badge>\n                                <span *ngIf=\"isVigente(row)\" class=\"badge rounded-pill bg-info text-dark\">\n                                    <i class=\"bi bi-clipboard-check\"></i>\n                                    Vigente\n                                </span>\n                                <div class=\"d-block\">\n                                    <span *ngFor=\"let assinatura of row.assinaturas\" class=\"badge rounded-pill bg-primary\">\n                                        <i class=\"bi bi-pen\"></i>\n                                        {{util.apelidoOuNome(assinatura.usuario)}}\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </column>\n                        <column type=\"options\" [dynamicButtons]=\"documentoDynamicButtons.bind(this)\"></column>\n                    </columns>\n                </grid//-->\n            </div>\n        </tab>\n    </tabs>\n</editable-form>\n","import { Base } from './base.model';\nimport { Atividade } from './atividade.model';\nimport { PlanoTrabalho } from './plano-trabalho.model';\n\nexport class PlanoTrabalhoAtividade extends Base {\n    public plano_trabalho?: PlanoTrabalho;\n    public atividade?: Atividade;\n\n    public plano_trabalho_id: string = \"\";\n    public atividade_id: string = \"\";\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}\n","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { PlanoTrabalho } from 'src/app/models/plano-trabalho.model';\nimport { PlanoTrabalhoEntrega } from 'src/app/models/plano-trabalho-entrega.model';\nimport { PlanoTrabalhoEntregaDaoService } from 'src/app/dao/plano-trabalho-entrega-dao.service';\nimport { PlanoTrabalhoDaoService } from 'src/app/dao/plano-trabalho-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { InputSelectComponent } from 'src/app/components/input/input-select/input-select.component';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\n\nexport type badgeEntrega = {\n  label: string,\n  cor: string,\n  nome: string\n}\n\n@Component({\n  selector: 'plano-trabalho-list-entrega',\n  templateUrl: './plano-trabalho-list-entrega.component.html',\n  styleUrls: ['./plano-trabalho-list-entrega.component.scss']\n})\nexport class PlanoTrabalhoListEntregaComponent extends PageFrameBase {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('origem', { static: false }) public origem?: InputSelectComponent;\n  @ViewChild('entregaMesmaUnidade', { static: false }) public entregaMesmaUnidade?: InputSelectComponent;\n  @ViewChild('entregaOutraUnidade', { static: false }) public entregaOutraUnidade?: InputSelectComponent;\n  @ViewChild('entregaCatalogo', { static: false }) public entregaCatalogo?: InputSelectComponent;\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\n  @Input() set entity(value: PlanoTrabalho | undefined) { super.entity = value; } get entity(): PlanoTrabalho | undefined { return super.entity; }\n  @Input() set disabled(value: boolean) { if (this._disabled != value) this._disabled = value; } get disabled(): boolean { return this._disabled; }\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\n  @Input() cdRef: ChangeDetectorRef;\n  @Input() set entregasDoPlanoEntrega(value: LookupItem[]) {\n    if (JSON.stringify(value) != JSON.stringify(this._entregasDoPlanoEntrega)) {\n      this._entregasDoPlanoEntrega = value;\n      this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\n      this.cdRef.detectChanges();\n    }\n  }\n  get entregasDoPlanoEntrega(): LookupItem[] { return this._entregasDoPlanoEntrega; }\n\n  public get items(): PlanoTrabalhoEntrega[] {\n    if (!this.gridControl.value) this.gridControl.setValue(new PlanoTrabalho());\n    if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\n    return this.gridControl.value.entregas;\n  }\n  public options: ToolbarButton[] = [];\n  public entregaDao?: EntregaDaoService;\n  public planoTrabalhoDao?: PlanoTrabalhoDaoService;\n  public planoEntregaDao?: PlanoEntregaDaoService;\n  public peeDao?: PlanoEntregaEntregaDaoService;\n  public totalForcaTrabalho: number = 0;\n  public entregasMesmaUnidade: LookupItem[] = [];\n  public entregasOutraUnidade: LookupItem[] = [];\n  public entregasCatalogo: LookupItem[] = [];\n  public planoEntregaOutraUnidade?: PlanoEntrega | null;\n  public novaEntrega?: PlanoTrabalhoEntrega;\n\n  private _disabled: boolean = false;\n  private _entregasDoPlanoEntrega: LookupItem[] = [];\n\n  constructor(public injector: Injector) {\n    super(injector);\n    this.dao = injector.get<PlanoTrabalhoEntregaDaoService>(PlanoTrabalhoEntregaDaoService);\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\n    this.planoTrabalhoDao = injector.get<PlanoTrabalhoDaoService>(PlanoTrabalhoDaoService);\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\n    this.peeDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.join = [\"entrega\", \"plano_entrega_entrega.entrega\"];\n    this.form = this.fh.FormBuilder({\n      origem: { default: null },\n      entregaMesmaUnidade: { default: null },\n      entregaOutraUnidade: { default: null },\n      entregaCatalogo: { default: null },\n      descricao: { default: \"\" },\n      forca_trabalho: { default: 1 },\n      plano_trabalho_id: { default: null },\n      entrega_id: { default: null },\n      plano_entrega_entrega_id: { default: null }\n    }, this.cdRef, this.validate);\n  }\n\n  /**\n   * Método chamado para a validação dos campos do formulário, por ocasião da edição ou inserção de itens.\n   * @param control \n   * @param controlName \n   * @returns \n   */\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if (['descricao', 'forca_trabalho'].indexOf(controlName) >= 0 && !control.value?.length) result = \"Obrigatório!\";\n    if (['forca_trabalho'].indexOf(controlName) >= 0 && (control.value < 1 || control.value > 100)) result = \"Deve estar entre 1 e 100\";\n    if (['entrega_id'].indexOf(controlName) >= 0) {\n      if (this.form?.controls.origem.value == 'CATALOGO' && !control.value) result = \"Este campo não pode ser nulo!\";\n      let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*1)\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\n    }\n    if (['plano_entrega_entrega_id'].indexOf(controlName) >= 0) {\n      if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(this.form?.controls.origem.value) && !control.value) result = \"Este campo não pode ser nulo!\";\n      let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if (id === control.value) return acc + 1; else return acc; }, 0) || 0; // (*2)\n      if (cont > 0) result = \"Esta entrega está em duplicidade!\";\n    }\n    return result;\n  }\n\n  /**\n   * Método chamado na inicialização do componente. Neste momento são carregadas as entregas do catálogo e as entregas da mesma unidade do plano de trabalho,\n   * visto que esses itens não se alteram durante a vida do componente e poderão ser utilizados durante sua utilização.\n   */\n  async ngOnInit() {\n    super.ngOnInit();\n    this.entity = this.metadata?.entity || this.entity;\n    this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\n    this.entregasCatalogo = await this.carregarEntregasCatalogo();\n    this.entregasMesmaUnidade = this.carregarEntregasMesmaUnidade();\n  }\n\n  /**\n   * Método chamado para inserir uma entrega de plano de trabalho no grid, seja este persistente ou não.\n   * @returns \n   */\n  public async addEntrega() {\n    return Object.assign(new PlanoTrabalhoEntrega(), {\n      _status: this.isNoPersist ? \"ADD\" : \"\",\n      id: this.dao!.generateUuid(),\n      plano_trabalho_id: this.entity?.id\n    }) as IIndexable;\n  }\n\n  /**\n   * Método utilizado durante a inclusão/alteração de uma entrega de plano de trabalho no grid, seja ele persistente ou não\n   * @param form \n   * @param row \n   */\n  public async loadEntrega(form: FormGroup, row: any) {\n    form.controls.descricao.setValue(row.descricao);\n    form.controls.forca_trabalho.setValue(row.forca_trabalho);\n    form.controls.plano_trabalho_id.setValue(row.plano_trabalho_id);\n    if (!row.entrega_id?.length && !row.plano_entrega_entrega_id?.length) { // É uma nova entrega\n      form.controls.origem.setValue('MESMA_UNIDADE');\n      form.controls.entrega_id.setValue(null);\n      form.controls.plano_entrega_entrega_id.setValue(null);\n    } else if (!row.plano_entrega_entrega_id?.length && !!row.entrega_id?.length) { // É uma entrega do tipo catálogo\n      form.controls.origem.setValue('CATALOGO');\n      form.controls.entrega_id.setValue(row.entrega_id);\n      form.controls.plano_entrega_entrega_id.setValue(null);\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row.objeto?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) == this.entity?.plano_entrega_id) {\n      form.controls.origem.setValue('MESMA_UNIDADE');\n      form.controls.entrega_id.setValue(null);\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\n    } else if (!row.entrega_id?.length && !!row.plano_entrega_entrega_id?.length && (row.objeto?.plano_entrega_id || row.plano_entrega_entrega?.plano_entrega_id) != this.entity?.plano_entrega_id) {\n      form.controls.origem.setValue('OUTRA_UNIDADE');\n      form.controls.entrega_id.setValue(null);\n      await this.carregarEntregasOutraUnidade(row.plano_entrega_entrega?.plano_entrega_id);\n      form.controls.plano_entrega_entrega_id.setValue(row.plano_entrega_entrega_id);\n    }\n  }\n\n  /**\n   * Método chamado para somar os percentuais das forças de trabalho do array de entregas passado como parâmetro.\n   * @param entregas Array de entregas do plano de trabalho\n   * @returns \n   */\n  public somaForcaTrabalho(entregas: PlanoTrabalhoEntrega[] = []): number {\n    return entregas.map(x => x.forca_trabalho * 1).reduce((a, b) => a + b, 0);\n  }\n\n  /**\n   * Método chamado para a exclusão de uma entrega de plano de trabalho do grid, seja este persistente ou não. \n   * @param row \n   * @returns \n   */\n  public async removeEntrega(row: any) {\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\n    if (confirm) {\n      this.loading = true;\n      try {\n        this.isNoPersist ? Object.assign(row, { _status: \"DELETE\" }) : await this.dao?.delete(row.id);\n      } finally {\n        this.loading = false;\n      }\n      this.totalForcaTrabalho = Math.round((this.totalForcaTrabalho - ((row as PlanoTrabalhoEntrega).forca_trabalho * 1)) * 100) / 100;\n      return this.isNoPersist ? false : true; // (*3)\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Método chamado no salvamento de uma entrega do plano de trabalho do grid, seja este persistente ou não.\n   * @param form \n   * @param row \n   * @returns \n   */\n  public async saveEntrega(form: FormGroup, row: any) {\n    this.novaEntrega = row as PlanoTrabalhoEntrega;\n    this.novaEntrega.entrega_id = this.form?.controls.entrega_id.value ?? null;\n    this.novaEntrega.plano_entrega_entrega_id = this.form?.controls.plano_entrega_entrega_id.value;\n    this.novaEntrega.descricao = this.form?.controls.descricao.value;\n    this.novaEntrega.forca_trabalho = this.form?.controls.forca_trabalho.value;\n    this.loading = true;\n    try {\n      if (!this.isNoPersist) {\n        this.novaEntrega = await (this.dao as PlanoTrabalhoEntregaDaoService).save(this.novaEntrega, this.join);\n        if (this.grid?.adding) this.grid!.items[this.grid!.items.length - 1].id = '';  // (*4)\n      }\n    } catch (e: any) {\n      this.error(e.message ? e.message : e.toString() || e);\n    } finally {\n      row.objeto = this.entregaCatalogo?.selectedItem?.data || this.entregaMesmaUnidade?.selectedItem?.data || this.entregaOutraUnidade?.selectedItem?.data; // (*)\n      row.forca_trabalho = this.form?.controls.forca_trabalho.value * 1;\n      this.totalForcaTrabalho = Math.round(this.somaForcaTrabalho(this.entity?.entregas) * 100) / 100;\n      this.loading = false;\n    }\n    return this.novaEntrega;\n  }\n\n  /**\n   * Método chamado na inicialização do componente para armazenar as entregas da mesma unidade do plano de trabalho.\n   * @returns \n   */\n  public carregarEntregasMesmaUnidade(): LookupItem[] {\n    if (!this.entity?.id?.length) return this.entregasDoPlanoEntrega; // (*5)\n    let entregasPlanoEntrega = this.entity?.plano_entrega?.entregas || [];\n    let result = entregasPlanoEntrega.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe }));\n    return result;\n  }\n\n  /**\n   * Método chamado para carregar as entregas de uma outra unidade, com base no seu plano de entregas passado como parâmetro.\n   * @param idPlanoOuPlano ID do plano de entregas ou o seu objeto completo.\n   */\n  public async carregarEntregasOutraUnidade(idPlanoOuPlano: string | PlanoEntrega): Promise<void> {\n    this.cdRef.detectChanges();\n    this.planoEntregaOutraUnidade = typeof idPlanoOuPlano == 'string' ? await this.planoEntregaDao!.getById(idPlanoOuPlano, [\"entregas.entrega\", \"unidade\"]) : idPlanoOuPlano;\n    this.entregasOutraUnidade = this.planoEntregaOutraUnidade?.entregas.map(epe => Object.assign({}, { key: epe.id, value: epe.entrega?.nome || epe.descricao, data: epe })) || [];\n  }\n\n  /**\n   * Método chamado para carregar as entregas existentes no Catálogo de Entregas.\n   * @returns \n   */\n  public async carregarEntregasCatalogo(): Promise<LookupItem[]> {\n    let result: LookupItem[] = [];\n    result = (await this.entregaDao?.query().getAll())?.map(ee => Object.assign({}, { key: ee.id, value: ee.nome, data: ee })) || [];\n    return result;\n  }\n\n  public tipoEntrega(row: any): badgeEntrega {\n    if (!!row.entrega_id?.length) return { label: 'Catálogo', cor: 'secondary', nome: !!row.objeto?.id?.length ? row.objeto?.nome || \"Desconhecido\" : row.entrega?.nome || \"Desconhecido1\" };\n    let IdDoPlanoEntregaDoPlanoTrabalho: string, IdDoPlanoEntregaDaEntrega: string, badge: string, nome: string, cor: string;\n    IdDoPlanoEntregaDoPlanoTrabalho = this.entity?.plano_entrega_id || this.entregasDoPlanoEntrega[0]?.data.plano_entrega_id || 'Desconhecido2';\n    IdDoPlanoEntregaDaEntrega = !!row.objeto?.id.length ? row.objeto?.plano_entrega_id || \"Desconhecido3\" : row.plano_entrega_entrega?.plano_entrega_id || \"Desconhecido4\";\n    [badge, cor] = IdDoPlanoEntregaDoPlanoTrabalho == IdDoPlanoEntregaDaEntrega ? ['Mesma unidade', 'success'] : ['Outra unidade', 'primary'];\n    nome = !!row.objeto?.id.length ? row.objeto?.entrega.nome || \"Desconhecido5\" : row.plano_entrega_entrega?.entrega.nome || \"Desconhecido6\";\n    return { label: badge, cor: cor, nome: nome };\n  }\n\n  /* ---------  TRATAMENTO DOS EVENTOS ----------- */\n\n  public onOrigemChange(row: any) {\n    let value = this.form!.controls.origem.value;\n    if (['MESMA_UNIDADE', 'OUTRA_UNIDADE'].includes(value)) {\n      this.form?.controls.entrega_id.setValue(null);\n      this.cdRef.detectChanges();\n      if (value == \"OUTRA_UNIDADE\") this.entregaOutraUnidade?.onSearchClick(this.entregaOutraUnidade?.searchRoute);\n    } else if (value == 'CATALOGO') {\n      this.form?.controls.plano_entrega_entrega_id.setValue(null);\n    }\n  }\n\n  public onEntregaMesmaUnidadeChange(event: Event) {\n    if (this.entregaMesmaUnidade?.selectedItem) {\n      this.form?.controls.descricao.setValue(this.entregaMesmaUnidade?.selectedItem?.value || '');\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaMesmaUnidade?.selectedItem?.key);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onEntregaOutraUnidadeChange(event: Event) {\n    if (this.entregaOutraUnidade?.selectedItem) {\n      this.form?.controls.descricao.setValue(this.entregaOutraUnidade?.selectedItem?.value || '');\n      this.form?.controls.plano_entrega_entrega_id.setValue(this.entregaOutraUnidade?.selectedItem?.key);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onEntregaCatalogoChange(event: Event) {\n    if (this.entregaCatalogo?.selectedItem) {\n      this.form?.controls.descricao.setValue(this.entregaCatalogo?.selectedItem?.value || '');\n      this.form?.controls.entrega_id.setValue(this.entregaCatalogo?.selectedItem?.key);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public onForcaTrabalhoChange(row: any) {\n    let index = this.items.findIndex(x => x[\"id\"] == row[\"id\"]);\n    this.totalForcaTrabalho = Math.round((this.somaForcaTrabalho(this.grid?.items as PlanoTrabalhoEntrega[]) - (this.items[index].forca_trabalho * 1) + (this.form?.controls.forca_trabalho.value * 1)) * 100) / 100;\n  }\n}\n\n\n/*\nTESTES\n\n                                                  GRID PERSISTENTE                      GRID NÃO-PERSISTENTE\n                                              Fluxo Feliz    Validações                Fluxo Feliz    Validações\nInclusão Entrega Catálogo                          \nInclusão Entrega Mesma Unidade                     \nInclusão Entrega Outra Unidade                     \nAlteração Entrega Catálogo                         \nAlteração Entrega Mesma Unidade                    \nAlteração Entrega Outra Unidade                    \nCancelamento Entrega Catálogo                      \nCancelamento Entrega Mesma Unidade                 \nCancelamento Entrega Outra Unidade                 \nExclusão Entrega Catálogo                          \nExclusão Entrega Mesma Unidade                     \nExclusão Entrega Outra Unidade                     \n\n*/\n\n/*\nOBSERVAÇÕES:\n\n(*1)  let cont = this.entity?.entregas?.filter(e => !!e.entrega_id && !e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\nFiltra as entregas da mesma unidade do plano de trabalho excluindo a entrega que está sendo editada. Em seguida conta aquelas que possuem o mesmo ID da que está sendo editada e dessa forma o resultado deve ser igual a 0, caso contrário a entrega editada\njá existe no grid.\n\n(*2)  let cont = this.entity?.entregas?.filter(e => !e.entrega_id && !!e.plano_entrega_entrega_id && e.id != this.grid?.editing?.id).map(e => e.plano_entrega_entrega_id).reduce((acc, id) => { if(id === control.value) return acc + 1; else return acc; }, 0) || 0;\nIdem à obs 1, em relação às entregas de outras unidades.\n\n(*3)  return this.isNoPersist ? false : true;\nApós confirmada a remoção pelo usuário, a entrega é setada com _status = \"DELETE\" e é excluída da tela e sua confirmação é retornada para o método onDeleteItem() do gridComponent, que a excluirá também dos items do grid.\nEntretanto, quando se trata de um grid não persistente, ela não deve ser excluída dos items do grid, pois sua exclusão só se efetivará quando entity for salva, levando\ntodas as suas entregas para o back-end, que finalmente excluirá as que possuírem _status = \"DELETE\".\n\n(*4)  if(this.grid?.adding) this.grid!.items[this.grid!.items.length-1].id = '';\n\n\n(*5)  if(!this.entity?.id?.length) return this.entregasPlanoEntrega;\nQuando o componente for chamado por um plano de trabalho (entity) que já existe, não poderá haver alteração no seu plano de entregas, portanto as entregas da mesma unidade do plano de trabalho serão lidas\nna própria entity. No entanto, quando o plano de trabalho (entity) ainda não existir (!this.entity?.id?.length), essas entregas vão variar de acordo com o plano de entregas\nselecionado no inputSelectComponent, e portanto elas serão lidas na variável que reflete essa escolha (this.entregasPlanoEntrega), e essa reflexão ocorre por causa do bind @Input() set/get entregasPlanoEntrega.\n\n\n----------------------+--------------------------------------+----------------------------+--------+--------+------------------------------------\nID do Plano           |       Pode ser que a 'row'           |  Características           | Possui | inputs | entrega_id \nde Trabalho           |                                      |                            | objeto | search | plano_entrega_entrega_id\n----------------------+--------------------------------------+----------------------------+--------+--------+-------------------------------------\n                      | - Já tenha vindo do banco (TIPO I)   |                            |   NÃO  | nenhum | um dos dois\n                      |   (foi carregada junto com o Plano)  |                            |        |        |\n                      |--------------------------------------+----------------------------+--------+--------+--------------------------------------\n  EXISTE              | - Tenho sido salva agora no banco    |                            |   SIM  | um dos | um dos dois\n  - Então o Grid é    |   (TIPO II)                          |                            |        | três   |\n    Persistente       |--------------------------------------+----------------------------+--------+--------+------------------------------------\n                      | - Esteja sendo criada agora          | addEntrega loadEntrega     |   NÃO  | um dos | nenhum\n                      |                                      |                            |        | três   |\n                      |--------------------------------------+----------------------------+--------+--------+-----------------------------------     \n                      | - Seja do TIPO I e esteja sendo      | loadEntrega                |   NÃO  | um dos | um dos dois\n                      |   editada agora                      |                            |        | três   |\n                      +--------------------------------------+----------------------------+--------+--------+------------------------------------\n                      | - Seja do TIPO II e esteja sendo     | loadEntrega                |   SIM  | um dos | um dos dois\n                      |   editada agora                      |                            |        | três   |\n----------------------+--------------------------------------+----------------------------+--------+--------+-----------------------------------------\n  NÃO                 | - Já exista nos itens do grid        |                            |   SIM  | nenhum | um dos dois\n  EXISTE              |   (foi salva agora, não no banco)    | Possui _status == \"ADD\"    |        |        |\n  - Então o Grid é    |--------------------------------------+----------------------------+--------+--------+---------------------------------------\n    Não-persistente   | - Esteja sendo criada agora          | Possui _status == \"ADD\"    |   NÃO  | um dos | nenhum\n                      |                                      | addEntrega loadEntrega     |        | três   |\n                      |--------------------------------------+----------------------------+--------+--------+---------------------------------------\n                      | - Tenha acabado de ser criada e      | Possui _status == \"ADD\"    |   SIM  | um dos | um dos dois\n                      |   já está sendo editada              | loadEntrega                |        | três   |\n------------------------------------------------------------------------------------------+--------+--------+--------------------------------------\n(*) O ADD é inserido pelo método addEntrega e só sai quando persiste no banco e volta\n(*) O objeto é inserido pelo método saveEntrega e permanece mesmo depois de persistida no banco\n\n*/","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\n    <div class=\"row\">\n        <grid [items]=\"items\" [form]=\"form!\" #gridEntregas editable [selectable]=\"false\" [minHeight]=\"items.length > 2 ? 0 : 220\" [join]=\"join\" [groupBy]=\"groupBy\"\n            [add]=\"addEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" [save]=\"saveEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\"\n            [hasDelete]=\"true\" [hasEdit]=\"true\" [hasAdd]=\"!disabled\">\n            <columns>\n                <column [titleTemplate]=\"titleOrigem\" [template]=\"columnOrigem\" [editTemplate]=\"editOrigem\" [verticalAlign]=\"'middle'\" [width]=\"125\" [align]=\"'center'\">\n                    <ng-template let-header=\"header\" #titleOrigem><div class=\"text-center\"><span><strong>Origem</strong></span></div></ng-template>\n                    <ng-template let-row=\"row\" #columnOrigem><span><small><badge [label]=\"tipoEntrega(row).label\" [color]=\"tipoEntrega(row).cor\"></badge></small></span></ng-template>\n                    <ng-template let-row=\"row\" #editOrigem><input-select #origem controlName=\"origem\" controlName=\"origem\" [control]=\"form!.controls.origem\" [items]=\"lookup.ORIGENS_ENTREGAS_PLANO_TRABALHO\" (change)=\"onOrigemChange(row)\"></input-select></ng-template>\n                </column>\n                <column [maxWidth]=\"350\" [titleTemplate]=\"titleEntrega\" [template]=\"columnEntrega\" [editTemplate]=\"editEntrega\" [verticalAlign]=\"'middle'\">\n                    <ng-template let-header=\"header\" #titleEntrega><span><strong>Entrega</strong></span></ng-template>\n                    <ng-template let-row=\"row\" #columnEntrega><small>{{ tipoEntrega(row).nome }}</small></ng-template>\n                    <ng-template let-row=\"row\" #editEntrega>\n                        <input-select *ngIf=\"origem?.value == 'MESMA_UNIDADE'\" #entregaMesmaUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasMesmaUnidade\" (change)=\"onEntregaMesmaUnidadeChange($event)\"></input-select>\n                        <input-select *ngIf=\"origem?.value == 'OUTRA_UNIDADE'\" #entregaOutraUnidade nullable itemNull=\"- Selecione -\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [items]=\"entregasOutraUnidade\" (change)=\"onEntregaOutraUnidadeChange($event)\" searchButton [sufix]=\"planoEntregaOutraUnidade?.unidade?.sigla\" [searchRoute]=\"{route: ['gestao', 'plano-entrega']}\" [afterSearch]=\"carregarEntregasOutraUnidade.bind(this)\"></input-select>\n                        <input-select *ngIf=\"origem?.value == 'CATALOGO'\" #entregaCatalogo nullable itemNull=\"- Selecione -\" controlName=\"entrega_id\" [control]=\"form!.controls.entrega_id\" [items]=\"entregasCatalogo\" (change)=\"onEntregaCatalogoChange($event)\"></input-select>\n                    </ng-template>\n                </column>\n                <column [titleTemplate]=\"titleForcaTrabalho\" [template]=\"columnForcaTrabalho\" [editTemplate]=\"editForcaTrabalho\" [width]=\"125\" [align]=\"'center'\">\n                    <ng-template let-header=\"header\" #titleForcaTrabalho>\n                        <div class=\"text-center\">\n                            <small><strong>% Força Trab.</strong></small><br>\n                            <small><badge icon=\"bi bi-calculator\" [color]=\"totalForcaTrabalho == 100 ? 'success' : 'warning'\" [label]=\"totalForcaTrabalho + '%'\"></badge></small>\n                        </div>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #columnForcaTrabalho><small>{{  row.forca_trabalho + '%' }}</small></ng-template>\n                    <ng-template let-row=\"row\" #editForcaTrabalho><input-text number sufix=\"%\" controlName=\"forca_trabalho\" [control]=\"form!.controls.forca_trabalho\" (change)=\"onForcaTrabalhoChange(row)\"></input-text></ng-template>\n                </column>\n                <column [maxWidth]=\"250\" [titleTemplate]=\"titleDescricao\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\" [verticalAlign]=\"'middle'\">\n                    <ng-template let-header=\"header\" #titleDescricao><div class=\"text-center\"><span><strong>Detalhamento</strong></span></div></ng-template>\n                    <ng-template let-row=\"row\" #columnDescricao><small>{{ row.descricao }}</small></ng-template>\n                    <ng-template let-row=\"row\" #editDescricao><input-text controlName=\"descricao\" [control]=\"form!.controls.descricao\"></input-text></ng-template>\n                </column>\n                <column type=\"options\"></column>\n            </columns>\n        </grid>\n    </div>\n</editable-form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { PlanoTrabalhoFormTermoComponent } from './plano-trabalho-form-termo/plano-trabalho-form-termo.component';\nimport { PlanoTrabalhoFormComponent } from './plano-trabalho-form/plano-trabalho-form.component';\nimport { PlanoTrabalhoListComponent } from './plano-trabalho-list/plano-trabalho-list.component';\nimport { PlanoTrabalhoListEntregaComponent } from './plano-trabalho-list-entrega/plano-trabalho-list-entrega.component';\n\nconst routes: Routes = [\n  { path: '', component: PlanoTrabalhoListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Planos de Trabalho\" } },\n  { path: 'new', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Plano de Trabalho\", modal: true } },\n  { path: 'termo', component: PlanoTrabalhoFormTermoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Termo de adesão\", modal: true } },\n  { path: ':id/edit', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Plano de Trabalho\", modal: true } },\n  { path: ':id/consult', component: PlanoTrabalhoFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Plano de Trabalho\", modal: true } },\n  { path: 'entregaList', component: PlanoTrabalhoListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Lista de Entregas do Plano de Trabalho\", modal: true } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlanoTrabalhoRoutingModule { }\n"],"sourceRoot":"webpack:///"}