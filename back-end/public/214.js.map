{"version":3,"file":"214.js","mappings":"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","sources":["./src/app/models/tipo-modalidade.model.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-form/tipo-modalidade-form.component.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-form/tipo-modalidade-form.component.html","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-list/tipo-modalidade-list.component.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-list/tipo-modalidade-list.component.html","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade-routing.module.ts","./src/app/modules/cadastros/tipo-modalidade/tipo-modalidade.module.ts"],"sourcesContent":["import { Base } from './base.model';\r\n\r\nexport class TipoModalidade extends Base {\r\n    public nome: string = \"\"; /* Nome da modalidade */\r\n    public plano_trabalho_calcula_horas: boolean = false; /* Se o plano de trabalho calcula horas (considerando a carga horaria e os dias) */\r\n    public atividade_tempo_despendido: boolean = false; /* Se calcula tempo despendido na atividade */\r\n    public atividade_esforco: boolean = false; /* Se utiliza esforço (tempo para execução) na atividade */\r\n\r\n    public constructor(data?: any) { super(); this.initialization(data); }\r\n}\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'app-modalidade-form',\r\n  templateUrl: './tipo-modalidade-form.component.html',\r\n  styleUrls: ['./tipo-modalidade-form.component.scss']\r\n})\r\nexport class TipoModalidadeFormComponent extends PageFormBase<TipoModalidade, TipoModalidadeDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoModalidade, TipoModalidadeDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      plano_trabalho_calcula_horas: { default: false },\r\n      atividade_tempo_despendido: { default: false },\r\n      atividade_esforco: { default: false },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoModalidade, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoModalidade());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoModalidade> {\r\n    return new Promise<TipoModalidade>((resolve, reject) => {\r\n      const tipoModalidade = this.util.fill(new TipoModalidade(), this.entity!);\r\n      resolve(this.util.fillForm(tipoModalidade, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoModalidade): string => {\r\n    return \"Editando \" + this.lex.translate(\"Tipo de Modalidade\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"nome\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\"><!--</editable-form> (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">-->\r\n    <div class=\"row\">\r\n        <input-text [size]=\"12\" label=\"Título\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\r\n    </div>\r\n    <separator transparent [title]=\"'Configurações ' + lex.translate('plano de trabalho')\">\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" controlName=\"plano_trabalho_calcula_horas\" [label]=\"'Se o ' + lex.translate('plano de trabalho') + ' calcula horas (considerando a carga horária e os dias)'\"></input-switch>\r\n    </separator>\r\n    <separator transparent [title]=\"'Configurações ' + lex.translate('atividade')\">\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" controlName=\"atividade_tempo_despendido\" [label]=\"'Calcula ' + lex.translate('tempo despendido') + lex.translate('atividade')\"></input-switch>\r\n        <input-switch [size]=\"12\" scale=\"small\" labelPosition=\"right\" controlName=\"atividade_esforco\" [label]=\"'Usa ' + lex.translate('esforço') + ' (tempo para execução)' + lex.translate('atividade')\"></input-switch>\r\n    </separator>\r\n</editable-form>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoModalidadeDaoService } from 'src/app/dao/tipo-modalidade-dao.service';\r\nimport { TipoModalidade } from 'src/app/models/tipo-modalidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tipo-modalidade-list',\r\n  templateUrl: './tipo-modalidade-list.component.html',\r\n  styleUrls: ['./tipo-modalidade-list.component.scss']\r\n})\r\nexport class TipoModalidadeListComponent extends PageListBase<TipoModalidade, TipoModalidadeDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoModalidade, TipoModalidadeDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Tipos de Modalidade\");\r\n    this.code=\"MOD_TIPO_MDL\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      atividades_homologadas: {default: \"\"},\r\n      dispensa_avaliacao: {default: \"\"},\r\n      exige_assinatura: {default: \"\"},\r\n      data_inicio: {default: \"\"},\r\n      data_fim: {default: \"\"}\r\n    });\r\n    this.addOption(this.OPTION_INFORMACOES);\r\n    this.addOption(this.OPTION_EXCLUIR, \"MOD_TIPO_MDL_EXCL\");\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<!--<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>-->\r\n<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TIPO_MDL_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TIPO_MDL_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" [label]=\"'Nome ' + lex.translate('tipo de Modalidade')\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome...\" [attr.maxlength]=250></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Descrição\" field=\"nome\"></column>\r\n        <column [title]=\"lex.translate('Plano de trabalho')\" [template]=\"columnPlanoTrabalho\">\r\n            <ng-template let-row=\"row\" #columnPlanoTrabalho>\r\n                <div class=\"one-per-line\">\r\n                    <!--badge *ngIf=\"row.plano_trabalho_assinatura_participante\" color=\"light\" icon=\"bi bi-pen\" label=\"Assinatura do participante\"></badge>\r\n                    <badge *ngIf=\"row.plano_trabalho_assinatura_gestor_unidade\" color=\"light\" icon=\"bi bi-pen\" label=\"Assinatura do gestor da unidade\"></badge>\r\n                    <badge *ngIf=\"row.plano_trabalho_assinatura_gestor_entidade\" color=\"light\" icon=\"bi bi-pen\" label=\"Assinatura do gestor da entidade\"></badge//-->\r\n                    <badge *ngIf=\"row.plano_trabalho_calcula_horas\" color=\"light\" icon=\"bi bi-clock\" [label]=\"'Usa horas no ' + lex.translate('plano de trabalho')\"></badge>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"lex.translate('Atividade')\" [template]=\"columnAtividade\">\r\n            <ng-template let-row=\"row\" #columnAtividade>\r\n                <div class=\"one-per-line\">\r\n                    <badge *ngIf=\"row.atividade_tempo_despendido\" color=\"light\" icon=\"bi bi-hourglass-bottom\" label=\"Assinatura do participante\"></badge>\r\n                    <badge *ngIf=\"row.atividade_esforco\" color=\"light\" icon=\"bi bi-stopwatch\" label=\"Assinatura do gestor da unidade\"></badge>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { TipoModalidadeFormComponent } from './tipo-modalidade-form/tipo-modalidade-form.component';\r\nimport { TipoModalidadeListComponent } from './tipo-modalidade-list/tipo-modalidade-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TipoModalidadeListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Modalidade\" } },\r\n  { path: 'new', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Tipo de Modalidade\", modal: true } },\r\n  { path: ':id/edit', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Tipo de Modalidade\", modal: true } },\r\n  { path: ':id/consult', component: TipoModalidadeFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Tipo de Modalidade\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TipoModalidadeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TipoModalidadeRoutingModule } from './tipo-modalidade-routing.module';\r\nimport { TipoModalidadeFormComponent } from './tipo-modalidade-form/tipo-modalidade-form.component';\r\nimport { TipoModalidadeListComponent } from './tipo-modalidade-list/tipo-modalidade-list.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TipoModalidadeFormComponent,\r\n    TipoModalidadeListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    TipoModalidadeRoutingModule\r\n  ]\r\n})\r\nexport class TipoModalidadeModule { }\r\n"],"names":["Base","TipoModalidade","constructor","data","nome","plano_trabalho_calcula_horas","atividade_tempo_despendido","atividade_esforco","initialization","EditableFormComponent","TipoModalidadeDaoService","PageFormBase","TipoModalidadeFormComponent","injector","validate","control","controlName","result","indexOf","value","length","titleEdit","entity","lex","translate","form","fh","FormBuilder","default","cdRef","loadData","formValue","Object","assign","patchValue","util","fillForm","initializeData","saveData","Promise","resolve","reject","tipoModalidade","fill","i0","ɵɵdirectiveInject","Injector","selectors","viewQuery","TipoModalidadeFormComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","TipoModalidadeFormComponent_Template_editable_form_submit_0_listener","onSaveData","TipoModalidadeFormComponent_Template_editable_form_cancel_0_listener","onCancel","ɵɵelement","ɵɵelementEnd","ɵɵproperty","formDisabled","isModal","title","ɵɵadvance","ɵɵattribute","GridComponent","PageListBase","ctx_r6","ɵɵtemplate","TipoModalidadeListComponent_ng_template_8_badge_1_Template","row_r5","TipoModalidadeListComponent_ng_template_11_badge_1_Template","TipoModalidadeListComponent_ng_template_11_badge_2_Template","row_r7","TipoModalidadeListComponent","filterWhere","filter","push","trim","replace","code","atividades_homologadas","dispensa_avaliacao","exige_assinatura","data_inicio","data_fim","addOption","OPTION_INFORMACOES","OPTION_EXCLUIR","TipoModalidadeListComponent_Query","TipoModalidadeListComponent_Template_grid_select_0_listener","$event","onSelect","TipoModalidadeListComponent_toolbar_1_Template","TipoModalidadeListComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","TipoModalidadeListComponent_ng_template_11_Template","dao","add","orderBy","groupBy","join","selectable","auth","hasPermissionTo","filterSubmit","bind","filterCollapseChange","filterCollapsed","controls","_r1","_r3","edit","options","rowsLimit","RouterModule","AuthGuard","ConfigResolver","routes","path","component","canActivate","config","runGuardsAndResolvers","modal","TipoModalidadeRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","TipoModalidadeModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}