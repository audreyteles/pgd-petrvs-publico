<<<<<<< HEAD
{"version":3,"file":"3300.js","mappings":"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","sources":["./src/app/models/tipo-tarefa.model.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-form/tipo-tarefa-form.component.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-form/tipo-tarefa-form.component.html","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-list/tipo-tarefa-list.component.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-list/tipo-tarefa-list.component.html","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-routing.module.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa.module.ts"],"sourcesContent":["import { Base } from './base.model';\n\nexport class TipoTarefa extends Base {\n    public nome: string = \"\"; /* Nome da tarefa */\n    public tempo_estimado: number = 0; /* Tempo estimado para a execução da tarefa (Horas decimais) */\n    public documental: boolean = false; /* Se a entrega requer obrigatoriamente um documento */\n    public comentario: string | null = null; /* Comentário predefinida para a tarefa */\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoTarefaDaoService } from 'src/app/dao/tipo-tarefa-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoTarefa } from 'src/app/models/tipo-tarefa.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'tipo-tarefa-form',\r\n  templateUrl: './tipo-tarefa-form.component.html',\r\n  styleUrls: ['./tipo-tarefa-form.component.scss']\r\n})\r\nexport class TipoTarefaFormComponent extends PageFormBase<TipoTarefa, TipoTarefaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoTarefa, TipoTarefaDaoService);\r\n    this.modalWidth = 1100;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      tempo_estimado: {default: 0},\r\n      documental: {default: false},\r\n      comentario_predefinido: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoTarefa, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoTarefa());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoTarefa> {\r\n    return new Promise<TipoTarefa>((resolve, reject) => {\r\n      const tarefa = this.util.fill(new TipoTarefa(), this.entity!);\r\n      resolve(this.util.fillForm(tarefa, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoTarefa): string => {\r\n    return \"Editando \" + this.lex.translate(\"Tipo de Tarefa\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"nome\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div class=\"row\">\n        <div class=\"row\">\n            <input-text [size]=\"8\" label=\"Nome\" icon=\"bi bi-upc\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n            <input-timer onlyHours [label]=\"lex.translate('Tempo estimado')\" [size]=\"3\" controlName=\"tempo_estimado\" labelInfo=\"Tempo estimado para execução\"></input-timer>\n            <input-switch label=\"Documental?\" [size]=\"1\" controlName=\"documental\" labelInfo=\"\"></input-switch>\n        </div>\n        <div class=\"row\">\n            <input-textarea [size]=\"12\" [rows]=\"3\" label=\"Comentário automático\" controlName=\"comentario_predefinido\" ></input-textarea>\n        </div>\n    </div>\n</editable-form>\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoTarefaDaoService } from 'src/app/dao/tipo-tarefa-dao.service';\r\nimport { TipoTarefa } from 'src/app/models/tipo-tarefa.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tarefa-list',\r\n  templateUrl: './tipo-tarefa-list.component.html',\r\n  styleUrls: ['./tipo-tarefa-list.component.scss']\r\n})\r\nexport class TipoTarefaListComponent extends PageListBase<TipoTarefa, TipoTarefaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoTarefa, TipoTarefaDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Tipos de Tarefa\");\r\n    this.code = \"MOD_TRF\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"}\r\n     });\r\n    // Testa se o usuário possui permissão para exibir dados da tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir a tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n    this.addOption(this.OPTION_LOGS, \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TRF_INCL')\"\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TRF_EDT')\">\n    <toolbar *ngIf=\"!selectable\"></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"12\" [label]=\"lex.translate('Tarefa')\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome ...\" [attr.maxlength]=250></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\n        <column [title]=\"lex.translate('Tempo estimado') + ' /(h)'\" field=\"tempo_estimado\"></column>\n        <column title=\"Documental?\" type=\"select\" field=\"documental\" [items]=\"lookup.SIMNAO\"></column>\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { TipoTarefaFormComponent } from './tipo-tarefa-form/tipo-tarefa-form.component';\nimport { TipoTarefaListComponent } from './tipo-tarefa-list/tipo-tarefa-list.component';\n\nconst routes: Routes = [\n  { path: '', component: TipoTarefaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Tarefa\" } },\n  { path: 'new', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Tipo de Tarefa\", modal: true } },\n  { path: ':id/edit', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Tipo de Tarefa\", modal: true } },\n  { path: ':id/consult', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Tipo de Tarefa\", modal: true } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TipoTarefaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TipoTarefaRoutingModule } from './tipo-tarefa-routing.module';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TipoTarefaFormComponent } from './tipo-tarefa-form/tipo-tarefa-form.component';\nimport { TipoTarefaListComponent } from './tipo-tarefa-list/tipo-tarefa-list.component';\n\n\n@NgModule({\n  declarations: [\n    TipoTarefaFormComponent,\n    TipoTarefaListComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    TipoTarefaRoutingModule\n  ]\n})\nexport class TipoTarefaModule { }\n"],"names":["Base","TipoTarefa","constructor","data","nome","tempo_estimado","documental","comentario","initialization","EditableFormComponent","TipoTarefaDaoService","PageFormBase","TipoTarefaFormComponent","injector","validate","control","controlName","result","indexOf","value","length","titleEdit","entity","lex","translate","modalWidth","form","fh","FormBuilder","default","comentario_predefinido","cdRef","loadData","formValue","Object","assign","patchValue","util","fillForm","initializeData","saveData","Promise","resolve","reject","tarefa","fill","_","i0","ɵɵdirectiveInject","Injector","_2","selectors","viewQuery","TipoTarefaFormComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","TipoTarefaFormComponent_Template_editable_form_submit_0_listener","onSaveData","TipoTarefaFormComponent_Template_editable_form_cancel_0_listener","onCancel","ɵɵelement","ɵɵelementEnd","ɵɵproperty","formDisabled","isModal","title","ɵɵadvance","ɵɵattribute","GridComponent","PageListBase","TipoTarefaListComponent","filterWhere","filter","push","trim","replace","code","auth","hasPermissionTo","options","icon","label","onClick","consult","bind","delete","addOption","OPTION_LOGS","filterClear","controls","setValue","TipoTarefaListComponent_Query","TipoTarefaListComponent_Template_grid_select_0_listener","$event","onSelect","ɵɵtemplate","TipoTarefaListComponent_toolbar_1_Template","dao","add","orderBy","groupBy","join","selectable","filterSubmit","filterCollapseChange","filterCollapsed","lookup","SIMNAO","edit","rowsLimit","RouterModule","AuthGuard","ConfigResolver","routes","path","component","canActivate","config","runGuardsAndResolvers","modal","TipoTarefaRoutingModule","_3","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","TipoTarefaModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
=======
{"version":3,"file":"3300.js","mappings":";;;;;;;;;;;;;;AAAoC;AAE9B,MAAOC,UAAW,SAAQD,6CAAI;EAMhCE,YAAmBC,IAAU;IAAI,KAAK,EAAE;IALjC,KAAAC,IAAI,GAAW,EAAE,CAAC,CAAC;IACnB,KAAAC,cAAc,GAAW,CAAC,CAAC,CAAC;IAC5B,KAAAC,UAAU,GAAY,KAAK,CAAC,CAAC;IAC7B,KAAAC,UAAU,GAAkB,IAAI,CAAC,CAAC;IAEC,IAAI,CAACC,cAAc,CAACL,IAAI,CAAC;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;ACNwB;AACtB;AAEb;AACK;;;;;;;AAO7D,MAAOS,uBAAwB,SAAQD,6EAA8C;EAGzFT,YAAmBW,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEZ,wEAAU,EAAES,qFAAoB,CAAC;IADhC,KAAAG,QAAQ,GAARA,QAAQ;IAWpB,KAAAC,QAAQ,GAAG,CAACC,OAAwB,EAAEC,WAAmB,KAAI;MAClE,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAG,CAAC,MAAM,CAAC,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,IAAI,CAACD,OAAO,CAACI,KAAK,EAAEC,MAAM,EAAE;QAC/DH,MAAM,GAAG,aAAa;;MAExB,OAAOA,MAAM;IACf,CAAC;IAkBM,KAAAI,SAAS,GAAIC,MAAkB,IAAY;MAChD,OAAO,WAAW,GAAG,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,gBAAgB,CAAC,GAAG,IAAI,IAAIF,MAAM,EAAElB,IAAI,IAAI,EAAE,CAAC;IACzF,CAAC;IApCC,IAAI,CAACqB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,EAAE,CAACC,WAAW,CAAC;MAC9BxB,IAAI,EAAE;QAACyB,OAAO,EAAE;MAAE,CAAC;MACnBxB,cAAc,EAAE;QAACwB,OAAO,EAAE;MAAC,CAAC;MAC5BvB,UAAU,EAAE;QAACuB,OAAO,EAAE;MAAK,CAAC;MAC5BC,sBAAsB,EAAE;QAACD,OAAO,EAAE;MAAE;KACrC,EAAE,IAAI,CAACE,KAAK,EAAE,IAAI,CAACjB,QAAQ,CAAC;EAC/B;EAWOkB,QAAQA,CAACV,MAAkB,EAAEI,IAAe;IACjD,IAAIO,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAET,IAAI,CAACP,KAAK,CAAC;IAC7CO,IAAI,CAACU,UAAU,CAAC,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACL,SAAS,EAAEX,MAAM,CAAC,CAAC;EACxD;EAEOiB,cAAcA,CAACb,IAAe;IACnCA,IAAI,CAACU,UAAU,CAAC,IAAInC,wEAAU,EAAE,CAAC;EACnC;EAEOuC,QAAQA,CAACd,IAAgB;IAC9B,OAAO,IAAIe,OAAO,CAAa,CAACC,OAAO,EAAEC,MAAM,KAAI;MACjD,MAAMC,MAAM,GAAG,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI5C,wEAAU,EAAE,EAAE,IAAI,CAACqB,MAAO,CAAC;MAC7DoB,OAAO,CAAC,IAAI,CAACL,IAAI,CAACC,QAAQ,CAACM,MAAM,EAAE,IAAI,CAAClB,IAAK,CAACP,KAAK,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ;;SArCWP,uBAAwB;;mBAAxBA,MAAuB,EAAAkC,+DAAA,CAAAA,mDAAA;AAAA;;QAAvBlC,MAAuB;EAAAqC,SAAA;EAAAC,SAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;gEACvB3C,2GAAqB;;;;;;;;;;;;;MCdlCqC,4DAAA,uBAAyJ;MAA9CA,wDAAA,oBAAAU,iEAAA;QAAA,OAAUH,GAAA,CAAAI,UAAA,EAAY;MAAA,EAAC,oBAAAC,iEAAA;QAAA,OAAWL,GAAA,CAAAM,QAAA,EAAU;MAAA,EAArB;MAC9Hb,4DAAA,aAAiB;MAETA,uDAAA,oBAAmH;MAGvHA,0DAAA,EAAM;MACNA,4DAAA,aAAiB;MACbA,uDAAA,wBAA4H;MAChIA,0DAAA,EAAM;;;MATCA,wDAAA,SAAAO,GAAA,CAAA3B,IAAA,CAAc,aAAA2B,GAAA,CAAAU,YAAA,WAAAV,GAAA,CAAAW,OAAA,QAAAX,GAAA,CAAAY,KAAA;MAGLnB,uDAAA,GAAU;MAAVA,wDAAA,WAAU;MAAkDA,yDAAA,kBAAoB;MACrEA,uDAAA,GAAyC;MAAzCA,wDAAA,UAAAO,GAAA,CAAA9B,GAAA,CAAAC,SAAA,mBAAyC;MAC9BsB,uDAAA,GAAU;MAAVA,wDAAA,WAAU;MAG5BA,uDAAA,GAAW;MAAXA,wDAAA,YAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgC;AACI;AACb;AACK;;;;;;;;;;;;ICD/DA,wDAAA,cAAuC;;;ADQrC,MAAOwB,uBAAwB,SAAQD,6EAA8C;EAGzFnE,YAAmBW,QAAkB;IACnC,KAAK,CAACA,QAAQ,EAAEZ,wEAAU,EAAES,qFAAoB,CAAC;IADhC,KAAAG,QAAQ,GAARA,QAAQ;IAgCpB,KAAA0D,WAAW,GAAIC,MAAiB,IAAI;MACzC,IAAIvD,MAAM,GAAU,EAAE;MACtB,IAAIS,IAAI,GAAQ8C,MAAM,CAACrD,KAAK;MAE5B,IAAGO,IAAI,CAACtB,IAAI,EAAEgB,MAAM,EAAE;QACpBH,MAAM,CAACwD,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG/C,IAAI,CAACtB,IAAI,CAACsE,IAAI,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;MAG/E,OAAO1D,MAAM;IACf,CAAC;IAvCC;IACA,IAAI,CAACgD,KAAK,GAAG,IAAI,CAAC1C,GAAG,CAACC,SAAS,CAAC,iBAAiB,CAAC;IAClD,IAAI,CAACoD,IAAI,GAAG,SAAS;IACrB,IAAI,CAACJ,MAAM,GAAG,IAAI,CAAC7C,EAAE,CAACC,WAAW,CAAC;MAChCxB,IAAI,EAAE;QAACyB,OAAO,EAAE;MAAE;KAClB,CAAC;IACH;IACA,IAAI,IAAI,CAACgD,IAAI,CAACC,eAAe,CAAC,cAAc,CAAC,EAAE;MAC7C,IAAI,CAACC,OAAO,CAACN,IAAI,CAAC;QAChBO,IAAI,EAAE,mBAAmB;QACzBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI;OAChC,CAAC;;IAEJ;IACA,IAAI,IAAI,CAACP,IAAI,CAACC,eAAe,CAAC,cAAc,CAAC,EAAE;MAC7C,IAAI,CAACC,OAAO,CAACN,IAAI,CAAC;QAChBO,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE,IAAI,CAACG,MAAM,CAACD,IAAI,CAAC,IAAI;OAC/B,CAAC;;IAEJ,IAAI,CAACE,SAAS,CAAC,IAAI,CAACC,WAAW,EAAE,eAAe,CAAC;EACnD;EAEOC,WAAWA,CAAChB,MAAiB;IAClCA,MAAM,CAACiB,QAAQ,CAACrF,IAAI,CAACsF,QAAQ,CAAC,EAAE,CAAC;IACjC,KAAK,CAACF,WAAW,CAAChB,MAAM,CAAC;EAC3B;;SAjCWF,uBAAwB;;mBAAxBA,MAAuB,EAAAxB,gEAAA,CAAAA,oDAAA;AAAA;;QAAvBwB,MAAuB;EAAArB,SAAA;EAAAC,SAAA,WAAAyC,8BAAAvC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEACvBgB,iFAAa;;;;;;;;;;;;;MCb1BtB,6DAAA,cAGoD;MAFtBA,yDAAA,oBAAA8C,wDAAAC,MAAA;QAAA,OAAUxC,GAAA,CAAAyC,QAAA,CAAAD,MAAA,CAAgB;MAAA,EAAC;MAGrD/C,yDAAA,IAAAkD,0CAAA,qBAAuC;MACvClD,6DAAA,gBAAyQ;MAEjQA,wDAAA,oBAAwK;MAC5KA,2DAAA,EAAM;MAEVA,6DAAA,cAAS;MACLA,wDAAA,gBAA0D;MAI9DA,2DAAA,EAAU;MACVA,wDAAA,qBAA4C;MAChDA,2DAAA,EAAO;;;MAjBDA,yDAAA,QAAAO,GAAA,CAAA4C,GAAA,CAAW,QAAA5C,GAAA,CAAA6C,GAAA,WAAA7C,GAAA,CAAAW,OAAA,QAAAX,GAAA,CAAAY,KAAA,aAAAZ,GAAA,CAAA8C,OAAA,aAAA9C,GAAA,CAAA+C,OAAA,UAAA/C,GAAA,CAAAgD,IAAA,gBAAAhD,GAAA,CAAAiD,UAAA,YAAAjD,GAAA,CAAAwB,IAAA,CAAAC,eAAA,6BAAAzB,GAAA,CAAAwB,IAAA,CAAAC,eAAA;MAIHhC,wDAAA,GAAiB;MAAjBA,yDAAA,UAAAO,GAAA,CAAAiD,UAAA,CAAiB;MACnBxD,wDAAA,GAAsD;MAAtDA,yDAAA,YAAAO,GAAA,CAAAwB,IAAA,CAAAC,eAAA,kBAAsD,SAAAzB,GAAA,CAAAmB,MAAA,WAAAnB,GAAA,CAAAkB,WAAA,YAAAlB,GAAA,CAAAkD,YAAA,CAAAnB,IAAA,CAAA/B,GAAA,YAAAA,GAAA,CAAAmC,WAAA,CAAAJ,IAAA,CAAA/B,GAAA,qBAAAA,GAAA,CAAAmD,oBAAA,CAAApB,IAAA,CAAA/B,GAAA,iBAAAA,GAAA,CAAAiD,UAAA,IAAAjD,GAAA,CAAAoD,eAAA;MAE1C3D,wDAAA,GAAW;MAAXA,yDAAA,YAAW,UAAAO,GAAA,CAAA9B,GAAA,CAAAC,SAAA,uBAAA6B,GAAA,CAAAmB,MAAA,CAAAiB,QAAA,CAAArF,IAAA;MAA+G0C,0DAAA,kBAAoB;MAKtJA,wDAAA,GAAmD;MAAnDA,yDAAA,UAAAO,GAAA,CAAA9B,GAAA,CAAAC,SAAA,6BAAmD;MACEsB,wDAAA,GAAuB;MAAvBA,yDAAA,UAAAO,GAAA,CAAAqD,MAAA,CAAAC,MAAA,CAAuB;MAC7D7D,wDAAA,GAAe;MAAfA,yDAAA,WAAAO,GAAA,CAAAuD,IAAA,CAAe,YAAAvD,GAAA,CAAA0B,OAAA;MAE9BjC,wDAAA,GAAkB;MAAlBA,yDAAA,SAAAO,GAAA,CAAAwD,SAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ACfqB;AACD;AACa;AACqB;AACA;;;AAExF,MAAMI,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAE7C,iGAAuB;EAAE8C,WAAW,EAAE,CAACL,gEAAS,CAAC;EAAErE,OAAO,EAAE;IAAE2E,MAAM,EAAEL,6EAAcA;EAAA,CAAE;EAAEM,qBAAqB,EAAE,QAAQ;EAAEnH,IAAI,EAAE;IAAE8D,KAAK,EAAE;EAAiB;AAAE,CAAE,EACpL;EAAEiD,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEvG,iGAAuB;EAAEwG,WAAW,EAAE,CAACL,gEAAS,CAAC;EAAErE,OAAO,EAAE;IAAE2E,MAAM,EAAEL,6EAAcA;EAAA,CAAE;EAAEM,qBAAqB,EAAE,QAAQ;EAAEnH,IAAI,EAAE;IAAE8D,KAAK,EAAE,4BAA4B;IAAEsD,KAAK,EAAE;EAAI;AAAE,CAAE,EAC/M;EAAEL,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEvG,iGAAuB;EAAEwG,WAAW,EAAE,CAACL,gEAAS,CAAC;EAAErE,OAAO,EAAE;IAAE2E,MAAM,EAAEL,6EAAcA;EAAA,CAAE;EAAEM,qBAAqB,EAAE,QAAQ;EAAEnH,IAAI,EAAE;IAAE8D,KAAK,EAAE,0BAA0B;IAAEsD,KAAK,EAAE;EAAI;AAAE,CAAE,EAClN;EAAEL,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEvG,iGAAuB;EAAEwG,WAAW,EAAE,CAACL,gEAAS,CAAC;EAAErE,OAAO,EAAE;IAAE2E,MAAM,EAAEL,6EAAcA;EAAA,CAAE;EAAEM,qBAAqB,EAAE,QAAQ;EAAEnH,IAAI,EAAE;IAAE8D,KAAK,EAAE,2BAA2B;IAAEsD,KAAK,EAAE;EAAI;AAAE,CAAE,CACvN;AAMK,MAAOC,uBAAuB;SAAvBA,uBAAuB;;mBAAvBA,MAAuB;AAAA;;QAAvBA;AAAuB;;YAHxBV,yDAAY,CAACW,QAAQ,CAACR,MAAM,CAAC,EAC7BH,yDAAY;AAAA;;sHAEXU,uBAAuB;IAAAE,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFxBd,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACfuB;AACwB;AACC;AACnB;AACmC;AACA;;AAelF,MAAOkB,gBAAgB;SAAhBA,gBAAgB;;mBAAhBA,MAAgB;AAAA;;QAAhBA;AAAgB;;YANzBH,yDAAY,EACZC,kFAAgB,EAChBC,+DAAmB,EACnBP,gFAAuB;AAAA;;sHAGdQ,gBAAgB;IAAAC,YAAA,GAVzBrH,iGAAuB,EACvB0D,iGAAuB;IAAAoD,OAAA,GAGvBG,yDAAY,EACZC,kFAAgB,EAChBC,+DAAmB,EACnBP,gFAAuB;EAAA;AAAA","sources":["./src/app/models/tipo-tarefa.model.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-form/tipo-tarefa-form.component.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-form/tipo-tarefa-form.component.html","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-list/tipo-tarefa-list.component.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-list/tipo-tarefa-list.component.html","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa-routing.module.ts","./src/app/modules/cadastros/tipo-tarefa/tipo-tarefa.module.ts"],"sourcesContent":["import { Base } from './base.model';\n\nexport class TipoTarefa extends Base {\n    public nome: string = \"\"; /* Nome da tarefa */\n    public tempo_estimado: number = 0; /* Tempo estimado para a execução da tarefa (Horas decimais) */\n    public documental: boolean = false; /* Se a entrega requer obrigatoriamente um documento */\n    public comentario: string | null = null; /* Comentário predefinida para a tarefa */\n\n    public constructor(data?: any) { super(); this.initialization(data); }\n}\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { TipoTarefaDaoService } from 'src/app/dao/tipo-tarefa-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { TipoTarefa } from 'src/app/models/tipo-tarefa.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n@Component({\r\n  selector: 'tipo-tarefa-form',\r\n  templateUrl: './tipo-tarefa-form.component.html',\r\n  styleUrls: ['./tipo-tarefa-form.component.scss']\r\n})\r\nexport class TipoTarefaFormComponent extends PageFormBase<TipoTarefa, TipoTarefaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoTarefa, TipoTarefaDaoService);\r\n    this.modalWidth = 1100;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: {default: \"\"},\r\n      tempo_estimado: {default: 0},\r\n      documental: {default: false},\r\n      comentario_predefinido: {default: \"\"}\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n    if(['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public loadData(entity: TipoTarefa, form: FormGroup): void {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public initializeData(form: FormGroup): void {\r\n    form.patchValue(new TipoTarefa());\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<TipoTarefa> {\r\n    return new Promise<TipoTarefa>((resolve, reject) => {\r\n      const tarefa = this.util.fill(new TipoTarefa(), this.entity!);\r\n      resolve(this.util.fillForm(tarefa, this.form!.value));\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: TipoTarefa): string => {\r\n    return \"Editando \" + this.lex.translate(\"Tipo de Tarefa\") + ': ' + (entity?.nome || \"\");\r\n  }\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" initialFocus=\"nome\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div class=\"row\">\n        <div class=\"row\">\n            <input-text [size]=\"8\" label=\"Nome\" icon=\"bi bi-upc\" controlName=\"nome\" [attr.maxlength]=250 required></input-text>\n            <input-timer onlyHours [label]=\"lex.translate('Tempo estimado')\" [size]=\"3\" controlName=\"tempo_estimado\" labelInfo=\"Tempo estimado para execução\"></input-timer>\n            <input-switch label=\"Documental?\" [size]=\"1\" controlName=\"documental\" labelInfo=\"\"></input-switch>\n        </div>\n        <div class=\"row\">\n            <input-textarea [size]=\"12\" [rows]=\"3\" label=\"Comentário automático\" controlName=\"comentario_predefinido\" ></input-textarea>\n        </div>\n    </div>\n</editable-form>\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { TipoTarefaDaoService } from 'src/app/dao/tipo-tarefa-dao.service';\r\nimport { TipoTarefa } from 'src/app/models/tipo-tarefa.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-tarefa-list',\r\n  templateUrl: './tipo-tarefa-list.component.html',\r\n  styleUrls: ['./tipo-tarefa-list.component.scss']\r\n})\r\nexport class TipoTarefaListComponent extends PageListBase<TipoTarefa, TipoTarefaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, TipoTarefa, TipoTarefaDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.translate(\"Tipos de Tarefa\");\r\n    this.code = \"MOD_TRF\";\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: {default: \"\"}\r\n     });\r\n    // Testa se o usuário possui permissão para exibir dados da tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir a tarefa\r\n    if (this.auth.hasPermissionTo(\"MOD_TRF_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n    this.addOption(this.OPTION_LOGS, \"MOD_AUDIT_LOG\");\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome.trim().replace(\" \", \"%\") + \"%\"]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"auth.hasPermissionTo('MOD_TRF_INCL')\"\n    [hasEdit]=\"auth.hasPermissionTo('MOD_TRF_EDT')\">\n    <toolbar *ngIf=\"!selectable\"></toolbar>\n    <filter [deleted]=\"this.auth.hasPermissionTo('MOD_AUDIT_DEL')\" [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"12\" [label]=\"lex.translate('Tarefa')\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome ...\" [attr.maxlength]=250></input-text>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\n        <column [title]=\"lex.translate('Tempo estimado') + ' /(h)'\" field=\"tempo_estimado\"></column>\n        <column title=\"Documental?\" type=\"select\" field=\"documental\" [items]=\"lookup.SIMNAO\"></column>\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { TipoTarefaFormComponent } from './tipo-tarefa-form/tipo-tarefa-form.component';\nimport { TipoTarefaListComponent } from './tipo-tarefa-list/tipo-tarefa-list.component';\n\nconst routes: Routes = [\n  { path: '', component: TipoTarefaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Tipos de Tarefa\" } },\n  { path: 'new', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão de Tipo de Tarefa\", modal: true } },\n  { path: ':id/edit', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição de Tipo de Tarefa\", modal: true } },\n  { path: ':id/consult', component: TipoTarefaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consulta a Tipo de Tarefa\", modal: true } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TipoTarefaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TipoTarefaRoutingModule } from './tipo-tarefa-routing.module';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TipoTarefaFormComponent } from './tipo-tarefa-form/tipo-tarefa-form.component';\nimport { TipoTarefaListComponent } from './tipo-tarefa-list/tipo-tarefa-list.component';\n\n\n@NgModule({\n  declarations: [\n    TipoTarefaFormComponent,\n    TipoTarefaListComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    TipoTarefaRoutingModule\n  ]\n})\nexport class TipoTarefaModule { }\n"],"names":["Base","TipoTarefa","constructor","data","nome","tempo_estimado","documental","comentario","initialization","EditableFormComponent","TipoTarefaDaoService","PageFormBase","TipoTarefaFormComponent","injector","validate","control","controlName","result","indexOf","value","length","titleEdit","entity","lex","translate","modalWidth","form","fh","FormBuilder","default","comentario_predefinido","cdRef","loadData","formValue","Object","assign","patchValue","util","fillForm","initializeData","saveData","Promise","resolve","reject","tarefa","fill","i0","ɵɵdirectiveInject","Injector","selectors","viewQuery","TipoTarefaFormComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","TipoTarefaFormComponent_Template_editable_form_submit_0_listener","onSaveData","TipoTarefaFormComponent_Template_editable_form_cancel_0_listener","onCancel","ɵɵelement","ɵɵelementEnd","ɵɵproperty","formDisabled","isModal","title","ɵɵadvance","ɵɵattribute","GridComponent","PageListBase","TipoTarefaListComponent","filterWhere","filter","push","trim","replace","code","auth","hasPermissionTo","options","icon","label","onClick","consult","bind","delete","addOption","OPTION_LOGS","filterClear","controls","setValue","TipoTarefaListComponent_Query","TipoTarefaListComponent_Template_grid_select_0_listener","$event","onSelect","ɵɵtemplate","TipoTarefaListComponent_toolbar_1_Template","dao","add","orderBy","groupBy","join","selectable","filterSubmit","filterCollapseChange","filterCollapsed","lookup","SIMNAO","edit","rowsLimit","RouterModule","AuthGuard","ConfigResolver","routes","path","component","canActivate","config","runGuardsAndResolvers","modal","TipoTarefaRoutingModule","forChild","imports","i1","exports","CommonModule","ComponentsModule","ReactiveFormsModule","TipoTarefaModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
>>>>>>> develop
