{"version":3,"sources":["./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-form/plano-entrega-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-form/plano-entrega-entrega-form.component.html","./src/app/dao/plano-entrega-entrega-dao.service.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/models/plano-entrega.model.ts","./src/app/dao/plano-entrega-ponto-controle-dao.service.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/models/plano-entrega-entrega.model.ts","./src/app/models/plano-entrega-ponto-controle.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list-ponto-controle/plano-entrega-list-ponto-controle.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-ponto-controle/plano-entrega-list-ponto-controle.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-ponto-controle-avaliar/plano-entrega-form-ponto-controle-avaliar.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-ponto-controle-avaliar/plano-entrega-form-ponto-controle-avaliar.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-list/plano-entrega-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-list/plano-entrega-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-ponto-controle-form-entrega/plano-entrega-ponto-controle-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-ponto-controle-form-entrega/plano-entrega-ponto-controle-form-entrega.component.html","./src/app/models/plano-entrega-ponto-controle-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.service.ts"],"names":[],"mappings":"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","file":"modules-gestao-plano-entrega-plano-entrega-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plano-entrega-entrega-form',\n  templateUrl: './plano-entrega-entrega-form.component.html',\n  styleUrls: ['./plano-entrega-entrega-form.component.scss']\n})\nexport class PlanoEntregaEntregaFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>plano-entrega-entrega-form works!</p>\n","import { Injectable, Injector } from '@angular/core';\nimport { PlanoEntregaEntrega } from '../models/plano-entrega-entrega.model';\nimport { DaoBaseService } from './dao-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoEntregaEntregaDaoService extends DaoBaseService<PlanoEntregaEntrega> {\n\n  constructor(protected injector: Injector) {\n    super(\"PlanoEntregaEntrega\", injector);\n  }\n\n  public needHomologate(plano: PlanoEntregaEntrega){\n\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/guards/auth.guard';\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\nimport { PlanoEntregaListPontoControleComponent } from './plano-entrega-list-ponto-controle/plano-entrega-list-ponto-controle.component';\nimport { PlanoEntregaFormPontoControleAvaliarComponent } from './plano-entrega-form-ponto-controle-avaliar/plano-entrega-form-ponto-controle-avaliar.component';\nimport { PlanoEntregaPontoControleFormEntregaComponent } from './plano-entrega-ponto-controle-form-entrega/plano-entrega-ponto-controle-form-entrega.component';\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\n\nconst routes: Routes = [\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entrega\" } },\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } },\n  { path: ':id/ponto-controle', component: PlanoEntregaListPontoControleComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Pontos de Controle do Plano de Entrega\" } },\n  { path: 'entrega', component: PlanoEntregaListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entrega\" } },\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\n  { path: 'ponto-controle/:id/avaliar', component: PlanoEntregaFormPontoControleAvaliarComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Avaliar Ponto de Controle\" } },\n  { path: 'ponto-controle/entrega', component: PlanoEntregaPontoControleFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Ponto de Controle\" } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlanoEntregaRoutingModule { }\n","import { Base } from './base.model';\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\n\nexport class PlanoEntrega extends Base {\n  public entregas?: PlanoEntregaEntrega[];\n\n  public inicio: Date = new Date();               // Data inicio do plano de entrega\n  public fim: Date | null = null;                 // Data fim do plano de entrega\n  public nome: string = \"\";                       // Nome do plano de entrega\n  public unidade_id: string = '';\n  public numero: number = 0;                      // Número do plano de entrega (Gerado pelo sistema)\n  public planejamento_id: string | null = null;\n  public cadeia_valor_id: string | null = null;\n  \n  public constructor(data?: any) { super(); this.initialization(data); }\n}","import { Injectable, Injector } from '@angular/core';\nimport { PlanoEntregaPontoControle } from '../models/plano-entrega-ponto-controle.model';\nimport { DaoBaseService } from './dao-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoEntregaPontoControleDaoService extends DaoBaseService<PlanoEntregaPontoControle> {\n\n  constructor(protected injector: Injector) {\n    super(\"PlanoEntregaPontoControle\", injector);\n  }\n\n  public getPontoControle(id: string): Promise<PlanoEntregaPontoControle | null> {\n    return this.getById(id, [\"gestor\", \"avaliador\", \"tipo_avaliacao\", \"entregas\", \"entregas.entrega_plano_entrega.entrega\"]); \n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\nimport { PlanoEntregaListPontoControleComponent } from './plano-entrega-list-ponto-controle/plano-entrega-list-ponto-controle.component';\nimport { PlanoEntregaFormPontoControleAvaliarComponent } from './plano-entrega-form-ponto-controle-avaliar/plano-entrega-form-ponto-controle-avaliar.component';\nimport { PlanoEntregaPontoControleFormEntregaComponent } from './plano-entrega-ponto-controle-form-entrega/plano-entrega-ponto-controle-form-entrega.component';\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\nimport { PlanoEntregaEntregaFormComponent } from './plano-entrega-entrega-form/plano-entrega-entrega-form.component';\nimport { PlanoEntregaEntregaListComponent } from './plano-entrega-entrega-list/plano-entrega-entrega-list.component';\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\n\n@NgModule({\n  declarations: [\n    PlanoEntregaListComponent,\n    PlanoEntregaFormComponent,\n    PlanoEntregaListPontoControleComponent,\n    PlanoEntregaListEntregaComponent,\n    PlanoEntregaFormPontoControleAvaliarComponent,\n    PlanoEntregaPontoControleFormEntregaComponent,\n    PlanoEntregaEntregaFormComponent,\n    PlanoEntregaEntregaListComponent,\n    PlanoEntregaMapaEntregasComponent\n  ],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    PlanoEntregaRoutingModule\n  ]\n})\nexport class PlanoEntregaModule { }\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\n\n\n@Component({\n  selector: 'app-plano-entrega-form',\n  templateUrl: './plano-entrega-form.component.html',\n  styleUrls: ['./plano-entrega-form.component.scss']\n})\n\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\n  public planoEntregasEntregasDao: PlanoEntregaEntregaDaoService;\n  public form: FormGroup;\n  public formEntregas: FormGroup;\n\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.planoEntregasEntregasDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n    this.join = [];\n    this.modalWidth = 1200;\n    this.form = this.fh.FormBuilder({ \n      nome: {default: \"\"},\n      inicio: {default: new Date()},\n      fim: {default: new Date()},\n      planejamento_id: {default: \"\"},\n      cadeia_valor_id: {default: \"\"},\n      entregas: {default: []},\n    }, this.cdRef, this.validate);\n\n    this.formEntregas = this.fh.FormBuilder({ \n      descricao: {default: \"\"},\n      cliente: {default: \"\"},\n      dt_inicio: {default: new Date()},\n      dt_fim: {default: new Date()},\n      tipo_indicador: {default: \"\"},\n      meta: {default: \"\"},\n      vl_realizado: {default: \"\"},\n      objetivos: {default: \"\"},\n      homologado: {default: \"\"},\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n\n/*     if(['usuario_id', 'unidade_id', 'programa_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\n      result = \"Obrigatório\";\n    }  */\n    return result;\n  }\n\n  public formValidation = (form?: FormGroup) => {\n    return undefined;\n  };\n\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    form.patchValue(this.util.fillForm(formValue, entity));\n    this.cdRef.detectChanges();\n  }\n\n  public async initializeData(form: FormGroup) {\n    this.loadData(this.entity!, this.form!);\n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntrega | boolean> {\n\n    return true;\n  }\n\n  public titleEdit = (entity: PlanoEntrega): string => {\n    return \"Editando \" ;\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    return result;\n  }\n\n  public async addEntrega() {\n    return new PlanoEntregaEntrega({\n      id: this.dao!.generateUuid(),\n      plano_entrega_id: this.entity?.id\n    }) as IIndexable;\n  }\n\n  public async removeEntrega(row: any) {\n    return true;\n  }\n\n  public async loadEntrega(form: FormGroup, row: any) {\n    this.formEntregas.controls.descricao.setValue(row.descricao);\n    this.formEntregas.controls.cliente.setValue(row.cliente);\n    this.formEntregas.controls.dt_inicio.setValue(row.dt_inicio);\n    this.formEntregas.controls.dt_fim.setValue(row.dt_fim);\n    this.formEntregas.controls.tipo_indicador.setValue(row.tipo_indicador);\n    this.formEntregas.controls.meta.setValue(row.meta);\n    this.formEntregas.controls.vl_realizado.setValue(row.vl_realizado);\n    this.formEntregas.controls.objetivos.setValue(row.objetivos);\n    this.formEntregas.controls.homologado.setValue(row.homologado);\n    this.cdRef.detectChanges();\n  }\n\n  public async saveEntrega(form: FormGroup, row: any) {\n    let result = undefined;\n    this.form!.markAllAsTouched();\n    if (this.form!.valid) {\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n      row.descricao = this.formEntregas.controls.descricao.value;\n      row.dt_inicio = this.formEntregas.controls.dt_inicio.value;\n      row.dt_fim = this.formEntregas.controls.dt_fim.value;\n      row.tipo_indicador =this.formEntregas.controls.tipo_indicador.value;\n      row.meta = this.formEntregas.controls.meta.value;\n      row.vl_realizado = this.formEntregas.controls.vl_realizado.value;\n      row.objetivos = this.formEntregas.controls.objetivos.value;\n      row.homologado = this.formEntregas.controls.homologado.value;\n      result = row;\n      this.cdRef.detectChanges();\n    }\n    return result;\n  }\n\n}\n\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <div>\n        <div class=\"row\">\n            <input-text [size]=\"6\" label=\"Nome \" icon=\"bi bi-textarea-t\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\n            <input-datetime date [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"inicio\" [control]=\"form!.controls.inicio\" labelInfo=\"Início do Plano de Entregas\"></input-datetime>\n            <input-datetime date [size]=\"3\" label=\"Fim\" icon=\"bi bi-calendar-date\" controlName=\"fim\" [control]=\"form!.controls.fim\" labelInfo=\"Fim do Plano de Entregas\"></input-datetime>\n        </div>\n        <div  class=\"row\">\n            <input-search [size]=\"6\" icon=\"far fa-edit\" controlName=\"planejamento_id\" label=\"Selecione o Planejamento da Unidade Instituidora vinculado\" [dao]=\"planejamentoInstitucionalDao\" [selectRoute]=\"{route: ['gestao', 'planejamento']}\" ></input-search>\n            <input-search [size]=\"6\" icon=\"far fa-edit\" controlName=\"cadiea_valor_id\"label=\"Selecione a Cadeia de Valor vinculado\" [dao]=\"cadeiaValorDao\" [selectRoute]=\"{route: ['gestao', 'cadeia-valor']}\"></input-search>    \n        </div>\n        <separator></separator>\n        <div class=\"row\">\n            <grid [control]=\"form!.controls.entregas\" [form]=\"formEntregas\" [hasEdit]=\"true\" [hasDelete]=\"true\" [add]=\"addEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" \n                  [save]=\"saveEntrega.bind(this)\" editable [groupTemplate]=\"groupEntregas\" >\n                <ng-template let-separator=\"separator\" #groupEntregas>\n                    <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\"><badge color=\"primary\" [label]=\"separator?.text\"></badge></span>\n                </ng-template>\n                <columns>\n                    <column [title]=\"'Entrega/\\nCliente'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"editEntregaCliente\">\n                        <ng-template let-row=\"row\" #columnEntregaCliente>\n                            <span>{{row.descricao+\" / \"+row.cliente}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editEntregaCliente>\n                            <input-text [size]=\"6\" controlName=\"descricao\"></input-text>\n                            <input-text  [size]=\"6\" controlName=\"cliente\"></input-text>\n                        </ng-template>\n                    </column>\n                    <column [title]=\"'Data Início/\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"editDatas\">\n                        <ng-template let-row=\"row\" #columnDatas>\n                            <span> {{dao!.getDateFormatted(row.dt_inicio)+\" até \"+dao!.getDateFormatted(row.dt_fim)}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editDatas>\n                            <input-datetime noIcon date [size]=\"6\" controlName=\"dt_inicio\"></input-datetime>\n                            <input-datetime noIcon date [size]=\"6\" controlName=\"dt_fim\"></input-datetime>\n                        </ng-template>\n                    </column>\n                    <column title=\"Indicador\" [template]=\"columnIndicador\" [editTemplate]=\"editIndicador\">\n                        <ng-template let-row=\"row\" #columnIndicador>\n                            <span>{{row.tipo_indicador}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editIndicador>\n                            <input-select [items]=\"lookup.TIPO_INDICADOR\" [size]=\"6\"  controlName=\"tipo_indicador\"></input-select>                        \n                        </ng-template>\n                    </column>\n                    <column title=\"Meta Geral\" [template]=\"columnMetaGeral\" [editTemplate]=\"editMetaGeral\">\n                        <ng-template let-row=\"row\" #columnMetaGeral>\n                            <span>{{row.meta}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editMetaGeral>\n                            <input-text [size]=\"12\"  controlName=\"meta\" ></input-text>                        \n                        </ng-template>\n                    </column>\n                    <column title=\"Realizado\" [template]=\"columnRealizado\" [editTemplate]=\"editRealizado\">\n                        <ng-template let-row=\"row\" #columnRealizado>\n                            <span>{{row.vl_realizado}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editRealizado>\n                            <input-text [size]=\"6\"  controlName=\"vl_realizado\"></input-text>                        \n                        </ng-template>\n                    </column>\n                    <column title=\"Objetivos/Processos/Atividades\" [template]=\"columnObjetivod\" [editTemplate]=\"editObjetivos\">\n                        <ng-template let-row=\"row\" #columnObjetivod>\n                            <span>{{row.objetivos}}</span>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editObjetivos>\n                            <input-search [size]=\"6\" controlName=\"objetivos\"></input-search>                        \n                        </ng-template>\n                    </column>\n                    <column icon=\"bi bi-check-lg\" titleHint=\"Se a entrega foi homologada\" [template]=\"columnHomologado\" [editTemplate]=\"editHomologado\">\n                        <ng-template let-row=\"row\" #columnHomologado>\n                            <div class=\"text-center\"><i *ngIf=\"row.concluido\" class=\"bi bi-check-circle\"></i></div>\n                        </ng-template>\n                        <ng-template let-row=\"row\" #editHomologado>\n                            <input-switch [size]=\"12\" controlName=\"homologado\"></input-switch>                       \n                        </ng-template>\n                    </column>\n                    <column type=\"options\"></column>\n                </columns>\n            </grid>\n        </div>\n    </div>\n</editable-form>\n\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\nimport { PlanoEntregaService } from '../plano-entrega.service';\n\n@Component({\n  selector: 'plano-entrega-mapa-entregas',\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\n})\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\n  \n  public unidadeDao: UnidadeDaoService;\n  public entregaDao: EntregaDaoService;\n  public entregaService: PlanoEntregaService;\n  public objetivoId?: string;\n  public processoId?: string;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\n    /* Inicializações */\n    this.title = \"Entregas\";\n    this.filter = this.fh.FormBuilder({\n      unidade_id: {default: null},\n      entrega_id: {default: null},\n      inicio: {default: null},\n      fim: {default: null}\n    });\n    this.join = [];\n  }\n\n  ngOnInit(){\n    super.ngOnInit()\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.entrega_id.setValue(null);\n    filter.controls.inicio.setValue(null);\n    filter.controls.fim.setValue(null);\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\n    if(form.inicio) result.push([\"data_inicio\", \">=\", form.inicio]);\n    if(form.fim) result.push([\"data_fim\", \"<=\", form.fim]);\n\n    return result;\n  }\n\n}\n\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\n    <toolbar>\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\n    </toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-search #unidade [size]=\"4\" label=\"Unidade\" controlName=\"unidade_id\" [control]=\"filter!.controls.unidade_id\" [dao]=\"unidadeDao\" [selectRoute]=\"{route: ['configuracoes', 'unidade']}\"></input-search>\n            <input-search #entrega [size]=\"4\" label=\"Entrega\" controlName=\"entrega_id\" [control]=\"filter!.controls.entrega_id\" [dao]=\"entregaDao\" [selectRoute]=\"{route: ['cadastros', 'entrega']}\"></input-search>\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\n            <ng-template let-row=\"row\" #columnEntrega>\n                <p><b>Data:</b> {{util.getDateFormatted(row.inicio)}} - {{util.getDateFormatted(row.fim)}}</p>\n                <p><b>Cliente:</b> {{row.cliente}}</p>\n                <p>{{row.descricao}}</p>\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" hint=\"Plano de entrega\"></badge>\n            </ng-template>\n        </column>\n        <column title=\"Meta\" [template]=\"columnMeta\">\n            <ng-template let-row=\"row\" #columnMeta>\n                <div class=\"meta h-100\">\n                    <div class=\"card h-100\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">Meta</h5>\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </column>\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\n            <ng-template let-row=\"row\" #columnRealizado>\n                <div class=\"realizado h-100\">\n                    <div class=\"card h-100\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">Realizado</h5>\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\n                        </div>\n                        <div class=\"card-footer p-0\">\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>","import { LookupItem } from '../services/lookup.service';\nimport { Base } from './base.model';\nimport { Entrega, EntregaValor } from './entrega.model';\n\nexport class PlanoEntregaEntrega extends Base {\n  public entrega?: Entrega;\n\n  public inicio: Date = new Date();               \n  public fim: Date | null = null;                 \n  public descricao: string = \"\";                  \n  public cliente: string = \"\";                    \n  public homologado: boolean = false;                 \n  public meta: EntregaValor = {}; \n  public realizado: EntregaValor = {};\n  public plano_entrega_id: string | null = null;\n  public entrega_id: string = '';\n  public entrega_pai_id: string = '';                        \n  \n  public constructor(data?: any) { super(); this.initialization(data); }\n}","import { LookupItem } from '../services/lookup.service';\nimport { Base } from './base.model';\nimport { PlanoEntregaPontoControleEntrega } from './plano-entrega-ponto-controle-entrega.model';\nimport { PlanoEntrega } from './plano-entrega.model';\nimport { TipoAvaliacao } from './tipo-avaliacao.model';\nimport { Usuario } from './usuario.model';\n\nexport class PlanoEntregaPontoControle extends Base {\n  public entregas: PlanoEntregaPontoControleEntrega[] = [];\n  public plano_entrega?: PlanoEntrega;  \n  public gestor?: Usuario;\n  public avaliador?: Usuario;\n  public tipo_avaliacao?: TipoAvaliacao;\n\n  public inicio: Date = new Date();                   // Data inicio do ponto de controle\n  public fim: Date = new Date();                      // Data fim do ponto de controle\n  public nota_atribuida: number = 0;                  // Nota da avaliação (0 - 10)\n  public justificativas: LookupItem[] | null = null;  // Justificativas da avaliação\n  public comentarios: string | null = null;           // Comentário referente à nota\n  public plano_entrega_id: string = '';             \n  public gestor_id: string | null = null;          \n  public avaliador_id: string | null = null;       \n  public tipo_avaliacao_id: string | null = null;  \n  \n  public constructor(data?: any) { super(); this.initialization(data); }\n}","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\n\n@Component({\n  selector: 'app-plano-entrega-list-entrega',\n  templateUrl: './plano-entrega-list-entrega.component.html',\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\n})\nexport class PlanoEntregaListEntregaComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public planoEntregaId: string = \"\";\n\n  constructor(public injector: Injector) { \n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\n    this.title = this.lex.noun(\"Entrega\");\n    this.code = \"MOD_PENT_CONS\";\n    this.filter = this.fh.FormBuilder({\n      plano_entrega_id: {default: null},\n    });\n    // Testa se o usuário possui permissão para exibir planos de entrega\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\n      this.options.push({\n        icon: \"bi bi-info-circle\",\n        label: \"Informações\",\n        onClick: this.consult.bind(this)\n      });\n    }\n    // Testa se o usuário possui permissão para excluir planos de entrega\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\n      this.options.push({\n        icon: \"bi bi-trash\",\n        label: \"Excluir\",\n        onClick: this.delete.bind(this)\n      });\n    } \n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\n    return result;\n  }\n\n}\n","<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [selectable]=\"selectable\" (select)=\"onSelect($event)\">\n    <columns>\n        <column title=\"Início\" [template]=\"columnInicio\">\n            <ng-template let-row=\"row\" #columnInicio>\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Fim\" [template]=\"columnFim\">\n            <ng-template let-row=\"row\" #columnFim>\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Descrição\" [template]=\"columnDescricao\">\n            <ng-template let-row=\"row\" #columnDescricao>\n                <span> {{ row.descricao || ''}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Cliente\" [template]=\"columnCliente\">\n            <ng-template let-row=\"row\" #columnCliente>\n                <span> {{ row.cliente || '' }}</span>\n            </ng-template>\n        </column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n\n\n<!-- Grid-List:\n\n[+]  Data Início Data Fim    Responsável                            Avaliação\n   +-----------+-----------+-------------------------------------+-------------------------\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\n   |                                                              (AVALIADOR)\n   |                                                              (Justificativa)  \n   .......................................................................................\n   Entrega       Indicador           Meta         Realizado\n   -------------+-------------------+------------+------------- \n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\n\n\n\n\n\n\n\n   Plano de Entregas\n   Unidade (Setor)\n   Planejamento_estrategico_id\n   Cadeia_valor_id\n   Entregas\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\n   Ponto de controle\n      [01/01/2023][30/01/2023]:\n          Responsável: Genisson\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \n          Ent1:     Quantidade                          100          90\n          Ent3:     Qualitativo                         Satisfatório Ruim\n      [01/02/2023][30/02/2023]:\n          Responsável: Paiva\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta         Realizado\n          Ent1:     Quantidade                          110          110\n          Ent2:     %                                   70           70\n          Ent3:     Qualitativo                         Excelente    Bom\n* Deverá haver pelo menos 1\n\n\n -->","import { Component, Injector, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { PlanoEntregaPontoControleDaoService } from 'src/app/dao/plano-entrega-ponto-controle-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { PlanoEntregaPontoControle } from 'src/app/models/plano-entrega-ponto-controle.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\n\n@Component({\n  selector: 'app-plano-entrega-list-ponto-controle',\n  templateUrl: './plano-entrega-list-ponto-controle.component.html',\n  styleUrls: ['./plano-entrega-list-ponto-controle.component.scss']\n})\nexport class PlanoEntregaListPontoControleComponent extends PageListBase<PlanoEntregaPontoControle, PlanoEntregaPontoControleDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public form: FormGroup;\n  public planoEntregaId: string = \"\";\n  public usuarioDao: UsuarioDaoService;\n\n  constructor(public injector: Injector) { \n    super(injector, PlanoEntregaPontoControle, PlanoEntregaPontoControleDaoService);\n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService);\n    this.title = this.lex.noun(\"Ponto de Controle\",true);\n    this.code = \"MOD_PENT_PCTR_CONS\";\n    this.form = this.fh.FormBuilder({\n      plano_entrega_id: {default: ''}\n    });\n    this.filter = this.fh.FormBuilder({\n      gestor_id: {default: null},\n      inicio: {default: \"\"},\n      fim: {default: \"\"}\n    });\n    this.join = ['gestor:nome','tipo_avaliacao','avaliador:nome', 'entregas', 'entregas.plano_entrega_entrega'];\n    // Testa se o usuário possui permissão para exibir pontos de controle\n    if (this.auth.hasPermissionTo(\"MOD_PENT_PCTR_CONS\")) {\n      this.options.push({\n        icon: \"bi bi-info-circle\",\n        label: \"Informações\",\n        onClick: this.consult.bind(this)\n      });\n    }\n    // Testa se o usuário possui permissão para excluir pontos de controle\n    if (this.auth.hasPermissionTo(\"MOD_PENT_PCTR_EXCL\")) {\n      this.options.push({\n        icon: \"bi bi-trash\",\n        label: \"Excluir\",\n        onClick: this.delete.bind(this)\n      });\n    } \n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.gestor_id.setValue(null);\n    filter.controls.inicio.setValue(\"\");\n    filter.controls.fim.setValue(\"\");\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\n    if(form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\n    }\n    if(form.inicio) {\n      result.push([\"inicio\", \">=\", form.inicio]);\n    }\n    if(form.fim) {\n      result.push([\"fim\", \"<=\", form.fim]);\n    }  \n    if(form.gestor_id) {\n      result.push([\"gestor_id\", \"==\", form.gestor_id]);\n    } \n    return result;\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let pontoControle: PlanoEntregaPontoControle = row as PlanoEntregaPontoControle;\n    const BOTAO_INFORMACOES = { label: \"Informações\", hint: \"Consultar o Ponto de Controle\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\n    const BOTAO_ALTERAR = { label: \"Editar\", hint: \"Editar o Ponto de Controle\", icon: \"bi bi-pencil-square\", onClick: this.edit.bind(this) };\n    const BOTAO_ALTERAR_AVALIACAO = { label: \"Alterar avaliação\", hint: \"Alterar avaliação\", icon: \"bi bi-check-all\", color: \"btn-outline-danger\", onClick: (pontoControle: PlanoEntregaPontoControle) => this.go.navigate({ route: ['gestao', 'plano-entrega', pontoControle.id, 'avaliar'] }, this.modalRefreshId(pontoControle)) };\n    const BOTAO_EXCLUIR = { label: \"Excluir\", hint: \"Excluir o Ponto de Controle\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    if(this.auth.hasPermissionTo(\"MOD_PENT_PCTR_CONS\")) result.push(BOTAO_INFORMACOES);\n    if(this.auth.hasPermissionTo('MOD_PENT_PCTR_EDT')) result.push(BOTAO_ALTERAR);\n    if(this.auth.hasPermissionTo('MOD_PENT_PCTR_EDT_AVAL') && pontoControle.tipo_avaliacao) result.push(BOTAO_ALTERAR_AVALIACAO);\n    if(this.auth.hasPermissionTo(\"MOD_PENT_PCTR_EXCL\")) result.push(BOTAO_EXCLUIR);\n    return result;\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\n    const BOTAO_AVALIAR = { label: \"Avaliar\", icon: \"bi bi-star-half\", onClick: (pontoControle: PlanoEntregaPontoControle) => this.go.navigate({ route: ['gestao', 'plano-entrega', 'ponto-controle', pontoControle.id, 'avaliar'] }, this.modalRefreshId(pontoControle)) };\n    if(this.auth.hasPermissionTo('MOD_PENT_PCTR_AVAL') && this.isAvailable(row)) result.push(BOTAO_AVALIAR);\n    else if(this.auth.hasPermissionTo(\"MOD_PENT_PCTR_CONS\")) result.push(BOTAO_INFORMACOES);\n    return result;\n  }\n\n    /**\n   * \n   * @returns Retorna se o Ponto de Controle está em condições de ser avaliado, ou seja, não possui ainda uma avaliação\n   * e está definido um gestor a ser avaliado.\n   */\n    public isAvailable(row: PlanoEntregaPontoControle): boolean {\n      return row.tipo_avaliacao_id == null && row.gestor_id != null;\n    }\n\n\n}\n","<grid [dao]=\"dao\" [add]=\"add\" [hasEdit]=\"false\" [title]=\"isModal ? '' : title\" [form]=\"form\" [join]=\"join\" [orderBy]=\"orderBy\" [selectable]=\"selectable\" (select)=\"onSelect($event)\" editable>\n    <toolbar *ngIf=\"!selectable\"></toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-search #gestor [size]=\"6\" label=\"Gestor\" controlName=\"gestor_id\" [control]=\"filter!.controls.gestor_id\" [dao]=\"usuarioDao\" [selectRoute]=\"{route: ['configuracoes', 'usuario']}\"></input-search>\n            <input-datetime [size]=\"3\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do ponto de controle\"></input-datetime>\n            <input-datetime [size]=\"3\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do ponto de controle\"></input-datetime>\n        </div>\n    </filter>\n    <columns>\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-boxes\" [align]=\"'center'\" [hint]=\"lex.noun('Entrega', true)\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\n            <ng-template let-row=\"row\" #columnEntregas>\n                <span *ngIf=\"row.entregas?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row.entregas?.length}}</span>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\n                <plano-entrega-ponto-controle-form-entrega [entity]=\"row\" [cdRef]=\"cdRef\"></plano-entrega-ponto-controle-form-entrega>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleInicio\" [template]=\"columnInicio\">\n            <ng-template let-header=\"header\" #titleInicio>\n                <order by=\"inicio\" [header]=\"header\">Início</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnInicio>\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleFim\" [template]=\"columnFim\">\n            <ng-template let-header=\"header\" #titleFim>\n                <order by=\"fim\" [header]=\"header\">Fim</order>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnFim>\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Responsável\" [template]=\"columnResponsavel\">\n            <ng-template let-row=\"row\" #columnResponsavel>\n                <span> {{row.gestor?.nome || ''}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titleAvaliacao\" [template]=\"columnAvaliacao\">\n            <ng-template let-header=\"header\" #titleAvaliacao>\n                <order by=\"tipo_avaliacao.nota\" [header]=\"header\">Nota</order><small>/Tipo</small><br>\n                <small>Avaliador/Justificativas</small>\n            </ng-template>\n            <ng-template let-row=\"row\" #columnAvaliacao>\n                <span><small>{{ row.tipo_avaliacao? row.tipo_avaliacao.nota_atribuida + ' - ' + row.tipo_avaliacao.nome : '(não avaliado)' }}</small></span><br>\n                <span><small>{{ row.avaliador?.nome || '' }}</small></span><br>\n                <span *ngFor=\"let j of row.justificativas\"><small>{{ j.value || ''}}</small><br></span>\n            </ng-template>\n        </column>\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n\n\n<!-- Grid-List:\n\n[+]  Data Início Data Fim    Responsável                            Avaliação\n   +-----------+-----------+-------------------------------------+-------------------------\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\n   |                                                              (AVALIADOR)\n   |                                                              (Justificativa)  \n   .......................................................................................\n   Entrega       Indicador           Meta         Realizado\n   -------------+-------------------+------------+------------- \n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\n\n\n\n\n\n\n\n   Plano de Entregas\n   Unidade (Setor)\n   Planejamento_estrategico_id\n   Cadeia_valor_id\n   Entregas\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\n   Ponto de controle\n      [01/01/2023][30/01/2023]:\n          Responsável: Genisson\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \n          Ent1:     Quantidade                          100          90\n          Ent3:     Qualitativo                         Satisfatório Ruim\n      [01/02/2023][30/02/2023]:\n          Responsável: Paiva\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta         Realizado\n          Ent1:     Quantidade                          110          110\n          Ent2:     %                                   70           70\n          Ent3:     Qualitativo                         Excelente    Bom\n* Deverá haver pelo menos 1\n\n\n -->","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { LookupItem } from 'src/app/services/lookup.service';\nimport { TipoAvaliacaoDaoService } from 'src/app/dao/tipo-avaliacao-dao.service';\nimport { TipoAvaliacao } from 'src/app/models/tipo-avaliacao.model';\nimport { PlanoEntregaPontoControle } from 'src/app/models/plano-entrega-ponto-controle.model';\nimport { PlanoEntregaPontoControleDaoService } from 'src/app/dao/plano-entrega-ponto-controle-dao.service';\nimport { UsuarioDaoService } from 'src/app/dao/usuario-dao.service';\nimport { PlanoEntregaPontoControleEntrega } from 'src/app/models/plano-entrega-ponto-controle-entrega.model';\n\n@Component({\n  selector: 'app-plano-entrega-form-ponto-controle-avaliar',\n  templateUrl: './plano-entrega-form-ponto-controle-avaliar.component.html',\n  styleUrls: ['./plano-entrega-form-ponto-controle-avaliar.component.scss']\n})\nexport class PlanoEntregaFormPontoControleAvaliarComponent extends PageFormBase<PlanoEntregaPontoControle, PlanoEntregaPontoControleDaoService> implements OnInit {\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n  \n  public usuarioDao: UsuarioDaoService;\n  public tipoAvaliacaoDao: TipoAvaliacaoDaoService;\n  public items: PlanoEntregaPontoControleEntrega[] = [];\n  public tiposAvaliacoes: TipoAvaliacao[] = [];\n  public tiposJustificativas: LookupItem[] = [];\n  public tipoAvaliacao?: LookupItem; \n  public form: FormGroup;\n  public modalWidth: number = 900;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntregaPontoControle, PlanoEntregaPontoControleDaoService);\n    this.tipoAvaliacaoDao = injector.get<TipoAvaliacaoDaoService>(TipoAvaliacaoDaoService); \n    this.usuarioDao = injector.get<UsuarioDaoService>(UsuarioDaoService); \n    this.join = [\"gestor\", \"tipo_avaliacao\"];\n    this.form = this.fh.FormBuilder({\n      inicio: {default: null},\n      fim: {default: null},\n      plano_entrega_id: {default: null},        \n      gestor_id: {default: null},\n      nota_atribuida: {default: null},\n      justificativas: {default: null},\n      tipo_avaliacao_id: {default: null},\n      avaliador_id: {default: this.auth.usuario!.id},\n      comentarios: {default: \"\"}\n    }, this.cdRef, this.validate);\n  }\n\n  public validate = (control: AbstractControl, controlName: string) => {\n    let result = null;\n    if(controlName == \"nota_atribuida\" && !(control.value >= 0)) {\n      result = \"Obrigatório selecionar. Caso queira selecionar ZERO, clique 2x em qualquer estrela!\"\n    }\n    return result;\n  }\n\n  public async loadData(entity: PlanoEntregaPontoControle, form: FormGroup) {\n    let formValue = Object.assign({}, form.value);\n    formValue = this.util.fillForm(formValue, entity);\n    if(entity.tipo_avaliacao) {\n      formValue.nota_atribuida = entity.nota_atribuida;\n      formValue.justificativas = entity.justificativas;\n      formValue.tipo_avaliacao_id = entity.tipo_avaliacao_id;\n    }\n    formValue.comentarios = entity.comentarios || \"\";\n    this.form.controls.nota_atribuida.setValue(formValue.nota_atribuida);\n    this.onNotaChange(new Event('change'));\n    form.patchValue(formValue);\n  }\n\n  public async initializeData(form: FormGroup) {\n    const results = await Promise.all([\n      this.dao!.getPontoControle(this.urlParams!.get(\"id\")!),\n      this.tipoAvaliacaoDao.query({join: [\"tipos_avaliacoes_justificativas.tipo_justificativa\"]}).asPromise()\n    ]);\n    this.entity = results[0]!;\n    this.tiposAvaliacoes = results[1];\n    this.entity.avaliador_id = this.auth.usuario!.id;\n    this.items = this.entity.entregas;\n    this.form.controls.inicio.setValue(this.entity.inicio);\n    this.form.controls.fim.setValue(this.entity.fim);\n    this.form.controls.gestor_id.setValue(this.entity.gestor_id);\n    await this.loadData(this.entity!, form);\n    this.cdRef.detectChanges();\n  }\n\n  public get styleButtonTipoAvaliacao(): string {\n    const rgb = this.util.colorHexToRGB(this.tipoAvaliacao?.color || \"#000000\");\n    return \"background-color: rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \", 0.2);\";\n  }\n\n  public onNotaChange(event: Event) {\n    const nota = this.form.controls.nota_atribuida.value;\n    const tipoAvaliacao = this.tiposAvaliacoes.find(x => x.nota_atribuida == nota);\n    if(tipoAvaliacao) {\n      this.tipoAvaliacao = {\n        key: tipoAvaliacao.id,\n        value: tipoAvaliacao.nome,\n        icon: tipoAvaliacao.icone,\n        color: tipoAvaliacao.cor,\n        data: {\n          nota: nota,\n          pergunta: tipoAvaliacao.pergunta\n        }\n      };\n      this.form.controls.tipo_avaliacao_id.setValue(tipoAvaliacao.id);\n      this.tiposJustificativas = tipoAvaliacao.tipos_avaliacoes_justificativas.map(x => {\n        return {\n          key: x.tipo_justificativa_id,\n          value: x.tipo_justificativa!.nome || \"\"\n        }\n      })\n    }\n    this.cdRef.detectChanges();  \n  }\n\n  public async saveData(form: IIndexable): Promise<PlanoEntregaPontoControle> {\n    return new Promise<PlanoEntregaPontoControle>((resolve, reject) => {\n      let pontoControle = this.util.fill(new PlanoEntregaPontoControle(), this.entity!);\n      pontoControle = this.util.fillForm(pontoControle, this.form!.value);\n      resolve(pontoControle);\n    });\n  }\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\n    <separator title=\"Dados do Ponto de Controle\" icon=\"bi bi-chat-left-quote\" [collapse]=\"undefined\">\n        <input-datetime noIcon [size]=\"3\" label=\"Início\" disabled controlName=\"inicio\" [control]=\"form!.controls.inicio\"></input-datetime>\n        <input-datetime noIcon [size]=\"3\" label=\"Fim\" disabled controlName=\"fim\" [control]=\"form!.controls.fim\"></input-datetime>\n        <input-search noIcon   [size]=\"6\" label=\"Gestor\" disabled controlName=\"gestor_id\" [control]=\"form!.controls.gestor_id\" [dao]=\"usuarioDao\" [selectRoute]=\"{route: ['configuracoes', 'usuario']}\"></input-search>\n    </separator>\n    <separator [title]=\"lex.noun('Entrega', true)\" collapse [collapsed]=\"!entity?.entregas?.length\">\n        <grid [items]=\"items\" [minHeight]=\"150\">\n            <columns>\n                <column title=\"Descrição\" [template]=\"columnDescricao\">\n                    <ng-template let-row=\"row\" #columnDescricao>\n                        <span>{{ row.entrega_plano_entrega.descricao }}</span>\n                    </ng-template>\n                </column>\n                <column title=\"Indicador\" [template]=\"columnIndicador\">\n                    <ng-template let-row=\"row\"#columnIndicador>\n                        <span>{{ row.entrega_plano_entrega.entrega.tipo_indicador }}</span>\n                    </ng-template>\n                </column>\n                <column title=\"Meta\" [template]=\"columnMeta\">\n                    <ng-template let-row=\"row\" #columnMeta>\n                        <span>{{ row.entrega_plano_entrega.meta[0].value }}</span>\n                    </ng-template>\n                </column>\n                <column title=\"Realizado\" [template]=\"columnRealizado\">\n                    <ng-template let-row=\"row\" #columnRealizado>\n                        <span>{{ row.entrega_plano_entrega.realizado[0].value }}</span>\n                    </ng-template>\n                </column>\n            </columns>\n        </grid>\n    </separator>    \n    <div class=\"row\">\n        <input-rate [size]=\"12\" [bold]=\"true\" [label]=\"'Como você avalia este Ponto de Controle ?'\" (change)=\"onNotaChange($event)\" controlName=\"nota_atribuida\" [control]=\"form!.controls.nota_atribuida\" controlName=\"rate\"></input-rate>\n    </div>\n    <div *ngIf=\"tipoAvaliacao\" class=\"d-flex justify-content-center\">\n        <button type=\"button\" class=\"pe-none btn\" [style]=\"styleButtonTipoAvaliacao\">\n            <i [class]=\"tipoAvaliacao.icon\" [style.color]=\"tipoAvaliacao.color || 'black'\"></i>\n            <strong class=\"ms-1\">{{ tipoAvaliacao.value }}</strong> (Nota: {{ tipoAvaliacao.data.nota }})\n        </button>\n    </div>\n    <div *ngIf=\"tipoAvaliacao\">\n        <input-multitoggle #justificativas [control]=\"form!.controls.justificativas\" [label]=\"tipoAvaliacao.data.pergunta\" [items]=\"tiposJustificativas\"></input-multitoggle>\n    </div>\n    <separator *ngIf=\"tipoAvaliacao\" title=\"Comentários adicionais?\" icon=\"bi bi-chat-left-quote\" [collapse]=\"!form!.controls.comentarios.value?.length ? 'true' : undefined\">\n        <input-textarea label=\"Comentários\" [size]=\"12\" [rows]=\"2\" controlName=\"comentarios\" [control]=\"form!.controls.comentarios\"></input-textarea>\n    </separator>\n</editable-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'plano-entrega-entrega-list',\n  templateUrl: './plano-entrega-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-entrega-list.component.scss']\n})\nexport class PlanoEntregaEntregaListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>plano-entrega-entrega-list works!</p>\n","import { ChangeDetectorRef, Component, Injector, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { EixoTematicoDaoService } from 'src/app/dao/eixo-tematico-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\nimport { PlanoEntregaPontoControleDaoService } from 'src/app/dao/plano-entrega-ponto-controle-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { IIndexable } from 'src/app/models/base.model';\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\nimport { Planejamento } from 'src/app/models/planejamento.model';\nimport { PlanoEntregaPontoControleEntrega } from 'src/app/models/plano-entrega-ponto-controle-entrega.model';\nimport { PlanoEntregaPontoControle } from 'src/app/models/plano-entrega-ponto-controle.model';\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\nimport { LookupItem } from 'src/app/services/lookup.service';\n\n@Component({\n  selector: 'plano-entrega-ponto-controle-form-entrega',\n  templateUrl: './plano-entrega-ponto-controle-form-entrega.component.html',\n  styleUrls: ['./plano-entrega-ponto-controle-form-entrega.component.scss']\n})\nexport class PlanoEntregaPontoControleFormEntregaComponent extends PageFrameBase {\n    @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\n    @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n    @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\n    @Input() set entity(value: PlanoEntregaPontoControle | undefined) { super.entity = value; } get entity(): PlanoEntregaPontoControle | undefined { return super.entity; }\n    @Input() cdRef: ChangeDetectorRef;\n\n    public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;\n    public form: FormGroup;\n\n    public get items(): PlanoEntregaPontoControleEntrega[] {\n      if (!this.gridControl.value) this.gridControl.setValue(new PlanoEntregaPontoControle());\n      if (!this.gridControl.value.entregas) this.gridControl.value.entregas = [];\n      return this.gridControl.value.entregas;\n    }\n    \n    constructor(public injector: Injector) {\n      super(injector);\n      this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\n      this.dao = injector.get<PlanoEntregaPontoControleDaoService>(PlanoEntregaPontoControleDaoService);\n      this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\n      this.join = ['entregas','plano_entrega_entrega'];\n      this.form = this.fh.FormBuilder({\n        meta: {default: {}},\n        realizado: {default: {}},\n        plano_entrega_entrega_id: {default: null},\n        plano_entrega_ponto_controle_id: {default: null},\n      }, this.cdRef, this.validate);\n    }\n  \n    public validate = (control: AbstractControl, controlName: string) => {\n      let result = null;\n/*       if(['nome','fundamentacao'].indexOf(controlName) >= 0 && !control.value?.length) {\n        result = \"Obrigatório\";\n      } */\n      return result;\n    }\n  \n    public formValidation = (form?: FormGroup) =>{\n      let result = null;\n/*       if(this.form!.controls.fim.value && this.form!.controls.inicio.value > this.form!.controls.fim.value) {\n        return \"A data do início não pode ser maior que a data do fim!\";\n      } */\n      return result;\n    }\n  \n    public async addEntrega() {\n      return new PlanoEntregaPontoControleEntrega({\n        id: this.dao!.generateUuid(),\n        plano_entrega_ponto_controle_id: this.entity?.id\n      }) as IIndexable;\n    }\n\n    public async removeEntrega(row: any) {\n\n\n      return true;\n    }\n\n    public async loadEntrega(form: FormGroup, row: any) {\n      form.controls.meta.setValue({});\n      form.controls.realizado.setValue({});\n      form.controls.plano_entrega_ponto_controle_id.setValue(null);\n      form.controls.plano_entrega_entrega_id.setValue(null);\n      this.cdRef.detectChanges();\n    }\n\n    public async saveEntrega(form: FormGroup, row: any) {\n      let result = undefined;\n      this.form!.markAllAsTouched();\n      if (this.form!.valid) {\n        row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\n        row.nome = form.controls.nome.value;\n        row.fundamentacao = form.controls.fundamentacao.value;\n        row.planejamento_id = form.controls.planejamento_id.value;\n        row.eixo_tematico_id = form.controls.eixo_tematico_id.value;\n        row.objetivo_superior_id = form.controls.objetivo_superior_id.value;\n        result = row;\n        this.cdRef.detectChanges();\n      }\n      return result;\n    }\n\n    public async saveData(form?: IIndexable) {\n      await this.grid?.confirm();\n      return this.entity!;\n    }\n \n\n}\n  \n  \n","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\n    <div class=\"row\">\n        <grid [items]=\"items\" [form]=\"form!\" [join]=\"join\" [hasEdit]=\"true\" [hasDelete]=\"true\" [add]=\"addEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" \n              [save]=\"saveEntrega.bind(this)\" editable>\n            <columns>\n                <column [title]=\"'Descrição ' + lex.noun('Entrega', false, true)\" [template]=\"columnDescricao\" [editTemplate]=\"editDescricao\">\n                    <ng-template let-row=\"row\" #columnDescricao>\n                        <span>{{ row.plano_entrega_entrega?.descricao || \"\" }}</span>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #editDescricao>\n                        <input-search [size]=\"6\" label=\"Entrega do Plano de Entregas\" controlName=\"plano_entrega_entrega_id\" [control]=\"form!.controls.plano_entrega_entrega_id\" [dao]=\"planoEntregaEntregaDao\" [selectRoute]=\"{route: ['gestao', 'plano-entrega', 'entrega']}\"></input-search>\n                    </ng-template>\n                </column>\n                <column title=\"Meta\" [template]=\"columnMeta\" [editTemplate]=\"editMeta\">\n                    <ng-template let-row=\"row\" #columnMeta>\n                        <span>{{ row.meta ? row.meta[0].value : \"\" }}</span>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #editMeta>\n                    </ng-template>\n                </column>\n                <column title=\"Realizado\" [template]=\"columnRealizado\" [editTemplate]=\"editRealizado\">\n                    <ng-template let-row=\"row\" #columnRealizado>\n                        <span>{{ row.realizado ? row.realizado[0].value : \"\" }}</span>\n                    </ng-template>\n                    <ng-template let-row=\"row\" #editRealizado>\n                    </ng-template>\n                </column>\n                <column type=\"options\"></column>\n            </columns>\n        </grid>\n    </div>\n</editable-form>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- Grid-List:\n\n[+]  Data Início Data Fim    Responsável                            Avaliação\n   +-----------+-----------+-------------------------------------+-------------------------\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\n   |                                                              (AVALIADOR)\n   |                                                              (Justificativa)  \n   .......................................................................................\n   Entrega       Indicador           Meta         Realizado\n   -------------+-------------------+------------+------------- \n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\n\n\n\n\n\n\n\n   Plano de Entregas\n   Unidade (Setor)\n   Planejamento_estrategico_id\n   Cadeia_valor_id\n   Entregas\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\n   Ponto de controle\n      [01/01/2023][30/01/2023]:\n          Responsável: Genisson\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \n          Ent1:     Quantidade                          100          90\n          Ent3:     Qualitativo                         Satisfatório Ruim\n      [01/02/2023][30/02/2023]:\n          Responsável: Paiva\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta         Realizado\n          Ent1:     Quantidade                          110          110\n          Ent2:     %                                   70           70\n          Ent3:     Qualitativo                         Excelente    Bom\n* Deverá haver pelo menos 1\n\n\n -->","import { LookupItem } from '../services/lookup.service';\nimport { Base } from './base.model';\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\nimport { PlanoEntregaPontoControle } from './plano-entrega-ponto-controle.model';\n\nexport class PlanoEntregaPontoControleEntrega extends Base {\n  public plano_entrega_ponto_controle?: PlanoEntregaPontoControle;\n  public plano_entrega_entrega?: PlanoEntregaEntrega;  \n\n  public meta: LookupItem | null = null;                  // Meta para a entrega\n  public realizado: LookupItem | null = null;             // Valor realizado\n  public plano_entrega_ponto_controle_id: string = '';       \n  public plano_entrega_entrega_id: string = '';  \n  \n  public constructor(data?: any) { super(); this.initialization(data); }\n}","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GridComponent } from 'src/app/components/grid/grid.component';\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\n\n@Component({\n  selector: 'app-plano-entrega-list',\n  templateUrl: './plano-entrega-list.component.html',\n  styleUrls: ['./plano-entrega-list.component.scss']\n})\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\n\n  public unidadeDao: UnidadeDaoService;\n  public planejamentoDao: PlanejamentoDaoService;\n  public cadeiaValorDao: CadeiaValorDaoService;\n\n  constructor(public injector: Injector) {\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\n    /* Inicializações */\n    this.title = this.lex.noun('Plano de Entrega', true);\n    this.filter = this.fh.FormBuilder({\n      agrupar: { default: true },\n      nome: { default: '' },\n      inicio: { default: '' },\n      fim: { default: '' },\n      //status: {default: ''},\n      unidade_id: { default: null },\n      planejamento_id: { default: null },\n      cadeia_valor_id: { default: null },\n    });\n    this.join = ['planejamento:id,nome', 'cadeiaValor:id,nome', 'unidade:id,sigla'];\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\n    // Testa se o usuário possui permissão para exibir planos de entrega\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\n      this.options.push({\n        icon: \"bi bi-info-circle\",\n        label: \"Informações\",\n        onClick: this.consult.bind(this)\n      });\n    }\n    // Testa se o usuário possui permissão para excluir planos de entrega\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\n      this.options.push({\n        icon: \"bi bi-trash\",\n        label: \"Excluir\",\n        onClick: this.delete.bind(this)\n      });\n    }\n  }\n\n  public filterClear(filter: FormGroup) {\n    filter.controls.nome.setValue(\"\");\n    filter.controls.inicio.setValue(null);\n    filter.controls.fim.setValue(null);\n    //filter.controls.status.setValue(\"\");\n    filter.controls.unidade_id.setValue(null);\n    filter.controls.planejamento_id.setValue(null);\n    filter.controls.cadeia_valor_id.setValue(null);\n    super.filterClear(filter);\n  }\n\n  public filterWhere = (filter: FormGroup) => {\n    let result: any[] = [];\n    let form: any = filter.value;\n\n    if (form.nome?.length) {\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\n    }\n    if (form.inicio) {\n      result.push([\"inicio\", \">=\", form.inicio]);\n    }\n    if (form.fim) {\n      result.push([\"fim\", \"<=\", form.fim]);\n    }\n    if (form.unidade_id) {\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\n    }\n    if (form.planejamento_id) {\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\n    }\n    if (form.cadeia_valor_id) {\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\n    }\n    return result;\n  }\n\n  public dynamicOptions(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\n    const BOTAO_ALTERAR = { label: \"Editar\", icon: \"bi bi-pencil-square\", onClick: this.edit.bind(this) };\n    const BOTAO_EXCLUIR = { label: \"Excluir Plano\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\n    //const BOTAO_ENTREGAS = { hint: \"Entregas\", icon: \"bi bi-pen\", onClick: this.editarEntregas.bind(this) };\n    const BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: \"bi bi-file-earmark-check\", onClick: this.homologar.bind(this) };\n    const BOTAO_PONTOS_CONTROLE = { label: \"Pontos de Controle\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', row.id, 'ponto-controle'] })).bind(this) };\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) result.push(BOTAO_INFORMACOES);\n    if (this.auth.hasPermissionTo('MOD_PENT_EDT')) result.push(BOTAO_ALTERAR);\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) result.push(BOTAO_EXCLUIR);\n    if (this.auth.hasPermissionTo(\"MOD_PENT_PCTR_CONS\")) result.push(BOTAO_PONTOS_CONTROLE);\n    if (this.dao?.needHomologate(planoEntrega)) result.push(BOTAO_HOMOLOGAR);\n    return result;\n  }\n\n  public dynamicButtons(row: any): ToolbarButton[] {\n    let result: ToolbarButton[] = [];\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\n    const BOTAO_PONTOS_CONTROLE = { label: \"Pontos de Controle\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', row.id, 'ponto-controle'] })).bind(this) };\n    if (this.auth.hasPermissionTo('MOD_PENT_PCTR_CONS')) result.push(BOTAO_PONTOS_CONTROLE);\n    else if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) result.push(BOTAO_INFORMACOES);\n    return result;\n  }\n\n  public onAgruparChange(event: Event) {\n    const agrupar = this.filter!.controls.agrupar.value;\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\n      this.grid!.reloadFilter();\n    }\n  }\n\n  public editarEntregas() {\n\n  }\n\n  public homologar() {\n\n  }\n\n  public avaliar() {\n\n  }\n\n}\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_INCL')\"\n    [hasEdit]=\"false\">\n    <toolbar *ngIf=\"!selectable\">\n        <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\n    </toolbar>\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\n        <div class=\"row\">\n            <input-text [size]=\"6\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome do plano de entregas\"></input-text>\n            <input-search #unidade [size]=\"6\" label=\"Unidade\" controlName=\"unidade_id\" [control]=\"filter!.controls.unidade_id\" [dao]=\"unidadeDao\" [selectRoute]=\"{route: ['configuracoes', 'unidade']}\"></input-search>\n        </div>\n        <div class=\"row\">\n            <input-search #planejamento [size]=\"4\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [control]=\"filter!.controls.planejamento_id\" [dao]=\"planejamentoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento']}\"></input-search>\n            <input-search #cadeiaValor [size]=\"4\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [control]=\"filter!.controls.cadeia_valor_id\" [dao]=\"cadeiaValorDao\" [selectRoute]=\"{route: ['gestao', 'cadeia-valor']}\"></input-search>\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do plano do entregas\"></input-datetime>\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do plano de entregas\"></input-datetime>\n        </div>\n    </filter>\n    <columns>\n        <column title=\"Número\" [template]=\"columnNumero\" orderBy=\"numero\">\n            <ng-template let-row=\"row\" #columnNumero>\n                <span> {{ row.numero}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"inicio\">\n            <ng-template let-row=\"row\" #columnInicio>\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"fim\">\n            <ng-template let-row=\"row\" #columnFim>\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\n            </ng-template>\n        </column>\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\n                Planejamento Institucional<br>\n                Cadeia de Valor\n            </ng-template>\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\n                <span> {{row.planejamento?.nome || \"-\"}}</span><br>\n                <span> {{row.cadeiaValor?.nome || \"-\"}}</span>\n            </ng-template>\n        </column>\n        <column title=\"Status\" [template]=\"columnStatus\">\n            <ng-template let-row=\"row\" #columnStatus>\n                <span> {{ row.status || \"\"}}</span>\n            </ng-template>\n        </column>\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\n    </columns>\n    <pagination [rows]=\"rowsLimit\"></pagination>\n</grid>\n \n <!-- Planejamento/           [ Incluir ] \nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \n------------------------------------------------------------------------------- [...]\n                                                   | Consultar                      |\n                                                   | Alterar                        |\n                                                   | Excluir                        |\n                                                   | Entregas                       |\n                                                   | Homologar                      |\n                                                   | Ponto de Controle (Avaliação)  |\n\n -->","import { Injectable } from '@angular/core';\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\nimport { LookupService } from 'src/app/services/lookup.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoEntregaService {\n  \n  constructor(public lookup: LookupService) { }\n\n  public getValorMeta(entrega: PlanoEntregaEntrega): string {\n    let result = \"\";\n    switch(entrega.entrega?.tipo_indicador) {\n      case \"PORCENTAGEM\": entrega.meta.porcentagem + \" %\"; break;\n      case \"QUALITATIVO\": entrega.meta.quantitativo; break;\n      case \"VALOR\": entrega.meta.valor; break;\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.meta.qualitativo); break;\n      default: result = \"Indicador desconhecido\";\n    }\n    return result;\n  }\n\n  public getValorRealizado(entrega: PlanoEntregaEntrega): string {\n    let result = \"\";\n    switch(entrega.entrega?.tipo_indicador) {\n      case \"PORCENTAGEM\": entrega.realizado.porcentagem + \" %\"; break;\n      case \"QUALITATIVO\": entrega.realizado.quantitativo; break;\n      case \"VALOR\": entrega.realizado.valor; break;\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.realizado.qualitativo); break;\n      default: result = \"Indicador desconhecido\";\n    }\n    return result;\n  }\n\n  public isPorcentagem(entrega: PlanoEntregaEntrega): boolean {\n    return entrega.entrega?.tipo_indicador == \"PORCENTAGEM\";\n  }\n\n}\n"],"sourceRoot":"webpack:///"}