{"version":3,"sources":["./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-adesao/plano-entrega-form-adesao.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form-entrega/plano-entrega-form-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/models/plano-entrega-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEiG;AAC1B;AAC6B;AAEvB;AACC;AACC;AAET;AACF;AAGF;AAEC;;;;;;;;;;;;;;AAU5D,MAAM,+BAAgC,SAAQ,iFAAkD;IAYrG,YAAmB,QAAkB;;QACnC,KAAK,CAAC,QAAQ,EAAE,+EAAY,EAAE,4FAAsB,CAAC,CAAC;QADrC,aAAQ,GAAR,QAAQ,CAAU;QAmC9B,aAAQ,GAAG,CAAC,OAAwB,EAAE,WAAmB,EAAE,EAAE;;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,QAAC,OAAO,CAAC,KAAK,0CAAE,MAAM,GAAE;gBACpF,MAAM,GAAG,aAAa,CAAC;aACxB;YACD,OAAO,MAAM,CAAC;YACd;;;cAGE;QACJ,CAAC;QAqBM,cAAS,GAAG,CAAC,MAAoB,EAAU,EAAE;YAClD,OAAO,WAAW,CAAC;QACrB,CAAC;QAlEC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAqB,mFAAkB,CAAC,CAAC;QACxE,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAyB,4FAAsB,CAAC,CAAC;QACpF,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAwB,0FAAqB,CAAC,CAAC;QACjF,IAAI,CAAC,4BAA4B,GAAG,QAAQ,CAAC,GAAG,CAAyB,2FAAsB,CAAC,CAAC;QACjG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAC9B,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACrB,MAAM,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACvB,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACpB,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,UAAU,EAAE,EAAE,OAAO,QAAE,IAAI,CAAC,IAAI,CAAC,OAAO,0CAAE,EAAE,EAAE;YAC9C,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YACnC,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC9B,MAAM,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;SACnC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,QAAQ;;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,YAAY,GAAG,WAAI,CAAC,QAAQ,0CAAE,YAAY,EAAC,CAAC,CAAC,UAAI,CAAC,QAAQ,0CAAE,YAA4B,CAAC,CAAC,CAAC,IAAI,CAAC;QACpG,IAAG,YAAY,EAAC;YACd,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YAC1E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SAC3E;IACH,CAAC;IAcY,QAAQ,CAAC,MAAoB,EAAE,IAAe;;YACzD,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;KAAA;IAEY,cAAc,CAAC,IAAe;;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,IAAK,CAAC,CAAC;QAC1C,CAAC;KAAA;IAEY,QAAQ,CAAC,IAAgB;;YACpC,OAAO,IAAI,OAAO,CAAe,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnD,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,+EAAY,EAAE,EAAE,IAAI,CAAC,MAAO,CAAC,CAAC;gBACpE,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,IAAK,CAAC,KAAK,CAAC,CAAC;gBAClE,6DAA6D;gBAC7D,OAAO,CAAC,YAAY,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAMM,oBAAoB,CAAC,KAAY;;QACtC,IAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,aAAC,IAAI,CAAC,YAAY,0CAAE,YAAY,0CAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,aAAC,IAAI,CAAC,YAAY,0CAAE,YAAY,0CAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YACnF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,aAAC,IAAI,CAAC,YAAY,0CAAE,YAAY,0CAAE,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,aAAC,IAAI,CAAC,YAAY,0CAAE,YAAY,0CAAE,MAAM,CAAC,eAAe,CAAC,CAAC;YACrG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,aAAC,IAAI,CAAC,YAAY,0CAAE,YAAY,0CAAE,MAAM,CAAC,eAAe,CAAC,CAAC;YACrG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,aAAC,IAAI,CAAC,YAAY,0CAAE,YAAY,0CAAE,MAAM,CAAC,WAAW,CAAC,CAAC;SAC9F;IACH,CAAC;;8GA3FU,+BAA+B;gHAA/B,+BAA+B;mEAC/B,8GAAqB;mEACrB,oFAAa;mEACb,iHAAoB;;;;;;;QC7BjC,oFAAqI;QAA9C,iKAAU,gBAAY,IAAC,wGAAW,cAAU,IAArB;QAC1G,uEAAK;QACD,0EAAsB;QAClB,sFAE4H;QAAxC,sKAAU,gCAA4B,IAAC;QAAC,6DAAe;QAK3I,wEAAuB;QAC3B,6DAAM;QACN,0EAAiB;QACb,4EAA6F;QACjG,6DAAM;QACN,0EAAiB;QACb,8EAA2H;QAC3H,6EAAiF;QACrF,6DAAM;QACN,2EAAsB;QAClB,iFAA8F;QAC1F,2EAAiB;QACb,gFAA2H;QAC/H,6DAAM;QACN,2EAAiB;QACb,gFAAuJ;QACvJ,kFAA6J;QACjK,6DAAM;QACN,2EAAiB;QACb,gFAA8H;QAC9H,kFAAoJ;QACxJ,6DAAM;QACV,6DAAY;QAChB,6DAAM;QACV,6DAAM;QACV,6DAAgB;;QAnCD,2EAAc;QAGW,2DAAW;QAAX,qEAAW;QAU3B,2DAAW;QAAX,qEAAW;QAGA,2DAAU;QAAV,oEAAU;QACZ,2DAAU;QAAV,oEAAU;QAGuC,2DAAuB;QAAvB,iFAAuB;QAE9D,2DAAW;QAAX,qEAAW;QAGX,2DAAU;QAAV,oEAAU;QACR,2DAAU;QAAV,oEAAU;QAGZ,2DAAU;QAAV,oEAAU;QACR,2DAAU;QAAV,oEAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5B0C;AAEpB;AACC;AACgB;AAC1B;AAIa;AACd;AAEC;AAC2B;AACD;AAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;ICK/C,+EAA8H;;IAApE,oEAAU;;;IACpE,+EAA4H;;IAA1D,oEAAU;;;IAC5E,+EAAoH;;IAA1D,oEAAU;;;;IACpE,oFAA8J;IAAvE,uXAAoC;IAAmC,6DAAe;;IAAnH,oEAAU;;;;IACpE,oFAA4J;IAA7D,uXAAoC;IAAyB,6DAAe;;IAAzG,oEAAU;;;;IAC5E,oFAAoJ;IAA7D,uXAAoC;IAAyB,6DAAe;;IAAzG,oEAAU;;;;;;IANxE,0EAA4D;IACxD,uJAA8H;IAC9H,uJAA4H;IAC5H,uJAAoH;IACpH,uJAA6K;IAC7K,uJAA2K;IAC3K,uJAAmK;IACvK,6DAAM;;;IANa,2DAAyC;IAAzC,qKAAyC;IACzC,2DAAiD;IAAjD,qKAAiD;IACjD,2DAAyC;IAAzC,qKAAyC;IACzC,2DAAyC;IAAzC,qKAAyC;IACzC,2DAAiD;IAAjD,sKAAiD;IACjD,2DAAyC;IAAzC,sKAAyC;;;IAgBhD,wEAAM;IAAA,wDAAqB;IAAA,6DAAO;;;IAA5B,2DAAqB;IAArB,uFAAqB;;;;;;;;;IAG3B,mFAAuT;;;IAAzS,qEAAW;;;IAV7C,2EAAsE;IAClE,mFAAsH;IACtH,gFACyG;IACrG,2EAAS;IACL,8EAAmF;IAC/E,kOAEc;IACd,mOAEc;IAClB,6DAAS;IAET,0EAAgC;IACpC,6DAAU;IACd,6DAAO;IAEX,6DAAM;;;;;IAjBY,2DAAW;IAAX,qEAAW;IACnB,2DAAoC;IAApC,oGAAoC;IAGT,2DAA2B;IAA3B,2EAA2B;;;IAsB5C,wEAAM;IAAA,wDAAqB;IAAA,6DAAO;;;IAA5B,2DAAqB;IAArB,uFAAqB;;;;;;IAG3B,mFAA8S;;;IAAhS,qEAAW;;;IAV7C,2EAAqE;IACjE,mFAAoH;IACpH,gFACyG;IACrG,2EAAS;IACL,8EAA8E;IAC1E,kOAEc;IACd,mOAEc;IAClB,6DAAS;IACT,0EAAsF;IAC1F,6DAAU;IACd,6DAAO;IACX,6DAAM;;;;;IAfY,2DAAW;IAAX,qEAAW;IACnB,2DAAoC;IAApC,oGAAoC;IAGR,2DAAqB;IAArB,2EAAqB;IAQxB,2DAAqD;IAArD,wHAAqD;;ADrCzF,MAAM,gCAAiC,SAAQ,gFAAgE;IA2BpH,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,8FAAmB,EAAE,2GAA6B,CAAC,CAAC;QADnD,aAAQ,GAAR,QAAQ,CAAU;QAsD9B,aAAQ,GAAG,CAAC,OAAwB,EAAE,WAAmB,EAAE,EAAE;;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAG,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,QAAC,OAAO,CAAC,KAAK,0CAAE,MAAM,GAAE;gBACpE,MAAM,GAAG,aAAa,CAAC;aACxB;iBAAM,IAAI,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,EAAC;gBAC/H,MAAM,GAAG,aAAa,CAAC;aACxB;iBAAM,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAG,QAAC,OAAO,CAAC,KAAK,0CAAE,MAAM,GAAC;gBAC3E,MAAM,GAAG,4BAA4B,CAAC;aACvC;iBAAM,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAG,QAAC,OAAO,CAAC,KAAK,0CAAE,MAAM,GAAC;gBAC3E,MAAM,GAAG,yBAAyB,CAAC;aACpC;iBAAM,IAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,QAAC,IAAI,CAAC,GAAG,0CAAE,aAAa,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE;gBACzF,MAAM,GAAG,UAAU,CAAC;aACrB;iBAAM,IAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAG,CAAC,IAAK,QAAC,IAAI,CAAC,GAAG,0CAAE,aAAa,CAAC,OAAO,CAAC,KAAK,EAAC,EAAC;gBACrF,MAAM,GAAG,UAAU,CAAC;aACrB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAEM,mBAAc,GAAG,CAAC,IAAgB,EAAE,EAAE;;YAC3C,UAAG,IAAI,CAAC,aAAa,0CAAE,OAAO,EAAE;gBAC9B,IAAI,CAAC,IAAK,CAAC,MAAM,GAAG,WAAW,CAAE;gBACjC,OAAO,6CAA6C,CAAC;aACtD;YACD,UAAG,IAAI,CAAC,aAAa,0CAAE,OAAO,EAAE;gBAC9B,IAAI,CAAC,IAAK,CAAC,MAAM,GAAG,WAAW,CAAE;gBACjC,OAAO,6CAA6C,CAAC;aACtD;YACD,IAAG,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;gBAAE,OAAO,wDAAwD,CAAC;YACtK,OAAO,SAAS,CAAC;QACnB,CAAC;QAjFC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAyB,2FAAsB,CAAC,CAAC;QACpF,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,4BAA4B,GAAG,QAAQ,CAAC,GAAG,CAAyB,2FAAsB,CAAC,CAAC;QACjG,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,GAAG,CAAgC,2GAA6B,CAAC,CAAC;QACzG,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAwB,0FAAqB,CAAC,CAAC;QACjF,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,GAAG,CAAgC,4GAA6B,CAAC,CAAC;QACzG,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,GAAG,CAAiC,4GAA8B,CAAC,CAAC;QAC5G,IAAI,CAAC,IAAI,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAC9B,SAAS,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC;YACxB,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;YAC/B,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;YAC5B,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC;YACpB,SAAS,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC1B,gBAAgB,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC;YAC/B,cAAc,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC/B,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC3B,kBAAkB,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC;YAClC,mBAAmB,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YACpC,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC3B,YAAY,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC7B,SAAS,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC;YACxB,SAAS,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC;YACxB,eAAe,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAChC,eAAe,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAChC,WAAW,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC5B,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;SAC1B,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YACvC,WAAW,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;SAC7B,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YACvC,WAAW,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;SAC7B,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAEM,QAAQ;;QACb,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,SAAG,IAAI,CAAC,QAAQ,0CAAE,eAAe,CAAC;QACrD,IAAI,CAAC,aAAa,SAAG,IAAI,CAAC,QAAQ,0CAAE,eAAe,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,UAAI,CAAC,QAAQ,0CAAE,OAA8B,CAAC;IAC9D,CAAC;IAED,eAAe;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC,GAAS,EAAE,CAAC;;YACX,aAAM,IAAI,CAAC,YAAY,0CAAE,UAAU,CAAC,IAAI,CAAC,cAAc,EAAC,CAAC;YACzD,aAAM,IAAI,CAAC,WAAW,0CAAE,UAAU,CAAC,IAAI,CAAC,aAAa,EAAC,CAAC;QACzD,CAAC,EAAC,EAAE,CAAC;IACP,CAAC;IAiCY,QAAQ,CAAC,MAA2B,EAAE,IAAe;;YAChE,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;QACzD,CAAC;KAAA;IAEY,cAAc,CAAC,IAAe;;YAEzC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,CAAC;QAC1C,CAAC;KAAA;IAEM,QAAQ,CAAC,IAAgB;QAC9B,OAAO,IAAI,OAAO,CAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;;YACrD,IAAI,OAAO,GAAwB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,8FAAmB,EAAE,EAAE,IAAI,CAAC,MAAO,CAAC,CAAC;YAC3F,UAAI,CAAC,aAAa,0CAAE,OAAO,GAAG;YAC9B,UAAI,CAAC,aAAa,0CAAE,OAAO,GAAG;YAC9B,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,IAAK,CAAC,KAAK,CAAC,CAAC;YACxD,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/F,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/F,OAAO,CAAC,OAAO,eAAG,IAAI,CAAC,UAAU,0CAAE,YAAY,0CAAE,MAAM,CAAC;YACxD,OAAO,CAAC,OAAO,eAAG,IAAI,CAAC,OAAO,0CAAE,YAAY,0CAAE,MAAM,CAAC;YACrD,OAAO,CAAC,IAAI,iFAAc,CAAC,OAAO,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,iBAAiB,CAAC,KAAY;QACnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAEM,gBAAgB;;QACrB,MAAM,IAAI,SAAG,IAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QAC5C,MAAM,SAAS,SAAG,IAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;QACtD,IAAG,IAAI,IAAI,SAAS,EAAE;YACpB,IAAI,cAAc,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;YAC9C,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,EAAE;SAClE;IACH,CAAC;IAEM,kBAAkB,CAAC,KAAe;;QACvC,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,gBAAI,CAAC,OAAO,0CAAE,YAAY,0CAAE,MAAkB,EAAC,cAAc,CAAC,CAAC;IACxF,CAAC;IAEM,uBAAuB,CAAC,GAAQ;QACrC,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,IAAI,QAAQ,GAAyB,GAA2B,CAAC;QACjE,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,oBAAoB,EAAE,OAAO,EAAE,CAAC,QAA8B,EAAE,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACrK,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,uBAAuB,CAAC,GAAQ;QACrC,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,IAAI,QAAQ,GAAyB,GAA2B,CAAC;QACjE,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,uBAAuB,CAAC,GAAQ;QACrC,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,IAAI,QAAQ,GAAwB,GAA0B,CAAC;QAC/D,OAAO,MAAM,CAAC;IAChB,CAAC;IAEY,WAAW;;YACtB,OAAO;gBACL,EAAE,EAAE,IAAI,CAAC,GAAI,CAAC,YAAY,EAAE;gBAC5B,OAAO,EAAE,KAAK;aACD,CAAC;QAClB,CAAC;KAAA;IAEY,cAAc,CAAC,GAAQ;;YAClC,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,2BAA2B,CAAC,CAAC;YACjF,IAAG,OAAO;gBAAE,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;YACnC,OAAO,KAAK,CAAC;QACf,CAAC;KAAA;IAEY,YAAY,CAAC,IAAe,EAAE,GAAQ;;YACjD,IAAI,WAAW,GAAG,GAA2B,CAAC;YAC9C,IAAG,IAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,aAAc,CAAC,YAAY,EAAE;gBAC9E,WAAW,CAAC,WAAW,GAAG,IAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC3D,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAc,CAAC,YAAa,CAAC,MAAM,CAAC;gBAChE,OAAO,WAAW,CAAC;aACpB;YACD,OAAO,SAAS,CAAC;QACnB,CAAC;KAAA;IAGY,WAAW;;YACtB,OAAO;gBACL,EAAE,EAAE,IAAI,CAAC,GAAI,CAAC,YAAY,EAAE;gBAC5B,OAAO,EAAE,KAAK;aACD,CAAC;QAClB,CAAC;KAAA;IAEY,cAAc,CAAC,GAAQ;;YAClC,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,2BAA2B,CAAC,CAAC;YACjF,IAAG,OAAO;gBAAE,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;YACnC,OAAO,KAAK,CAAC;QACf,CAAC;KAAA;IAEY,YAAY,CAAC,IAAe,EAAE,GAAQ;;YACjD,IAAI,WAAW,GAAG,GAA2B,CAAC;YAC9C,IAAG,IAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,aAAc,CAAC,YAAY,EAAE;gBAC9E,WAAW,CAAC,WAAW,GAAG,IAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC3D,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAc,CAAC,YAAa,CAAC,MAAM,CAAC;gBAChE,OAAO,WAAW,CAAC;aACpB;YACD,OAAO,SAAS,CAAC;QACnB,CAAC;KAAA;;gHA1NU,gCAAgC;iHAAhC,gCAAgC;mEAChC,8GAAqB;;;;;;;;;;;;;;;;;;;;;;;;;QCjClC,oFAAqI;QAA9C,kKAAU,gBAAY,IAAC,yGAAW,cAAU,IAArB;QAC1G,8EAA0D;QACtD,0EAAqC;QACjC,0EAAiB;QACb,0EAAiB;QACb,8EAAkI;QACtI,6DAAM;QACN,wEAAuB;QACvB,0EAAiB;QACb,iFAA6F;QAC7F,6EAAiF;QACrF,6DAAM;QACN,4EAA0D;QAC1D,2EAAiB;QACb,kFAAwJ;QACxJ,kFAAwK;QAC5K,6DAAM;QACN,2EAAiB;QACb,oFAAmH;QACnH,8EAAoF;QACxF,6DAAM;QACN,iIAOM;QACN,2EAAiB;QACb,gFAA8G;QAC9G,gFAA4I;QAChJ,6DAAM;QACV,6DAAM;QACV,6DAAM;QAEN,kIAkBM;QAEN,kIAgBM;QACV,6DAAO;QACX,6DAAgB;;;QA1ED,2EAAc;QACC,2DAA+B;QAA/B,iGAA+B;QAI3B,2DAAW;QAAX,qEAAW;QAIF,2DAAU;QAAV,oEAAU;QACrB,2DAAU;QAAV,oEAAU;QAID,2DAAU;QAAV,oEAAU;QACV,2DAAU;QAAV,oEAAU;QAGjB,2DAAU;QAAV,oEAAU;QACZ,2DAAU;QAAV,oEAAU;QAEpB,2DAAwC;QAAxC,iJAAwC;QAS5B,2DAAU;QAAV,oEAAU;QACV,2DAAU;QAAV,oEAAU;QAK9B,2DAA4B;QAA5B,gIAA4B;QAoB5B,2DAA2B;QAA3B,8HAA2B;;;;;;;;;;;;;;ACvDzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACa;AAC2B;AACA;AAC0B;AACN;AACG;AACc;;;AAEnI,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAE;IACvL,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IAC/L,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IAClM,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IACxM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iIAAgC,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,8BAA8B,EAAE,KAAK,EAAC,IAAI,EAAE,EAAC;IAC5N,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,+IAAoC,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,8BAA8B,EAAE,KAAK,EAAC,IAAI,EAAE,EAAC;IACpO,EAAE,IAAI,EAAE,gCAAgC,EAAE,SAAS,EAAE,oIAAiC,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IAClO,EAAE,IAAI,EAAE,gCAAgC,EAAE,SAAS,EAAE,oIAAiC,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IAClO,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,8HAA+B,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;CAEvM,CAAC;AAMK,MAAM,yBAAyB;;kGAAzB,yBAAyB;wGAAzB,yBAAyB;4GAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;;;;;;;;;;;;;AC1BxB;AAAA;AAAA;AAAoC;AAgB7B,MAAM,YAAa,SAAQ,gDAAI;IAuBpC,YAAmB,IAAU;QAAI,KAAK,EAAE,CAAC;QAhBlC,aAAQ,GAAgB,IAAI,CAAC,CAA8B,oDAAoD;QAC/G,WAAM,GAAS,IAAI,IAAI,EAAE,CAAC,CAAiC,kCAAkC;QAC7F,QAAG,GAAgB,IAAI,CAAC,CAAmC,+BAA+B;QAC1F,SAAI,GAAW,EAAE,CAAC,CAAyC,2BAA2B;QAEtF,WAAM,GAAW,WAAW,CAAC,CAA8B,6BAA6B;QACxF,cAAS,GAAsC,SAAS,CAAC,CAAE,8DAA8D;QAGzH,eAAU,GAAW,EAAE,CAAC;QACxB,qBAAgB,GAAkB,IAAI,CAAC;QACvC,oBAAe,GAAkB,IAAI,CAAC;QACtC,oBAAe,GAAkB,IAAI,CAAC;QACtC,gBAAW,GAAkB,IAAI,CAAC;QAClC,aAAQ,GAA0B,EAAE,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAAC,CAAC;CACvE;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACyB;AACG;AACmB;AACA;AACuB;AACG;AACN;AACG;AAC9B;AACf;AAC2D;;AAqB5H,MAAM,kBAAkB;;oFAAlB,kBAAkB;kGAAlB,kBAAkB;sGARpB;YACP,4DAAY;YACZ,qFAAgB;YAChB,uFAAyB;YACzB,kGAAkB;YAClB,oFAAiB;SAClB;oIAEU,kBAAkB,mBAjB3B,0GAAyB;QACzB,0GAAyB;QACzB,iIAAgC;QAChC,8HAA+B;QAC/B,oIAAiC;QACjC,oIAAiC;QACjC,iIAAgC;QAChC,gJAAoC,aAGpC,4DAAY;QACZ,qFAAgB;QAChB,uFAAyB;QACzB,kGAAkB;QAClB,oFAAiB;;;;;;;;;;;;;AC5BrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAEuB;AAC1B;AAEa;AACd;;;;;;;;;;;;;ICRnE,yEAAkC;IAAA,uDAAS;IAAA,4DAAK;;;IAAd,0DAAS;IAAT,6EAAS;;;IAGvC,yEAA2D;;;IAA9B,mFAAmB;;;IAkBpC,uEAAM;IAAA,uDAA8D;IAAA,4DAAO;;;IAArE,0DAA8D;IAA9D,8IAA8D;;;IAKpE,uEAAM;IAAC,uDAC+B;IAAA,4DAAO;;;;IADtC,0DAC+B;IAD/B,gLAC+B;;;IAKtC,uEAAM;IAAA,uDAAkB;IAAA,4DAAO;;;IAAzB,0DAAkB;IAAlB,mFAAkB;;;IAKxB,uEAAM;IAAA,uDAAgC;IAAA,4DAAO;;;IAAvC,0DAAgC;IAAhC,yGAAgC;;;IAKtC,8EAA+E;;;IAAjE,8FAAiC;;AD3BxD,MAAM,oCAAqC,SAAQ,gFAA+D;IAOvH,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,8FAAmB,EAAE,2GAA6B,CAAC,CAAC;QADnD,aAAQ,GAAR,QAAQ,CAAU;QAF9B,YAAO,GAAoB,EAAE,CAAC;QA0B9B,gBAAW,GAAG,CAAC,MAAiB,EAAE,EAAE;;YACzC,IAAI,IAAI,GAAQ,MAAM,CAAC,KAAK,CAAC;YAC7B,IAAI,MAAM,GAAU,EAAE,CAAC;YACvB,UAAI,IAAI,CAAC,eAAe,0CAAE,MAAM,EAAE;gBAChC,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aAC9D;YACD,UAAI,IAAI,CAAC,IAAI,0CAAE,MAAM,EAAE;gBACrB,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aAC5I;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAhCC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAgC,2GAA6B,CAAC,CAAC;QAClG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAChC,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACrB,SAAS,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YAC1B,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YAC3B,YAAY,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;SAC9B,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,GAAQ;QAC5B,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,IAAI,QAAQ,GAAyB,GAA2B,CAAC;QACjE,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAC,QAA8B,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5N,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,WAAW,CAAC,MAAiB;QAClC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;;wHA7BU,oCAAoC;oHAApC,oCAAoC;kEACpC,oFAAa;;;;;QChB1B,8HAAgD;QAChD,0EACgC;QAA5B,kKAAU,oBAAgB,IAAC;QAC3B,wIAA2D;QAC3D,4EACoG;QAChG,yEAAiB;QACb,2EACoC;QACpC,2EACyC;QAC7C,4DAAM;QACN,yEAAiB;QACT,6EAAuG;QACvG,2EACwC;QAChD,4DAAM;QACV,4DAAS;QACT,2EAAS;QACL,6EAAwF;QACpF,+NAEc;QAClB,4DAAS;QACT,6EAAoE;QAChE,+NAGc;QAClB,4DAAS;QACT,8EAAqD;QACjD,+NAEc;QAClB,4DAAS;QACT,6EAAqE;QACjE,+NAEc;QAClB,4DAAS;QACT,8EAAuD;QACnD,+NAEc;QAClB,4DAAS;QACT,yEAAgC;QACpC,4DAAU;QACV,6EAA4C;QAChD,4DAAO;;;;;;;QAhDF,8EAAc;QACb,0DAAW;QAAX,wEAAW;QAEH,0DAAiB;QAAjB,iFAAiB;QACnB,0DAAe;QAAf,4EAAe;QAGH,0DAAU;QAAV,mEAAU;QAEV,0DAAU;QAAV,mEAAU;QAIJ,0DAAU;QAAV,mEAAU;QACZ,0DAAU;QAAV,mEAAU;QAKtB,0DAA6C;QAA7C,2GAA6C;QAK7C,0DAAiC;QAAjC,+FAAiC;QAMjB,0DAA4B;QAA5B,yEAA4B;QAK5C,0DAA2B;QAA3B,oFAA2B;QAKT,0DAA4B;QAA5B,0EAA4B;QAO9C,0DAAkB;QAAlB,+EAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7C+D;AAC1B;AAGM;AACC;AACC;AAET;AACF;AAGF;AAGC;;;;;;;;;AAS5D,MAAM,yBAA0B,SAAQ,gFAAkD;IAW/F,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,+EAAY,EAAE,4FAAsB,CAAC,CAAC;QADrC,aAAQ,GAAR,QAAQ,CAAU;QAsB9B,aAAQ,GAAG,CAAC,OAAwB,EAAE,WAAmB,EAAE,EAAE;;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,QAAC,OAAO,CAAC,KAAK,0CAAE,MAAM,GAAE;gBAC7F,MAAM,GAAG,aAAa,CAAC;aACxB;YACD,IAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,QAAC,IAAI,CAAC,GAAG,0CAAE,aAAa,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE;gBAClF,MAAM,GAAG,UAAU,CAAC;aACrB;YACD,IAAG,WAAW,IAAI,KAAK,IAAI,OAAO,CAAC,KAAK,IAAI,QAAC,IAAI,CAAC,GAAG,0CAAE,aAAa,CAAC,OAAO,CAAC,KAAK,EAAC,EAAC;gBAClF,MAAM,GAAG,UAAU,CAAC;aACrB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAEM,mBAAc,GAAG,CAAC,IAAgB,EAAE,EAAE;;YAC3C,MAAM,MAAM,SAAG,IAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YAChD,MAAM,GAAG,SAAG,IAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;YAC1C,MAAM,QAAQ,GAAG,gBAAI,CAAC,QAAQ,0CAAE,YAAY,0CAAE,MAAkB,CAAC;YACjE,IAAG,CAAC,QAAQ,EAAE;gBACZ,OAAO,mCAAmC,CAAC;aAC5C;iBAAM,IAAG,QAAC,IAAI,CAAC,GAAG,0CAAE,aAAa,CAAC,MAAM,EAAC,IAAI,QAAC,IAAI,CAAC,GAAG,0CAAE,aAAa,CAAC,GAAG,EAAC,EAAE;gBAC3E,OAAO,iCAAiC,CAAC;aAC1C;iBAAM,IAAG,MAAM,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE;gBACxC,OAAO,wDAAwD,CAAC;aACjE;iBAAM;gBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC7D,IAAI,QAAQ,CAAC,cAAc,GAAG,CAAC,IAAI,QAAQ,GAAG,QAAQ,CAAC,cAAc;oBAAE,OAAO,kEAAkE,CAAC;aAClJ;YACD,OAAO,SAAS,CAAC;QACnB,CAAC;QAwBM,cAAS,GAAG,CAAC,MAAoB,EAAU,EAAE;YAClD,OAAO,WAAW,CAAC;QACrB,CAAC;QA5EC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAqB,mFAAkB,CAAC,CAAC;QACxE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAwB,0FAAqB,CAAC,CAAC;QACjF,IAAI,CAAC,4BAA4B,GAAG,QAAQ,CAAC,GAAG,CAAyB,2FAAsB,CAAC,CAAC;QACjG,IAAI,CAAC,IAAI,GAAG,CAAC,kBAAkB,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAC9B,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACrB,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;YAC/B,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;YAC5B,MAAM,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;YAChC,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YAC3B,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YACnC,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC9B,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;SAC1B,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAkCY,QAAQ,CAAC,MAAoB,EAAE,IAAe;;YACzD,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;KAAA;IAEY,cAAc,CAAC,IAAe;;;YACzC,IAAI,CAAC,MAAM,GAAG,IAAI,+EAAY,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,WAAI,CAAC,IAAI,CAAC,OAAO,0CAAE,EAAE,KAAI,EAAE,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,IAAK,CAAC,CAAC;;KACzC;IAEY,QAAQ,CAAC,IAAgB;;YACpC,OAAO,IAAI,OAAO,CAAe,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;;gBACnD,IAAI,YAAY,GAAiB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,+EAAY,EAAE,EAAE,IAAI,CAAC,MAAO,CAAC,CAAC;gBAClF,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,IAAK,CAAC,KAAK,CAAC,CAAC;gBAClE,YAAY,CAAC,QAAQ,GAAG,mBAAY,CAAC,QAAQ,0CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,MAAK,EAAE,CAAC;gBAC5E,OAAO,CAAC,YAAY,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAMM,cAAc,CAAC,GAAQ;QAC5B,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;;kGA9FU,yBAAyB;0GAAzB,yBAAyB;mEACzB,8GAAqB;mEACrB,oFAAa;;;;;;;;QC5B1B,oFAAqI;QAA9C,2JAAU,gBAAY,IAAC,kGAAW,cAAU,IAArB;QAC1G,uEAAK;QACD,0EAAiB;QACb,+EAA0E;QAC1E,iFAAiJ;QACjJ,gFAAiK;QACjK,gFAAwJ;QAC5J,6DAAM;QACN,0EAAiB;QACb,kFAA8I;QAC9I,oFAA4J;QAC5J,oFAAkI;QACtI,6DAAM;QACN,6EAAwC;QACxC,kGAAiO;QACrO,6DAAM;QACV,6DAAgB;;QAhBD,2EAAc;QAGC,2DAAU;QAAV,oEAAU;QACd,2DAAU;QAAV,oEAAU;QACH,2DAAU;QAAV,oEAAU;QACV,2DAAU;QAAV,oEAAU;QAGR,2DAAU;QAAV,oEAAU;QACL,2DAAU;QAAV,oEAAU;QACX,2DAAU;QAAV,oEAAU;QAGO,2DAAmC;QAAnC,gGAAmC;;;;;;;;;;;;;;ACZ3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAEH;AAC0B;AAC1B;AACa;AACd;AACJ;;;;;;;;;;;;;;;;ICM/C,oEAAG;IAAA,oEAAG;IAAA,gEAAK;IAAA,4DAAI;IAAC,uDAA0E;IAAA,4DAAI;IAC9F,oEAAG;IAAA,oEAAG;IAAA,mEAAQ;IAAA,4DAAI;IAAC,uDAAe;IAAA,4DAAI;IACtC,oEAAG;IAAA,uDAAiB;IAAA,4DAAI;IACxB,wEAA+I;;;;IAH/H,0DAA0E;IAA1E,uKAA0E;IACvE,0DAAe;IAAf,yFAAe;IAC/B,0DAAiB;IAAjB,iFAAiB;IACmC,0DAAyC;IAAzC,qGAAyC;;;IAKhG,0EAAwB;IACpB,0EAAwB;IACpB,0EAAuB;IACnB,yEAAuB;IAAA,+DAAI;IAAA,4DAAK;IAChC,yEAAyB;IAAA,uDAAoC;IAAA,4DAAK;IACtE,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAH+B,0DAAoC;IAApC,2GAAoC;;;IAY7D,yEAAsE;IAAA,kEAAO;IAAA,4DAAK;;;IAClF,8EAA6H;;;IAArE,gGAAqC;;;IALzG,0EAA6B;IACzB,0EAAwB;IACpB,0EAAuB;IACnB,yEAAuB;IAAA,oEAAS;IAAA,4DAAK;IACrC,2IAAkF;IAClF,+JAA6H;IACjI,4DAAM;IACN,0EAA6B;IACzB,+EAA2D;IAC/D,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAPW,0DAAwC;IAAxC,+GAAwC;IAC9B,0DAAuC;IAAvC,8GAAuC;;ADxB3E,MAAM,iCAAkC,SAAQ,gFAAgE;IAUrH,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,8FAAmB,EAAE,2GAA6B,CAAC,CAAC;QADnD,aAAQ,GAAR,QAAQ,CAAU;QA8B9B,gBAAW,GAAG,CAAC,MAAiB,EAAE,EAAE;YACzC,IAAI,MAAM,GAAU,EAAE,CAAC;YACvB,IAAI,IAAI,GAAQ,MAAM,CAAC,KAAK,CAAC;YAE7B,IAAG,IAAI,CAAC,UAAU;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,uBAAuB,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClF,IAAG,IAAI,CAAC,UAAU;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,uBAAuB,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClF,IAAG,IAAI,CAAC,UAAU;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrF,IAAG,IAAI,CAAC,UAAU;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACvE,IAAG,IAAI,CAAC,MAAM;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChE,IAAG,IAAI,CAAC,GAAG;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAEvD,OAAO,MAAM,CAAC;QAChB,CAAC;QAxCC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAsB,0EAAmB,CAAC,CAAC;QAC7E,oBAAoB;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAChC,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC3B,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YAC3B,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;YACvB,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;SACrB,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,SAAS,CAAC;QAClE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,SAAS,CAAC;IACpE,CAAC;IAEM,WAAW,CAAC,MAAiB;QAClC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;;kHAtCU,iCAAiC;iHAAjC,iCAAiC;kEACjC,oFAAa;;;;;;;QCjB1B,0EAA4F;QACxF,qEAEU;QACV,4EAAkN;QAC9M,yEAAiB;QACb,gFAA6F;QAC7F,gFAA6F;QAC7F,+EAAyL;QACzL,+EAA6K;QACjL,4DAAM;QACV,4DAAS;QACT,2EAAS;QACL,6EAAmD;QAC/C,6NAKc;QAClB,4DAAS;QACT,8EAA6C;QACzC,4NASc;QAClB,4DAAS;QACT,8EAAuD;QACnD,4NAac;QAClB,4DAAS;QACb,4DAAU;QACV,6EAA4C;QAChD,4DAAO;;;;;QAnDD,wEAAW;QAIL,0DAAe;QAAf,4EAAe;QAEQ,0DAAU;QAAV,mEAAU;QACV,0DAAU;QAAV,mEAAU;QACjB,0DAAU;QAAV,mEAAU;QACV,0DAAU;QAAV,mEAAU;QAIN,0DAA0B;QAA1B,yEAA0B;QAQ7B,0DAAuB;QAAvB,yEAAuB;QAYlB,0DAA4B;QAA5B,yEAA4B;QAiB9C,0DAAkB;QAAlB,+EAAkB;;;;;;;;;;;;;;ACjDlC;AAAA;AAAA;AAAoC;AAM7B,MAAM,mBAAoB,SAAQ,gDAAI;IAqB3C,YAAmB,IAAU;QAAI,KAAK,EAAE,CAAC;QAjBlC,WAAM,GAAS,IAAI,IAAI,EAAE,CAAC;QAC1B,QAAG,GAAgB,IAAI,CAAC;QACxB,cAAS,GAAW,EAAE,CAAC;QACvB,eAAU,GAAY,KAAK,CAAC;QAC5B,SAAI,GAAiB,EAAE,CAAC;QACxB,cAAS,GAAiB,EAAE,CAAC;QAC7B,qBAAgB,GAAkB,IAAI,CAAC;QACvC,eAAU,GAAW,EAAE,CAAC;QACxB,uBAAkB,GAAW,GAAG,CAAC;QACjC,wBAAmB,GAAW,CAAC,CAAC;QAChC,mBAAc,GAAW,EAAE,CAAC;QAC5B,eAAU,GAAW,EAAE,CAAC;QACxB,iBAAY,GAAW,EAAE,CAAC;QAC1B,mBAAc,GAAkB,IAAI,CAAC;QACrC,cAAS,GAA2B,EAAE,CAAC;QACvC,cAAS,GAA2B,EAAE,CAAC;QAEJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAAC,CAAC;CACvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BwF;AAEQ;AAC1B;AAEuB;AAEb;AAEZ;;;;;;;;;;ICLrD,6EAAgC;IAAA,qEAAU;IAAA,4DAAS;IAAA,2EAAwB;IACvE,uEAAyD;IAC7D,4DAAO;;;IADoB,0DAAyB;IAAzB,oHAAyB;;;IAM5C,2EAA6D;IACzD,mEAAgC;IAChC,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,6FACJ;;;IACA,2EAA8D;IAC1D,mEAA4B;IAC5B,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,gGACJ;;;IACA,2EAAgE;IAC5D,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,gGACJ;;;IAVA,6IAGO;IACP,6IAGO;IACP,6IAEO;;;IAVA,mFAAmB;IAInB,0DAAoB;IAApB,oFAAoB;IAIpB,0DAAsB;IAAtB,sFAAsB;;;IAO7B,uEAAyB;IAAC,uDAAqC;IAAA,4DAAO;;;;IAA5C,0DAAqC;IAArC,uHAAqC;;;IAC/D,uEAAsB;IAAC,uDAAkC;IAAA,4DAAO;;;;IAAzC,0DAAkC;IAAlC,oHAAkC;;;IADzD,8IAAsE;IACtE,8IAAgE;;;IADzD,gFAAgB;IAChB,0DAAa;IAAb,6EAAa;;;IAKpB,2EAA2D;IACvD,mEAAgC;IAChC,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,iIACJ;;;IAHA,8IAGO;;;IAHA,iFAAiB;;;IAQxB,2EAAyD;IACrD,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,wFACJ;;;IACA,2EAA6D;IACzD,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,6FACJ;;;IALA,8IAEO;IACP,8IAEO;;;IALC,8EAAc;IAGf,0DAAmB;IAAnB,mFAAmB;;;IAQ1B,8EAA+E;;;IAAjE,8FAAiC;;ADnChE,MAAM,gCAAiC,SAAQ,kFAAa;IAuCjE,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,CAAC,CAAC;QADC,aAAQ,GAAR,QAAQ,CAAU;QAL9B,oBAAe,GAAG,CAAC,KAAU,EAAE,EAAE,CAAE,KAAsB,CAAC,QAAQ,IAAI,EAAE,CAAC;QACzE,YAAO,GAAoB,EAAE,CAAC;QAC9B,mBAAc,GAAW,EAAE,CAAC;QAuC5B,aAAQ,GAAG,CAAC,OAAwB,EAAE,WAAmB,EAAE,EAAE;;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,QAAC,OAAO,CAAC,KAAK,0CAAE,MAAM,GAAE;gBAChE,MAAM,GAAG,aAAa,CAAC;aACxB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAOM,gBAAW,GAAG,CAAC,MAAiB,EAAE,EAAE;YACzC,IAAI,MAAM,GAAU,EAAE,CAAC;YACvB,IAAI,IAAI,GAAQ,MAAM,CAAC,KAAK,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAC7D,OAAO,MAAM,CAAC;QAChB,CAAC;QApDC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAoB,+DAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAgC,2GAA6B,CAAC,CAAC;QACtF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAC9B,SAAS,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YAC1B,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;YAC/B,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;YAC5B,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACrB,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC5B,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YACrC,mBAAmB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YACtC,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SAChC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,mEAAmE;QACnE,IAAI,IAAqC,EAAE;YACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,mBAAmB;gBACzB,KAAK,EAAE,aAAa;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;aACjC,CAAC,CAAC;SACJ;QACD,6DAA6D;QAC7D,IAAI,IAAiD,EAAE;YACrD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aAChC,CAAC,CAAC;SACJ;IACH,CAAC;IArED,IAAa,SAAS,CAAC,KAAyB,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;IAAC,IAAI,SAAS,KAAyB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9I,IAAa,OAAO,CAAC,KAAkC,IAAI,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;IAAC,IAAI,OAAO,KAAkC,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACxJ,IAAa,MAAM,CAAC,KAAsC,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;IAAC,IAAI,MAAM,KAAsC,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5J,IAAa,cAAc,CAAC,KAAyB;QACnD,IAAG,IAAI,CAAC,eAAe,IAAI,KAAK,EAAE;YAChC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,iFAAiF;YACjF,iIAAiI;SAClI;IACH,CAAC;IAAC,IAAI,cAAc;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IACD,IAAa,aAAa,CAAC,KAAyB;QAClD,IAAG,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;YAC/B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,iFAAiF;YACjF,iIAAiI;SAClI;IACH,CAAC;IAAC,IAAI,aAAa;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,IAAW,KAAK;QACd,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK;YAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAChC,CAAC;IAsDM,QAAQ;QACb,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACxD,CAAC;IASY,GAAG;;;YACd,IAAI,OAAO,GAAG,IAAI,8FAAmB,CAAC;gBACpC,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,IAAI,CAAC,GAAI,CAAC,YAAY,EAAE;gBAC5B,gBAAgB,QAAE,IAAI,CAAC,MAAM,0CAAE,EAAE;aAClC,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,SAAS,CAAC,EAAE,EAAE;gBAClE,QAAQ,EAAE;oBACR,gBAAgB,EAAE,IAAI,CAAC,MAAO;oBAC9B,eAAe,EAAE,IAAI,CAAC,cAAc;oBACpC,eAAe,EAAE,IAAI,CAAC,aAAa;oBACnC,OAAO,EAAE,OAAO;iBACjB;gBACD,UAAU,EAAE,CAAO,WAAW,EAAE,EAAE,CAAC;oBACjC,IAAI,WAAW,EAAE;wBACf,IAAI;4BACF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,GAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;4BACrG,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;yBAC5B;wBAAC,OAAO,KAAU,EAAE;4BACnB,IAAI,CAAC,KAAK,CAAC,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,KAAK,CAAC,CAAC;yBACrD;qBACF;oBAAA,CAAC;gBACJ,CAAC;aACF,CAAC,CAAC;;KACJ;IAEY,IAAI,CAAC,OAA4B;;YAC5C,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;YAC5D,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,SAAS,CAAC,EAAE,EAAE;gBAClE,QAAQ,EAAE;oBACR,gBAAgB,EAAE,IAAI,CAAC,MAAO;oBAC9B,eAAe,EAAE,IAAI,CAAC,cAAc;oBACpC,eAAe,EAAE,IAAI,CAAC,aAAa;oBACnC,OAAO,EAAE,OAAO;iBACjB;gBACD,UAAU,EAAE,CAAO,WAAW,EAAE,EAAE,CAAC;;oBACjC,IAAI,WAAW,EAAE;wBACf,IAAI,CAAC,IAAI,CAAC,WAAW;4BAAE,aAAM,IAAI,CAAC,GAAG,0CAAE,IAAI,CAAC,WAAW,EAAC,CAAC;wBACzD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;qBACjC;oBAAA,CAAC;gBACJ,CAAC;aACF,CAAC,CAAC;QACL,CAAC;KAAA;IAEY,MAAM,CAAC,OAA4B;;YAC9C,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,2BAA2B,CAAC,CAAC;YACjF,IAAI,OAAO,EAAE;gBACX,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxC,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC;iBAC5B;qBAAM;oBACL,MAAM,IAAI,CAAC,GAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBACjC;gBAAA,CAAC;aACH;QACH,CAAC;KAAA;IAEY,OAAO,CAAC,OAA4B;;YAC/C,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,EAAC,CAAC,CAAC;QACzD,CAAC;KAAA;;gHA1JU,gCAAgC;gHAAhC,gCAAgC;kEAChC,8GAAqB;kEACrB,oFAAa;;;;;;QClB1B,mFAAkE;QAC9D,yEAAiB;QACb,0EAA8L;QAC1L,wNAIc;QACd,0EAAS;QACL,4EAAwF;QACpF,wNAYc;QAClB,4DAAS;QACT,4EAAmE;QAC/D,0NAGc;QAClB,4DAAS;QACT,6EAAmD;QAC/C,0NAKc;QAClB,4DAAS;QACT,6EAAqE;QACjE,0NAQc;QAClB,4DAAS;QACT,8EAAuD;QACnD,2NAEc;QAClB,4DAAS;QACT,yEAA+E;QACnF,4DAAU;QACd,4DAAO;QACX,4DAAM;QACV,4DAAgB;;;;;;;;QA1DS,0EAAc;QAEzB,0DAAe;QAAf,4EAAe;QAOL,0DAA6C;QAA7C,2GAA6C;QAe7C,0DAAiC;QAAjC,+FAAiC;QAMjB,0DAA0B;QAA1B,yEAA0B;QAQ1C,0DAA2B;QAA3B,oFAA2B;QAWT,0DAA4B;QAA5B,0EAA4B;QAK/B,0DAA0B;QAA1B,sFAA0B;;;;;;;;;;;;;;ACpDjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAEM;AACC;AACC;AACX;AACF;AAEC;;;;;;;;;;;;;;;;;;;ICP/D,8EAAwD;IACpD,mFAC4E;IAAnC,8VAAkC;IAAC,4DAAe;IAC3F,mFACwE;IAAhC,qTAAU,2BAAoB,IAAC;IAAC,4DAAe;IAC3F,4DAAU;;;IALmB,0FAA0B;IACrC,0DAAU;IAAV,mEAAU;IAEV,0DAAU;IAAV,mEAAU;;;IAmBhB,2EAAwE;IAAA,mEAA2B;IAAC,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,kHAAe;;;IAAnH,gJAA0H;;;IAAnH,yGAAiB;;;IAGxB,4FAAwF;;;;IAA5D,2EAAc;;;IALlD,6EAA0L;IACtL,4NAEc;IACd,4NAEc;IAClB,4DAAS;;;;;IAPoD,2EAAkB;;;IAUvE,4EAAqC;IAAA,8DAAG;IAAA,4DAAQ;;;IAA7B,8EAAiB;;;IAGpC,4EAAkC;IAAA,uDAAe;IAAA,4DAAQ;;;IAAvB,0DAAe;IAAf,yFAAe;;;IAKjD,2EAA8D;IAAA,uDAAY;IAAA,4DAAO;;;IAA9C,iFAA0B;IAAC,0DAAY;IAAZ,6EAAY;;;IAK1E,uEAAM;IAAC,uDAAqC;IAAA,4DAAO;;;;IAA5C,0DAAqC;IAArC,uHAAqC;;;IAK5C,uEAAM;IAAC,uDAAkC;IAAA,4DAAO;;;;IAAzC,0DAAkC;IAAlC,oHAAkC;;;IAKzC,sFAA0B;IAAA,gEAAI;IAC9B,4EACJ;;;IAEI,uEAAuJ;;;;IAAvH,yEAAgB;;;IAChD,uEAAoJ;;;;IAArH,yEAAgB;;;IAD/C,yIAAuJ;IACvJ,yIAAoJ;;;IAD5I,sFAAsB;IACtB,0DAAqB;IAArB,qFAAqB;;;IAM7B,uEAAuG;;;IADvG,uEAAsN;IACtN,yIAAuG;;;;IADhG,+IAAkE;IACjE,0DAA2B;IAA3B,2FAA2B;;ADlD5C,MAAM,yBAA0B,SAAQ,gFAAkD;IA+B/F,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,+EAAY,EAAE,4FAAsB,CAAC,CAAC;QADrC,aAAQ,GAAR,QAAQ,CAAU;QA5B9B,eAAU,GAAY,IAAI,CAAC;QAO3B,2BAAsB,GAAY,KAAK,CAAC;QACxC,mBAAc,GAAoB,EAAE,CAAC;QACrC,WAAM,GAAoB,EAAE,CAAC;QAgH7B,gBAAW,GAAG,CAAC,MAAiB,EAAE,EAAE;;YACzC,IAAI,MAAM,GAAU,EAAE,CAAC;YACvB,IAAI,IAAI,GAAQ,MAAM,CAAC,KAAK,CAAC;YAC7B;;;;cAIE;YACF,UAAI,IAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE;gBAC1C,IAAI,EAAE,GAAG,CAAC,YAAY,EAAE,IAAI,QAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;gBAClE,IAAI,EAAE,GAAG,CAAC,YAAY,EAAE,IAAI,QAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,wBAAC,CAAC,CAAC,OAAO,0CAAE,EAAE,KAAE,CAAC;gBAC3E,IAAI,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;oBAAE,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC1F;iBAAM;gBACL,UAAI,IAAI,CAAC,IAAI,0CAAE,MAAM,EAAE;oBACrB,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;iBACtD;gBACD,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC5C;gBACD,IAAI,IAAI,CAAC,GAAG,EAAE;oBACZ,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBACtC;gBACD,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,MAAM,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;iBACpD;gBACD,IAAI,IAAI,CAAC,eAAe,EAAE;oBACxB,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;iBAC9D;gBACD,IAAI,IAAI,CAAC,eAAe,EAAE;oBACxB,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;iBAC9D;gBACD,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC5C;aACF;YACD,gJAAgJ;YAChJ,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAC/C,OAAO,MAAM,CAAC;QAChB,CAAC;QAlIC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAoB,iFAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAyB,4FAAsB,CAAC,CAAC;QACpF,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAyB,2FAAsB,CAAC,CAAC;QACpF,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAwB,0FAAqB,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAQ,CAAC;QAC7C,oBAAoB;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;YAChC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC1B,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACrB,MAAM,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACvB,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACpB,MAAM,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACvB,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,CAAC,sBAAsB,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;QAC7H,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,mBAAmB,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,CAAC,WAAW,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC5R,IAAI,CAAC,oBAAoB,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,WAAW,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC/R,IAAI,CAAC,aAAa,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,CAAC,YAA0B,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC;QACtO,IAAI,CAAC,cAAc,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACtG,IAAI,CAAC,aAAa,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAChO,IAAI,CAAC,wBAAwB,GAAG,EAAE,KAAK,EAAE,oBAAoB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAClQ,IAAI,CAAC,wBAAwB,GAAG,EAAE,KAAK,EAAE,oBAAoB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC1P,IAAI,CAAC,0BAA0B,GAAG,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,aAAa,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC5Q,IAAI,CAAC,cAAc,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACtP,IAAI,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAC,YAA0B,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;QAC3N,IAAI,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC7G,IAAI,CAAC,aAAa,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAChG,IAAI,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAChO,IAAI,CAAC,yBAAyB,GAAG,EAAE,KAAK,EAAE,0BAA0B,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,aAAa,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC9Q,IAAI,CAAC,cAAc,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC7N,IAAI,CAAC,yBAAyB,GAAG,EAAE,KAAK,EAAE,wBAAwB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACxQ,IAAI,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACrP,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,wBAAwB;YAC/K,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,yBAAyB;YAC5K,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC3F,CAAC;IAED,QAAQ;;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,cAAO,IAAI,CAAC,WAAW,0CAAE,UAAU,KAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtH,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACtD,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAChD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAQ,CAAC;YAC7C,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC5B;IACH,CAAC;IAEM,uBAAuB;;QAC5B,IAAI,yBAAyB,GAAG,IAAI,CAAC,8BAA8B,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACrF,IAAI,qDAAqD,GAAG,IAAI,CAAC,sCAAsC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QAC9J,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,OAAC,IAAI,CAAC,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC9M,IAAI,UAAU,GAAG,CAAC,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,qDAAqD,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpI,IAAI,CAAC,sBAAsB,GAAG,UAAU,IAAI,UAAU,CAAC;QACvD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;QAClE;;;;;UAKE;IACJ,CAAC;IAEM,8BAA8B;;QACnC,OAAO,uBAAI,CAAC,IAAI,CAAC,OAAO,0CAAE,OAAO,0CAAE,eAAe,0CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,MAAK,EAAE,CAAC;IACzG,CAAC;IAEM,sCAAsC;;QAC3C,OAAO,uBAAI,CAAC,IAAI,0CAAE,OAAO,0CAAE,eAAe,0CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,MAAK,EAAE,CAAC;IACjG,CAAC;IAEM,WAAW,CAAC,MAAiB;QAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IA2CM,eAAe,CAAC,KAAY;;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,OAAO,IAAI,QAAC,IAAI,CAAC,OAAO,0CAAE,MAAM,EAAC,IAAI,CAAC,CAAC,OAAO,WAAI,IAAI,CAAC,OAAO,0CAAE,MAAM,EAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7E,IAAI,CAAC,IAAK,CAAC,YAAY,EAAE,CAAC;SAC3B;IACH,CAAC;IAEM,cAAc,CAAC,GAAiB;QACrC,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,IAAI,YAAY,GAAiB,GAAmB,CAAC;QACrD,QAAQ,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE;YACxC,KAAK,WAAW;gBACd,IAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,yBAAyB,EAAE,GAAG,CAAC;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACvJ,MAAM;YACR,KAAK,aAAa;gBAChB,IAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACnI,MAAM;YACR,KAAK,OAAO;gBACV,IAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACjI,MAAM;YACR,KAAK,WAAW;gBACd,IAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC/H,MAAM;YACR,KAAK,UAAU;gBACb,IAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACjI,MAAM;YACR,KAAK,UAAU;gBACb,IAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,CAAC;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;;oBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACrJ,MAAM;SACT;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,cAAc,CAAC,GAAiB;QACrC,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC1B,IAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC;gBAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,oBAAoB,CAAC,KAAoB,EAAE,YAA0B;;QAC1E,QAAO,KAAK,EAAC;YACX,KAAK,IAAI,CAAC,mBAAmB;gBAC3B;;;;;;kBAME;gBACF,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,WAAI,IAAI,CAAC,IAAI,CAAC,OAAO,0CAAE,UAAU,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACrP,CAAC,IAAI,CAAC,sCAAsC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAI,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,YAAY,CAAC,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACjM,KAAK,IAAI,CAAC,aAAa;gBACrB;;;;;mBAKG;gBACH,IAAI,MAAM,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC/O,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,OAAC,YAAY,CAAC,OAAO,0CAAE,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,YAAY,CAAC,OAAQ,CAAC,UAAW,CAAC,CAAC,CAAC;gBACrQ,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,wBAAwB,EAAC,sBAAsB,CAAC,CAAC,CAAC;gBAC/L,OAAO,MAAM,IAAI,MAAM,IAAI,MAAM,CAAC;YACpC,KAAK,IAAI,CAAC,cAAc;gBACtB;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAClN,KAAK,IAAI,CAAC,aAAa;gBACrB;;;;kBAIE;gBACH,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,OAAC,YAAY,CAAC,OAAO,0CAAE,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,YAAY,CAAC,OAAQ,CAAC,UAAW,CAAC,CAAC,CAAC;gBACvN,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,OAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;gBAC7K,OAAO,KAAK,IAAI,KAAK,CAAC;YACvB,KAAK,IAAI,CAAC,wBAAwB;gBAChC;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,OAAC,YAAY,CAAC,OAAO,0CAAE,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,YAAY,CAAC,OAAQ,CAAC,UAAW,CAAC,CAAC,CAAC;YACnN,KAAK,IAAI,CAAC,wBAAwB;gBAChC;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC1N,KAAK,IAAI,CAAC,0BAA0B;gBAChC;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,OAAC,YAAY,CAAC,OAAO,0CAAE,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,6BAA6B,EAAE,YAAY,CAAC,OAAQ,CAAC,UAAW,CAAC,CAAC,CAAC;YACpN,KAAK,IAAI,CAAC,cAAc;gBACtB;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YACpN,KAAK,IAAI,CAAC,eAAe;gBACvB;;;kBAGE;gBACF,OAAO,IAAI,CAAC;YACd,KAAK,IAAI,CAAC,iBAAiB;gBACzB;;kBAEE;gBACF,MAAM;YACR,KAAK,IAAI,CAAC,aAAa;gBACrB;;;;;kBAKE;gBACF,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAAE,CAAC;YAC/O,KAAK,IAAI,CAAC,eAAe;gBACvB;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,aAAa,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,OAAC,YAAY,CAAC,OAAO,0CAAE,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,6BAA6B,EAAE,YAAY,CAAC,OAAQ,CAAC,UAAW,CAAC,CAAC,CAAC;YACxN,KAAK,IAAI,CAAC,yBAAyB;gBACjC;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC5G,KAAK,IAAI,CAAC,cAAc;gBACtB;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,OAAQ,CAAC,CAAC,CAAC;YACzK,KAAK,IAAI,CAAC,yBAAyB;gBACjC;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC9G,KAAK,IAAI,CAAC,eAAe;gBACvB;;;kBAGE;gBACF,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,OAAQ,CAAC,CAAC,CAAC;SACvK;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,QAAQ,CAAC,YAA0B;QACxC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,gDAAgD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAChG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;;oBAClD,gBAAI,IAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,UAAU,0CAAE,KAAK,EAAE;wBAC3C,IAAI,CAAC,IAAK,CAAC,KAAM,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;qBAC9C;yBAAM;wBACL,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;qBAC7D;gBACH,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAyD,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC,CAAC;aAClI;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,OAAO,CAAC,YAA0B;QACvC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;YACtC,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;YACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAoC,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,iBAAiB,CAAC,YAA0B;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,wCAAwC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACnG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBAChD,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAA+C,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBACtG,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,iBAAiB,CAAC,YAA0B;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,wCAAwC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACnG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBAChD,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAA+C,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBACtG,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,mBAAmB,CAAC,YAA0B;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,0CAA0C,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACvG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBAClD,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAmD,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC1G,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,QAAQ,CAAC,YAA0B;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,mDAAmD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACpG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBACvC,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAqC,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC5F,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,WAAW,CAAC,YAA0B;QAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,mDAAmD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACvG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACnD,IAAI,CAAC,IAAK,CAAC,KAAM,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAA4D,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC,CAAC;aACrI;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,SAAS,CAAC,YAA0B;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,oDAAoD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACtG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBACxC,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAsC,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC7F,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,kBAAkB,CAAC,YAA0B;QAClD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,8CAA8C,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC/G,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBACjD,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAqD,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC5G,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,QAAQ,CAAC,YAA0B;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,mDAAmD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACpG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBACvC,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAqC,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC5F,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,kBAAkB,CAAC,YAA0B;QAClD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,0CAA0C,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACzG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBACjD,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAmD,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC1G,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,SAAS,CAAC,YAA0B;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,oDAAoD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACtG,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,GAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;;oBACxC,CAAC,WAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,KAAM,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAsC,CAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC;gBAC7F,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAK,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,aAAa,CAAC,YAA0B;QAC7C,IAAI,YAAY,CAAC,QAAQ;YAAE,OAAO,UAAU,CAAC;aACxC,IAAI,YAAY,CAAC,iBAAiB;YAAE,OAAO,WAAW,CAAC;aACvD,IAAI,YAAY,CAAC,iBAAiB;YAAE,OAAO,WAAW,CAAC;;YACvD,OAAO,YAAY,CAAC,MAAM,CAAC;IAClC,CAAC;;kGA9fU,yBAAyB;yGAAzB,yBAAyB;kEACzB,oFAAa;;;;;QClB1B,0EAEsB;QADQ,uJAAU,oBAAgB,IAAC;QAErD,6HAKU;QACV,4EAAyO;QACrO,yEAAiB;QACb,2EAA8J;QAC9J,gFAA6F;QAC7F,6EAA4J;QAChK,4DAAM;QACN,yEAAiB;QACb,gFAA4G;QAC5G,mFAA0G;QAC1G,iFAA0L;QAC1L,iFAA8K;QAClL,4DAAM;QACV,4DAAS;QACT,2EAAS;QACL,8HAOS;QACT,8EAAwE;QACpE,oNAEc;QACd,oNAEc;QAClB,4DAAS;QACT,8EAA4D;QACxD,oNAEc;QAClB,4DAAS;QACT,8EAAkE;QAC9D,oNAEc;QAClB,4DAAS;QACT,8EAAyD;QACrD,oNAEc;QAClB,4DAAS;QACT,8EAA0E;QACtE,oNAGc;QACd,oNAGc;QAClB,4DAAS;QACT,8EAAiD;QAC7C,oNAGc;QAClB,4DAAS;QACT,yEAA0H;QAC9H,4DAAU;QACV,6EAA4C;QAChD,4DAAO;;;;;;;;;;QAzED,wEAAW;QAGH,0DAAiB;QAAjB,iFAAiB;QAMnB,0DAAe;QAAf,4EAAe;QAEH,0DAAU;QAAV,mEAAU;QACC,0DAAU;QAAV,mEAAU;QACnB,0DAAU;QAAV,mEAAU;QAGI,0DAAU;QAAV,mEAAU;QACX,0DAAU;QAAV,mEAAU;QACrB,0DAAU;QAAV,mEAAU;QACV,0DAAU;QAAV,mEAAU;QAIrB,0DAAiB;QAAjB,iFAAiB;QAQlB,0DAAqC;QAArC,8EAAqC;QAQT,0DAAuB;QAAvB,yEAAuB;QAKpC,0DAAyB;QAAzB,0EAAyB;QAK5B,0DAAsB;QAAtB,0EAAsB;QAKlC,0DAAkC;QAAlC,+EAAkC;QAUnB,0DAAyB;QAAzB,0EAAyB;QAMzB,0DAA4C;QAA5C,wGAA4C;QAE3D,0DAAkB;QAAlB,+EAAkB;;;;;;;;;;;;;;;;;;;;ACjE3B,MAAM,mBAAmB;IAE9B,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtC,YAAY,CAAC,OAA4B;;QAC9C,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,cAAO,OAAO,CAAC,OAAO,0CAAE,cAAc,EAAE;YACtC,KAAK,aAAa;gBAAE,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAAC,MAAM;YAC3D,KAAK,YAAY;gBAAE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;gBAAC,MAAM;YACpD,KAAK,OAAO;gBAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;gBAAC,MAAM;YACxC,KAAK,aAAa;gBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAAC,MAAM;YAC9G,OAAO,CAAC,CAAC,MAAM,GAAG,wBAAwB,CAAC;SAC5C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,iBAAiB,CAAC,OAA4B;;QACnD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,cAAO,OAAO,CAAC,OAAO,0CAAE,cAAc,EAAE;YACtC,KAAK,aAAa;gBAAE,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;gBAAC,MAAM;YAChE,KAAK,YAAY;gBAAE,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC;gBAAC,MAAM;YACzD,KAAK,OAAO;gBAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;gBAAC,MAAM;YAC7C,KAAK,aAAa;gBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBAAC,MAAM;YACnH,OAAO,CAAC,CAAC,MAAM,GAAG,wBAAwB,CAAC;SAC5C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,aAAa,CAAC,OAA4B;;QAC/C,OAAO,cAAO,CAAC,OAAO,0CAAE,cAAc,KAAI,aAAa,CAAC;IAC1D,CAAC;;sFA9BU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM","file":"modules-gestao-plano-entrega-plano-entrega-module.js","sourcesContent":["import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\n\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-form-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-form-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild(InputSearchComponent, { static: true}) public planoEntrega?: InputSearchComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1000;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      inicio: { default: \"\" },\r\n      fim: { default: \"\" },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      unidade_id: { default: this.auth.unidade?.id },\r\n      plano_entrega_id: { default: null },\r\n      programa_id: { default: null },\r\n      status: { default: \"HOMOLOGANDO\" }\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    let planoEntrega = this.metadata?.planoEntrega ? this.metadata?.planoEntrega as PlanoEntrega : null;\r\n    if(planoEntrega){\r\n      this.form.controls.plano_entrega_id.setValue(planoEntrega.id);\r\n      this.form.controls.nome.setValue(planoEntrega.nome);\r\n      this.form.controls.inicio.setValue(planoEntrega.inicio);\r\n      this.form.controls.fim.setValue(planoEntrega.fim);\r\n      this.form.controls.planejamento_id.setValue(planoEntrega.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(planoEntrega.cadeia_valor_id);\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'plano_entrega_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n    /*  (RN_PENT_2_7)\r\n        Em caso de adesão, os campos 'inicio', 'fim', 'planejamento_id', e 'cadeia_valor_id', deverão ser sempre iguais aos do plano-pai; \r\n        portanto, quando um plano de entregas próprio sofrer alteração em um desses campos, todos os planos a ele vinculados deverão ser atualizados também;\r\n    */  \r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      //resolve(new NavigateResult((await this.dao!.aderir()).id));\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \";\r\n  }\r\n\r\n  public onPlanoEntregaChange(event: Event){\r\n    if(this.form.controls.plano_entrega_id.value){\r\n      this.form.controls.nome.setValue(this.planoEntrega?.selectedItem?.entity.nome);\r\n      this.form.controls.inicio.setValue(this.planoEntrega?.selectedItem?.entity.inicio);\r\n      this.form.controls.fim.setValue(this.planoEntrega?.selectedItem?.entity.fim);\r\n      this.form.controls.planejamento_id.setValue(this.planoEntrega?.selectedItem?.entity.planejamento_id);\r\n      this.form.controls.cadeia_valor_id.setValue(this.planoEntrega?.selectedItem?.entity.cadeia_valor_id);\r\n      this.form.controls.programa_id.setValue(this.planoEntrega?.selectedItem?.entity.programa_id);\r\n    }\r\n  }\r\n}","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row mb-4\">\r\n            <input-search #planoEntrega [size]=\"12\" controlName=\"plano_entrega_id\" label=\"Plano de Entregas da Unidade-pai\" [dao]=\"planoEntregaDao\" \r\n            [selectRoute]=\"{route: ['gestao', 'plano-entrega'], params: {showFilter: false, filter: {unidade_id: auth.unidade!.unidade_id, status: 'ATIVO'}}}\"\r\n            [where]=\"[['unidade_id', '=', auth.unidade!.unidade_id], ['status', '=', 'ATIVO']]\" (change)=\"onPlanoEntregaChange($event)\"></input-search>\r\n            <!--    (RI_PENT_6) Na adesão a um plano de entregas:\r\n                    - o input-search dos planos de entregas exibirá apenas os ativos da unidade-pai da unidade selecionada; \r\n                    - a listagem dos planos de entrega não exibirá as opções de filtro.\r\n            -->\r\n            <separator></separator>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Nome deste Plano de Entregas\" controlName=\"nome\"></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search disabled [size]=\"9\" [label]=\"lex.noun('Unidade')\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-text disabled [size]=\"3\" label=\"Status\" controlName=\"status\"></input-text>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <separator title=\"Dados herdados do Plano de Entregas da Unidade-pai\" [collapse]=\"'collapse'\">\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"12\" label=\"Programa de Gestão\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"inicio\" label=\"Início\" [labelInfo]=\"'Início ' + lex.noun('Plano de Entrega', false, true)\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search disabled [size]=\"9\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n                    <input-datetime disabled [size]=\"3\" controlName=\"fim\" label=\"Fim\" [labelInfo]=\"'Fim ' + lex.noun('Plano de Entrega', false, true)\"></input-datetime>\r\n                </div>\r\n            </separator>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { Planejamento } from 'src/app/models/planejamento.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\nimport { EntregaFormComponent } from 'src/app/modules/cadastros/entrega/entrega-form/entrega-form.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanejamentoObjetivoDaoService } from 'src/app/dao/planejamento-objetivo-dao.service';\r\nimport { CadeiaValorProcessoDaoService } from 'src/app/dao/cadeia-valor-processo-dao.service';\r\nimport { NavigateResult } from 'src/app/services/navigate.service';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { CadeiaValorProcesso } from 'src/app/models/cadeia-valor-processo.model';\r\nimport { PlanejamentoListObjetivosEntregasComponent } from '../../planejamento-institucional/planejamento-list-objetivos-entregas/planejamento-list-objetivos-entregas.component';\r\nimport { PlanoEntregaObjetivo } from 'src/app/models/plano-entrega-objetivo.model';\r\nimport { PlanoEntregaProcesso } from 'src/app/models/plano-entrega-processo.model';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { Entrega } from 'src/app/models/entrega.model';\r\nimport { TabsComponent } from 'src/app/components/tabs/tabs.component';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-form-entrega',\r\n  templateUrl: './plano-entrega-form-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-form-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaFormEntregaComponent extends PageFormBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  // @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('gridProcessos', { static: false }) public gridProcessos?: GridComponent;\r\n  @ViewChild('gridObjetivos', { static: false }) public gridObjetivos?: GridComponent;\r\n  @ViewChild('entregas', { static: false }) public entregas?: EntregaFormComponent;\r\n  @ViewChild('planejamento', { static: false }) public planejamento?: InputSearchComponent;\r\n  @ViewChild('cadeiaValor', { static: false }) public cadeiaValor?: InputSearchComponent;\r\n  @ViewChild('inputObjetivo', { static: false }) public inputObjetivo?: InputSearchComponent;\r\n  @ViewChild('inputProcesso', { static: false }) public inputProcesso?: InputSearchComponent;\r\n  @ViewChild('entrega', { static: false }) public entrega?: InputSearchComponent;\r\n  @ViewChild('demandante', { static: false }) public demandante?: InputSearchComponent;\r\n  @ViewChild('tabs', { static: false }) public tabs?: TabsComponent;\r\n  \r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public planejamentoId?: string;\r\n  public cadeiaValorId?: string;\r\n  public formObjetivos: FormGroup;\r\n  public formProcessos: FormGroup;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;  \r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;  \r\n  public planoEntregaEntregaDao: PlanoEntregaEntregaDaoService;  \r\n  public cadeiaValorDao: CadeiaValorDaoService;  \r\n  public cadeiaValorProcessoDao: CadeiaValorProcessoDaoService;\r\n  public planejamentoObjetivoDao: PlanejamentoObjetivoDaoService;\r\n\r\n  constructor(public injector: Injector) { \r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregaEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.cadeiaValorProcessoDao = injector.get<CadeiaValorProcessoDaoService>(CadeiaValorProcessoDaoService);\r\n    this.planejamentoObjetivoDao = injector.get<PlanejamentoObjetivoDaoService>(PlanejamentoObjetivoDaoService);\r\n    this.join = ['objetivos', 'processos', 'unidade'];\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: {default: \"\"},\r\n      inicio: { default: new Date() },\r\n      fim: { default: new Date() },\r\n      meta: {default: 100},\r\n      realizado: {default: null},\r\n      plano_entrega_id: {default: \"\"},\r\n      entrega_pai_id: {default: null},\r\n      entrega_id: {default: null},\r\n      progresso_esperado: {default: 100},\r\n      progresso_realizado: {default: null},\r\n      unidade_id: {default: null},\r\n      destinatario: {default: null},\r\n      objetivos: {default: []},\r\n      processos: {default: []},\r\n      planejamento_id: {default: null},\r\n      cadeia_valor_id: {default: null},\r\n      objetivo_id: {default: null},\r\n      objetivo: {default: null},\r\n    }, this.cdRef, this.validate);\r\n    this.formObjetivos = this.fh.FormBuilder({\r\n      objetivo_id: {default: null},\r\n    }, this.cdRef, this.validate);\r\n    this.formProcessos = this.fh.FormBuilder({\r\n      processo_id: {default: null},\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planejamentoId = this.metadata?.planejamento_id;\r\n    this.cadeiaValorId = this.metadata?.cadeia_valor_id;\r\n    this.entity = this.metadata?.entrega as PlanoEntregaEntrega;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    (async () => {\r\n      await this.planejamento?.loadSearch(this.planejamentoId);\r\n      await this.cadeiaValor?.loadSearch(this.cadeiaValorId);\r\n    })();    \r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if(['descricao'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    } else if (['progresso_realizado', 'progresso_esperado', 'meta', 'realizado'].indexOf(controlName) >= 0 && !(control.value >= 0)){\r\n      result = \"Obrigatório\";\r\n    } else if (['unidade_id'].indexOf(controlName) >= 0&& !control.value?.length){\r\n      result = \"O demandante é obrigatório\";\r\n    } else if (['entrega_id'].indexOf(controlName) >= 0&& !control.value?.length){\r\n      result = \"A entrega é obrigatória\";\r\n    } else if(['inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    } else if(['fim'].indexOf(controlName) >=0  && !this.dao?.validDateTime(control.value)){\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.gridObjetivos?.editing) {\r\n      this.tabs!.active = \"OBJETIVOS\" ;\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if(this.gridProcessos?.editing) {\r\n      this.tabs!.active = \"PROCESSOS\" ;\r\n      return \"Salve ou cancele o registro atual em edição\";\r\n    }\r\n    if(this.form!.controls.fim.value && this.form!.controls.inicio.value > this.form!.controls.fim.value) return \"A data do início não pode ser maior que a data do fim!\";\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntregaEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    this.calculaRealizado();\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n  }\r\n\r\n  public async initializeData(form: FormGroup){\r\n  \r\n    await this.loadData(this.entity!, form);\r\n  }\r\n\r\n  public saveData(form: IIndexable): Promise<NavigateResult> {\r\n    return new Promise<NavigateResult>((resolve, reject) => {\r\n      let entrega: PlanoEntregaEntrega = this.util.fill(new PlanoEntregaEntrega(), this.entity!);\r\n      this.gridObjetivos?.confirm();\r\n      this.gridProcessos?.confirm();\r\n      entrega = this.util.fillForm(entrega, this.form!.value);\r\n      entrega.objetivos = entrega.objetivos.filter(x => [\"ADD\", \"DELETE\"].includes(x._status || \"\"));\r\n      entrega.processos = entrega.processos.filter(x => [\"ADD\", \"DELETE\"].includes(x._status || \"\"));\r\n      entrega.unidade = this.demandante?.selectedItem?.entity;\r\n      entrega.entrega = this.entrega?.selectedItem?.entity;\r\n      resolve(new NavigateResult(entrega));\r\n    });\r\n  }\r\n\r\n  public onRealizadoChange(event: Event) {\r\n    this.calculaRealizado();\r\n  }\r\n  \r\n  public calculaRealizado() {\r\n    const meta = this.form?.controls.meta.value;\r\n    const realizado = this.form?.controls.realizado.value;\r\n    if(meta && realizado) {\r\n      let totalRealizado = (realizado / meta) * 100; \r\n      this.form?.controls.progresso_realizado.setValue(totalRealizado);\r\n    }\r\n  }\r\n\r\n  public checkTipoIndicador(tipos: string[]): boolean {\r\n    return tipos.includes((this.entrega?.selectedItem?.entity as Entrega).tipo_indicador);\r\n  }\r\n\r\n  public dynamicOptionsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Excluir\", icon: \"bi bi-trash\", color: \"btn-outline-danger\", onClick: (objetivo: PlanejamentoObjetivo) => { this.removeObjetivo(objetivo); } });\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsObjetivos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtonsProcessos(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let processo: CadeiaValorProcesso = row as CadeiaValorProcesso;\r\n    return result;\r\n  }\r\n\r\n  public async addObjetivo() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeObjetivo(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if(confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveObjetivo(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaObjetivo;\r\n    if(form!.controls.objetivo_id.value.length && this.inputObjetivo!.selectedItem) {\r\n      consolidado.objetivo_id = form!.controls.objetivo_id.value;\r\n      consolidado.objetivo = this.inputObjetivo!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  public async addProcesso() {\r\n    return {\r\n      id: this.dao!.generateUuid(),\r\n      _status: \"ADD\"\r\n    } as IIndexable;\r\n  }\r\n\r\n  public async removeProcesso(row: any) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if(confirm) row._status = \"DELETE\";\r\n    return false;\r\n  }\r\n\r\n  public async saveProcesso(form: FormGroup, row: any) {\r\n    let consolidado = row as PlanoEntregaProcesso;\r\n    if(form!.controls.processo_id.value.length && this.inputProcesso!.selectedItem) {\r\n      consolidado.processo_id = form!.controls.processo_id.value;\r\n      consolidado.processo = this.inputProcesso!.selectedItem!.entity;\r\n      return consolidado;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <tabs #tabs display right [title]=\"!isModal ? title : ''\">\r\n        <tab key=\"ENTREGAS\" label=\"Entregas\">\r\n            <div class=\"row\">\r\n                <div class=\"row\">\r\n                    <input-search [size]=\"12\" [label]=\"'Entrega Superior'\" controlName=\"entrega_pai_id\" [dao]=\"planoEntregaEntregaDao\"></input-search>\r\n                </div>\r\n                <separator></separator>\r\n                <div class=\"row\">\r\n                    <input-search #entrega [size]=\"6\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n                    <input-text [size]=\"6\" label=\"Detalhamento\" controlName=\"descricao\"></input-text>\r\n                </div>\r\n                <separator title=\"Especificação das Entregas\"></separator>\r\n                <div class=\"row\">\r\n                    <input-datetime date [size]=\"6\" label=\"Início\" controlName=\"inicio\" [labelInfo]=\"'Início ' + lex.noun('Plano de Entregas',false,true)\"></input-datetime>\r\n                    <input-datetime date [size]=\"6\" label=\"Fim\" controlName=\"fim\" [labelInfo]=\"'Fim ' + lex.noun('Plano de Entregas',false,true) + '(Estimativa Inicial)'\"></input-datetime>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-search [size]=\"6\" #demandante label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                    <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\"></input-text>\r\n                </div>\r\n                <div *ngIf=\"this.entrega?.selectedItem?.entity\" class=\"row\">\r\n                    <input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [size]=\"6\" label=\"Meta\" controlName=\"meta\" sufix=\"%\"></input-number>\r\n                    <input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [size]=\"6\" label=\"Meta\" controlName=\"meta\"></input-number>\r\n                    <input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [size]=\"6\" label=\"Meta\" controlName=\"meta\"></input-select>\r\n                    <input-number *ngIf=\"checkTipoIndicador(['PORCENTAGEM'])\" [size]=\"6\" label=\"Realizado\" (change)=\"onRealizadoChange($event)\" controlName=\"realizado\" sufix=\"%\"></input-number>\r\n                    <input-number *ngIf=\"checkTipoIndicador(['QUANTIDADE', 'VALOR'])\" [size]=\"6\" label=\"Realizado\" (change)=\"onRealizadoChange($event)\" controlName=\"realizado\"></input-number>\r\n                    <input-select *ngIf=\"checkTipoIndicador(['QUALITATIVO'])\" [size]=\"6\" label=\"Realizado\" (change)=\"onRealizadoChange($event)\" controlName=\"realizado\"></input-select>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <input-number [size]=\"6\" label=\"Progresso Esperado\" controlName=\"progresso_esperado\" sufix=\"%\"></input-number>\r\n                    <input-number [size]=\"6\" label=\"Progresso Realizado\" [stepValue]=\"0.01\" controlName=\"progresso_realizado\" sufix=\"%\" disabled></input-number>\r\n                </div>\r\n            </div>\r\n        </tab>\r\n        <!-- *ngIf=\"checkFilled(['planejamento_id'])\" -->\r\n        <tab *ngIf=\"planejamentoId?.length\" key=\"OBJETIVOS\" label=\"Objetivos\">\r\n            <input-search [size]=\"12\" #planejamento controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.objetivos\" [form]=\"formObjetivos\" #gridObjetivos editable [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                [add]=\"addObjetivo.bind(this)\" [remove]=\"removeObjetivo.bind(this)\" [save]=\"saveObjetivo.bind(this)\">\r\n                <columns>\r\n                    <column title=\"Objetivo\" [template]=\"columnObjetivo\" [editTemplate]=\"editObjetivo\">\r\n                        <ng-template let-row=\"row\" #columnObjetivo>\r\n                            <span>{{row.objetivo.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivo>\r\n                            <input-search [size]=\"12\" #inputObjetivo label icon controlName=\"objetivo_id\" label icon [where]=\"[['planejamento_id', '==', planejamentoId]]\" [dao]=\"planejamentoObjetivoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento', 'objetivoList'], params: {filter: {planejamento_id: planejamentoId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <!--column type=\"options\" [dynamicButtons]=\"dynamicButtonsObjetivos.bind(this)\" [dynamicOptions]=\"dynamicOptionsObjetivos.bind(this)\"></!--column//-->\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n            <!-- <planejamento-list-objetivos-entregas [planejamentoId]=\"planejamentoId\"></planejamento-list-objetivos-entregas> -->\r\n        </tab>\r\n        <!-- *ngIf=\"checkFilled(['cadeia_valor_id'])\" -->\r\n        <tab *ngIf=\"cadeiaValorId?.length\" key=\"PROCESSOS\" label=\"Processos\">\r\n            <input-search [size]=\"12\" #cadeiaValor controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\" disabled></input-search>\r\n            <grid [control]=\"form!.controls.processos\" [form]=\"formProcessos\" #gridProcessos editable [hasDelete]=\"false\" [hasEdit]=\"false\"\r\n                [add]=\"addProcesso.bind(this)\" [remove]=\"removeProcesso.bind(this)\" [save]=\"saveProcesso.bind(this)\">\r\n                <columns>\r\n                    <column title=\"Processos\" [template]=\"processo\" [editTemplate]=\"editProcesso\">\r\n                        <ng-template let-row=\"row\" #processo>\r\n                            <span>{{row.processo.nome}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editProcesso>\r\n                            <input-search [size]=\"12\" #inputProcesso label icon controlName=\"processo_id\" label [where]=\"[['cadeia_valor_id', '==', cadeiaValorId]]\" [dao]=\"cadeiaValorProcessoDao\"[selectRoute]=\"{route: ['gestao', 'cadeia-valor', 'processoList'], params: {filter: {cadeia_valor_id: cadeiaValorId}}}\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\" [dynamicButtons]=\"dynamicButtonsProcessos.bind(this)\"></column>\r\n                </columns>\r\n            </grid>\r\n        </tab>\r\n    </tabs>\r\n</editable-form>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entrega\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaFormEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entrega\", modal:true }},\r\n  { path: 'entregaList', component: PlanoEntregaListEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entrega\", modal:true }},\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaFormAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão\", modal: true } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Programa } from './programa.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluindo: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\nexport class PlanoEntrega extends Base {\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public programa?: Programa;\r\n  public plano_entrega_superior?: PlanoEntrega;\r\n\r\n  public data_fim: Date | null = null;                              // Data em que o registro foi deletado (soft-delete)\r\n  public inicio: Date = new Date();                                 // Data inicio do plano de entrega\r\n  public fim: Date | null = null;                                   // Data fim do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public status: string = 'INCLUINDO';                              // Status do plano de entrega\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public data_cancelamento?: Date | null;\r\n  public data_arquivamento?: Date | null;\r\n  public unidade_id: string = '';\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public programa_id: string | null = null;\r\n  public entregas: PlanoEntregaEntrega[] = [];\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaFormAdesaoComponent } from './plano-entrega-form-adesao/plano-entrega-form-adesao.component';\r\nimport { PlanoEntregaFormEntregaComponent } from './plano-entrega-form-entrega/plano-entrega-form-entrega.component';\r\nimport { PlanejamentoModule } from '../planejamento-institucional/planejamento.module';\r\nimport { CadeiaValorModule } from '../cadeia-valor/cadeia-valor.module';\r\nimport { PlanoEntregaListEntregaListComponent } from './plano-entrega-list-entrega-list/plano-entrega-list-entrega-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaFormAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaMapaEntregasComponent,\r\n    PlanoEntregaFormEntregaComponent,\r\n    PlanoEntregaListEntregaListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule,\r\n    PlanejamentoModule,\r\n    CadeiaValorModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega-list',\r\n  templateUrl: './plano-entrega-list-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaListComponent extends PageListBase<PlanoEntregaEntrega,PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaDao: PlanoEntregaEntregaDaoService;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public buttons: ToolbarButton[] = [];\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.title = this.lex.noun(\"Entregas\", true);\r\n    this.filter = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      descricao: { default: \"\" },\r\n      unidade_id: { default: \"\" },\r\n      destinatario: { default: \"\" },\r\n    });\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let objetivo: PlanejamentoObjetivo = row as PlanejamentoObjetivo;\r\n    result.push({ label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (objetivo: PlanejamentoObjetivo) => this.go.navigate({ route: ['gestao', 'planejamento', 'objetivo', objetivo.id, 'consult'] }, { modal: true }) });\r\n    return result;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let form: any = filter.value;\r\n    let result: any[] = [];\r\n    if (form.planejamento_id?.length) {\r\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    }\r\n    if (form.nome?.length) {\r\n      result.push([\"or\", [\"nome\", \"like\", \"%\" + form.nome.replace(\" \", \"%\") + \"%\"], [\"sigla\", \"like\", \"%\" + form.nome.replace(\" \", \"%\") + \"%\"]]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<h3 *ngIf=\"!isModal\" class=\"my-2\">{{title}}</h3>\r\n<grid [dao]=\"dao\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\" [selectable]=\"selectable\"\r\n    (select)=\"onSelect($event)\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"buttons\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\"\r\n                placeholder=\"Nome\"></input-text>\r\n            <input-text [size]=\"6\" label=\"Descrição\" controlName=\"descricao\" [control]=\"filter!.controls.descricao\"\r\n                placeholder=\"Descrição\"></input-text>\r\n        </div>\r\n        <div class=\"row\"> \r\n                <input-search [size]=\"6\" label=\"Demandante\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n                <input-text [size]=\"6\" label=\"Destinatário\" controlName=\"destinatario\" [control]=\"filter!.controls.destinatario\"\r\n                placeholder=\"Destinatário\"></input-text>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n            <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                <span>{{row.descricao+\" / \"+row.demandante +\" / \"+row.destinatario}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\" >\r\n            <ng-template let-row=\"row\" #columnDatas>\r\n                <span> {{dao!.getDateFormatted(row.inicio)+\" até\r\n                    \"+dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Entrega\" [template]=\"columnIndicador\">\r\n            <ng-template let-row=\"row\" #columnIndicador>\r\n                <span>{{row.entrega_id}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n            <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                <span>{{row.meta+\" / \"+row.realizado}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n            <ng-template let-row=\"row\" #columnProgresso>\r\n                <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { ProgramaDaoService } from 'src/app/dao/programa-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Programa } from 'src/app/models/programa.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n  @ViewChild('programa', { static: true }) public programa?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public programaDao: ProgramaDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.programaDao = injector.get<ProgramaDaoService>(ProgramaDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.join = [\"entregas.entrega\", \"unidade\", \"entregas.unidade\"];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      inicio: { default: new Date() },\r\n      fim: { default: new Date() },\r\n      status: { default: 'INCLUINDO' },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      programa_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id', 'programa_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if(controlName == 'fim' && control.value && !this.dao?.validDateTime(control.value)){\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    const inicio = this.form?.controls.inicio.value;\r\n    const fim = this.form?.controls.fim.value;\r\n    const programa = this.programa?.selectedItem?.entity as Programa; \r\n    if(!programa) {\r\n      return \"Obrigatório selecionar o programa\";\r\n    } else if(!this.dao?.validDateTime(inicio) || !this.dao?.validDateTime(fim)) {\r\n      return \"Data de início ou fim inválidas\";\r\n    } else if(inicio.toTime() > fim.toTime()) {\r\n      return \"A data do início não pode ser maior que a data do fim!\";\r\n    } else {\r\n      const diffTime = Math.abs(inicio - fim);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      if (programa.prazo_execucao > 0 && diffDays > programa.prazo_execucao) return \"O prazo das datas não satisfaz a duração estipulada no programa.\";\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.entity = new PlanoEntrega();\r\n    this.entity.unidade_id = this.auth.unidade?.id || \"\";\r\n    this.entity.unidade = this.auth.unidade;\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      let planoEntrega: PlanoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = planoEntrega.entregas?.filter(x => x._status) || [];\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \";\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-text #nome [size]=\"4\" label=\"Nome\" controlName=\"nome\"></input-text>\r\n            <input-search [size]=\"4\" #programa [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"programa_id\" [dao]=\"programaDao\"></input-search>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"inicio\" [labelInfo]=\"'Início ' + lex.noun('Planejamento Institucional',false,true)\"></input-datetime>\r\n            <input-datetime date [size]=\"2\" label=\"Fim\" controlName=\"fim\" [labelInfo]=\"'Fim ' + lex.noun('Planejamento Institucional',false,true)\"></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" [disabled]=\"entity?.id ? 'disabled' : undefined\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #planejamento [size]=\"4\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\" [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\" [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator title=\"Entregas\"></separator>\r\n        <plano-entrega-list-entrega #entregas noPersist [control]=\"form!.controls.entregas\" [planejamentoId]=\"form!.controls.planejamento_id.value\" [cadeiaValorId]=\"form!.controls.cadeia_valor_id.value\" ></plano-entrega-list-entrega>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun(\"Entrega\", true);\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      inicio: {default: null},\r\n      fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.inicio) result.push([\"data_inicio\", \">=\", form.inicio]);\r\n    if(form.fim) result.push([\"data_fim\", \"<=\", form.fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.inicio)}} - {{util.getDateFormatted(row.fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.noun('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { LookupItem } from '../services/lookup.service';\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\nimport { PlanoEntregaObjetivo } from './plano-entrega-objetivo.model';\r\nimport { PlanoEntregaProcesso } from './plano-entrega-processo.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base {\r\n  public entrega?: Entrega;\r\n  public unidade?: Unidade;\r\n\r\n  public inicio: Date = new Date();               \r\n  public fim: Date | null = null;                               \r\n  public descricao: string = \"\";                                      \r\n  public homologado: boolean = false;                 \r\n  public meta: EntregaValor = {}; \r\n  public realizado: EntregaValor = {};\r\n  public plano_entrega_id: string | null = null;\r\n  public entrega_id: string = '';\r\n  public progresso_esperado: number = 100;                        \r\n  public progresso_realizado: number = 0;                        \r\n  public descricao_meta: string = '';                        \r\n  public unidade_id: string = '';                        \r\n  public destinatario: string = '';                        \r\n  public entrega_pai_id: string | null = null;                      \r\n  public objetivos: PlanoEntregaObjetivo[] = [];\r\n  public processos: PlanoEntregaProcesso[] = [];\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { ChangeDetectorRef, Component, Injector, Input, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanejamentoObjetivo } from 'src/app/models/planejamento-objetivo.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFrameBase } from 'src/app/modules/base/page-frame-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageFrameBase {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @Input() cdRef: ChangeDetectorRef;\r\n  @Input() set noPersist(value: string | undefined) { super.noPersist = value; } get noPersist(): string | undefined { return super.noPersist; }\r\n  @Input() set control(value: AbstractControl | undefined) { super.control = value; } get control(): AbstractControl | undefined { return super.control; }\r\n  @Input() set entity(value: PlanoEntregaEntrega | undefined) { super.entity = value; } get entity(): PlanoEntregaEntrega | undefined { return super.entity; }\r\n  @Input() set planejamentoId(value: string | undefined) {\r\n    if(this._planejamentoId != value) {\r\n      this._planejamentoId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get planejamentoId(): string | undefined {\r\n    return this._planejamentoId;\r\n  }\r\n  @Input() set cadeiaValorId(value: string | undefined) {\r\n    if(this._cadeiaValorId != value) {\r\n      this._cadeiaValorId = value;\r\n      // verificar nas entregas quais objetivos não são desse planjemaneot e remove-los\r\n      // será remvido somente da lista de itens (em memória), independente de persistente ou não, MAS NO BACKEND HAVERÀ ESSA VALIDAÇÂO!\r\n    }\r\n  } get cadeiaValorId(): string | undefined {\r\n    return this._cadeiaValorId;\r\n  }\r\n\r\n  public get items(): PlanoEntregaEntrega[] {\r\n    if (!this.gridControl.value) this.gridControl.setValue([]);\r\n    return this.gridControl.value;\r\n  }\r\n\r\n  private _cadeiaValorId?: string;\r\n  private _planejamentoId?: string;\r\n  \r\n  public entityToControl = (value: any) => (value as PlanoEntrega).entregas || [];\r\n  public options: ToolbarButton[] = [];\r\n  public planoEntregaId: string = \"\";\r\n  public dao: PlanoEntregaEntregaDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector);\r\n    this.title = this.lex.noun(\"Entrega\");\r\n    this.join = [\"unidade\", \"entidade\"];\r\n    this.code = \"MOD_PENT_CONS\";\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef);\r\n    this.dao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.form = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      inicio: { default: new Date() },\r\n      fim: { default: new Date() },\r\n      meta: { default: \"\" },\r\n      realizado: { default: null },\r\n      entrega_id: { default: null },\r\n      progresso_esperado: { default: null },\r\n      progresso_realizado: { default: null },\r\n      destinatario: { default: null },\r\n    }, this.cdRef, this.validate);\r\n    // Testa se o usuário possui permissão para exibir dados do feriado\r\n    if (true || this.auth.hasPermissionTo(\"\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir o feriado\r\n    if (true || this.auth.hasPermissionTo(\"MOD_FER_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n  public async add() {\r\n    let entrega = new PlanoEntregaEntrega({\r\n      _status: \"ADD\",\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    });\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: {\r\n        plano_entrega_id: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        entrega: entrega,\r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          try {\r\n            this.isNoPersist ? this.items.push(modalResult) : this.items.push(await this.dao!.save(modalResult));\r\n            this.cdRef.detectChanges();\r\n          } catch (error: any) {\r\n            this.error(error?.error || error?.message || error);\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public async edit(entrega: PlanoEntregaEntrega) {\r\n    entrega._status = entrega._status == \"ADD\" ? \"ADD\" : \"EDIT\";\r\n    let index = this.items.indexOf(entrega);\r\n    this.go.navigate({ route: ['gestao', 'plano-entrega', 'entrega'] }, {\r\n      metadata: { \r\n        plano_entrega_id: this.entity!,\r\n        planejamento_id: this.planejamentoId,\r\n        cadeia_valor_id: this.cadeiaValorId,\r\n        entrega: entrega, \r\n      },\r\n      modalClose: async (modalResult) => {\r\n        if (modalResult) {\r\n          if (!this.isNoPersist) await this.dao?.save(modalResult);\r\n          this.items[index] = modalResult;\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public async delete(entrega: PlanoEntregaEntrega) {\r\n    let confirm = await this.dialog.confirm(\"Exclui ?\", \"Deseja realmente excluir?\");\r\n    if (confirm) {\r\n      let index = this.items.indexOf(entrega);\r\n      if (this.isNoPersist) {\r\n        entrega._status = \"DELETE\";\r\n      } else {\r\n        await this.dao!.delete(entrega);\r\n      };\r\n    }\r\n  }\r\n  \r\n  public async consult(entrega: PlanoEntregaEntrega) {\r\n    this.go.navigate({route: ['', entrega.id, \"consult\"]});\r\n  }\r\n  \r\n}\r\n","<editable-form noButtons [form]=\"form!\" [disabled]=\"formDisabled\">\r\n    <div class=\"row\">\r\n        <grid [items]=\"items\" [form]=\"form!\" editable [hasAdd]=\"true || auth.hasPermissionTo('')\" [hasEdit]=\"true || auth.hasPermissionTo('')\" [add]=\"add.bind(this)\" [groupTemplate]=\"groupEntregas\">\r\n            <ng-template let-separator=\"separator\" #groupEntregas>\r\n                <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n                    <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n                </span>\r\n            </ng-template>\r\n            <columns>\r\n                <column [title]=\"'Entrega\\nDemandante\\nDestinatário'\" [template]=\"columnEntregaCliente\">\r\n                    <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                        <span *ngIf=\"row.descricao\" class=\"badge bg-light text-dark\">\r\n                            <i class=\"bi bi-textarea-t\"></i>\r\n                            {{row.descricao}}\r\n                        </span>\r\n                        <span *ngIf=\"row.unidade_id\" class=\"badge bg-light text-dark\">\r\n                            <i class=\"fa-unity fab\"></i>\r\n                            {{row.unidade.nome}}\r\n                        </span>\r\n                        <span *ngIf=\"row.destinatario\" class=\"badge bg-light text-dark\">\r\n                            {{row.destinatario}}\r\n                        </span>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Data Início\\nData Fim'\" [template]=\"columnDatas\">\r\n                    <ng-template let-row=\"row\" #columnDatas>\r\n                        <span *ngIf=\"row.inicio\"> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n                        <span *ngIf=\"row.fim\"> {{dao!.getDateFormatted(row.fim)}}</span>\r\n                    </ng-template>\r\n                </column>\r\n                <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n                    <ng-template let-row=\"row\" #columnEntrega>\r\n                        <span *ngIf=\"row.entrega\" class=\"badge bg-light text-dark\">\r\n                            <i class=\"bi bi-list-check\"></i>\r\n                            {{row.entrega?.nome}}\r\n                        </span>\r\n                    </ng-template>\r\n                </column>\r\n                <column [title]=\"'Meta\\nRealizado'\" [template]=\"columnMetaRealizado\">\r\n                    <ng-template let-row=\"row\" #columnMetaRealizado>\r\n                        <span  *ngIf=\"row.meta\" class=\"badge bg-light text-dark\">\r\n                            {{row.meta}}\r\n                        </span>\r\n                        <span *ngIf=\"row.realizado\" class=\"badge bg-light text-dark\">\r\n                            {{row.realizado}}\r\n                        </span>\r\n\r\n                    </ng-template>\r\n                </column>\r\n                <column title=\"Progresso\" [template]=\"columnProgresso\">\r\n                    <ng-template let-row=\"row\" #columnProgresso>\r\n                        <progress-bar [value]=\"row.progresso_realizado\" color=\"success\"></progress-bar>\r\n                    </ng-template>\r\n                </column>\r\n                <column type=\"options\" [onEdit]=\"edit.bind(this)\" [options]=\"options\"></column>\r\n            </columns>\r\n        </grid>\r\n    </div>\r\n</editable-form>\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public showFilter: boolean = true;\r\n  public linha?: PlanoEntrega;\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public unidadeSelecionada: Unidade;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public botoes: ToolbarButton[] = [];\r\n  public BOTAO_ADERIR_TOOLBAR: ToolbarButton;\r\n  public BOTAO_ADERIR_OPTION: ToolbarButton;\r\n  public BOTAO_ALTERAR: ToolbarButton;\r\n  public BOTAO_ARQUIVAR: ToolbarButton;\r\n  public BOTAO_AVALIAR: ToolbarButton;\r\n  public BOTAO_CANCELAR_AVALIACAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_CONCLUSAO: ToolbarButton;\r\n  public BOTAO_CANCELAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_CONCLUIR: ToolbarButton;\r\n  public BOTAO_CONSULTAR: ToolbarButton;\r\n  public BOTAO_DESARQUIVAR: ToolbarButton;\r\n  public BOTAO_EXCLUIR: ToolbarButton;\r\n  public BOTAO_HOMOLOGAR: ToolbarButton;\r\n  public BOTAO_LIBERAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_REATIVAR: ToolbarButton;\r\n  public BOTAO_RETIRAR_HOMOLOGACAO: ToolbarButton;\r\n  public BOTAO_SUSPENDER: ToolbarButton;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.unidadeSelecionada = this.auth.unidade!;\r\n    /* Inicializações */\r\n    this.title = this.lex.noun('Plano de Entrega', true);\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      principais: { default: true },\r\n      nome: { default: '' },\r\n      inicio: { default: '' },\r\n      fim: { default: '' },\r\n      status: { default: '' },\r\n      unidade_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n    });\r\n    this.join = ['planejamento:id,nome', 'cadeiaValor:id,nome', 'unidade:id,sigla,path', 'entregas.entrega', 'entregas.unidade'];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR_OPTION = { label: \"Aderir\", icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({route: ['gestao', 'plano-entrega', 'adesao']}, { metadata: { planoEntrega: this.linha }, modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ADERIR_TOOLBAR = { label: \"Aderir\", disabled: !this.habilitarAdesaoToolbar, icon: this.entityService.getIcon(\"Adesao\"), onClick: (() => { this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] }, { modalClose: (modalResult) => { this.refresh(); } }); }).bind(this) };\r\n    this.BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    this.BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    this.BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    this.BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    this.BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    this.BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    this.BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    this.BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    this.BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    this.BOTAO_EXCLUIR = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    this.BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    this.BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    this.BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    this.BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUINDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUINDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    this.BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    this.botoes = [this.BOTAO_ADERIR_OPTION, this.BOTAO_ADERIR_TOOLBAR, this.BOTAO_ALTERAR, this.BOTAO_ARQUIVAR, this.BOTAO_AVALIAR, this.BOTAO_CANCELAR_AVALIACAO, this.BOTAO_CANCELAR_CONCLUSAO, \r\n                  this.BOTAO_CANCELAR_HOMOLOGACAO, this.BOTAO_CONCLUIR, this.BOTAO_CONSULTAR, this.BOTAO_DESARQUIVAR, this.BOTAO_EXCLUIR, this.BOTAO_HOMOLOGAR, this.BOTAO_LIBERAR_HOMOLOGACAO, \r\n                  this.BOTAO_REATIVAR, this.BOTAO_RETIRAR_HOMOLOGACAO, this.BOTAO_SUSPENDER];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.showFilter = typeof this.queryParams?.showFilter != \"undefined\" ? (this.queryParams.showFilter == \"true\") : true;\r\n    this.checaBotaoAderirToolbar();\r\n    this.toolbarButtons.push(this.BOTAO_ADERIR_TOOLBAR);\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.auth.unidade != this.unidadeSelecionada) {\r\n      this.unidadeSelecionada = this.auth.unidade!;\r\n      this.checaBotaoAderirToolbar();\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  public checaBotaoAderirToolbar() {\r\n    let planos_ativos_unidade_pai = this.planosEntregasAtivosUnidadePai().map(x => x.id);\r\n    let planos_superiores_vinculados_pela_unidade_selecionada = this.planosEntregasAtivosUnidadeSelecionada().map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition1 = this.auth.isGestorUnidade() || this.auth.isGestorUnidade(this.auth.unidade?.unidade_id) || (this.auth.isLotacaoPrincipal(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADERIR\"));\r\n    let condition2 = !!planos_ativos_unidade_pai.filter(x => !planos_superiores_vinculados_pela_unidade_selecionada.includes(x)).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR_TOOLBAR.disabled = !this.habilitarAdesaoToolbar;\r\n    /*  (RI_PENT_1)\r\n        O botão Aderir, na toolbar, deverá ser exibido sempre, mas para ficar habilitado:\r\n        1. o usuário logado precisa ser gestor da unidade selecionada ou da sua unidade-pai, ou uma destas ser sua unidade de lotação principal e ele \r\n        possuir a capacidade \"MOD_PENT_ADERIR\" (RN_PENT_2_4); e\r\n        2. a unidade-pai da unidade selecionada precisa possuir plano de entrega com o status ATIVO, que já não tenha sido vinculado pela unidade selecionada;\r\n    */\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadePai(): PlanoEntrega[] {\r\n    return this.auth.unidade?.unidade?.planos_entregas?.filter(x => this.planoEntregaDao.isAtivo(x)) || [];\r\n  }\r\n\r\n  public planosEntregasAtivosUnidadeSelecionada(): PlanoEntrega[] {\r\n    return this.auth?.unidade?.planos_entregas?.filter(x => this.planoEntregaDao.isAtivo(x)) || [];\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    filter.controls.status.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    /*\r\n        (RI_PENT_4) A consulta do grid retornará inicialmente os principais Planos de Entrega do usuário logado (a opção \"principais\" já vem marcada), que são:\r\n        - os válidos das unidades onde ele possui lotação, e\r\n        - se ele for gestor, os ativos das unidades-pai de onde ele é gestor;\r\n    */\r\n    if (this.filter?.controls.principais.value) {\r\n      let w1 = [\"unidade_id\", \"in\", this.auth.unidades?.map(u => u.id)];\r\n      let w2 = [\"unidade_id\", \"in\", this.auth.unidades?.map(u => u.unidade?.id)];\r\n      if (this.auth.isGestorAlgumaLotacao()) result.push([\"or\", w1, w2]); else result.push(w1);\r\n    } else {\r\n      if (form.nome?.length) {\r\n        result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n      }\r\n      if (form.inicio) {\r\n        result.push([\"inicio\", \">=\", form.inicio]);\r\n      }\r\n      if (form.fim) {\r\n        result.push([\"fim\", \"<=\", form.fim]);\r\n      }\r\n      if (form.unidade_id) {\r\n        result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n      }\r\n      if (form.planejamento_id) {\r\n        result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n      }\r\n      if (form.cadeia_valor_id) {\r\n        result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n      }\r\n      if (form.status) {\r\n        result.push([\"status\", \"==\", form.status]);\r\n      }\r\n    }\r\n    //  (RI_PENT_5) Por padrão, os planos de entregas retornados na listagem do grid são os que possuem data_arquivamento e data_cancelamento nulas.\r\n    result.push([\"data_cancelamento\", \"==\", null]);\r\n    result.push([\"data_arquivamento\", \"==\", null]);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicButtons(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    switch (this.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUINDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_LIBERAR_HOMOLOGACAO, row)) result.push(this.BOTAO_LIBERAR_HOMOLOGACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_HOMOLOGAR, row)) result.push(this.BOTAO_HOMOLOGAR); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'ATIVO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_CONCLUIR, row)) result.push(this.BOTAO_CONCLUIR); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'CONCLUIDO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_AVALIAR, row)) result.push(this.BOTAO_AVALIAR); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'SUSPENSO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_REATIVAR, row)) result.push(this.BOTAO_REATIVAR); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n      case 'AVALIADO':\r\n        if(this.botaoAtendeCondicoes(this.BOTAO_CANCELAR_AVALIACAO, row)) result.push(this.BOTAO_CANCELAR_AVALIACAO); else result.push(this.BOTAO_CONSULTAR);\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: PlanoEntrega): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    this.linha = row;\r\n    this.botoes.forEach(botao => {\r\n      if(this.botaoAtendeCondicoes(botao, row)) result.push(botao);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public botaoAtendeCondicoes(botao: ToolbarButton, planoEntrega: PlanoEntrega): boolean {\r\n    switch(botao){\r\n      case this.BOTAO_ADERIR_OPTION:\r\n        /*         \r\n          (RI_PENT_2) O botão Aderir, nas linhas do grid, deverá aparecer num plano somente se:\r\n          - o plano estiver com o status Ativo; e\r\n          - a unidade do plano for a unidade-pai da unidade selecionada pelo usuário; e\r\n          - se o usuário for Gestor da unidade selecionada, ou ela for sua lotação principal e ele possuir a capacidade \"MOD_PENT_ADERIR\" ; e\r\n          - se a unidade selecionada não possuir plano de entrega Ativo no mesmo período do plano em questão;\r\n        */\r\n        return (this.situacaoPlano(planoEntrega) == 'ATIVO' && (planoEntrega.unidade_id == this.auth.unidade?.unidade_id) && (this.auth.isGestorUnidade() || (this.auth.isLotacaoPrincipal(this.auth.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ADERIR\"))) &&\r\n          (this.planosEntregasAtivosUnidadeSelecionada().filter(x => this.util.intersection([{ start: x.inicio, end: x.fim! }, { start: planoEntrega.inicio, end: planoEntrega.fim! }])).length == 0));\r\n      case this.BOTAO_ALTERAR:\r\n        /*\r\n          (RN_PENT_4_2) Para ALTERAR um plano de entregas:\r\n          - o plano precisa estar com o status INCLUINDO ou HOMOLOGANDO, e o usuário logado precisa ser gestor da unidade do plano, ou esta ser sua unidade de lotação principal e ele possuir a capacidade \"MOD_PENT_EDT\"; ou\r\n          - o plano precisa ser válido, o usuário logado precisa possuir a capacidade \"MOD_PENT_EDT_FLH\", e ser gestor da unidade-pai da unidade do plano ou possuir a atribuição de HOMOLOGADOR DE PLANO DE ENTREGA para a unidade-pai da unidade do plano; (RN_PENT_1_3) ou\r\n          - o plano precisa estar com o status ATIVO, a unidade do plano precisa ser a unidade de lotação principal do usuário logado, e ele possuir a capacidade \"MOD_PENT_EDT_ATV_HOMOL\" ou \"MOD_PENT_EDT_ATV_ATV\"; \r\n         */\r\n        let b_alt1 = ['INCLUINDO', 'HOMOLOGANDO'].includes(this.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoPrincipal(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_EDT\")));\r\n        let b_alt2 = this.planoEntregaDao.isValido(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_EDT_FLH\") && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_id) || this.auth.isIntegrante('HOMOLOGADOR_PLANO_ENTREGA', planoEntrega.unidade!.unidade_id!));\r\n        let b_alt3 = this.situacaoPlano(planoEntrega) == 'ATIVO' && this.auth.isLotacaoPrincipal(planoEntrega.unidade) && this.auth.hasPermissionTo([\"MOD_PENT_EDT_ATV_HOMOL\",\"MOD_PENT_EDT_ATV_ATV\"]);\r\n        return b_alt1 || b_alt2 || b_alt3;\r\n      case this.BOTAO_ARQUIVAR:\r\n        /*\r\n          (RN_PENT_4_3) Para ARQUIVAR um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO e o usuário logado precisa ser gestor da unidade do plano, ou esta ser sua unidade de lotação principal e ele possuir a capacidade \"MOD_PENT_ARQ\";\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoPrincipal(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\")));\r\n      case this.BOTAO_AVALIAR:\r\n        /*\r\n          (RN_PENT_4_4) Para AVALIAR um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da unidade-pai da unidade do plano, ou possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para esta unidade; ou\r\n          - o plano precisa estar com o status CONCLUIDO, o usuário logado precisa ser gestor de alguma unidade da linha hierárquica ascendente da unidade do plano, e possuir a capacidade \"MOD_PENT_AVAL_SUBORD\";\r\n        */\r\n       let b_av1 = this.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_id) || this.auth.isIntegrante('AVALIADOR_PLANOS_ENTREGAS', planoEntrega.unidade!.unidade_id!));\r\n       let b_av2 = this.situacaoPlano(planoEntrega) == 'CONCLUIDO' && this.auth.isGestorLinhaAscendente(planoEntrega.unidade!) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\");\r\n       return b_av1 || b_av2;\r\n      case this.BOTAO_CANCELAR_AVALIACAO:\r\n        /*\r\n          (RN_PENT_4_5) Para CANCELAR a AVALIAÇÃO de um plano de entregas:\r\n          - o plano precisa estar com o status AVALIADO e o usuário logado precisa ser gestor da unidade-pai da unidade do plano, ou possuir a atribuição de AVALIADOR DE PLANOS DE ENTREGAS para esta unidade;\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'AVALIADO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_id) || this.auth.isIntegrante('AVALIADOR_PLANOS_ENTREGAS', planoEntrega.unidade!.unidade_id!));\r\n      case this.BOTAO_CANCELAR_CONCLUSAO:\r\n        /*\r\n          (RN_PENT_4_6) Para CANCELAR a CONCLUSÃO de um plano de entregas:\r\n          - o plano precisa estar com o status CONCLUIDO e o usuário logado precisa ser gestor da unidade do plano, ou esta ser sua unidade de lotação principal e ele possuir a capacidade \"MOD_PENT_CANC_CONCL\";\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'CONCLUIDO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoPrincipal(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_CONCL\")));\r\n      case this.BOTAO_CANCELAR_HOMOLOGACAO:\r\n          /*\r\n            (RN_PENT_4_7) Para CANCELAR a HOMOLOGAÇÃO de um plano de entregas:\r\n            - o plano precisa estar com o status ATIVO e o usuário logado precisa ser gestor da unidade-pai da unidade do plano, ou possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a unidade-pai da unidade do plano;\r\n          */\r\n          return this.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_id) || this.auth.isIntegrante('HOMOLOGADOR_PLANOS_ENTREGAS', planoEntrega.unidade!.unidade_id!));\r\n      case this.BOTAO_CONCLUIR:\r\n        /*\r\n          (RN_PENT_4_8) Para CONCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO e o usuário logado precisa ser gestor da unidade do plano, ou esta ser sua unidade de lotação principal e ele possuir a capacidade \"MOD_PENT_CONCLUIR\";\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoPrincipal(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_CONCLUIR\")));        \r\n      case this.BOTAO_CONSULTAR:\r\n        /*\r\n          (RN_PENT_4_9) CONSULTAR\r\n          - todos os participantes podem visualizar todos os planos de entrega;\r\n        */\r\n        return true;          \r\n      case this.BOTAO_DESARQUIVAR:\r\n        /*\r\n\r\n        */\r\n        break;          \r\n      case this.BOTAO_EXCLUIR:\r\n        /*\r\n          (RN_PENT_4_10) Para EXCLUIR um plano de entregas:\r\n          - o plano precisa estar com o status INCLUINDO ou HOMOLOGANDO; e\r\n          - o usuário logado precisa ser gestor da unidade do plano, ou esta ser sua unidade de lotação principal e ele possuir a capacidade \"MOD_PENT_EXCL\";\r\n          - se o plano não atender às condições acima, o usuário deve ser informado das razões pelas quais o plano não foi excluído;\r\n        */\r\n        return ['INCLUINDO', 'HOMOLOGANDO'].includes(this.situacaoPlano(planoEntrega)) && (this.auth.isGestorUnidade(planoEntrega.unidade) || (this.auth.isLotacaoPrincipal(planoEntrega.unidade) && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")));  ;  \r\n      case this.BOTAO_HOMOLOGAR:\r\n        /*\r\n          (RN_PENT_4_11) Para HOMOLOGAR um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO e o usuário logado ser gestor da unidade-pai da unidade do plano, ou possuir a atribuição de HOMOLOGADOR DE PLANOS DE ENTREGAS para a unidade-pai; (RN_PENT_1_3)(RN_PENT_3_2)\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && (this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_id) || this.auth.isIntegrante('HOMOLOGADOR_PLANOS_ENTREGAS', planoEntrega.unidade!.unidade_id!));  \r\n      case this.BOTAO_LIBERAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_4_13) Para LIBERAR PARA HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status INCLUINDO e o usuário logado precisa ser gestor da unidade do plano;\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'INCLUINDO' && this.auth.isGestorUnidade(planoEntrega.unidade);  \r\n      case this.BOTAO_REATIVAR:\r\n        /*\r\n          (RN_PENT_4_15) Para REATIVAR um plano de entregas:\r\n          - o plano precisa estar com o status SUSPENSO e o usuário logado precisa ser gestor da unidade do plano, ou ser gestor de alguma unidade da linha hierarquica ascendente da unidade do plano;\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'SUSPENSO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));  \r\n      case this.BOTAO_RETIRAR_HOMOLOGACAO:\r\n        /*\r\n          (RN_PENT_4_14) Para RETIRAR DE HOMOLOGAÇÃO um plano de entregas:\r\n          - o plano precisa estar com o status HOMOLOGANDO, e o usuário logado precisa ser gestor da unidade do plano;\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'HOMOLOGANDO' && this.auth.isGestorUnidade(planoEntrega.unidade); \r\n      case this.BOTAO_SUSPENDER:\r\n        /*\r\n          (RN_PENT_4_16) Para SUSPENDER um plano de entregas:\r\n          - o plano precisa estar com o status ATIVO e o usuário logado precisa ser gestor da unidade do plano, ou ser gestor de alguma unidade da linha hierarquica ascendente da unidade do plano;\r\n        */\r\n        return this.situacaoPlano(planoEntrega) == 'ATIVO' && (this.auth.isGestorUnidade(planoEntrega.unidade) || this.auth.isGestorLinhaAscendente(planoEntrega.unidade!));  \r\n    }\r\n    return false;\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.dialog.confirm(\"Arquivar?\", \"Deseja realmente arquivar o Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.arquivar(planoEntrega.id, true).then(() => {\r\n          if (this.filter?.controls.arquivadas?.value) {\r\n            this.grid!.query!.refreshId(planoEntrega.id);\r\n          } else {\r\n            (this.grid?.query || this.query!).removeId(planoEntrega.id);\r\n          }\r\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao arquivar o Plano de Entregas: \" + error?.message ? error?.message : error));\r\n      }\r\n    });\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dao!.avaliar(planoEntrega.id).then(function () {\r\n      (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n      self.dialog.alert(\"Sucesso\", \"Avaliado com sucesso!\");\r\n    }).catch(function (error) {\r\n      self.dialog.alert(\"Erro\", \"Erro ao avaliar: \" + error?.message ? error?.message : error);\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar avaliacao ?\", \"Deseja realmente cancelar a avaliação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarAvaliacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar avaliacao: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar conclusão ?\", \"Deseja realmente cancelar a conclusão?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarConclusao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar conclusão: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar homologacao ?\", \"Deseja realmente cancelar a homologacao?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar a homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Concluir ?\", \"Deseja realmente concluir este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.concluir(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Concluído com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao concluir: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.dialog.confirm(\"Desarquivar ?\", \"Deseja realmente desarquivar o Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.arquivar(planoEntrega.id, false).then(() => {\r\n          this.grid!.query!.refreshId(planoEntrega.id);\r\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao desarquivar o Plano de Entregas: \" + error?.message ? error?.message : error));\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Homologar ?\", \"Deseja realmente homologar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.homologar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Homologado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao homologar: \" + error?.message ? error?.message : error);\r\n        });\r\n        this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n        this.checaBotaoAderirToolbar();\r\n      }\r\n    });\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Liberar para homologação ?\", \"Deseja realmente liberar para a homologação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.liberarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Liberado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao liberar para homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Reativar ?\", \"Deseja realmente reativar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.reativar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Reativado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao reativar: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Retirar da homologação ?\", \"Deseja realmente retirar da homologação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.retirarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Retirado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao retirar da homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Suspender ?\", \"Deseja realmente suspender este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.suspender(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Suspenso com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao suspender: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n    this.auth.selecionaUnidade(this.auth!.unidade!.id);\r\n    this.checaBotaoAderirToolbar();\r\n  }\r\n\r\n  public situacaoPlano(planoEntrega: PlanoEntrega): string {\r\n    if (planoEntrega.data_fim) return \"EXCLUIDO\";\r\n    else if (planoEntrega.data_cancelamento) return \"CANCELADO\";\r\n    else if (planoEntrega.data_arquivamento) return \"ARQUIVADO\";\r\n    else return planoEntrega.status;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_INCL')\"\r\n    [hasEdit]=\"false\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"3\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\"\r\n            [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n        <input-switch [size]=\"2\" labelPosition=\"left\" label=\"Principais\" controlName=\"principais\"\r\n        [control]=\"filter!.controls.principais\" (change)=\"grid!.reloadFilter()\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\" [visible]=\"showFilter\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"5\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" [placeholder]=\"'Nome do '+lex.noun('plano de entrega')\"></input-text>\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-select [size]=\"3\" label=\"Status\" controlName=\"status\" [items]=\"lookup.PLANO_ENTREGA_STATUS\" itemTodos=\"- Todos -\" [valueTodos]=\"null\"></input-select>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" [labelInfo]=\"'Data de início do '+ lex.noun('plano de entrega')\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" [labelInfo]=\"'Data do fim do '+ lex.noun('plano de entrega')\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column *ngIf=\"!selectable\" type=\"expand\" icon=\"bi bi-boxes\" [align]=\"'center'\" [hint]=\"lex.noun('Entregas', true)\" [template]=\"columnEntregas\" [expandTemplate]=\"columnExpandedEntregas\">\r\n            <ng-template let-row=\"row\" #columnEntregas>\r\n                <span *ngIf=\"row?.length\" class=\"badge rounded-pill bg-light text-dark\"><i class=\"bi bi-boxes\"></i> {{row?.length}}</span>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnExpandedEntregas>\r\n                <plano-entrega-list-entrega [entity]=\"row\" [cdRef]=\"cdRef\"></plano-entrega-list-entrega>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Nome\" orderBy=\"nome\" [template]=\"columnNome\">\r\n            <ng-template let-row=\"row\" #columnNome>\r\n                <span class=\"text-break text-wrap\" [style.max-width.px]=\"400\">{{row.nome}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeiaValor\" [maxWidth]=\"300\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeiaValor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge>\r\n                <badge *ngIf=\"row.data_cancelamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Cancelado\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Injectable } from '@angular/core';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { LookupService } from 'src/app/services/lookup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaService {\r\n  \r\n  constructor(public lookup: LookupService) { }\r\n\r\n  public getValorMeta(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch(entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": entrega.meta.porcentagem + \" %\"; break;\r\n      case \"QUANTIDADE\": entrega.meta.quantitativo; break;\r\n      case \"VALOR\": entrega.meta.valor; break;\r\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.meta.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getValorRealizado(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch(entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": entrega.realizado.porcentagem + \" %\"; break;\r\n      case \"QUANTIDADE\": entrega.realizado.quantitativo; break;\r\n      case \"VALOR\": entrega.realizado.valor; break;\r\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.realizado.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public isPorcentagem(entrega: PlanoEntregaEntrega): boolean {\r\n    return entrega.entrega?.tipo_indicador == \"PORCENTAGEM\";\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}