{"version":3,"sources":["./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-form/plano-entrega-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-form/plano-entrega-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-adesao/plano-entrega-adesao.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/models/plano-entrega-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-list/plano-entrega-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-list/plano-entrega-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.service.ts"],"names":[],"mappings":"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","file":"modules-gestao-plano-entrega-plano-entrega-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-entrega-form',\r\n  templateUrl: './plano-entrega-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-entrega-form.component.scss']\r\n})\r\nexport class PlanoEntregaEntregaFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>plano-entrega-entrega-form works!</p>\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'plano-entrega-adesao',\r\n  templateUrl: './plano-entrega-adesao.component.html',\r\n  styleUrls: ['./plano-entrega-adesao.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaAdesaoComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregasEntregasDao: PlanoEntregaEntregaDaoService;\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregasEntregasDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      inicio: { default: new Date() },\r\n      fim: { default: new Date() },\r\n      status: { default: 'INCLUINDO' },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n\r\n\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if(controlName == 'fim' && control.value && !this.dao?.validDateTime(control.value)){\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.form!.controls.fim.value && this.form!.controls.inicio.value > this.form!.controls.fim.value) return \"A data do início não pode ser maior que a data do fim!\";\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      this.grid!.confirm();\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = this.grid!.items;\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \";\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaAdesaoComponent } from './plano-entrega-adesao/plano-entrega-adesao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entrega\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entrega\" } },\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\r\n  { path: 'adesao', component: PlanoEntregaAdesaoComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Adesão\", modal: true } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Base } from './base.model';\r\nimport { CadeiaValor } from './cadeia-valor.model';\r\nimport { Planejamento } from './planejamento.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\nimport { Unidade } from './unidade.model';\r\n\r\nexport type PlanoEntregaMetadados = {\r\n  incluindo: boolean,\r\n  homologando: boolean,\r\n  ativo: boolean,\r\n  suspenso: boolean,\r\n  concluido: boolean,\r\n  avaliado: boolean,\r\n  arquivado: boolean\r\n}\r\nexport class PlanoEntrega extends Base {\r\n  public entregas?: PlanoEntregaEntrega[];\r\n  public unidade?: Unidade;\r\n  public planejamento?: Planejamento;\r\n  public cadeia_valor?: CadeiaValor;\r\n  public plano_entrega_superior?: PlanoEntrega;\r\n\r\n  public data_fim: Date | null = null;                              // Data em que o registro foi deletado (soft-delete)\r\n  public inicio: Date = new Date();                                 // Data inicio do plano de entrega\r\n  public fim: Date | null = null;                                   // Data fim do plano de entrega\r\n  public nome: string = \"\";                                         // Nome do plano de entrega\r\n  public numero?: number;                                           // Número do plano de entrega (Gerado pelo sistema)\r\n  public status: string = 'INCLUINDO';                              // Status do plano de entrega\r\n  public metadados: PlanoEntregaMetadados | undefined = undefined;  // Campo virtual contendo informações calculadas pelo servidor\r\n  public data_cancelamento?: Date | null;\r\n  public data_arquivamento?: Date | null;\r\n  public unidade_id: string = '';\r\n  public plano_entrega_id: string | null = null;\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaEntregaFormComponent } from './plano-entrega-entrega-form/plano-entrega-entrega-form.component';\r\nimport { PlanoEntregaEntregaListComponent } from './plano-entrega-entrega-list/plano-entrega-entrega-list.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\nimport { PlanoEntregaAdesaoComponent } from './plano-entrega-adesao/plano-entrega-adesao.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaEntregaFormComponent,\r\n    PlanoEntregaEntregaListComponent,\r\n    PlanoEntregaAdesaoComponent,\r\n    PlanoEntregaMapaEntregasComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent } from 'src/app/components/input/input-search/input-search.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregasEntregasDao: PlanoEntregaEntregaDaoService;\r\n  public form: FormGroup;\r\n  public formEntregas: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregasEntregasDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({\r\n      nome: { default: \"\" },\r\n      inicio: { default: new Date() },\r\n      fim: { default: new Date() },\r\n      status: { default: 'INCLUINDO' },\r\n      unidade_id: { default: \"\" },\r\n      plano_entrega_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n      entregas: { default: [] },\r\n    }, this.cdRef, this.validate);\r\n\r\n    this.formEntregas = this.fh.FormBuilder({\r\n      descricao: { default: \"\" },\r\n      cliente: { default: \"\" },\r\n      dt_inicio: { default: new Date() },\r\n      dt_fim: { default: new Date() },\r\n      tipo_indicador: { default: \"\" },\r\n      meta: { default: \"\" },\r\n      vl_realizado: { default: \"\" },\r\n      objetivos: { default: \"\" },\r\n      homologado: { default: \"\" },\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n    if (['nome', 'unidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }\r\n    if(['inicio'].indexOf(controlName) >= 0 && !this.dao?.validDateTime(control.value)) {\r\n      result = \"Inválido\";\r\n    }\r\n    if(controlName == 'fim' && control.value && !this.dao?.validDateTime(control.value)){\r\n      result = \"Inválido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    if(this.form!.controls.fim.value && this.form!.controls.inicio.value > this.form!.controls.fim.value) return \"A data do início não pode ser maior que a data do fim!\";\r\n    return undefined;\r\n  }\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega> {\r\n    return new Promise<PlanoEntrega>((resolve, reject) => {\r\n      this.grid!.confirm();\r\n      let planoEntrega = this.util.fill(new PlanoEntrega(), this.entity!);\r\n      planoEntrega = this.util.fillForm(planoEntrega, this.form!.value);\r\n      planoEntrega.entregas = this.grid!.items;\r\n      resolve(planoEntrega);\r\n    });\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \";\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public async addEntrega() {\r\n    return new PlanoEntregaEntrega({\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  public async removeEntrega(row: any) {\r\n    return true;\r\n  }\r\n\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    this.formEntregas.controls.descricao.setValue(row.descricao);\r\n    this.formEntregas.controls.cliente.setValue(row.cliente);\r\n    this.formEntregas.controls.dt_inicio.setValue(row.dt_inicio);\r\n    this.formEntregas.controls.dt_fim.setValue(row.dt_fim);\r\n    this.formEntregas.controls.tipo_indicador.setValue(row.tipo_indicador);\r\n    this.formEntregas.controls.meta.setValue(row.meta);\r\n    this.formEntregas.controls.vl_realizado.setValue(row.vl_realizado);\r\n    this.formEntregas.controls.objetivos.setValue(row.objetivos);\r\n    this.formEntregas.controls.homologado.setValue(row.homologado);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.descricao = this.formEntregas.controls.descricao.value;\r\n      row.dt_inicio = this.formEntregas.controls.dt_inicio.value;\r\n      row.dt_fim = this.formEntregas.controls.dt_fim.value;\r\n      row.tipo_indicador = this.formEntregas.controls.tipo_indicador.value;\r\n      row.meta = this.formEntregas.controls.meta.value;\r\n      row.vl_realizado = this.formEntregas.controls.vl_realizado.value;\r\n      row.objetivos = this.formEntregas.controls.objetivos.value;\r\n      row.homologado = this.formEntregas.controls.homologado.value;\r\n      result = row;\r\n      this.cdRef.detectChanges();\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\"\r\n    (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"8\" label=\"Nome\" controlName=\"nome\"></input-text>\r\n            <input-datetime date [size]=\"2\" label=\"Início\" controlName=\"inicio\"\r\n                [labelInfo]=\"'Início ' + lex.noun('Planejamento Institucional',false,true)\"></input-datetime>\r\n            <input-datetime date [size]=\"2\" label=\"Fim\" controlName=\"fim\"\r\n                [labelInfo]=\"'Fim ' + lex.noun('Planejamento Institucional',false,true)\"></input-datetime>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search [size]=\"4\" [label]=\"lex.noun('Unidade')\" controlName=\"unidade_id\"\r\n                [dao]=\"unidadeDao\"></input-search>\r\n            <input-search [size]=\"4\" controlName=\"planejamento_id\" label=\"Planejamento Institucional\"\r\n                [dao]=\"planejamentoInstitucionalDao\"></input-search>\r\n            <input-search [size]=\"4\" controlName=\"cadeia_valor_id\" label=\"Cadeia de Valor\"\r\n                [dao]=\"cadeiaValorDao\"></input-search>\r\n        </div>\r\n        <separator></separator>\r\n        <div class=\"row\">\r\n            <grid [control]=\"form!.controls.entregas\" [form]=\"formEntregas\" [hasEdit]=\"true\" [hasDelete]=\"true\"\r\n                [add]=\"addEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\"\r\n                [save]=\"saveEntrega.bind(this)\" editable [groupTemplate]=\"groupEntregas\">\r\n                <ng-template let-separator=\"separator\" #groupEntregas>\r\n                    <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\">\r\n                        <badge color=\"primary\" [label]=\"separator?.text\"></badge>\r\n                    </span>\r\n                </ng-template>\r\n                <columns>\r\n                    <column [title]=\"'Entrega/\\nCliente'\" [template]=\"columnEntregaCliente\"\r\n                        [editTemplate]=\"editEntregaCliente\">\r\n                        <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                            <span>{{row.descricao+\" / \"+row.cliente}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editEntregaCliente>\r\n                            <input-text [size]=\"6\" controlName=\"descricao\"></input-text>\r\n                            <input-text [size]=\"6\" controlName=\"cliente\"></input-text>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column [title]=\"'Data Início/\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"editDatas\">\r\n                        <ng-template let-row=\"row\" #columnDatas>\r\n                            <span> {{dao!.getDateFormatted(row.dt_inicio)+\" até\r\n                                \"+dao!.getDateFormatted(row.dt_fim)}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editDatas>\r\n                            <input-datetime noIcon date [size]=\"6\" controlName=\"dt_inicio\"></input-datetime>\r\n                            <input-datetime noIcon date [size]=\"6\" controlName=\"dt_fim\"></input-datetime>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Indicador\" [template]=\"columnIndicador\" [editTemplate]=\"editIndicador\">\r\n                        <ng-template let-row=\"row\" #columnIndicador>\r\n                            <span>{{row.tipo_indicador}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editIndicador>\r\n                            <input-select [items]=\"lookup.TIPO_INDICADOR\" [size]=\"6\"\r\n                                controlName=\"tipo_indicador\"></input-select>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Meta Geral\" [template]=\"columnMetaGeral\" [editTemplate]=\"editMetaGeral\">\r\n                        <ng-template let-row=\"row\" #columnMetaGeral>\r\n                            <span>{{row.meta}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editMetaGeral>\r\n                            <input-text [size]=\"12\" controlName=\"meta\"></input-text>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Realizado\" [template]=\"columnRealizado\" [editTemplate]=\"editRealizado\">\r\n                        <ng-template let-row=\"row\" #columnRealizado>\r\n                            <span>{{row.vl_realizado}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editRealizado>\r\n                            <input-text [size]=\"6\" controlName=\"vl_realizado\"></input-text>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Objetivos/Processos/Atividades\" [template]=\"columnObjetivod\"\r\n                        [editTemplate]=\"editObjetivos\">\r\n                        <ng-template let-row=\"row\" #columnObjetivod>\r\n                            <span>{{row.objetivos}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivos>\r\n                            <input-search [size]=\"6\" controlName=\"objetivos\"></input-search>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column icon=\"bi bi-check-lg\" titleHint=\"Se a entrega foi homologada\" [template]=\"columnHomologado\"\r\n                        [editTemplate]=\"editHomologado\">\r\n                        <ng-template let-row=\"row\" #columnHomologado>\r\n                            <div class=\"text-center\"><i *ngIf=\"row.concluido\" class=\"bi bi-check-circle\"></i></div>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editHomologado>\r\n                            <input-switch [size]=\"12\" controlName=\"homologado\"></input-switch>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n        </div>\r\n    </div>\r\n</editable-form>","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun(\"Entrega\", true);\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      inicio: {default: null},\r\n      fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.inicio) result.push([\"data_inicio\", \">=\", form.inicio]);\r\n    if(form.fim) result.push([\"data_fim\", \"<=\", form.fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.inicio)}} - {{util.getDateFormatted(row.fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" [hint]=\"lex.noun('plano de entrega')\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { LookupItem } from '../services/lookup.service';\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base {\r\n  public entrega?: Entrega;\r\n\r\n  public inicio: Date = new Date();               \r\n  public fim: Date | null = null;                 \r\n  public descricao: string = \"\";                  \r\n  public cliente: string = \"\";                    \r\n  public homologado: boolean = false;                 \r\n  public meta: EntregaValor = {}; \r\n  public realizado: EntregaValor = {};\r\n  public plano_entrega_id: string | null = null;\r\n  public entrega_id: string = '';\r\n  public entrega_pai_id: string = '';                        \r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaId: string = \"\";\r\n\r\n  constructor(public injector: Injector) { \r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.title = this.lex.noun(\"Entrega\");\r\n    this.code = \"MOD_PENT_CONS\";\r\n    this.filter = this.fh.FormBuilder({\r\n      plano_entrega_id: {default: null},\r\n    });\r\n    // Testa se o usuário possui permissão para exibir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    } \r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [selectable]=\"selectable\" (select)=\"onSelect($event)\">\r\n    <columns>\r\n        <column title=\"Início\" [template]=\"columnInicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Descrição\" [template]=\"columnDescricao\">\r\n            <ng-template let-row=\"row\" #columnDescricao>\r\n                <span> {{ row.descricao || ''}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Cliente\" [template]=\"columnCliente\">\r\n            <ng-template let-row=\"row\" #columnCliente>\r\n                <span> {{ row.cliente || '' }}</span>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-entrega-list',\r\n  templateUrl: './plano-entrega-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaEntregaListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>plano-entrega-entrega-list works!</p>\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { Unidade } from 'src/app/models/unidade.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planoEntregaDao: PlanoEntregaDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public habilitarAdesaoToolbar: boolean = false;\r\n  public toolbarButtons: ToolbarButton[] = [];\r\n  public BOTAO_ADERIR: ToolbarButton;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planoEntregaDao = injector.get<PlanoEntregaDaoService>(PlanoEntregaDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun('Plano de Entrega', true);\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      nome: { default: '' },\r\n      inicio: { default: '' },\r\n      fim: { default: '' },\r\n      //status: {default: ''},\r\n      unidade_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n    });\r\n    this.join = ['planejamento:id,nome', 'cadeiaValor:id,nome', 'unidade:id,sigla'];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    this.BOTAO_ADERIR = {\r\n      label: \"Aderir\",\r\n      disabled: !this.habilitarAdesaoToolbar,\r\n      icon: this.entityService.getIcon(\"Adesao\"),\r\n      onClick: () => {\r\n        this.loading = true;\r\n        this.go.navigate({ route: ['gestao', 'plano-entrega', 'adesao'] });\r\n      }\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    //-->(RN_PENT_5)\r\n    let condition1 = this.isGestorUnidadeSelecionada() || (this.unidadeSelecionadaLotacaoPrincipal() && this.auth.hasPermissionTo(\"MOD_PENT_ADERIR\"));\r\n    let planos_ativos_unidade_pai_ids = this.unidadeDao.planosEntregasAtivos(this.auth.unidade!.unidade_id).map(x => x.id);\r\n    let planos_superiores_vinculados_unidade_selecionada_ids = this.unidadeDao.planosEntregasAtivos(this.auth.unidade!).map(x => x.plano_entrega_id).filter(x => x != null);\r\n    let condition2 = !!planos_ativos_unidade_pai_ids.filter(x => { !planos_superiores_vinculados_unidade_selecionada_ids.includes(x); }).length;\r\n    this.habilitarAdesaoToolbar = condition1 && condition2;\r\n    this.BOTAO_ADERIR.disabled = !this.habilitarAdesaoToolbar;\r\n    this.toolbarButtons.push(this.BOTAO_ADERIR);\r\n    //<--\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    //filter.controls.status.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if (form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n    if (form.inicio) {\r\n      result.push([\"inicio\", \">=\", form.inicio]);\r\n    }\r\n    if (form.fim) {\r\n      result.push([\"fim\", \"<=\", form.fim]);\r\n    }\r\n    if (form.unidade_id) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.planejamento_id) {\r\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    }\r\n    if (form.cadeia_valor_id) {\r\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    const BOTAO_LIBERAR_HOMOLOGACAO = { label: \"Liberar para homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.liberarHomologacao.bind(this) };\r\n    const BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.homologar.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    const BOTAO_CONCLUIR = { label: \"Concluir\", id: \"CONCLUIDO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.concluir.bind(this) };\r\n    const BOTAO_CANCELAR_CONCLUSAO = { label: \"Cancelar conclusão\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.cancelarConclusao.bind(this) };\r\n    const BOTAO_AVALIAR = { label: \"Avaliar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"AVALIADO\"), onClick: this.avaliar.bind(this) };\r\n    const BOTAO_REATIVAR = { label: \"Reativar\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"ATIVO\"), onClick: this.reativar.bind(this) };\r\n    const BOTAO_CANCELAR_AVALIACAO = { label: \"Cancelar avaliação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"CONCLUIDO\"), onClick: this.cancelarAvaliacao.bind(this) };\r\n    const BOTAO_CONSULTAR = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    \r\n    switch (this.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUINDO':\r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_LIB_HOMOL\"))) {\r\n          result.push(BOTAO_LIBERAR_HOMOLOGACAO); \r\n        };\r\n/*          else if(await this.isGestorLinhaAscendente(planoEntrega) || this.isLotadoUnidadePlano(planoEntrega)) {\r\n          result.push(BOTAO_CONSULTAR);\r\n        }; */\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if (this.isGestorUnidadePaiPlano(planoEntrega) || (this.isLotadoUnidadePai(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_HOMOL_SUBORD\"))) {\r\n          result.push(BOTAO_HOMOLOGAR); \r\n        } else if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_EDT\"))){ \r\n          result.push(BOTAO_ALTERAR); \r\n        };\r\n/*          else if(await this.isGestorLinhaAscendente(planoEntrega) || this.isLotadoUnidadePlano(planoEntrega)) {\r\n          result.push(BOTAO_CONSULTAR);\r\n        }; */\r\n        break;\r\n      case 'ATIVO':\r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_CONCLUIR\"))) {\r\n          result.push(BOTAO_CONCLUIR); \r\n        };\r\n/*          else if(await this.isGestorLinhaAscendente(planoEntrega) || this.isLotadoUnidadePlano(planoEntrega)) {\r\n          result.push(BOTAO_CONSULTAR);\r\n        } */\r\n        break;\r\n      case 'CONCLUIDO':\r\n/*         if (this.isGestorUnidadePaiPlano(planoEntrega) || (await this.isLotadoLinhaAscendente(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_AVAL_SUBORD\"))) {\r\n          result.push(BOTAO_AVALIAR); \r\n        } else */ \r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_CANC_CONCL\"))){ \r\n          result.push(BOTAO_CANCELAR_CONCLUSAO); \r\n        };\r\n        break;\r\n      case 'SUSPENSO':\r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_REATIVAR\"))) {\r\n          result.push(BOTAO_REATIVAR); \r\n        };\r\n        break;\r\n      case 'AVALIADO':\r\n/*         if(this.isGestorUnidadePaiPlano(planoEntrega) || (await this.isLotadoLinhaAscendente(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_AVAL_SUBORD\"))) {\r\n          result.push(BOTAO_CANCELAR_AVALIACAO); \r\n        }; */\r\n/*          else if(await this.isGestorLinhaAscendente(planoEntrega) || this.isLotadoUnidadePlano(planoEntrega)) {\r\n          result.push(BOTAO_CONSULTAR);\r\n        } */\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    const BOTAO_ALTERAR = { label: \"Alterar\", icon: \"bi bi-pencil-square\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'edit'] }, this.modalRefreshId(planoEntrega)) };\r\n    const BOTAO_EXCLUIR: ToolbarButton = { label: \"Excluir\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    const BOTAO_SUSPENDER = { label: \"Suspender\", id: \"PAUSADO\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"SUSPENSO\"), onClick: this.suspender.bind(this) };\r\n    const BOTAO_RETIRAR_HOMOLOGACAO = { label: \"Retirar de homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUINDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"INCLUINDO\"), onClick: this.retirarHomologacao.bind(this) };\r\n    const BOTAO_CANCELAR_HOMOLOGACAO = { label: \"Cancelar homologação\", icon: this.lookup.getIcon(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), color: this.lookup.getColor(this.lookup.PLANO_ENTREGA_STATUS, \"HOMOLOGANDO\"), onClick: this.cancelarHomologacao.bind(this) };\r\n    const BOTAO_CANCELAR = { label: \"Cancelar\", icon: \"bi bi-dash-circle\", onClick: this.cancelar.bind(this) };\r\n    const BOTAO_ARQUIVAR = { label: \"Arquivar\", icon: \"bi bi-inboxes\", onClick: this.arquivar.bind(this) };\r\n    const BOTAO_DESARQUIVAR = { label: \"Desarquivar\", icon: \"bi bi-reply\", onClick: this.desarquivar.bind(this) };\r\n    const BOTAO_CONSULTAR: ToolbarButton = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: (planoEntrega: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', planoEntrega.id, 'consult'] }, { modal: true }) };\r\n    switch (this.situacaoPlano(planoEntrega)) {\r\n      case 'INCLUINDO':\r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_EDT\"))) {\r\n          result.push(BOTAO_ALTERAR); \r\n        }; \r\n/*         else if(await this.isGestorLinhaAscendente(planoEntrega) || await this.isLotadoUnidadePlano(planoEntrega)) {\r\n          result.push(BOTAO_CONSULTAR);\r\n        }; */\r\n        break;\r\n      case 'HOMOLOGANDO':\r\n        if (this.isPlanoProprio(planoEntrega) && (this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_RET_HOMOL\")))) {\r\n          result.push(BOTAO_RETIRAR_HOMOLOGACAO); \r\n        } else if(this.isPlanoVinculado(planoEntrega) && (this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")))) { \r\n          result.push(BOTAO_EXCLUIR); \r\n        };\r\n        break;\r\n      case 'ATIVO':\r\n/*         if(this.isGestorUnidadePaiPlano(planoEntrega) || (await this.isLotadoLinhaAscendente(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_CANC_HOMOL_SUBORD\"))) {\r\n          result.push(BOTAO_CANCELAR_HOMOLOGACAO); \r\n        } else */\r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_SUSP\"))) {\r\n          result.push(BOTAO_SUSPENDER);\r\n        };\r\n        //-->(RN_PENT_6)\r\n        if((planoEntrega.unidade_id == this.auth.unidade!.unidade_id) && (this.isGestorUnidadeSelecionada() || (this.unidadeSelecionadaLotacaoPrincipal() && this.auth.hasPermissionTo(\"MOD_PENT_ADERIR\"))) && \r\n          (this.unidadeDao.planosEntregasAtivos(this.auth.unidade!).filter(x => this.util.intersection([{start: x.inicio, end: x.fim!},{start: planoEntrega.inicio, end: planoEntrega.fim!}])).length == 0)){\r\n            result.push(this.BOTAO_ADERIR);\r\n        };\r\n        //<--\r\n        break;\r\n      case 'CONCLUIDO':\r\n        break;\r\n      case 'SUSPENSO':\r\n        break;\r\n      case 'AVALIADO':\r\n        if(this.isGestorUnidadePlano(planoEntrega) || (this.unidadePlanoEhLotacaoPrincipal(planoEntrega) && this.auth.hasPermissionTo(\"MOD_PENT_ARQ\"))) {\r\n          result.push(BOTAO_ARQUIVAR); \r\n        };\r\n        break;\r\n      case 'ARQUIVADO':\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public homologar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Homologar ?\", \"Deseja realmente homologar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.homologar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Homologado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao homologar: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public concluir(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Concluir ?\", \"Deseja realmente concluir este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.concluir(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Concluído com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao concluir: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public avaliar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dao!.avaliar(planoEntrega.id).then(function () {\r\n      (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n      self.dialog.alert(\"Sucesso\", \"Avaliado com sucesso!\");\r\n    }).catch(function (error) {\r\n      self.dialog.alert(\"Erro\", \"Erro ao avaliar: \" + error?.message ? error?.message : error);\r\n    });\r\n  }\r\n\r\n  public reativar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Reativar ?\", \"Deseja realmente reativar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.reativar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Reativado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao reativar: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public suspender(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Suspender ?\", \"Deseja realmente suspender este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.suspender(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Suspenso com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao suspender: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public cancelar(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar ?\", \"Deseja realmente cancelar este Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelar(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public liberarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Liberar para homologação ?\", \"Deseja realmente liberar para a homologação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.liberarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Liberado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao liberar para homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public retirarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Retirar da homologação ?\", \"Deseja realmente retirar da homologação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.retirarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Retirado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao retirar da homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarHomologacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar homologacao ?\", \"Deseja realmente cancelar a homologacao?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarHomologacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar a homologação: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public arquivar(planoEntrega: PlanoEntrega) {\r\n    this.dialog.confirm(\"Arquivar?\", \"Deseja realmente arquivar o Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.arquivar(planoEntrega.id, true).then(() => {\r\n          if (this.filter?.controls.arquivadas?.value) {\r\n            this.grid!.query!.refreshId(planoEntrega.id);\r\n          } else {\r\n            (this.grid?.query || this.query!).removeId(planoEntrega.id);\r\n          }\r\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao arquivar o Plano de Entregas: \" + error?.message ? error?.message : error));\r\n      }\r\n    });\r\n  }\r\n\r\n  public desarquivar(planoEntrega: PlanoEntrega) {\r\n    this.dialog.confirm(\"Desarquivar ?\", \"Deseja realmente desarquivar o Plano de Entregas?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.arquivar(planoEntrega.id, false).then(() => {\r\n          this.grid!.query!.refreshId(planoEntrega.id);\r\n        }).catch(error => this.dialog.alert(\"Erro\", \"Erro ao desarquivar o Plano de Entregas: \" + error?.message ? error?.message : error));\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarConclusao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar conclusão ?\", \"Deseja realmente cancelar a conclusão?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarConclusao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar conclusão: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelarAvaliacao(planoEntrega: PlanoEntrega) {\r\n    const self = this;\r\n    this.dialog.confirm(\"Cancelar avaliacao ?\", \"Deseja realmente cancelar a avaliação?\").then(confirm => {\r\n      if (confirm) {\r\n        this.dao!.cancelarAvaliacao(planoEntrega.id).then(function () {\r\n          (self.grid?.query || self.query!).refreshId(planoEntrega.id);\r\n          self.dialog.alert(\"Sucesso\", \"Cancelado com sucesso!\");\r\n        }).catch(function (error) {\r\n          self.dialog.alert(\"Erro\", \"Erro ao cancelar avaliacao: \" + error?.message ? error?.message : error);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public async isGestorLinhaAscendente(planoEntrega: PlanoEntrega): Promise<boolean> {\r\n    return await this.auth.isGestorLinhaAscendente(planoEntrega.unidade!);\r\n  }\r\n\r\n  public isGestorUnidadeSelecionada(): boolean {\r\n    return this.auth.isGestorUnidade();\r\n  }\r\n\r\n  public isGestorUnidadePaiPlano(planoEntrega: PlanoEntrega): boolean {\r\n    return this.auth.isGestorUnidade(planoEntrega.unidade?.unidade_id)\r\n  }\r\n\r\n  public isGestorUnidadePlano(planoEntrega: PlanoEntrega): boolean {\r\n    return this.auth.isGestorUnidade(planoEntrega.unidade)\r\n  }\r\n\r\n  public async isLotadoLinhaAscendente(planoEntrega: PlanoEntrega): Promise<boolean> {\r\n    return await this.auth.isLotadoNaLinhaAscendente(planoEntrega.unidade!);\r\n  }\r\n\r\n  public isLotadoUnidadePai(planoEntrega: PlanoEntrega): boolean {\r\n    return !!this.auth.hasLotacao(planoEntrega.unidade!.unidade_id!);\r\n  }\r\n  \r\n  public isLotadoUnidadePlano(planoEntrega: PlanoEntrega): boolean {\r\n    return !!this.auth.hasLotacao(planoEntrega.unidade_id);\r\n  }\r\n\r\n  public isPlanoProprio(planoEntrega: PlanoEntrega): boolean {\r\n    return planoEntrega.plano_entrega_id == null;\r\n  }\r\n\r\n  public isPlanoVinculado(planoEntrega: PlanoEntrega): boolean {\r\n    return !this.isPlanoProprio(planoEntrega);\r\n  }\r\n\r\n  public unidadeSelecionadaLotacaoPrincipal(): boolean {\r\n    return this.auth.isLotacaoPrincipal(this.auth.unidade)\r\n  }\r\n\r\n  public unidadePlanoEhLotacaoPrincipal(planoEntrega: PlanoEntrega): boolean {\r\n    return this.auth.isLotacaoPrincipal(planoEntrega.unidade)\r\n  }\r\n\r\n  public situacaoPlano(planoEntrega: PlanoEntrega): string {\r\n    if(planoEntrega.data_fim) return \"EXCLUIDO\"; \r\n    else if(planoEntrega.data_cancelamento) return \"CANCELADO\";\r\n    else if(planoEntrega.data_arquivamento) return \"ARQUIVADO\";\r\n    else return planoEntrega.status;\r\n  }\r\n  \r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\" [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_INCL')\"\r\n    [hasEdit]=\"false\">\r\n    <toolbar *ngIf=\"!selectable\" [buttons]=\"toolbarButtons\">\r\n        <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\"\r\n            [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\"\r\n        [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\"\r\n                [placeholder]=\"'Nome do '+lex.noun('plano de entrega')\"></input-text>\r\n            <input-search #unidade [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\"\r\n                [labelInfo]=\"'Data de início do '+ lex.noun('plano de entrega')\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\"\r\n                [labelInfo]=\"'Data do fim do '+ lex.noun('plano de entrega')\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column [titleTemplate]=\"titleIdNumeroStatus\" [template]=\"columnNumero\">\r\n            <ng-template let-header=\"header\" #titleIdNumeroStatus>\r\n                <order by=\"numero\" [header]=\"header\">#ID</order>\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <small class=\"micro-text fw-ligh\">#{{row.numero}}</small>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <badge *ngIf=\"row.planejamento\" color=\"light\" [icon]=\"entityService.getIcon('Planejamento')\" [label]=\"row.planejamento?.nome\"></badge>\r\n                <badge *ngIf=\"row.cadeiaValor\" color=\"light\" [icon]=\"entityService.getIcon('CadeiaValor')\" [label]=\"row.cadeiaValor?.nome\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <badge  [color]=\"lookup.getColor(lookup.PLANO_ENTREGA_STATUS, row.status)\" [icon]=\"lookup.getIcon(lookup.PLANO_ENTREGA_STATUS, row.status)\" \r\n                        [label]=\"lookup.getValue(lookup.PLANO_ENTREGA_STATUS, row.status)\"></badge>\r\n                <badge *ngIf=\"row.data_cancelamento\" color=\"danger\" icon=\"bi bi-dash-circle\" label=\"Cancelado\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\"\r\n            [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n<!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Injectable } from '@angular/core';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { LookupService } from 'src/app/services/lookup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaService {\r\n  \r\n  constructor(public lookup: LookupService) { }\r\n\r\n  public getValorMeta(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch(entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": entrega.meta.porcentagem + \" %\"; break;\r\n      case \"QUALITATIVO\": entrega.meta.quantitativo; break;\r\n      case \"VALOR\": entrega.meta.valor; break;\r\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.meta.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getValorRealizado(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch(entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": entrega.realizado.porcentagem + \" %\"; break;\r\n      case \"QUALITATIVO\": entrega.realizado.quantitativo; break;\r\n      case \"VALOR\": entrega.realizado.valor; break;\r\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.realizado.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public isPorcentagem(entrega: PlanoEntregaEntrega): boolean {\r\n    return entrega.entrega?.tipo_indicador == \"PORCENTAGEM\";\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}