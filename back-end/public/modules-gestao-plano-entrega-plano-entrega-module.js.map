{"version":3,"sources":["./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-form/plano-entrega-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-form/plano-entrega-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component.html","./src/app/models/plano-entrega-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list-entrega/plano-entrega-list-entrega.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-list/plano-entrega-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-entrega-list/plano-entrega-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html","./src/app/modules/gestao/plano-entrega/plano-entrega.service.ts"],"names":[],"mappings":"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","file":"modules-gestao-plano-entrega-plano-entrega-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-entrega-form',\r\n  templateUrl: './plano-entrega-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-entrega-form.component.scss']\r\n})\r\nexport class PlanoEntregaEntregaFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>plano-entrega-entrega-form works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entrega\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } },\r\n  { path: 'entrega', component: PlanoEntregaListEntregaComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas do Plano de Entrega\" } },\r\n  { path: 'entrega/objetivos/:objetivo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\r\n  { path: 'entrega/processos/:processo_id', component: PlanoEntregaMapaEntregasComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Entregas\", modal: true } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Base } from './base.model';\r\nimport { PlanoEntregaEntrega } from './plano-entrega-entrega.model';\r\n\r\nexport class PlanoEntrega extends Base {\r\n  public entregas?: PlanoEntregaEntrega[];\r\n\r\n  public inicio: Date = new Date();               // Data inicio do plano de entrega\r\n  public fim: Date | null = null;                 // Data fim do plano de entrega\r\n  public nome: string = \"\";                       // Nome do plano de entrega\r\n  public unidade_id: string = '';\r\n  public numero: number = 0;                      // Número do plano de entrega (Gerado pelo sistema)\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\nimport { PlanoEntregaListEntregaComponent } from './plano-entrega-list-entrega/plano-entrega-list-entrega.component';\r\nimport { PlanoEntregaEntregaFormComponent } from './plano-entrega-entrega-form/plano-entrega-entrega-form.component';\r\nimport { PlanoEntregaEntregaListComponent } from './plano-entrega-entrega-list/plano-entrega-entrega-list.component';\r\nimport { PlanoEntregaMapaEntregasComponent } from './plano-entrega-mapa-entregas/plano-entrega-mapa-entregas.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoEntregaListEntregaComponent,\r\n    PlanoEntregaEntregaFormComponent,\r\n    PlanoEntregaEntregaListComponent,\r\n    PlanoEntregaMapaEntregasComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n  @ViewChild(GridComponent, { static: true }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n  public planejamentoInstitucionalDao: PlanejamentoDaoService;\r\n  public planoEntregasEntregasDao: PlanoEntregaEntregaDaoService;\r\n  public form: FormGroup;\r\n  public formEntregas: FormGroup;\r\n\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    this.planejamentoInstitucionalDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.planoEntregasEntregasDao = injector.get<PlanoEntregaEntregaDaoService>(PlanoEntregaEntregaDaoService);\r\n    this.join = [];\r\n    this.modalWidth = 1200;\r\n    this.form = this.fh.FormBuilder({ \r\n      nome: {default: \"\"},\r\n      inicio: {default: new Date()},\r\n      fim: {default: new Date()},\r\n      planejamento_id: {default: \"\"},\r\n      cadeia_valor_id: {default: \"\"},\r\n      entregas: {default: []},\r\n    }, this.cdRef, this.validate);\r\n\r\n    this.formEntregas = this.fh.FormBuilder({ \r\n      descricao: {default: \"\"},\r\n      cliente: {default: \"\"},\r\n      dt_inicio: {default: new Date()},\r\n      dt_fim: {default: new Date()},\r\n      tipo_indicador: {default: \"\"},\r\n      meta: {default: \"\"},\r\n      vl_realizado: {default: \"\"},\r\n      objetivos: {default: \"\"},\r\n      homologado: {default: \"\"},\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n/*     if(['usuario_id', 'unidade_id', 'programa_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }  */\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    return undefined;\r\n  };\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega | boolean> {\r\n\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" ;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n  public async addEntrega() {\r\n    return new PlanoEntregaEntrega({\r\n      id: this.dao!.generateUuid(),\r\n      plano_entrega_id: this.entity?.id\r\n    }) as IIndexable;\r\n  }\r\n\r\n  public async removeEntrega(row: any) {\r\n    return true;\r\n  }\r\n\r\n  public async loadEntrega(form: FormGroup, row: any) {\r\n    this.formEntregas.controls.descricao.setValue(row.descricao);\r\n    this.formEntregas.controls.cliente.setValue(row.cliente);\r\n    this.formEntregas.controls.dt_inicio.setValue(row.dt_inicio);\r\n    this.formEntregas.controls.dt_fim.setValue(row.dt_fim);\r\n    this.formEntregas.controls.tipo_indicador.setValue(row.tipo_indicador);\r\n    this.formEntregas.controls.meta.setValue(row.meta);\r\n    this.formEntregas.controls.vl_realizado.setValue(row.vl_realizado);\r\n    this.formEntregas.controls.objetivos.setValue(row.objetivos);\r\n    this.formEntregas.controls.homologado.setValue(row.homologado);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async saveEntrega(form: FormGroup, row: any) {\r\n    let result = undefined;\r\n    this.form!.markAllAsTouched();\r\n    if (this.form!.valid) {\r\n      row.id = row.id == \"NEW\" ? this.dao!.generateUuid() : row.id;\r\n      row.descricao = this.formEntregas.controls.descricao.value;\r\n      row.dt_inicio = this.formEntregas.controls.dt_inicio.value;\r\n      row.dt_fim = this.formEntregas.controls.dt_fim.value;\r\n      row.tipo_indicador =this.formEntregas.controls.tipo_indicador.value;\r\n      row.meta = this.formEntregas.controls.meta.value;\r\n      row.vl_realizado = this.formEntregas.controls.vl_realizado.value;\r\n      row.objetivos = this.formEntregas.controls.objetivos.value;\r\n      row.homologado = this.formEntregas.controls.homologado.value;\r\n      result = row;\r\n      this.cdRef.detectChanges();\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<editable-form [form]=\"form!\" [disabled]=\"formDisabled\" [title]=\"isModal ? '' : title\" (submit)=\"onSaveData()\" (cancel)=\"onCancel()\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" label=\"Nome \" icon=\"bi bi-textarea-t\" controlName=\"nome\" [control]=\"form!.controls.nome\"></input-text>\r\n            <input-datetime date [size]=\"3\" label=\"Início\" icon=\"bi bi-calendar-date\" controlName=\"inicio\" [control]=\"form!.controls.inicio\" labelInfo=\"Início do Plano de Entregas\"></input-datetime>\r\n            <input-datetime date [size]=\"3\" label=\"Fim\" icon=\"bi bi-calendar-date\" controlName=\"fim\" [control]=\"form!.controls.fim\" labelInfo=\"Fim do Plano de Entregas\"></input-datetime>\r\n        </div>\r\n        <div  class=\"row\">\r\n            <input-search [size]=\"6\" controlName=\"planejamento_id\" label=\"Selecione o Planejamento da Unidade Instituidora vinculado\" [dao]=\"planejamentoInstitucionalDao\" ></input-search>\r\n            <input-search [size]=\"6\" controlName=\"cadiea_valor_id\" label=\"Selecione a Cadeia de Valor vinculado\" [dao]=\"cadeiaValorDao\"></input-search>    \r\n        </div>\r\n        <separator></separator>\r\n        <div class=\"row\">\r\n            <grid [control]=\"form!.controls.entregas\" [form]=\"formEntregas\" [hasEdit]=\"true\" [hasDelete]=\"true\" [add]=\"addEntrega.bind(this)\" [load]=\"loadEntrega.bind(this)\" [remove]=\"removeEntrega.bind(this)\" \r\n                  [save]=\"saveEntrega.bind(this)\" editable [groupTemplate]=\"groupEntregas\" >\r\n                <ng-template let-separator=\"separator\" #groupEntregas>\r\n                    <strong class=\"grid-group-text\">Entregas: </strong><span class=\"text-wrap\"><badge color=\"primary\" [label]=\"separator?.text\"></badge></span>\r\n                </ng-template>\r\n                <columns>\r\n                    <column [title]=\"'Entrega/\\nCliente'\" [template]=\"columnEntregaCliente\" [editTemplate]=\"editEntregaCliente\">\r\n                        <ng-template let-row=\"row\" #columnEntregaCliente>\r\n                            <span>{{row.descricao+\" / \"+row.cliente}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editEntregaCliente>\r\n                            <input-text [size]=\"6\" controlName=\"descricao\"></input-text>\r\n                            <input-text  [size]=\"6\" controlName=\"cliente\"></input-text>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column [title]=\"'Data Início/\\nData Fim'\" [template]=\"columnDatas\" [editTemplate]=\"editDatas\">\r\n                        <ng-template let-row=\"row\" #columnDatas>\r\n                            <span> {{dao!.getDateFormatted(row.dt_inicio)+\" até \"+dao!.getDateFormatted(row.dt_fim)}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editDatas>\r\n                            <input-datetime noIcon date [size]=\"6\" controlName=\"dt_inicio\"></input-datetime>\r\n                            <input-datetime noIcon date [size]=\"6\" controlName=\"dt_fim\"></input-datetime>\r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Indicador\" [template]=\"columnIndicador\" [editTemplate]=\"editIndicador\">\r\n                        <ng-template let-row=\"row\" #columnIndicador>\r\n                            <span>{{row.tipo_indicador}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editIndicador>\r\n                            <input-select [items]=\"lookup.TIPO_INDICADOR\" [size]=\"6\"  controlName=\"tipo_indicador\"></input-select>                        \r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Meta Geral\" [template]=\"columnMetaGeral\" [editTemplate]=\"editMetaGeral\">\r\n                        <ng-template let-row=\"row\" #columnMetaGeral>\r\n                            <span>{{row.meta}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editMetaGeral>\r\n                            <input-text [size]=\"12\"  controlName=\"meta\" ></input-text>                        \r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Realizado\" [template]=\"columnRealizado\" [editTemplate]=\"editRealizado\">\r\n                        <ng-template let-row=\"row\" #columnRealizado>\r\n                            <span>{{row.vl_realizado}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editRealizado>\r\n                            <input-text [size]=\"6\"  controlName=\"vl_realizado\"></input-text>                        \r\n                        </ng-template>\r\n                    </column>\r\n                    <column title=\"Objetivos/Processos/Atividades\" [template]=\"columnObjetivod\" [editTemplate]=\"editObjetivos\">\r\n                        <ng-template let-row=\"row\" #columnObjetivod>\r\n                            <span>{{row.objetivos}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editObjetivos>\r\n                            <input-search [size]=\"6\" controlName=\"objetivos\" ></input-search>                        \r\n                        </ng-template>\r\n                    </column>\r\n                    <column icon=\"bi bi-check-lg\" titleHint=\"Se a entrega foi homologada\" [template]=\"columnHomologado\" [editTemplate]=\"editHomologado\">\r\n                        <ng-template let-row=\"row\" #columnHomologado>\r\n                            <div class=\"text-center\"><i *ngIf=\"row.concluido\" class=\"bi bi-check-circle\"></i></div>\r\n                        </ng-template>\r\n                        <ng-template let-row=\"row\" #editHomologado>\r\n                            <input-switch [size]=\"12\" controlName=\"homologado\"></input-switch>                       \r\n                        </ng-template>\r\n                    </column>\r\n                    <column type=\"options\"></column>\r\n                </columns>\r\n            </grid>\r\n        </div>\r\n    </div>\r\n</editable-form>\r\n\r\n","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { InputSearchComponent} from 'src/app/components/input/input-search/input-search.component';\r\nimport { EntregaDaoService } from 'src/app/dao/entrega-dao.service';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\nimport { PlanoEntregaService } from '../plano-entrega.service';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-mapa-entregas',\r\n  templateUrl: './plano-entrega-mapa-entregas.component.html',\r\n  styleUrls: ['./plano-entrega-mapa-entregas.component.scss']\r\n})\r\nexport class PlanoEntregaMapaEntregasComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n  @ViewChild('unidade', { static: false }) public unidade?: InputSearchComponent;\r\n  \r\n  public unidadeDao: UnidadeDaoService;\r\n  public entregaDao: EntregaDaoService;\r\n  public entregaService: PlanoEntregaService;\r\n  public objetivoId?: string;\r\n  public processoId?: string;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.entregaDao = injector.get<EntregaDaoService>(EntregaDaoService);\r\n    this.entregaService = injector.get<PlanoEntregaService>(PlanoEntregaService);\r\n    /* Inicializações */\r\n    this.title = \"Entregas\";\r\n    this.filter = this.fh.FormBuilder({\r\n      unidade_id: {default: null},\r\n      entrega_id: {default: null},\r\n      inicio: {default: null},\r\n      fim: {default: null}\r\n    });\r\n    this.join = [];\r\n  }\r\n\r\n  ngOnInit(){\r\n    super.ngOnInit()\r\n    this.objetivoId = this.urlParams!.get(\"objetivo_id\") || undefined;\r\n    this.processoId = this.urlParams!.get(\"processo_id\") || undefined;\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.entrega_id.setValue(null);\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(this.objetivoId) result.push([\"objetivos.objetivo_id\", \"==\", this.objetivoId]);\r\n    if(this.processoId) result.push([\"processos.processo_id\", \"==\", this.processoId]);\r\n    if(form.unidade_id) result.push([\"plano_entrega.unidade_id\", \"==\", form.unidade_id]);\r\n    if(form.entrega_id) result.push([\"entrega_id\", \"==\", form.entrega_id]);\r\n    if(form.inicio) result.push([\"data_inicio\", \">=\", form.inicio]);\r\n    if(form.fim) result.push([\"data_fim\", \"<=\", form.fim]);\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","<grid [dao]=\"dao\" noHeader [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\">\r\n    <toolbar>\r\n        <!-- input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Unidade\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch -->\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-search #unidade [size]=\"4\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n            <input-search #entrega [size]=\"4\" controlName=\"entrega_id\" [dao]=\"entregaDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date noIcon label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Entrega\" [template]=\"columnEntrega\">\r\n            <ng-template let-row=\"row\" #columnEntrega>\r\n                <p><b>Data:</b> {{util.getDateFormatted(row.inicio)}} - {{util.getDateFormatted(row.fim)}}</p>\r\n                <p><b>Cliente:</b> {{row.cliente}}</p>\r\n                <p>{{row.descricao}}</p>\r\n                <badge icon=\"bi bi-list-columns-reverse\" color=\"light\" [label]=\"row.plano_entrega.unidade.sigla\" hint=\"Plano de entrega\"></badge>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Meta\" [template]=\"columnMeta\">\r\n            <ng-template let-row=\"row\" #columnMeta>\r\n                <div class=\"meta h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Meta</h5>\r\n                            <h2 class=\"text-primary\">{{entregaService.getValorMeta(row)}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Realizado\" [template]=\"columnRealizado\">\r\n            <ng-template let-row=\"row\" #columnRealizado>\r\n                <div class=\"realizado h-100\">\r\n                    <div class=\"card h-100\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Realizado</h5>\r\n                            <h2 *ngIf=\"!entregaService.isPorcentagem(row)\" class=\"text-secondary\">Regular</h2>\r\n                            <progress-bar *ngIf=\"entregaService.isPorcentagem(row)\" [value]=\"row.realizado!.porcentagem!\" color=\"success\"></progress-bar>\r\n                        </div>\r\n                        <div class=\"card-footer p-0\">\r\n                            <action-button icon=\"bi bi-card-checklist\"></action-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>","import { LookupItem } from '../services/lookup.service';\r\nimport { Base } from './base.model';\r\nimport { Entrega, EntregaValor } from './entrega.model';\r\n\r\nexport class PlanoEntregaEntrega extends Base {\r\n  public entrega?: Entrega;\r\n\r\n  public inicio: Date = new Date();               \r\n  public fim: Date | null = null;                 \r\n  public descricao: string = \"\";                  \r\n  public cliente: string = \"\";                    \r\n  public homologado: boolean = false;                 \r\n  public meta: EntregaValor = {}; \r\n  public realizado: EntregaValor = {};\r\n  public plano_entrega_id: string | null = null;\r\n  public entrega_id: string = '';\r\n  public entrega_pai_id: string = '';                        \r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { PlanoEntregaEntregaDaoService } from 'src/app/dao/plano-entrega-entrega-dao.service';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list-entrega',\r\n  templateUrl: './plano-entrega-list-entrega.component.html',\r\n  styleUrls: ['./plano-entrega-list-entrega.component.scss']\r\n})\r\nexport class PlanoEntregaListEntregaComponent extends PageListBase<PlanoEntregaEntrega, PlanoEntregaEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public planoEntregaId: string = \"\";\r\n\r\n  constructor(public injector: Injector) { \r\n    super(injector, PlanoEntregaEntrega, PlanoEntregaEntregaDaoService);\r\n    this.title = this.lex.noun(\"Entrega\");\r\n    this.code = \"MOD_PENT_CONS\";\r\n    this.filter = this.fh.FormBuilder({\r\n      plano_entrega_id: {default: null},\r\n    });\r\n    // Testa se o usuário possui permissão para exibir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    } \r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.planoEntregaId = this.urlParams!.get(\"id\") || \"\";\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    result.push([\"plano_entrega_id\", \"==\", this.planoEntregaId]);\r\n    return result;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [title]=\"isModal ? '' : title\" [selectable]=\"selectable\" (select)=\"onSelect($event)\">\r\n    <columns>\r\n        <column title=\"Início\" [template]=\"columnInicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Descrição\" [template]=\"columnDescricao\">\r\n            <ng-template let-row=\"row\" #columnDescricao>\r\n                <span> {{ row.descricao || ''}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Cliente\" [template]=\"columnCliente\">\r\n            <ng-template let-row=\"row\" #columnCliente>\r\n                <span> {{ row.cliente || '' }}</span>\r\n            </ng-template>\r\n        </column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n\r\n\r\n<!-- Grid-List:\r\n\r\n[+]  Data Início Data Fim    Responsável                            Avaliação\r\n   +-----------+-----------+-------------------------------------+-------------------------\r\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\r\n   |                                                              (AVALIADOR)\r\n   |                                                              (Justificativa)  \r\n   .......................................................................................\r\n   Entrega       Indicador           Meta         Realizado\r\n   -------------+-------------------+------------+------------- \r\n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   Plano de Entregas\r\n   Unidade (Setor)\r\n   Planejamento_estrategico_id\r\n   Cadeia_valor_id\r\n   Entregas\r\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\r\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\r\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\r\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\r\n   Ponto de controle\r\n      [01/01/2023][30/01/2023]:\r\n          Responsável: Genisson\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \r\n          Ent1:     Quantidade                          100          90\r\n          Ent3:     Qualitativo                         Satisfatório Ruim\r\n      [01/02/2023][30/02/2023]:\r\n          Responsável: Paiva\r\n          Entregas:\r\n                    Indicador (vem do cadastro entrega) Meta         Realizado\r\n          Ent1:     Quantidade                          110          110\r\n          Ent2:     %                                   70           70\r\n          Ent3:     Qualitativo                         Excelente    Bom\r\n* Deverá haver pelo menos 1\r\n\r\n\r\n -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'plano-entrega-entrega-list',\r\n  templateUrl: './plano-entrega-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaEntregaListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>plano-entrega-entrega-list works!</p>\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    /* Inicializações */\r\n    this.title = this.lex.noun('Plano de Entrega', true);\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: { default: true },\r\n      nome: { default: '' },\r\n      inicio: { default: '' },\r\n      fim: { default: '' },\r\n      //status: {default: ''},\r\n      unidade_id: { default: null },\r\n      planejamento_id: { default: null },\r\n      cadeia_valor_id: { default: null },\r\n    });\r\n    this.join = ['planejamento:id,nome', 'cadeiaValor:id,nome', 'unidade:id,sigla'];\r\n    this.groupBy = [{ field: \"unidade.sigla\", label: \"Unidade\" }];\r\n    // Testa se o usuário possui permissão para exibir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n  }\r\n\r\n  public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    //filter.controls.status.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if (form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n    if (form.inicio) {\r\n      result.push([\"inicio\", \">=\", form.inicio]);\r\n    }\r\n    if (form.fim) {\r\n      result.push([\"fim\", \"<=\", form.fim]);\r\n    }\r\n    if (form.unidade_id) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }\r\n    if (form.planejamento_id) {\r\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    }\r\n    if (form.cadeia_valor_id) {\r\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Editar\", icon: \"bi bi-pencil-square\", onClick: this.edit.bind(this) };\r\n    const BOTAO_EXCLUIR = { label: \"Excluir Plano\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    //const BOTAO_ENTREGAS = { hint: \"Entregas\", icon: \"bi bi-pen\", onClick: this.editarEntregas.bind(this) };\r\n    const BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: \"bi bi-file-earmark-check\", onClick: this.homologar.bind(this) };\r\n    const BOTAO_PONTOS_CONTROLE = { label: \"Pontos de Controle\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', row.id, 'ponto-controle'] })).bind(this) };\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    if (this.auth.hasPermissionTo('MOD_PENT_EDT')) result.push(BOTAO_ALTERAR);\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) result.push(BOTAO_EXCLUIR);\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_PCTR_CONS\")) result.push(BOTAO_PONTOS_CONTROLE);\r\n    if (this.dao?.needHomologate(planoEntrega)) result.push(BOTAO_HOMOLOGAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_PONTOS_CONTROLE = { label: \"Pontos de Controle\", icon: \"bi bi-file-earmark-check\", onClick: ((row: PlanoEntrega) => this.go.navigate({ route: ['gestao', 'plano-entrega', row.id, 'ponto-controle'] })).bind(this) };\r\n    if (this.auth.hasPermissionTo('MOD_PENT_PCTR_CONS')) result.push(BOTAO_PONTOS_CONTROLE);\r\n    else if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if ((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{ field: \"unidade.sigla\", label: \"Unidade\" }] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public editarEntregas() {\r\n\r\n  }\r\n\r\n  public homologar() {\r\n\r\n  }\r\n\r\n  public avaliar() {\r\n\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PENT_INCL')\"\r\n    [hasEdit]=\"false\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n        <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome do plano de entregas\"></input-text>\r\n            <input-search #unidade [size]=\"6\" controlName=\"unidade_id\" [dao]=\"unidadeDao\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" controlName=\"planejamento_id\" [dao]=\"planejamentoDao\" ></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" controlName=\"cadeia_valor_id\" [dao]=\"cadeiaValorDao\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do plano do entregas\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do plano de entregas\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Número\" [template]=\"columnNumero\" orderBy=\"numero\">\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <span> {{row.planejamento?.nome || \"-\"}}</span><br>\r\n                <span> {{row.cadeiaValor?.nome || \"-\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <span> {{ row.status || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n \r\n <!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->","import { Injectable } from '@angular/core';\r\nimport { PlanoEntregaEntrega } from 'src/app/models/plano-entrega-entrega.model';\r\nimport { LookupService } from 'src/app/services/lookup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaService {\r\n  \r\n  constructor(public lookup: LookupService) { }\r\n\r\n  public getValorMeta(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch(entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": entrega.meta.porcentagem + \" %\"; break;\r\n      case \"QUALITATIVO\": entrega.meta.quantitativo; break;\r\n      case \"VALOR\": entrega.meta.valor; break;\r\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.meta.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getValorRealizado(entrega: PlanoEntregaEntrega): string {\r\n    let result = \"\";\r\n    switch(entrega.entrega?.tipo_indicador) {\r\n      case \"PORCENTAGEM\": entrega.realizado.porcentagem + \" %\"; break;\r\n      case \"QUALITATIVO\": entrega.realizado.quantitativo; break;\r\n      case \"VALOR\": entrega.realizado.valor; break;\r\n      case \"QUALITATIVO\": this.lookup.getValue(entrega.entrega.lista_qualitativos, entrega.realizado.qualitativo); break;\r\n      default: result = \"Indicador desconhecido\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public isPorcentagem(entrega: PlanoEntregaEntrega): boolean {\r\n    return entrega.entrega?.tipo_indicador == \"PORCENTAGEM\";\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}