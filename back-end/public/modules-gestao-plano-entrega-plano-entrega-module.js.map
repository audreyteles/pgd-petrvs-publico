{"version":3,"sources":["./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/modules/gestao/plano-entrega/plano-form-ponto-controle/plano-form-ponto-controle.component.ts","./src/app/modules/gestao/plano-entrega/plano-form-ponto-controle/plano-form-ponto-controle.component.html","./src/app/dao/plano-entrega-dao.service.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html"],"names":[],"mappings":"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","file":"modules-gestao-plano-entrega-plano-entrega-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entrega\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Base } from './base.model';\r\n\r\nexport class PlanoEntrega extends Base {\r\n  public inicio: Date = new Date();               // Data inicio do plano de entrega\r\n  public fim: Date | null = null;                 // Data fim do plano de entrega\r\n  public nome: string = \"\";                       // Nome do plano de entrega\r\n  public planejamento_id: string | null = null;\r\n  public cadeia_valor_id: string | null = null;\r\n  public unidade_id: string = '';\r\n  public numero: number = 0;                          // Número do plano de entrega (Gerado pelo sistema)\r\n  \r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\n\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\nimport { PlanoFormPontoControleComponent } from './plano-form-ponto-controle/plano-form-ponto-controle.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent,\r\n    PlanoFormPontoControleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.join = [];\r\n    this.form = this.fh.FormBuilder({\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n/*     if(['usuario_id', 'unidade_id', 'programa_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }  */\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    return undefined;\r\n  };\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega | boolean> {\r\n\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" ;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plano-form-ponto-controle',\n  templateUrl: './plano-form-ponto-controle.component.html',\n  styleUrls: ['./plano-form-ponto-controle.component.scss']\n})\nexport class PlanoFormPontoControleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>plano-form-ponto-controle works!</p>\n\n\n<!-- Grid-List:\n\n[+]  Data Início Data Fim    Responsável                            Avaliação\n   +-----------+-----------+-------------------------------------+-------------------------\n   | XX/XX/XXXX  XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX (NOTA) (TIPO AVALIACAO)\n   |                                                              (AVALIADOR)\n   |                                                              (Justificativa)  \n   .......................................................................................\n   Entrega       Indicador           Meta         Realizado\n   -------------+-------------------+------------+------------- \n   XXXXXXXXXXXXX XXXXXXXXXXXXXXXXXX   9999999     99999999\n\n\n\n\n\n\n\n   Plano de Entregas\n   Unidade (Setor)\n   Planejamento_estrategico_id\n   Cadeia_valor_id\n   Entregas\n            Inicio     Fim        Indicador (vem do cadastro entrega) Metal geral Realizado Objetivos* Processos*    Atividades*          Cliente      Hmg\n      Ent1: 01/01/2022 -          Quantidade                          1000        200       Ob1, Ob1   Proc1, Proc2  Tip.Ativ1, Tip.Atv2  uOrg1, uOrg2 S\n      Ent2: 01/01/2022 30/12/2022 %                                   100         70        Ob2                                                        S\n      Ent3: 01/01/2022 30/12/2024 Qualitativo                         Excelente   Bom                                                                  S      Ent4: 09/12/2022 30/12/2022 ...                                                                                                                  N\n   Ponto de controle\n      [01/01/2023][30/01/2023]:\n          Responsável: Genisson\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta do Mês  Realizado  \n          Ent1:     Quantidade                          100          90\n          Ent3:     Qualitativo                         Satisfatório Ruim\n      [01/02/2023][30/02/2023]:\n          Responsável: Paiva\n          Entregas:\n                    Indicador (vem do cadastro entrega) Meta         Realizado\n          Ent1:     Quantidade                          110          110\n          Ent2:     %                                   70           70\n          Ent3:     Qualitativo                         Excelente    Bom\n* Deverá haver pelo menos 1\n\n\n -->","import { Injectable, Injector } from '@angular/core';\r\nimport { PlanoEntrega } from '../models/plano-entrega.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaDaoService extends DaoBaseService<PlanoEntrega> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoEntrega\", injector);\r\n  }\r\n\r\n  public needHomologate(plano: PlanoEntrega){\r\n\r\n  }\r\n\r\n}\r\n\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { CadeiaValorDaoService } from 'src/app/dao/cadeia-valor-dao.service';\r\nimport { PlanejamentoDaoService } from 'src/app/dao/planejamento-dao.service';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { UnidadeDaoService } from 'src/app/dao/unidade-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  public unidadeDao: UnidadeDaoService;\r\n  public planejamentoDao: PlanejamentoDaoService;\r\n  public cadeiaValorDao: CadeiaValorDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.unidadeDao = injector.get<UnidadeDaoService>(UnidadeDaoService);\r\n    this.planejamentoDao = injector.get<PlanejamentoDaoService>(PlanejamentoDaoService);\r\n    this.cadeiaValorDao = injector.get<CadeiaValorDaoService>(CadeiaValorDaoService);\r\n    /* Inicializações */\r\n    this.title = 'Planos de Entrega';\r\n    this.filter = this.fh.FormBuilder({\r\n      agrupar: {default: true},\r\n      nome: {default: ''},\r\n      inicio: {default: ''},\r\n      fim: {default: ''},\r\n      //status: {default: ''},\r\n      unidade_id: {default: null},\r\n      planejamento_id: {default: null},\r\n      cadeia_valor_id: {default: null},\r\n    });\r\n    this.join = ['planejamento:nome','cadeiaValor:nome','unidade:sigla'];\r\n    this.groupBy = [{field: \"unidade.sigla\", label: \"Unidade\"}];\r\n    // Testa se o usuário possui permissão para exibir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    } \r\n   }\r\n\r\n   public filterClear(filter: FormGroup) {\r\n    filter.controls.nome.setValue(\"\");\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    //filter.controls.status.setValue(\"\");\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.planejamento_id.setValue(null);\r\n    filter.controls.cadeia_valor_id.setValue(null);\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n\r\n    if(form.nome?.length) {\r\n      result.push([\"nome\", \"like\", \"%\" + form.nome + \"%\"]);\r\n    }\r\n    if(form.inicio) {\r\n      result.push([\"inicio\", \">=\", form.inicio]);\r\n    }\r\n    if(form.fim) {\r\n      result.push([\"fim\", \"<=\", form.fim]);\r\n    }  \r\n    if(form.unidade_id) {\r\n      result.push([\"unidade_id\", \"==\", form.unidade_id]);\r\n    }  \r\n    if(form.planejamento_id) {\r\n      result.push([\"planejamento_id\", \"==\", form.planejamento_id]);\r\n    }\r\n    if(form.cadeia_valor_id) {\r\n      result.push([\"cadeia_valor_id\", \"==\", form.cadeia_valor_id]);\r\n    } \r\n    return result;\r\n  }\r\n\r\n  public dynamicOptions(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Editar\", icon: \"bi bi-pencil-square\", onClick: this.edit.bind(this) };\r\n    const BOTAO_EXCLUIR = { label: \"Excluir Plano\", icon: \"bi bi-trash\", onClick: this.delete.bind(this) };\r\n    const BOTAO_ENTREGAS = { hint: \"Entregas\", icon: \"bi bi-pen\", onClick: this.editarEntregas.bind(this) };\r\n    const BOTAO_HOMOLOGAR = { label: \"Homologar\", icon: \"bi bi-file-earmark-check\", onClick: this.homologar.bind(this) };\r\n    const BOTAO_AVALIAR = { label: \"Ponto de Controle\", icon: \"bi bi-file-earmark-check\", onClick: this.avaliar.bind(this) };\r\n    if(this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    if(this.auth.hasPermissionTo('MOD_PENT_EDT')) result.push(BOTAO_ALTERAR);\r\n    if(this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) result.push(BOTAO_EXCLUIR);\r\n    if(this.auth.hasPermissionTo(\"MOD_PENT_AVAL\")) result.push(BOTAO_AVALIAR);\r\n    if(this.dao?.needHomologate(planoEntrega)) result.push(BOTAO_HOMOLOGAR);\r\n    return result;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    let planoEntrega: PlanoEntrega = row as PlanoEntrega;\r\n    const BOTAO_INFORMACOES = { label: \"Informações\", icon: \"bi bi-info-circle\", onClick: this.consult.bind(this) };\r\n    const BOTAO_ALTERAR = { label: \"Editar\", icon: \"bi bi-pencil-square\", onClick: this.edit.bind(this) };\r\n    if(this.auth.hasPermissionTo('MOD_PENT_EDT')) result.push(BOTAO_ALTERAR);\r\n    else if(this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) result.push(BOTAO_INFORMACOES);\r\n    return result;\r\n  }\r\n\r\n  public onAgruparChange(event: Event) {\r\n    const agrupar = this.filter!.controls.agrupar.value;\r\n    if((agrupar && !this.groupBy?.length) || (!agrupar && this.groupBy?.length)) {\r\n      this.groupBy = agrupar ? [{field: \"unidade.sigla\", label: \"Unidade\"}] : [];\r\n      this.grid!.reloadFilter();\r\n    }\r\n  }\r\n\r\n  public editarEntregas(){\r\n\r\n  }\r\n\r\n  public homologar(){\r\n\r\n  }\r\n\r\n  public avaliar(){\r\n\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [groupBy]=\"groupBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PLAN_INST_INCL')\"\r\n    [hasEdit]=\"false\">\r\n    <toolbar *ngIf=\"!selectable\">\r\n        <input-switch [size]=\"4\" labelPosition=\"left\" label=\"Agrupar por Un.\" controlName=\"agrupar\" [control]=\"filter!.controls.agrupar\" (change)=\"onAgruparChange($event)\"></input-switch>\r\n    </toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n        <div class=\"row\">\r\n            <input-text [size]=\"6\" label=\"Nome\" controlName=\"nome\" [control]=\"filter!.controls.nome\" placeholder=\"Nome do plano de entregas\"></input-text>\r\n            <input-search #unidade [size]=\"6\" label=\"Unidade\" controlName=\"unidade_id\" [control]=\"filter!.controls.unidade_id\" [dao]=\"unidadeDao\" [selectRoute]=\"{route: ['configuracoes', 'unidade']}\"></input-search>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-search #planejamento [size]=\"4\" label=\"Planejamento Institucional\" controlName=\"planejamento_id\" [control]=\"filter!.controls.planejamento_id\" [dao]=\"planejamentoDao\" [selectRoute]=\"{route: ['gestao', 'planejamento']}\"></input-search>\r\n            <input-search #cadeiaValor [size]=\"4\" label=\"Cadeia de Valor\" controlName=\"cadeia_valor_id\" [control]=\"filter!.controls.cadeia_valor_id\" [dao]=\"cadeiaValorDao\" [selectRoute]=\"{route: ['gestao', 'cadeia-valor']}\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do plano do entregas\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do plano de entregas\"></input-datetime>\r\n        </div>\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Número\" [template]=\"columnNumero\" orderBy=\"numero\">\r\n            <ng-template let-row=\"row\" #columnNumero>\r\n                <span> {{ row.numero}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column title=\"Início\" [template]=\"columnInicio\" orderBy=\"inicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\" orderBy=\"fim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <span> {{row.planejamento?.nome || \"-\"}}</span><br>\r\n                <span> {{row.cadeiaValor?.nome || \"-\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <span> {{ row.status || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [dynamicOptions]=\"dynamicOptions.bind(this)\" [dynamicButtons]=\"dynamicButtons.bind(this)\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n \r\n <!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->"],"sourceRoot":"webpack:///"}