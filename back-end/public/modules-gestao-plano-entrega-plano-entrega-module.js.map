{"version":3,"sources":["./src/app/modules/gestao/plano-entrega/plano-entrega-routing.module.ts","./src/app/models/plano-entrega.model.ts","./src/app/modules/gestao/plano-entrega/plano-entrega.module.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-form/plano-entrega-form.component.ts","./src/app/dao/plano-entrega-dao.service.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.ts","./src/app/modules/gestao/plano-entrega/plano-entrega-list/plano-entrega-list.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACa;AAC2B;AACA;;;AAE9F,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAE;IACvL,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IAC/L,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;IAClM,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0GAAyB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,gFAAc,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;CACzM,CAAC;AAMK,MAAM,yBAAyB;;kGAAzB,yBAAyB;wGAAzB,yBAAyB;4GAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;;;;;;;;;;;;;AChBxB;AAAA;AAAA;AAAoC;AAE7B,MAAM,YAAa,SAAQ,gDAAI;IACpC,YAAmB,IAAU,IAAI,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACvE;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACyB;AACG;AAEmB;AACA;;AAcvF,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGANpB;YACP,4DAAY;YACZ,qFAAgB;YAChB,uFAAyB;SAC1B;mIAEU,kBAAkB,mBAT3B,0GAAyB;QACzB,0GAAyB,aAGzB,4DAAY;QACZ,qFAAgB;QAChB,uFAAyB;;;;;;;;;;;;;;;;;;;;;;ACfoE;AAElB;AAEb;AACC;;AAS5D,MAAM,yBAA0B,SAAQ,gFAAkD;IAK/F,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,+EAAY,EAAE,4FAAsB,CAAC,CAAC;QADrC,aAAQ,GAAR,QAAQ,CAAU;QAO9B,aAAQ,GAAG,CAAC,OAAwB,EAAE,WAAmB,EAAE,EAAE;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC;YAEtB;;qBAES;YACL,OAAO,MAAM,CAAC;QAChB,CAAC;QAEM,mBAAc,GAAG,CAAC,IAAgB,EAAE,EAAE;YAC3C,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;QAiBK,cAAS,GAAG,CAAC,MAAoB,EAAU,EAAE;YAClD,OAAO,WAAW,CAAE;QACtB,CAAC;QAnCC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,EAC/B,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAeY,QAAQ,CAAC,MAAoB,EAAE,IAAe;;YACzD,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;KAAA;IAEY,cAAc,CAAC,IAAe;;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,IAAK,CAAC,CAAC;QAC1C,CAAC;KAAA;IAEY,QAAQ,CAAC,IAAgB;;YAEpC,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAMM,cAAc,CAAC,GAAQ;QAC5B,IAAI,MAAM,GAAoB,EAAE,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;;kGA/CU,yBAAyB;yGAAzB,yBAAyB;kEACzB,8GAAqB;;;;;;;;;;;;;;;;;ACflC;AAAA;AAAA;AAAA;AAAoD;;AAK7C,MAAM,sBAAuB,SAAQ,gEAA4B;IAEtE,YAAsB,QAAkB;QACtC,KAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QADZ,aAAQ,GAAR,QAAQ,CAAU;IAExC,CAAC;;4FAJU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AACQ;AACb;AACC;;;;;;;;;;ICD/D,qEAAuC;;;IAkB3B,uEAAM;IAAC,uDAAqC;IAAA,4DAAO;;;;IAA5C,0DAAqC;IAArC,sHAAqC;;;IAK5C,uEAAM;IAAC,uDAAkC;IAAA,4DAAO;;;;IAAzC,0DAAkC;IAAlC,mHAAkC;;;IAKzC,sFAA0B;IAAA,gEAAI;IAC9B,4EACJ;;;IAEI,uEAAM;IAAC,uDAAiC;IAAA,4DAAO;IAAA,gEAAI;IACnD,uEAAM;IAAC,uDAAgC;IAAA,4DAAO;;;IADvC,0DAAiC;IAAjC,mJAAiC;IACjC,0DAAgC;IAAhC,iJAAgC;;;IAKvC,uEAAM;IAAC,uDAAqB;IAAA,4DAAO;;;IAA5B,0DAAqB;IAArB,+FAAqB;;AD9BrC,MAAM,yBAA0B,SAAQ,gFAAkD;IAI/F,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,+EAAY,EAAE,4FAAsB,CAAC,CAAC;QADrC,aAAQ,GAAR,QAAQ,CAAU;QAoC9B,gBAAW,GAAG,CAAC,MAAiB,EAAE,EAAE;YACzC,IAAI,MAAM,GAAU,EAAE,CAAC;YACvB,IAAI,IAAI,GAAQ,MAAM,CAAC,KAAK,CAAC;YAC7B,OAAO,MAAM,CAAC;QAChB,CAAC;QAtCC,oBAAoB;QACpB,IAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,EAEhC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACnB,oEAAoE;QACpE,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,mBAAmB;gBACzB,KAAK,EAAE,aAAa;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;aACjC,CAAC,CAAC;SACJ;QACD,qEAAqE;QACrE,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aAChC,CAAC,CAAC;SACJ;IACF,CAAC;IAEM,WAAW,CAAC,MAAiB;QACvC;;;;2DAImD;QAC/C,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;;kGAtCU,yBAAyB;yGAAzB,yBAAyB;kEACzB,oFAAa;;;;;QCb1B,0EAG0D;QAF5B,uJAAU,oBAAgB,IAAC;QAGrD,6HAAuC;QACvC,uEAWS;QACT,0EAAS;QACL,uEAAgE;QAChE,uEAA0D;QAC1D,4EAAiD;QAC7C,iNAEc;QAClB,4DAAS;QACT,4EAA2C;QACvC,mNAEc;QAClB,4DAAS;QACT,6EAA0E;QACtE,oNAGc;QACd,oNAGc;QAClB,4DAAS;QACT,8EAAiD;QAC7C,oNAEc;QAClB,4DAAS;QACT,yEAAoE;QACxE,4DAAU;QACV,6EAA4C;QAChD,4DAAO;;;;;;;QAhDD,wEAAW;QAIH,0DAAiB;QAAjB,iFAAiB;QACnB,0DAAe;QAAf,4EAAe;QAeI,0DAAyB;QAAzB,yEAAyB;QAK5B,0DAAsB;QAAtB,yEAAsB;QAKlC,0DAAkC;QAAlC,8EAAkC;QAUnB,0DAAyB;QAAzB,yEAAyB;QAKzB,0DAAe;QAAf,4EAAe;QAE9B,0DAAkB;QAAlB,+EAAkB","file":"modules-gestao-plano-entrega-plano-entrega-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { ConfigResolver } from 'src/app/resolvies/config.resolver';\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlanoEntregaListComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Plano de Entrega\" } },\r\n  { path: 'new', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Inclusão\", modal: true } },\r\n  { path: ':id/edit', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Edição\", modal: true } },\r\n  { path: ':id/consult', component: PlanoEntregaFormComponent, canActivate: [AuthGuard], resolve: { config: ConfigResolver }, runGuardsAndResolvers: 'always', data: { title: \"Consultar\", modal: true } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlanoEntregaRoutingModule { }\r\n","import { Base } from './base.model';\r\n\r\nexport class PlanoEntrega extends Base {\r\n  public constructor(data?: any) { super(); this.initialization(data); }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { PlanoEntregaRoutingModule } from './plano-entrega-routing.module';\r\n\r\nimport { PlanoEntregaListComponent } from './plano-entrega-list/plano-entrega-list.component';\r\nimport { PlanoEntregaFormComponent } from './plano-entrega-form/plano-entrega-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlanoEntregaListComponent,\r\n    PlanoEntregaFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PlanoEntregaRoutingModule\r\n  ]\r\n})\r\nexport class PlanoEntregaModule { }\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { EditableFormComponent } from 'src/app/components/editable-form/editable-form.component';\r\nimport { ToolbarButton } from 'src/app/components/toolbar/toolbar.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { IIndexable } from 'src/app/models/base.model';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageFormBase } from 'src/app/modules/base/page-form-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-form',\r\n  templateUrl: './plano-entrega-form.component.html',\r\n  styleUrls: ['./plano-entrega-form.component.scss']\r\n})\r\n\r\nexport class PlanoEntregaFormComponent extends PageFormBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(EditableFormComponent, { static: false }) public editableForm?: EditableFormComponent;\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    this.join = [];\r\n    this.form = this.fh.FormBuilder({\r\n    }, this.cdRef, this.validate);\r\n  }\r\n\r\n  public validate = (control: AbstractControl, controlName: string) => {\r\n    let result = null;\r\n\r\n/*     if(['usuario_id', 'unidade_id', 'programa_id', 'tipo_modalidade_id'].indexOf(controlName) >= 0 && !control.value?.length) {\r\n      result = \"Obrigatório\";\r\n    }  */\r\n    return result;\r\n  }\r\n\r\n  public formValidation = (form?: FormGroup) => {\r\n    return undefined;\r\n  };\r\n\r\n  public async loadData(entity: PlanoEntrega, form: FormGroup) {\r\n    let formValue = Object.assign({}, form.value);\r\n    form.patchValue(this.util.fillForm(formValue, entity));\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public async initializeData(form: FormGroup) {\r\n    this.loadData(this.entity!, this.form!);\r\n  }\r\n\r\n  public async saveData(form: IIndexable): Promise<PlanoEntrega | boolean> {\r\n\r\n    return true;\r\n  }\r\n\r\n  public titleEdit = (entity: PlanoEntrega): string => {\r\n    return \"Editando \" ;\r\n  }\r\n\r\n  public dynamicButtons(row: any): ToolbarButton[] {\r\n    let result: ToolbarButton[] = [];\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { PlanoEntrega } from '../models/plano-entrega.model';\r\nimport { DaoBaseService } from './dao-base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanoEntregaDaoService extends DaoBaseService<PlanoEntrega> {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(\"PlanoEntrega\", injector);\r\n  }\r\n\r\n}\r\n\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GridComponent } from 'src/app/components/grid/grid.component';\r\nimport { PlanoEntregaDaoService } from 'src/app/dao/plano-entrega-dao.service';\r\nimport { PlanoEntrega } from 'src/app/models/plano-entrega.model';\r\nimport { PageListBase } from 'src/app/modules/base/page-list-base';\r\n\r\n@Component({\r\n  selector: 'app-plano-entrega-list',\r\n  templateUrl: './plano-entrega-list.component.html',\r\n  styleUrls: ['./plano-entrega-list.component.scss']\r\n})\r\nexport class PlanoEntregaListComponent extends PageListBase<PlanoEntrega, PlanoEntregaDaoService> {\r\n  @ViewChild(GridComponent, { static: false }) public grid?: GridComponent;\r\n\r\n  \r\n  constructor(public injector: Injector) {\r\n    super(injector, PlanoEntrega, PlanoEntregaDaoService);\r\n    /* Inicializações */\r\n    this.title = 'Planos de Entrega';\r\n    this.filter = this.fh.FormBuilder({\r\n\r\n     });\r\n     this.join = [];\r\n     this.groupBy = [];\r\n    // Testa se o usuário possui permissão para exibir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_CONS\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-info-circle\",\r\n        label: \"Informações\",\r\n        onClick: this.consult.bind(this)\r\n      });\r\n    }\r\n    // Testa se o usuário possui permissão para excluir planos de entrega\r\n    if (this.auth.hasPermissionTo(\"MOD_PENT_EXCL\")) {\r\n      this.options.push({\r\n        icon: \"bi bi-trash\",\r\n        label: \"Excluir\",\r\n        onClick: this.delete.bind(this)\r\n      });\r\n    }\r\n   }\r\n\r\n   public filterClear(filter: FormGroup) {\r\n/*     filter.controls.nome.setValue(\"\");\r\n    filter.controls.inicio.setValue(null);\r\n    filter.controls.fim.setValue(null);\r\n    filter.controls.unidade_id.setValue(null);\r\n    filter.controls.so_entidade.setValue(false); */\r\n    super.filterClear(filter);\r\n  }\r\n\r\n  public filterWhere = (filter: FormGroup) => {\r\n    let result: any[] = [];\r\n    let form: any = filter.value;\r\n    return result;\r\n  }\r\n\r\n}\r\n","<grid [dao]=\"dao\" [add]=\"add\" [title]=\"isModal ? '' : title\" [orderBy]=\"orderBy\" [join]=\"join\"\r\n    [selectable]=\"selectable\" (select)=\"onSelect($event)\"\r\n    [hasAdd]=\"auth.hasPermissionTo('MOD_PLAN_INST_INCL')\"\r\n    [hasEdit]=\"auth.hasPermissionTo('MOD_PLAN_INST_EDT')\">\r\n    <toolbar *ngIf=\"!selectable\"></toolbar>\r\n    <filter [form]=\"filter\" [where]=\"filterWhere\" [submit]=\"filterSubmit.bind(this)\" [clear]=\"filterClear.bind(this)\" [collapseChange]=\"filterCollapseChange.bind(this)\" [collapsed]=\"!selectable && filterCollapsed\">\r\n<!--         <div class=\"row\">\r\n            <input-text [size]=\"12\" label=\"Planejamento Institucional\" controlName=\"nome\"\r\n                [control]=\"filter!.controls.nome\" placeholder=\"Nome do planejamento institucional...\"></input-text>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input-switch class=\"pt-4\" [size]=\"2\" labelPosition=\"left\" label=\"Só da Entidade\" controlName=\"so_entidade\" [control]=\"filter!.controls.so_entidade\" (change)=\"onSoEntidadeChange($event)\"></input-switch>\r\n            <input-search #unidade [size]=\"6\" label=\"Unidade\" [disabled]=\"unidade_disabled\" controlName=\"unidade_id\" [control]=\"filter!.controls.unidade_id\" [dao]=\"unidadeDao\" [selectRoute]=\"{route: ['configuracoes', 'unidade']}\"></input-search>\r\n            <input-datetime [size]=\"2\" date label=\"Início\" controlName=\"inicio\" [control]=\"filter!.controls.inicio\" labelInfo=\"Data de início do planejamento institucional\"></input-datetime>\r\n            <input-datetime [size]=\"2\" date label=\"Fim\" controlName=\"fim\" [control]=\"filter!.controls.fim\" labelInfo=\"Data do fim do planejamento institucional\"></input-datetime>\r\n        </div> -->\r\n    </filter>\r\n    <columns>\r\n        <column title=\"Número\" field=\"numero\" orderBy=\"numero\"></column>\r\n        <column title=\"Nome\" field=\"nome\" orderBy=\"nome\"></column>\r\n        <column title=\"Início\" [template]=\"columnInicio\">\r\n            <ng-template let-row=\"row\" #columnInicio>\r\n                <span> {{dao!.getDateFormatted(row.inicio)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Fim\" [template]=\"columnFim\">\r\n            <ng-template let-row=\"row\" #columnFim>\r\n                <span> {{dao!.getDateFormatted(row.fim)}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column [titleTemplate]=\"titlePlanoCadeia\" [template]=\"columnPlanoCadeia\">\r\n            <ng-template let-header=\"header\" #titlePlanoCadeia>\r\n                Planejamento Institucional<br>\r\n                Cadeia de Valor\r\n            </ng-template>\r\n            <ng-template let-row=\"row\" #columnPlanoCadeia>\r\n                <span> {{row.planejamento?.nome || \"-\"}}</span><br>\r\n                <span> {{row.cadeiaValor?.nome || \"-\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column title=\"Status\" [template]=\"columnStatus\">\r\n            <ng-template let-row=\"row\" #columnStatus>\r\n                <span> {{ row.status || \"\"}}</span>\r\n            </ng-template>\r\n        </column>\r\n        <column type=\"options\" [onEdit]=\"edit\" [options]=\"options\"></column>\r\n    </columns>\r\n    <pagination [rows]=\"rowsLimit\"></pagination>\r\n</grid>\r\n \r\n <!-- Planejamento/           [ Incluir ] \r\nNumero  Nome              Data inicio  Data Fim   Cadeia de Valor    Status      \r\n------------------------------------------------------------------------------- [...]\r\n                                                   | Consultar                      |\r\n                                                   | Alterar                        |\r\n                                                   | Excluir                        |\r\n                                                   | Entregas                       |\r\n                                                   | Homologar                      |\r\n                                                   | Ponto de Controle (Avaliação)  |\r\n\r\n -->"],"sourceRoot":"webpack:///"}