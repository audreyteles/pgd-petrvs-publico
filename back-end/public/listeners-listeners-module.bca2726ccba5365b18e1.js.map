{"version":3,"sources":["./src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component.ts","./src/app/listeners/procedimento-trabalhar/procedimento-trabalhar.component.html","./src/app/listeners/listeners.module.ts","./src/app/listeners/procedimento-escolher-tipo/procedimento-escolher-tipo.component.ts","./src/app/listeners/procedimento-escolher-tipo/procedimento-escolher-tipo.component.html","./src/app/listeners/petrvs-listener/petrvs-listener.component.ts","./src/app/listeners/petrvs-listener/petrvs-listener.component.html","./src/app/listeners/editor-montar/editor-montar.component.ts","./src/app/listeners/editor-montar/editor-montar.component.html","./src/app/listeners/listeners-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGmF;AACX;AACF;AAEW;AAEX;AACX;AACuC;AACsB;AAExE;;AAWzC,MAAM,8BAA+B,SAAQ,2DAAY;IAK9D,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;QADzB,aAAQ,GAAR,QAAQ,CAAU;QAEnC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAqB,mFAAkB,CAAC,CAAC;QAChE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAA0B,8FAAuB,CAAC,CAAC;IACzF,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IAEY,kBAAkB,CAAC,OAAiB;;YAC/C,IAAI,cAAc,GAAG,EAAE,CAAC;YAExB,IAAG,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAC5B,cAAc,CAAC,IAAI,CAAC;oBAClB,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE,qBAAqB;oBAC5B,IAAI,EAAE,uBAAuB;oBAC7B,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;iBAC1C,CAAC,CAAC;aACJ;YACD,IAAG,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC9B,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,IAAG,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;oBACvC,IAAI,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,oBAAoB;wBAC1B,KAAK,EAAE,qBAAqB;wBAC5B,KAAK,EAAE,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC7C,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;qBACzC,CAAC,CAAC;iBACJ;gBACD,cAAc,CAAC,IAAI,CAAC;oBAClB,IAAI,EAAE,aAAa;oBACnB,KAAK,EAAE,uBAAuB;oBAC9B,IAAI,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC3C,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;oBACvC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;iBACtC,CAAC,CAAC;aACJ;YACD,IAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;gBAChC,cAAc,CAAC,IAAI,CAAC;oBAClB,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE,qBAAqB;oBAC5B,IAAI,EAAE,+BAA+B;oBACrC,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;iBAClD,CAAC,CAAC;aACJ;YACD,IAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;gBACrE,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,IAAG,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBAC9B,IAAI,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,mBAAmB;wBACzB,KAAK,EAAE,qBAAqB;wBAC5B,KAAK,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC5C,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;qBACxC,CAAC,CAAC;iBACJ;gBACD,IAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;oBAC/B,IAAI,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,oBAAoB;wBAC1B,KAAK,EAAE,qBAAqB;wBAC5B,KAAK,EAAE,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC7C,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;qBACzC,CAAC,CAAC;iBACJ;gBACD,cAAc,CAAC,IAAI,CAAC;oBAClB,IAAI,EAAE,gBAAgB;oBACtB,KAAK,EAAE,qBAAqB;oBAC5B,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;oBACjC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;iBACtC,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,EAAE,CAAC,cAAc,GAAG,cAAc,CAAC;QAC1C,CAAC;KAAA;IAEY,cAAc;;YACzB,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAiB,YAAY,EAAE,EAAE,CAAC,CAAC;YAChE,IAAG,IAAI;gBAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC3H,CAAC;KAAA;IAEY,QAAQ;;YACnB,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAiB,iBAAiB,EAAE,EAAE,CAAC,CAAC;YACrE,IAAG,IAAI,EAAE;gBACP,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,EAAC,MAAM,EAAE,EAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAC,EAAC,EAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;aAC9I;QACH,CAAC;KAAA;IAEY,eAAe;;;YAC1B,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAiB,iBAAiB,EAAE,EAAE,CAAC,CAAC;YACrE,IAAG,IAAI,EAAE;gBACP,oGAAoG;gBACpG,MAAM,QAAQ,GAAG,MAAM,qIAAwB,CAAC,WAAW,CAAC,EAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC;gBAC3G,IAAG,QAAQ,EAAE;oBACX,UAAG,QAAQ,CAAC,SAAS,0CAAE,QAAQ,EAAE;wBAC/B,IAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,4EAA4E,CAAC,EAAE;4BAC9H,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,MAAM,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,EAAC,EAAE;gCACjG,KAAK,EAAE,IAAI;gCACX,UAAU,EAAE,CAAC,WAAoB,EAAE,EAAE;oCACnC,IAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;wCAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,EAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gCACrH,CAAC;6BACF,CAAC,CAAC;yBACJ;qBACF;yBAAM;wBACL,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,EAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC5F;iBACF;aACF;;KACF;IAEY,eAAe;;YAC1B,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAiB,iBAAiB,EAAE,EAAE,CAAC,CAAC;YACrE,IAAG,IAAI,EAAE;gBACP,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,EAAE,MAAM,EAAE,EAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAC,EAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;aACjI;QACH,CAAC;KAAA;IAEY,cAAc;;YACzB,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAiB,YAAY,EAAE,EAAE,CAAC,CAAC;YAChE,IAAG,IAAI,EAAE;gBACP,oGAAoG;gBACpG,MAAM,QAAQ,GAAG,MAAM,qIAAwB,CAAC,WAAW,CAAC,EAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC;gBAC/G,IAAG,QAAQ,EAAE;oBACX,MAAM,OAAO,GAAG,IAAI,mFAAc,EAAE,CAAC;oBACrC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;oBACrC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;oBACpC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAQ,CAAC,EAAE,CAAC;oBAC3C,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC;oBACvC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;oBACzB,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,EAAC,EAAE,EAAC,QAAQ,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAC,EAAE,UAAU,EAAE,CAAC,WAAW,EAAE,EAAE;4BACnJ,IAAG,WAAW,EAAE;gCACd,CAAC,GAAS,EAAE,CAAC;oCACX,IAAI;wCACF,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAA2B,gGAAwB,CAAC,CAAC;wCAClF,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC;wCAC/D,MAAM,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qCAC7B;oCAAC,OAAO,KAAU,EAAE;wCACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;qCACnE;4CAAS;wCACR,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;qCACnC;gCACH,CAAC,EAAC,EAAE,CAAC;6BACN;wBACH,CAAC,EAAC,CAAC,CAAC;iBACL;aACF;QACH,CAAC;KAAA;IAEM,wBAAwB,CAAC,UAAkB,EAAE,cAAsB,EAAE,WAAoB,EAAE,eAAwB;QACxH,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE;gBAC7D,WAAW,EAAE,UAAU;gBACvB,eAAe,EAAE,cAAc;gBAC/B,aAAa,EAAE,WAAW;gBAC1B,iBAAiB,EAAE,eAAe;aACnC,EAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;IACrB,CAAC;IAEY,gBAAgB;;YAC3B,0FAA0F;YAC1F,MAAM,QAAQ,GAAG,MAAM,+GAAkB,CAAC,WAAW,EAAE,CAAC;YACxD,IAAG,QAAQ,EAAE;gBACX,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAU,iBAAiB,EAAE,EAAE,CAAC,CAAC;gBAClE,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAC,EAAE,EAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,EAAE,UAAU,EAAE,CAAC,WAAW,EAAE,EAAE;;wBACpI,UAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,MAAM,EAAE;4BAC7B,CAAC,GAAS,EAAE,CAAC;gCACX,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC;gCAC9D,IAAI;oCACF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAA8B,kBAAkB,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC;oCACpJ,IAAG,YAAY,EAAE;wCACf,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAsB,qFAAmB,CAAC,CAAC;wCACxE,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,wEAAS,EAAE,EAAE;4CAC/C,OAAO,EAAE,cAAc;4CACvB,QAAQ,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK;4CAC5B,WAAW,EAAE,QAAQ,CAAC,WAAW;4CACjC,YAAY,EAAE,YAAY,CAAC,YAAY;4CACvC,eAAe,EAAE,YAAY,CAAC,eAAe;4CAC7C,QAAQ,EAAE,QAAQ,CAAC,EAAE;4CACrB,iBAAiB,EAAE,WAAW,CAAC,iBAAiB;4CAChD,MAAM,EAAE,gBAAgB;yCACzB,CAAC,CAAC;wCACH,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wCAC1B,MAAM,IAAI,CAAC,OAAO,CAAO,kBAAkB,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;wCACvE,MAAM,IAAI,CAAC,OAAO,CAA8B,aAAa,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;qCAC/G;iCACF;gCAAC,OAAO,KAAU,EAAE;oCACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iCACnE;wCAAS;oCACR,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;iCACnC;4BACH,CAAC,EAAC,EAAE,CAAC;yBACN;oBACH,CAAC,EAAC,CAAC,CAAC;aACL;QACH,CAAC;KAAA;IAEY,wBAAwB;;YACnC,IAAI,eAAe,GAAG,MAAM,IAAI,CAAC,OAAO,CAAqB,oBAAoB,EAAE,EAAE,CAAC,CAAC;YACvF,IAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;gBACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,oCAAoC,CAAC,CAAC;aACxE;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,4DAA4D,CAAC,CAAC;aAC1F;QACH,CAAC;KAAA;;4GAhNU,8BAA8B;+GAA9B,8BAA8B;QCzB3C,qEAAG;QAAA,yFAA6B;QAAA,6DAAI;;;;;;;;;;;;;;ACCpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEqB;AACuC;AACW;AACtC;AACM;;AAe/E,MAAM,eAAe;;8EAAf,eAAe;8FAAf,eAAe;kGALjB;YACP,4DAAY;YACZ,gFAAsB;SACvB;mIAEU,eAAe,mBAVxB,uHAA8B;QAC9B,kIAAiC;QACjC,4FAAqB;QACrB,kGAAuB,aAGvB,4DAAY;QACZ,gFAAsB;;;;;;;;;;;;;;;;;;;;AClBsE;AAChD;;AAOzC,MAAM,iCAAkC,SAAQ,2DAAY;IAIjE,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,4BAA4B,CAAC,CAAC;QAD7B,aAAQ,GAAR,QAAQ,CAAU;QAEnC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAyB,4FAAsB,CAAC,CAAC;IACtF,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IAEY,kBAAkB;;YAC7B,IAAI,CAAC,EAAE,CAAC,cAAc,GAAG,CAAC;oBACxB,IAAI,EAAE,oBAAoB;oBAC1B,KAAK,EAAE,qBAAqB;oBAC5B,IAAI,EAAE,8BAA8B;oBACpC,OAAO,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC;iBACjD,CAAC,CAAC;QACL,CAAC;KAAA;IAEY,uBAAuB;;YAClC,IAAI,cAAc,GAAG,MAAM,IAAI,CAAC,OAAO,CAAoB,mBAAmB,EAAE,EAAE,CAAC,CAAC;YACpF,IAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE;gBACvD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,oCAAoC,CAAC,CAAC;aACxE;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,4DAA4D,CAAC,CAAC;aAC1F;QACH,CAAC;KAAA;;kHA7BU,iCAAiC;iHAAjC,iCAAiC;QCT9C,oEAAG;QAAA,4FAAiC;QAAA,4DAAI;;;;;;;;;;;;;;ACCxC;AAAA;AAAA;AAAA;AAAgD;;AAOzC,MAAM,uBAAwB,SAAQ,2DAAY;IAEvD,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;QADlB,aAAQ,GAAR,QAAQ,CAAU;IAErC,CAAC;IAED,QAAQ;IACR,CAAC;;8FAPU,uBAAuB;uGAAvB,uBAAuB;QCRpC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACC2C;AACb;AACX;;AAOzC,MAAM,qBAAsB,SAAQ,2DAAY;IAIrD,YAAmB,QAAkB;QACnC,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QADhB,aAAQ,GAAR,QAAQ,CAAU;QAEnC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAsB,qFAAmB,CAAC,CAAC;IAC7E,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IAEY,oBAAoB,CAAC,YAAoB;;YACpD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;YAC7E,IAAG,SAAS,EAAE;gBACZ,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAS,sBAAsB,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrG,IAAG,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,MAAM,EAAE;oBAC3B,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;wBAC3C,MAAM,EAAE,wEAAS,CAAC,aAAa;wBAC/B,gBAAgB,EAAE,gBAAgB;qBACnC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC;KAAA;IAEY,kBAAkB,CAAC,OAAiB;;YAC/C,IAAI,CAAC,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC;YAC5B;;;;;;;gBAOI;QACN,CAAC;KAAA;;0FApCU,qBAAqB;qGAArB,qBAAqB;QCVlC,oEAAG;QAAA,+EAAoB;QAAA,4DAAI;;;;;;;;;;;;;;ACC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACyB;AACM;AACgC;AACX;;;AAE3G,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC3D,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,uHAA8B,EAAE;IAC7E,EAAE,IAAI,EAAE,4BAA4B,EAAE,SAAS,EAAE,kIAAiC,EAAE;IACpF,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kGAAuB,EAAC;CACtD,CAAC;AAMK,MAAM,sBAAsB;;4FAAtB,sBAAsB;qGAAtB,sBAAsB;yGAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY","file":"listeners-listeners-module.bca2726ccba5365b18e1.js","sourcesContent":["import { Component, Injector, OnInit } from '@angular/core';\r\nimport { DaoBaseService } from 'src/app/dao/dao-base.service';\r\nimport { DemandaDaoService } from 'src/app/dao/demanda-dao.service';\r\nimport { DemandaEntregaDaoService } from 'src/app/dao/demanda-entrega-dao.service';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { EntidadeDaoService } from 'src/app/dao/entidade-dao.service';\r\nimport { PlanoDaoService } from 'src/app/dao/plano-dao.service';\r\nimport { TipoDocumentoDaoService } from 'src/app/dao/tipo-documento-dao.service';\r\nimport { Base } from 'src/app/models/base.model';\r\nimport { DemandaEntrega } from 'src/app/models/demanda-entrega.model';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { PlanoListComponent } from 'src/app/modules/gestao/plano/plano-list/plano-list.component';\r\nimport { DemandaListGridComponent } from 'src/app/modules/gestao/demanda/demanda-list-grid/demanda-list-grid.component';\r\nimport { DemandaListComponent } from 'src/app/modules/gestao/demanda/demanda-list/demanda-list.component';\r\nimport { ListenerBase } from '../listener-base';\r\n\r\nexport type TipoDocumentoSei = {codigo: string, nome: string};\r\nexport type InclusaoDocumentoSei = {id_processo: number, id_documento: number, numero_processo: string, urlEditor: string, idUser: string, urlReload: string};\r\nexport type SeiKeys = {id_processo: number, numero_processo: string, id_documento?: number, numero_documento?: string};\r\n\r\n@Component({\r\n  selector: 'app-procedimento-trabalhar',\r\n  templateUrl: './procedimento-trabalhar.component.html',\r\n  styleUrls: ['./procedimento-trabalhar.component.scss']\r\n})\r\nexport class ProcedimentoTrabalharComponent extends ListenerBase implements OnInit {\r\n\r\n  public tipoDocumentoDao: TipoDocumentoDaoService;\r\n  public dao: EntidadeDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, \"procedimento_trabalhar\");\r\n    this.dao = injector.get<EntidadeDaoService>(EntidadeDaoService);\r\n    this.tipoDocumentoDao = injector.get<TipoDocumentoDaoService>(TipoDocumentoDaoService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  public async loadToolbarButtons(buttons: string[]) {\r\n    let toolbarButtons = [];\r\n\r\n    if(buttons.includes(\"plano\")) {\r\n      toolbarButtons.push({\r\n        icon: \"bi bi-list-check\",\r\n        color: \"btn-outline-primary\",\r\n        hint: \"Gerar termo de adesão\",\r\n        onClick: this.gerarTermoAdesao.bind(this) \r\n      });\r\n    }\r\n    if(buttons.includes(\"entrega\")) {\r\n      let menu = [];\r\n      if(buttons.includes(\"concluir_entrega\")) {\r\n        menu.push({\r\n          icon: \"bi bi-check-circle\",\r\n          color: \"btn-outline-primary\",\r\n          label: \"Concluir \" + this.lex.noun(\"entrega\"),\r\n          onClick: this.concluirEntrega.bind(this) \r\n        });\r\n      }\r\n      toolbarButtons.push({\r\n        icon: \"bi bi-boxes\",\r\n        color: \"btn-outline-secondary\",\r\n        hint: \"Incluir \" + this.lex.noun(\"entrega\"),\r\n        onClick: this.incluirEntrega.bind(this),\r\n        items: menu.length ? menu : undefined\r\n      });\r\n    }\r\n    if(buttons.includes(\"atualizar\")) {\r\n      toolbarButtons.push({\r\n        icon: \"bi bi-file-check\",\r\n        color: \"btn-outline-warning\",\r\n        hint: \"Atualizar tipos de documentos\",\r\n        onClick: this.atualizarTiposDocumentos.bind(this) \r\n      });\r\n    }\r\n    if(buttons.find(x => [\"incluir\", \"concluir\", \"demandas\"].includes(x))) {\r\n      let menu = [];\r\n      if(buttons.includes(\"incluir\")) {\r\n        menu.push({\r\n          icon: \"bi bi-plus-circle\",\r\n          color: \"btn-outline-primary\",\r\n          label: \"Incluir \" + this.lex.noun(\"demanda\"),\r\n          onClick: this.incluirDemanda.bind(this) \r\n        });\r\n      }        \r\n      if(buttons.includes(\"concluir\")) {\r\n        menu.push({\r\n          icon: \"bi bi-check-circle\",\r\n          color: \"btn-outline-primary\",\r\n          label: \"Concluir \" + this.lex.noun(\"demanda\"),\r\n          onClick: this.concluirDemanda.bind(this) \r\n        });\r\n      }\r\n      toolbarButtons.push({\r\n        icon: \"bi bi-activity\",\r\n        color: \"btn-outline-success\",\r\n        hint: this.lex.noun(\"demanda\"),\r\n        onClick: this.demandas.bind(this),\r\n        items: menu.length ? menu : undefined\r\n      });\r\n    }\r\n    this.gb.toolbarButtons = toolbarButtons;\r\n  }\r\n\r\n  public async incluirDemanda() {\r\n    let keys = await this.execute<SeiKeys | null>(\"getSeiKeys\", []);\r\n    if(keys) this.incluirDemandaProcessual(keys.id_processo, keys.numero_processo, keys.id_documento, keys.numero_documento);\r\n  }\r\n\r\n  public async demandas() {\r\n    let keys = await this.execute<SeiKeys | null>(\"getProcessoKeys\", []);\r\n    if(keys) {\r\n      this.go.navigate({route: [\"gestao\", \"demanda\"], params: {filter: {numero_processo: keys.numero_processo}}}, {modal: true, modalWidth: 1200});\r\n    }\r\n  }\r\n\r\n  public async concluirDemanda() {\r\n    let keys = await this.execute<SeiKeys | null>(\"getDocumentKeys\", []);\r\n    if(keys) {\r\n      //const demanda = new DemandaListGridComponent(this.injector, new DemandaDaoService(this.injector));\r\n      const selected = await DemandaListGridComponent.modalSelect({fixedFilter: [[\"status\", \"==\", \"INICIADO\"]]});\r\n      if(selected) {\r\n        if(selected.metadados?.suspenso) {\r\n          if(await this.dialog.confirm(\"Demanda suspensa\", \"Para concluir é necessário primeiro reiniciar a demanda. Deseja reiniciar?\")) {\r\n            this.go.navigate({route: ['gestao', 'demanda', selected.id, 'pausar'], params: {reiniciar: true}}, {\r\n              modal: true, \r\n              modalClose: (modalResult?: string) => {\r\n                if(modalResult?.length) this.go.navigate({route: ['gestao', 'demanda', selected.id, 'concluir']}, { modal: true });\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.go.navigate({route: ['gestao', 'demanda', selected.id, 'concluir']}, { modal: true });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async concluirEntrega() {\r\n    let keys = await this.execute<SeiKeys | null>(\"getProcessoKeys\", []);\r\n    if(keys) {\r\n      this.go.navigate({route: ['gestao', 'demanda', 'entrega', 'concluir'], params: {id_processo: keys.id_processo}}, {modal: true});\r\n    }\r\n  }\r\n\r\n  public async incluirEntrega() {\r\n    let keys = await this.execute<SeiKeys | null>(\"getSeiKeys\", []);\r\n    if(keys) {\r\n      //const demanda = new DemandaListGridComponent(this.injector, new DemandaDaoService(this.injector));\r\n      const selected = await DemandaListGridComponent.modalSelect({fixedFilter: [[\"status\", \"==\", \"NAOCONCLUIDO\"]]});\r\n      if(selected) {\r\n        const entrega = new DemandaEntrega();\r\n        entrega.id = this.dao.generateUuid();\r\n        entrega.usuario = this.auth.usuario;\r\n        entrega.usuario_id = this.auth.usuario!.id;\r\n        entrega.demanda_id = selected.id || \"\";\r\n        entrega.comentarios = [];\r\n        entrega._status = \"ADD\";\r\n        this.go.navigate({route: ['gestao', 'demanda', 'entrega']}, {metadata: {entrega: entrega, demanda: selected, sei: keys}, modalClose: (modalResult) => {\r\n          if(modalResult) {\r\n            (async () => {\r\n              try {\r\n                const dao = this.injector.get<DemandaEntregaDaoService>(DemandaEntregaDaoService);\r\n                this.dialog.showSppinerOverlay(\"Salvando dados do formulário\");\r\n                await dao.save(modalResult);\r\n              } catch (error: any) {\r\n                this.dialog.alert(\"Error\", error.message ? error.message : error);\r\n              } finally {\r\n                this.dialog.closeSppinerOverlay();\r\n              }\r\n            })();\r\n          }\r\n        }});\r\n      }\r\n    }\r\n  }\r\n\r\n  public incluirDemandaProcessual(idProcesso: number, numeroProcesso: string, idDocumento?: number, numeroDocumento?: string) {\r\n    this.go.navigate({route: [\"gestao\", \"demanda\", \"new\"], params: {\r\n      id_processo: idProcesso,\r\n      numero_processo: numeroProcesso,\r\n      id_requisicao: idDocumento,\r\n      numero_requisicao: numeroDocumento\r\n    }}, {modal: true});\r\n  }\r\n\r\n  public async gerarTermoAdesao() {\r\n    //const plano = new PlanoListComponent(this.injector, new PlanoDaoService(this.injector));\r\n    const selected = await PlanoListComponent.modalSelect();\r\n    if(selected) {\r\n      let processo = await this.execute<SeiKeys>(\"getProcessoKeys\", []);\r\n      this.go.navigate({route: ['gestao', 'plano', 'termo']}, {metadata: {plano: selected, processo: processo}, modalClose: (modalResult) => {\r\n        if(modalResult?.termo?.length) {\r\n          (async () => {\r\n            this.dialog.showSppinerOverlay(\"Gerando documento no sei...\");\r\n            try {\r\n              const documentoSei = await this.execute<InclusaoDocumentoSei | null>(\"incluirDocumento\", [processo.id_processo, modalResult.codigo_tipo_documento]); \r\n              if(documentoSei) {\r\n                const dao = this.injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n                const documento = Object.assign(new Documento(), {\r\n                  especie: \"TERMO_ADESAO\",\r\n                  conteudo: modalResult?.termo,\r\n                  id_processo: processo.id_processo,\r\n                  id_documento: documentoSei.id_documento,\r\n                  numero_processo: documentoSei.numero_processo,\r\n                  plano_id: selected.id,\r\n                  tipo_documento_id: modalResult.tipo_documento_id,\r\n                  status: \"AGUARDANDO_SEI\"\r\n                });\r\n                await dao.save(documento);\r\n                await this.execute<void>(\"recarregarArvore\", [documentoSei.urlReload]);\r\n                await this.execute<InclusaoDocumentoSei | null>(\"abrirEditor\", [documentoSei.urlEditor, documentoSei.idUser]);\r\n              }\r\n            } catch (error: any) {\r\n              this.dialog.alert(\"Error\", error.message ? error.message : error);\r\n            } finally {\r\n              this.dialog.closeSppinerOverlay();\r\n            }\r\n          })();\r\n        }\r\n      }});\r\n    }\r\n  }\r\n\r\n  public async atualizarTiposDocumentos() {\r\n    let tiposDocumentos = await this.execute<TipoDocumentoSei[]>(\"getTiposDocumentos\", []);\r\n    if(await this.tipoDocumentoDao.atualizar(tiposDocumentos)) {\r\n      this.dialog.alert(\"Atualização\", \"Atualização realizada com sucesso!\");\r\n    } else {\r\n      this.dialog.alert(\"ERROR\", \"Aconteceu algum problema ao tentar realizar a atualização!\");\r\n    }\r\n  }\r\n\r\n}\r\n","<p>procedimento-trabalhar works!</p>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ListenersRoutingModule } from './listeners-routing.module';\r\nimport { ProcedimentoTrabalharComponent } from './procedimento-trabalhar/procedimento-trabalhar.component';\r\nimport { ProcedimentoEscolherTipoComponent } from './procedimento-escolher-tipo/procedimento-escolher-tipo.component';\r\nimport { EditorMontarComponent } from './editor-montar/editor-montar.component';\r\nimport { PetrvsListenerComponent } from './petrvs-listener/petrvs-listener.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProcedimentoTrabalharComponent,\r\n    ProcedimentoEscolherTipoComponent,\r\n    EditorMontarComponent,\r\n    PetrvsListenerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ListenersRoutingModule\r\n  ]\r\n})\r\nexport class ListenersModule { }\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { TipoProcessoDaoService, TipoProcessoSei } from 'src/app/dao/tipo-processo-dao.service';\r\nimport { ListenerBase } from '../listener-base';\r\n\r\n@Component({\r\n  selector: 'app-procedimento-escolher-tipo',\r\n  templateUrl: './procedimento-escolher-tipo.component.html',\r\n  styleUrls: ['./procedimento-escolher-tipo.component.scss']\r\n})\r\nexport class ProcedimentoEscolherTipoComponent extends ListenerBase implements OnInit {\r\n\r\n  public tipoProcessoDao: TipoProcessoDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, \"procedimento_escolher_tipo\");\r\n    this.tipoProcessoDao = injector.get<TipoProcessoDaoService>(TipoProcessoDaoService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  public async loadToolbarButtons() {\r\n    this.gb.toolbarButtons = [{\r\n      icon: \"bi bi-folder-check\",\r\n      color: \"btn-outline-primary\",\r\n      hint: \"Atualizar tipos de processos\",\r\n      onClick: this.atualizarTiposProcessos.bind(this) \r\n    }];\r\n  }\r\n\r\n  public async atualizarTiposProcessos() {\r\n    let tiposProcessos = await this.execute<TipoProcessoSei[]>(\"getTiposProcessos\", []);\r\n    if(await this.tipoProcessoDao.atualizar(tiposProcessos)) {\r\n      this.dialog.alert(\"Atualização\", \"Atualização realizada com sucesso!\");\r\n    } else {\r\n      this.dialog.alert(\"ERROR\", \"Aconteceu algum problema ao tentar realizar a atualização!\");\r\n    }\r\n  }\r\n\r\n}\r\n","<p>procedimento-escolher-tipo works!</p>\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { ListenerBase } from '../listener-base';\r\n\r\n@Component({\r\n  selector: 'app-petrvs-listener',\r\n  templateUrl: './petrvs-listener.component.html',\r\n  styleUrls: ['./petrvs-listener.component.scss']\r\n})\r\nexport class PetrvsListenerComponent extends ListenerBase implements OnInit {\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, \"petrvs-listener\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>petrvs-listener works!</p>\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { DocumentoDaoService } from 'src/app/dao/documento-dao-service';\r\nimport { Documento } from 'src/app/models/documento.model';\r\nimport { ListenerBase } from '../listener-base';\r\n\r\n@Component({\r\n  selector: 'app-editor-montar',\r\n  templateUrl: './editor-montar.component.html',\r\n  styleUrls: ['./editor-montar.component.scss']\r\n})\r\nexport class EditorMontarComponent extends ListenerBase implements OnInit {\r\n\r\n  public documentoDao: DocumentoDaoService;\r\n\r\n  constructor(public injector: Injector) {\r\n    super(injector, \"editor-montar\");\r\n    this.documentoDao = injector.get<DocumentoDaoService>(DocumentoDaoService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  public async documentoPendenteSei(id_documento: number) {\r\n    const documento = await this.documentoDao.documentoPendenteSei(id_documento);\r\n    if(documento) {\r\n      const numero_documento = await this.execute<string>(\"setConteudoDocumento\", [0, documento.conteudo]);\r\n      if(numero_documento?.length) {\r\n        await this.documentoDao.update(documento.id, {\r\n          status: Documento.STATUS_GERADO,\r\n          numero_documento: numero_documento\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public async loadToolbarButtons(buttons: string[]) {\r\n    this.gb.toolbarButtons = [];\r\n    /*if(buttons.includes(\"incluir\")) {\r\n      this.gb.toolbarButtons.push({\r\n        icon: \"bi bi-activity\",\r\n        color: \"btn-outline-success\",\r\n        hint: \"Incluir \" + this.lex.noun(\"demanda\"),\r\n        onClick: this.incluirDemanda.bind(this) \r\n      });\r\n    } */       \r\n  }\r\n}\r\n","<p>editor-montar works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EditorMontarComponent } from './editor-montar/editor-montar.component';\r\nimport { PetrvsListenerComponent } from './petrvs-listener/petrvs-listener.component';\r\nimport { ProcedimentoEscolherTipoComponent } from './procedimento-escolher-tipo/procedimento-escolher-tipo.component';\r\nimport { ProcedimentoTrabalharComponent } from './procedimento-trabalhar/procedimento-trabalhar.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'editor-montar', component: EditorMontarComponent },\r\n  { path: 'procedimento-trabalhar', component: ProcedimentoTrabalharComponent },\r\n  { path: 'procedimento-escolher-tipo', component: ProcedimentoEscolherTipoComponent },\r\n  { path: 'petrvs', component: PetrvsListenerComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListenersRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}